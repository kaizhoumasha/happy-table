{"version":3,"file":"happy-table.es.js","names":["DEFAULTS: Required<InferOptions>","sample: unknown[]","values: unknown[]","pluginError: PluginError","capabilityGetter: CapabilityGetter","allInterceptors: any[]","taskStatus: TaskStatus","recommendations: string[]","sizeCache: (number | undefined)[]","prefixCache: (number | undefined)[]","items: VirtualItem[]","scrollRAF: number | null","logTimeout: number | null","widthCache: (number | undefined)[]","widthPrefixCache: (number | undefined)[]","items: VirtualColumn[]","scrollingTimeout: number | null","rafId: number | null","items: AdvancedVirtualItem[]","fpsInterval: number | null","virtualColumns: VirtualColumn[]","virtualCells: VirtualCell[][]","rowCells: VirtualCell[]","result: T | undefined","result: T[]","unsubscribeFPS: (() => void) | null","times: number[]","rafId: number | null","result: T[]","debounceTimeout: number | null","stageTypes: DataPipelineInterceptor['type'][]","times: number[]","validPinnedLocations: ReadonlyArray<PinnedLocation>","rafId: number | null","debounceTimer: number | null","latestEvent: Event | null","currentVelocity: ScrollVelocity","issues: string[]","recommendations: string[]","DEFAULT_LEFT_FUNCTIONAL_ORDER: FunctionalColumnType[]","propsTypes: FunctionalColumnType[]","timeoutId: number | null","processedColumns: InternalColumnDef[]","rendererRegistry: RendererRegistry","pendingRenderFrame: number | null","api: GridAPI","updatedColumn: InternalColumnDef","pluginRegistry: UnifiedPluginRegistry","virtualizedDataComputed: ComputedRef<{\n    visibleRows: RowData[]\n    startIndex: number\n    endIndex: number\n    totalHeight: number\n  }>","watchers: (() => void)[]","$slots","$attrs","$slots","$slots","context: SelectContext","timeoutId: ReturnType<typeof setTimeout> | null","callbacks: Partial<CoreLogicCallbacks>","DEFAULT_GRID_PROPS: Pick<Required<DataGridProps>, 'data' | 'columns' | 'plugins' | 'height' | 'showKeyboardShortcuts' | 'keyboardHelpHint'>","newPosition: CellPosition | null"],"sources":["../src/utils/infer-data-type.ts","../src/plugins/unified-plugin-registry.ts","../src/utils/virtualization.ts","../src/utils/advanced-virtualization.ts","../src/utils/three-pane-virtualization.ts","../src/utils/memory-management.ts","../src/utils/performance-monitoring.ts","../src/utils/dom-optimization.ts","../src/utils/data-pipeline.ts","../src/utils/platform.ts","../src/utils/id-generator.ts","../src/utils/column-reorder.ts","../src/utils/scroll-optimization.ts","../src/utils/index.ts","../src/renderers/base/renderer-registry.ts","../src/types/functional-columns.ts","../src/utils/functional-columns.ts","../src/core/useGridState.ts","../src/renderers/base/interaction-contract.ts","../src/utils/injection-keys.ts","../src/components/primitives/HtButton.vue","../src/components/primitives/HtButton.vue","../src/components/primitives/HtInput.vue","../src/components/primitives/HtInput.vue","../src/components/primitives/HtCheckbox.vue","../src/components/primitives/HtCheckbox.vue","../src/components/primitives/HtRadio.vue","../src/components/primitives/HtRadio.vue","../src/components/primitives/HtSelect/composables/useSelectContext.ts","../src/utils/composables/useDebounceFn.ts","../src/components/primitives/HtSelect/composables/useAsyncSource.ts","../src/components/primitives/HtSelect/HtSelectTrigger.vue","../src/components/primitives/HtSelect/HtSelectTrigger.vue","../src/components/primitives/HtSelect/HtSelectValue.vue","../src/components/primitives/HtSelect/HtSelectValue.vue","../src/components/shared/BasePopover.vue","../src/components/shared/BasePopover.vue","../src/components/primitives/HtSelect/HtSelectContent.vue","../src/components/primitives/HtSelect/HtSelectContent.vue","../src/components/primitives/HtSelect/HtSelectItem.vue","../src/components/primitives/HtSelect/HtSelectItem.vue","../src/components/primitives/HtSelect/HtSelectGroup.vue","../src/components/primitives/HtSelect/HtSelectGroup.vue","../src/components/primitives/HtSelect/HtSelectLabel.vue","../src/components/primitives/HtSelect/HtSelectLabel.vue","../src/components/primitives/HtSelect/HtSelectSeparator.vue","../src/components/primitives/HtSelect/HtSelectSeparator.vue","../src/components/primitives/HtSelect/HtSelectOptionRender.vue","../src/components/primitives/HtSelect/HtSelectOptionRender.vue","../src/components/primitives/HtSelect/HtSelect.vue","../src/components/primitives/HtSelect/HtSelect.vue","../src/components/functional/CheckboxCell.vue","../src/components/functional/CheckboxCell.vue","../src/components/functional/CheckboxHeader.vue","../src/components/functional/CheckboxHeader.vue","../src/components/functional/RadioCell.vue","../src/components/functional/RadioCell.vue","../src/components/functional/RadioHeader.vue","../src/components/functional/RadioHeader.vue","../src/components/functional/SeqCell.vue","../src/components/functional/SeqCell.vue","../src/components/functional/ActionsCell.vue","../src/components/functional/ActionsCell.vue","../src/components/functional/DragCell.vue","../src/components/functional/DragCell.vue","../src/components/table-renderer/header/composables/useColumnDrag.ts","../src/components/table-renderer/header/composables/useColumnResize.ts","../src/components/table-renderer/header/SortIndicator.vue","../src/components/table-renderer/header/SortIndicator.vue","../src/components/shared/FilterPopover.vue","../src/components/shared/FilterPopover.vue","../src/components/shared/filters/ValueFilterEditor.vue","../src/components/shared/filters/ValueFilterEditor.vue","../src/components/shared/filters/CustomFilterEditor.vue","../src/components/shared/filters/CustomFilterEditor.vue","../src/components/table-renderer/header/FilterIndicator.vue","../src/components/table-renderer/header/FilterIndicator.vue","../src/components/table-renderer/header/HeaderCell.vue","../src/components/table-renderer/header/HeaderCell.vue","../src/components/table-renderer/header/GridHeader.vue","../src/components/table-renderer/header/GridHeader.vue","../src/components/table-renderer/cells/TextCell.vue","../src/components/table-renderer/cells/TextCell.vue","../src/components/table-renderer/cells/NumberCell.vue","../src/components/table-renderer/cells/NumberCell.vue","../src/components/table-renderer/cells/DateCell.vue","../src/components/table-renderer/cells/DateCell.vue","../src/components/table-renderer/cells/BooleanCell.vue","../src/components/table-renderer/cells/BooleanCell.vue","../src/components/table-renderer/body/BodyCell.vue","../src/components/table-renderer/body/BodyCell.vue","../src/components/table-renderer/body/BodyRow.vue","../src/components/table-renderer/body/BodyRow.vue","../src/utils/drag-auto-scroll.ts","../src/components/table-renderer/body/GridBody.vue","../src/components/table-renderer/body/GridBody.vue","../src/components/table-renderer/footer/GridFooter.vue","../src/components/table-renderer/footer/GridFooter.vue","../src/components/table-renderer/TableRendererComponent.vue","../src/components/table-renderer/TableRendererComponent.vue","../src/renderers/table/TableRenderer.ts","../src/components/shared/KeyboardShortcuts.vue","../src/components/shared/KeyboardShortcuts.vue","../src/components/shared/AccessibilityAnnouncer.vue","../src/components/shared/AccessibilityAnnouncer.vue","../src/components/shared/ToastNotification.vue","../src/components/shared/ToastNotification.vue","../src/components/shared/FilterBar.vue","../src/components/shared/FilterBar.vue","../src/types/events.ts","../src/components/DataGrid.vue","../src/components/DataGrid.vue","../src/core/useHappyTable.ts","../src/core/useGridEvents.ts","../src/renderers/excel/ExcelRenderer.ts","../src/renderers/table/table-interactions.ts","../src/plugins/core/presets.ts","../src/plugins/core/index.ts","../src/components/table-renderer/overlays/CellTextEditor.vue","../src/components/table-renderer/overlays/CellTextEditor.vue","../src/components/table-renderer/overlays/CellNumberEditor.vue","../src/components/table-renderer/overlays/CellNumberEditor.vue","../src/components/table-renderer/overlays/CellSelectEditor.vue","../src/components/table-renderer/overlays/CellSelectEditor.vue","../src/components/table-renderer/overlays/CellDateEditor.vue","../src/components/table-renderer/overlays/CellDateEditor.vue","../src/components/table-renderer/overlays/CellBooleanEditor.vue","../src/components/table-renderer/overlays/CellBooleanEditor.vue","../src/components/table-renderer/overlays/CellEditorOverlay.vue","../src/components/table-renderer/overlays/CellEditorOverlay.vue","../src/plugins/utils/base-plugin.ts","../src/utils/sort-presets.ts","../src/index.ts"],"sourcesContent":["import type { ColumnDef, RowData } from '../types'\n\nexport type InferredDataType = NonNullable<ColumnDef['dataType']> | 'text'\n\ninterface InferOptions {\n  sampleSize?: number\n  enumMaxUnique?: number\n  enumMaxUniqueRatio?: number\n  locale?: string // e.g. 'en-US', 'en-GB', 'zh-CN'\n}\n\nconst DEFAULTS: Required<InferOptions> = {\n  sampleSize: 500,\n  enumMaxUnique: 50,\n  enumMaxUniqueRatio: 0.2,\n  locale: 'en-US',\n}\n\nconst CURRENCY_SYMBOLS = ['$', '€', '£', '¥', '￥', '₩', '₹']\n\nfunction isNullish(v: unknown) {\n  return v === null || v === undefined\n}\n\nfunction isBooleanLike(v: unknown): boolean {\n  if (typeof v === 'boolean') return true\n  if (typeof v === 'number') return v === 0 || v === 1\n  if (typeof v === 'string') {\n    const s = v.trim().toLowerCase()\n    return s === 'true' || s === 'false'\n  }\n  return false\n}\n\nfunction isPercentageLike(v: unknown): boolean {\n  if (typeof v !== 'string') return false\n  const s = v.trim()\n  if (!s.endsWith('%')) return false\n  const num = s.slice(0, -1).replace(/[,\\s]/g, '')\n  return num.length > 0 && !isNaN(Number(num))\n}\n\nfunction isCurrencyLike(v: unknown): boolean {\n  if (typeof v !== 'string') return false\n  const s = v.trim()\n  if (!s) return false\n  const hasSymbol = CURRENCY_SYMBOLS.some(sym => s.includes(sym))\n  if (!hasSymbol) return false\n  const num = s.replace(/[\\p{Sc},\\s]/gu, '')\n  return num.length > 0 && !isNaN(Number(num))\n}\n\nfunction isNumberLike(v: unknown): boolean {\n  if (typeof v === 'number') return Number.isFinite(v)\n  if (typeof v === 'string') {\n    const s = v.trim()\n    if (!s) return false\n    // Allow thousands separators and decimals\n    const normalized = s.replace(/,/g, '')\n    return normalized.length > 0 && !isNaN(Number(normalized))\n  }\n  return false\n}\n\nfunction isISODateString(s: string): { isDate: boolean; isDateTime: boolean } {\n  // Basic checks for YYYY-MM-DD and optional time\n  const d = s.trim()\n  // yyyy-mm-dd\n  const dateOnly = /^\\d{4}-\\d{2}-\\d{2}$/\n  if (dateOnly.test(d)) return { isDate: true, isDateTime: false }\n  // yyyy-mm-ddThh:mm(:ss)? or with space\n  const dateTime = /^\\d{4}-\\d{2}-\\d{2}[T\\s]\\d{2}:\\d{2}(:\\d{2})?/\n  if (dateTime.test(d)) return { isDate: false, isDateTime: true }\n  return { isDate: false, isDateTime: false }\n}\n\nfunction isDateLike(v: unknown): 'none' | 'date' | 'datetime' {\n  if (v instanceof Date && !isNaN(v.getTime())) {\n    // Treat Date objects as datetime (most precise)\n    return 'datetime'\n  }\n  if (typeof v === 'string') {\n    const { isDate, isDateTime } = isISODateString(v)\n    if (isDate || isDateTime) return isDate ? 'date' : 'datetime'\n    // Locale-aware quick checks\n    const localeCheck = detectLocaleDate(v)\n    if (localeCheck !== 'none') return localeCheck\n    // Fallback to Date parse\n    const t = new Date(v)\n    if (!isNaN(t.getTime())) {\n      const lowered = v.toLowerCase()\n      const hasTimeHint = lowered.includes('t') || /\\d{2}:\\d{2}/.test(lowered)\n      return hasTimeHint ? 'datetime' : 'date'\n    }\n  }\n  return 'none'\n}\n\n// Detect common non-ISO date formats across locales\nfunction detectLocaleDate(s: string, localeHint?: string): 'none' | 'date' | 'datetime' {\n  const str = s.trim()\n  if (!str) return 'none'\n\n  // Chinese formats: 2024年10月14日, 2024年10月14日 12:30:00\n  const zh = /^(\\d{4})年(\\d{1,2})月(\\d{1,2})日(?:\\s+\\d{1,2}:\\d{2}(?::\\d{2})?)?$/\n  if (zh.test(str)) {\n    return str.includes(':') ? 'datetime' : 'date'\n  }\n\n  // yyyy/MM/dd or yyyy.MM.dd (with optional time)\n  const ymd = /^(\\d{4})[/.](\\d{1,2})[/.](\\d{1,2})(?:[ T]\\d{1,2}:\\d{2}(?::\\d{2})?)?$/\n  if (ymd.test(str)) {\n    return /\\d{1,2}:\\d{2}/.test(str) ? 'datetime' : 'date'\n  }\n\n  // dd/MM/yyyy vs MM/dd/yyyy (slashes or dashes or dots), with optional time\n  const dmyOrMdy = /^(\\d{1,2})[-/.](\\d{1,2})[-/.](\\d{2,4})(?:[ T]\\d{1,2}:\\d{2}(?::\\d{2})?)?$/\n  const m = str.match(dmyOrMdy)\n  if (m) {\n    const a = parseInt(m[1]!, 10)\n    const b = parseInt(m[2]!, 10)\n    const year = parseInt(m[3]!, 10)\n    const hasTime = /\\d{1,2}:\\d{2}/.test(str)\n    // Disambiguate: if one part > 12, that must be the day\n    if (a > 12 && b <= 12) return hasTime ? 'datetime' : 'date' // dd/MM/yyyy\n    if (b > 12 && a <= 12) return hasTime ? 'datetime' : 'date' // MM/dd/yyyy\n    // If ambiguous, use localeHint\n    if (localeHint) {\n      const l = localeHint.toLowerCase()\n      if (l.includes('en-us')) return hasTime ? 'datetime' : 'date' // favor MM/dd for US\n      if (l.includes('en-gb') || l.includes('zh-cn') || l.includes('de') || l.includes('fr') || l.includes('es')) {\n        return hasTime ? 'datetime' : 'date' // favor dd/MM for EU/GB/zh-CN perception\n      }\n    }\n    // As a safe fallback, ensure both a and b in 1..12 and year is sensible\n    if (year >= 1900 && year <= 2100 && a >= 1 && a <= 31 && b >= 1 && b <= 31) {\n      return hasTime ? 'datetime' : 'date'\n    }\n  }\n\n  return 'none'\n}\n\nexport function inferDataType(values: unknown[], opts: InferOptions = {}): InferredDataType {\n  const { sampleSize, enumMaxUnique, enumMaxUniqueRatio } = { ...DEFAULTS, ...opts }\n  const sample: unknown[] = []\n\n  for (let i = 0; i < values.length && sample.length < sampleSize; i++) {\n    sample.push(values[i])\n  }\n\n  let nonNull = 0\n  let boolCount = 0\n  let numberLike = 0\n  let percentLike = 0\n  let currencyLike = 0\n  let dateOnly = 0\n  let dateTime = 0\n  let timeOnly = 0\n  let intervalLike = 0\n  let jsonLike = 0\n  let stringCount = 0\n  let multiLineCount = 0\n  const unique = new Set<string>()\n\n  for (const v of sample) {\n    if (isNullish(v)) continue\n    nonNull++\n\n    // collect unique key (stringified) for enum detection\n    unique.add(String(v))\n\n    if (isBooleanLike(v)) boolCount++\n    if (isPercentageLike(v)) percentLike++\n    if (isCurrencyLike(v)) currencyLike++\n    if (typeof v === 'object' && v !== null && !(v instanceof Date)) jsonLike++\n    if (typeof v === 'string') {\n      stringCount++\n      const s = v\n      if (s.includes('\\n') || s.includes('\\r')) multiLineCount++\n      // JSON string detection (conservative): starts with { or [ and parse ok\n      const t = s.trim()\n      if ((t.startsWith('{') && t.endsWith('}')) || (t.startsWith('[') && t.endsWith(']'))) {\n        let parsedOk = false\n        try {\n          JSON.parse(t)\n          parsedOk = true\n        } catch (_err) {\n          parsedOk = false\n        }\n        if (parsedOk) jsonLike++\n      }\n      if (isNumberLike(v)) numberLike++\n    } else {\n      if (isNumberLike(v)) numberLike++\n    }\n    // Time-only vs duration/interval detection for strings (when not recognized as date/datetime)\n    if (typeof v === 'string') {\n      const s = v.trim()\n      // ISO 8601 duration: P[nY][nM][nW][nD][T[nH][nM][nS]]\n      if (/^P(?=\\d|T)(\\d+Y)?(\\d+M)?(\\d+W)?(\\d+D)?(T(\\d+H)?(\\d+M)?(\\d+S)?)?$/i.test(s)) {\n        intervalLike++\n      } else if (/(\\d+\\s+(years?|months?|weeks?|days?|hours?|hrs?|minutes?|mins?|seconds?|secs?))/i.test(s)) {\n        intervalLike++\n      } else {\n        const m = s.match(/^(\\d{1,3}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{1,3}))?)?(?:\\s*(AM|PM))?$/i)\n        if (m) {\n          const hh = parseInt(m[1]!, 10)\n          const mm = parseInt(m[2]!, 10)\n          const ss = m[3] ? parseInt(m[3]!, 10) : 0\n          if (hh >= 24 || mm >= 60 || ss >= 60) {\n            intervalLike++\n          } else {\n            timeOnly++\n          }\n        }\n      }\n    }\n\n    const d = typeof v === 'string' ? (detectLocaleDate(v, opts.locale) || isDateLike(v)) : isDateLike(v)\n    if (d === 'date') dateOnly++\n    if (d === 'datetime') dateTime++\n  }\n\n  if (nonNull === 0) return 'text'\n\n  // Ratios\n  const boolR = boolCount / nonNull\n  const numR = numberLike / nonNull\n  const pctR = percentLike / nonNull\n  const curR = currencyLike / nonNull\n  const dateR = (dateOnly + dateTime) / nonNull\n  const timeR = timeOnly / nonNull\n  const intervalR = intervalLike / nonNull\n  const jsonR = jsonLike / nonNull\n  const multiR = stringCount > 0 ? multiLineCount / stringCount : 0\n\n  // 1) Strong signals first\n  if (boolR >= 0.95) return 'boolean'\n\n  if (pctR >= 0.9) return 'percentage'\n  if (curR >= 0.9) return 'currency'\n\n  // JSON-like data (objects or JSON strings) dominates\n  if (jsonR >= 0.9) return 'json'\n\n  if (dateR >= 0.9) {\n    // If time occurs notably, call datetime; else date\n    const timeR = dateTime / (dateOnly + dateTime)\n    return timeR >= 0.2 ? 'datetime' : 'date'\n  }\n\n  if (timeR >= 0.9) return 'time'\n  if (intervalR >= 0.9) return 'interval'\n\n  if (numR >= 0.95) return 'number'\n\n  // 2) Enum detection (limited cardinality vs sample size)\n  const uniqueCount = unique.size\n  const uniqueRatio = uniqueCount / nonNull\n  if (uniqueCount > 0 && uniqueCount <= enumMaxUnique && uniqueRatio <= enumMaxUniqueRatio && nonNull >= 10) {\n    return 'enum'\n  }\n\n  // 3) Multiline text\n  if (multiR >= 0.3) return 'multiline'\n\n  // 4) Fallback\n  return 'text'\n}\n\nexport function inferDataTypeForColumn(\n  data: RowData[],\n  column: ColumnDef,\n  opts: InferOptions = {}\n): InferredDataType {\n  // If user configured options for select-like columns, treat as enum\n  const hasOptions = (column as any).options && Array.isArray((column as any).options)\n  if (hasOptions) return 'enum'\n\n  const values: unknown[] = []\n  const field = column.field\n  const { sampleSize = DEFAULTS.sampleSize } = opts\n  for (let i = 0; i < data.length && values.length < sampleSize; i++) {\n    values.push((data[i] as any)?.[field])\n  }\n  const locale = opts.locale || column.locale\n  return inferDataType(values, { ...opts, locale })\n}\n","/**\n * Unified Plugin Registry - Modern Architecture\n *\n * Eliminates dual registry mental burden through composition-based design.\n * Follows SOLID principles with clear separation of concerns.\n * Provides zero-configuration defaults with progressive enhancement.\n *\n * Architecture: Core Registry + Composable Extensions + Smart Defaults\n */\n\nimport type { GridAPI } from '../types'\nimport type {\n  GridPlugin,\n  PluginError,\n  GridCapabilities,\n  CapabilityGetter,\n  TaskStatus,\n} from './index'\nimport { createLogger } from '../utils/logger'\n\n// Core plugin operation result\nexport interface PluginOperationResult {\n  success: boolean\n  error?: PluginError\n  metadata?: Record<string, any>\n}\n\n// Extension interface for modular functionality\nexport interface UnifiedRegistryExtension {\n  name: string\n  install(registry: CorePluginRegistry): void\n  uninstall?(): void\n}\n\n// Health status for monitoring\nexport interface PluginHealth {\n  pluginName: string\n  healthy: boolean\n  errorCount: number\n  lastError?: PluginError\n  healthScore: number\n  recoveryAttempts: number\n}\n\nexport interface SystemHealth {\n  overallHealth: number\n  totalPlugins: number\n  healthyPlugins: number\n  criticalIssues: number\n  recommendations: string[]\n}\n\n// Configuration interface\nexport interface UnifiedPluginRegistryOptions {\n  // Environment configuration\n  mode?: 'development' | 'production' | 'auto'\n\n  // Feature flags\n  enableErrorHandling?: boolean\n  enableMonitoring?: boolean\n  enableDebugging?: boolean\n  enableCapabilities?: boolean\n\n  // Performance settings\n  errorRetryLimit?: number\n  healthCheckInterval?: number\n  asyncTimeout?: number\n\n  // Callbacks\n  onError?: (error: PluginError, context: string) => void\n  onRecovery?: (pluginName: string, success: boolean) => void\n  onHealthChange?: (health: SystemHealth) => void\n}\n\n/**\n * Core Plugin Registry - Focused on essential plugin operations\n * Follows single responsibility principle\n */\nexport class CorePluginRegistry {\n  private logger = createLogger('CorePluginRegistry')\n  private plugins = new Map<string, GridPlugin>()\n  private loadOrder: string[] = []\n  private extensions = new Map<string, UnifiedRegistryExtension>()\n  private api: GridAPI\n\n  constructor(api: GridAPI) {\n    this.api = api\n  }\n\n  // Core plugin operations - simple and focused\n  async register(plugin: GridPlugin): Promise<PluginOperationResult> {\n    try {\n      // Basic validation\n      if (!plugin.name || typeof plugin.install !== 'function') {\n        throw new Error(`Invalid plugin: missing name or install function`)\n      }\n\n      if (this.plugins.has(plugin.name)) {\n        throw new Error(`Plugin '${plugin.name}' is already registered`)\n      }\n\n      // Store plugin\n      this.plugins.set(plugin.name, plugin)\n\n      // Install with basic error handling\n      await this.installPlugin(plugin)\n\n      // Track load order\n      this.loadOrder.push(plugin.name)\n\n      return { success: true }\n    } catch (error) {\n      const pluginError: PluginError = {\n        type: 'installation',\n        message: error instanceof Error ? error.message : 'Unknown error',\n        name: error instanceof Error ? error.name : 'PluginInstallationError',\n        timestamp: Date.now(),\n        stack: error instanceof Error ? error.stack : undefined,\n      }\n\n      // Notify extensions\n      this.notifyExtensions('plugin-error', { plugin: plugin.name, error: pluginError })\n\n      return { success: false, error: pluginError }\n    }\n  }\n\n  async unregister(pluginName: string): Promise<PluginOperationResult> {\n    const plugin = this.plugins.get(pluginName)\n    if (!plugin) {\n      return {\n        success: false,\n        error: {\n          type: 'installation',\n          message: `Plugin '${pluginName}' not found`,\n          name: 'PluginNotFoundError',\n          timestamp: Date.now(),\n        },\n      }\n    }\n\n    try {\n      // Cleanup plugin\n      if (plugin.cleanup) {\n        await plugin.cleanup()\n      }\n\n      // Remove from registry\n      this.plugins.delete(pluginName)\n      this.loadOrder = this.loadOrder.filter(name => name !== pluginName)\n\n      // Notify extensions\n      this.notifyExtensions('plugin-unregistered', { plugin: pluginName })\n\n      return { success: true }\n    } catch (error) {\n      const pluginError: PluginError = {\n        type: 'installation',\n        message: error instanceof Error ? error.message : 'Cleanup failed',\n        name: error instanceof Error ? error.name : 'PluginCleanupError',\n        timestamp: Date.now(),\n        stack: error instanceof Error ? error.stack : undefined,\n      }\n\n      return { success: false, error: pluginError }\n    }\n  }\n\n  get(pluginName: string): GridPlugin | undefined {\n    return this.plugins.get(pluginName)\n  }\n\n  list(): GridPlugin[] {\n    return Array.from(this.plugins.values())\n  }\n\n  getLoadOrder(): string[] {\n    return [...this.loadOrder]\n  }\n\n  // Extension system for progressive enhancement\n  use(extension: UnifiedRegistryExtension): this {\n    if (this.extensions.has(extension.name)) {\n      this.logger.warn(`Extension '${extension.name}' is already installed`)\n      return this\n    }\n\n    this.extensions.set(extension.name, extension)\n    extension.install(this)\n\n    return this\n  }\n\n  unuse(extensionName: string): this {\n    const extension = this.extensions.get(extensionName)\n    if (extension) {\n      extension.uninstall?.()\n      this.extensions.delete(extensionName)\n    }\n    return this\n  }\n\n  // Extension access for composition\n  getExtension<T extends UnifiedRegistryExtension>(name: string): T | undefined {\n    return this.extensions.get(name) as T | undefined\n  }\n\n  // Internal methods\n  private async installPlugin(plugin: GridPlugin): Promise<void> {\n    // Get capability getter from capability extension\n    const capabilityExt = this.getExtension<CapabilityExtension>('capabilities')\n    const capabilityGetter: CapabilityGetter = capabilityExt\n      ? capabilityExt.createGetter()\n      : () => undefined\n\n    // Install plugin with API and capability access\n    await plugin.install(this.api, capabilityGetter)\n  }\n\n  private notifyExtensions(event: string, data: any): void {\n    this.extensions.forEach(extension => {\n      try {\n        if ('onEvent' in extension && typeof extension.onEvent === 'function') {\n          ;(extension.onEvent as (event: string, data: any) => void)(event, data)\n        }\n      } catch (error) {\n        this.logger.warn(`Extension '${extension.name}' error in event '${event}':`, error)\n      }\n    })\n  }\n\n  // Cleanup\n  async cleanup(): Promise<void> {\n    // Unregister all plugins in reverse order\n    const pluginNames = [...this.loadOrder].reverse()\n    for (const name of pluginNames) {\n      await this.unregister(name)\n    }\n\n    // Cleanup extensions\n    for (const extension of this.extensions.values()) {\n      extension.uninstall?.()\n    }\n    this.extensions.clear()\n  }\n}\n\n/**\n * Capability Extension - Manages capability system\n */\nexport class CapabilityExtension implements UnifiedRegistryExtension {\n  name = 'capabilities'\n  private capabilities = new Map<keyof GridCapabilities, any>()\n  private logger = createLogger('CapabilityExtension')\n\n  install(_registry: CorePluginRegistry): void {\n    // Registry reference not needed for this implementation\n    this.initializeDefaultCapabilities()\n  }\n\n  uninstall(): void {\n    this.capabilities.clear()\n  }\n\n  register<T extends keyof GridCapabilities>(name: T, capability: GridCapabilities[T]): void {\n    this.capabilities.set(name, capability)\n  }\n\n  get<T extends keyof GridCapabilities>(name: T): GridCapabilities[T] | undefined {\n    return this.capabilities.get(name) as GridCapabilities[T] | undefined\n  }\n\n  list(): (keyof GridCapabilities)[] {\n    return Array.from(this.capabilities.keys())\n  }\n\n  createGetter(): CapabilityGetter {\n    return <T extends keyof GridCapabilities>(name: T) => this.get(name)\n  }\n\n  private initializeDefaultCapabilities(): void {\n    // Initialize built-in capabilities\n    this.initializeDataPipelineCapability()\n    this.initializeAsyncTasksCapability()\n    this.initializeWebSocketCapability()\n    this.initializeAICapability()\n  }\n\n  private initializeDataPipelineCapability(): void {\n    const interceptors = new Map<string, any[]>()\n\n    this.register('data-pipeline', {\n      registerDataInterceptor: (type: string, interceptor: any) => {\n        if (!interceptors.has(type)) {\n          interceptors.set(type, [])\n        }\n        const typeInterceptors = interceptors.get(type)!\n        const existing = typeInterceptors.findIndex(i => i.name === interceptor.name)\n\n        if (existing !== -1) {\n          typeInterceptors[existing] = interceptor\n        } else {\n          typeInterceptors.push(interceptor)\n          typeInterceptors.sort((a, b) => b.priority - a.priority)\n        }\n      },\n\n      removeDataInterceptor: (type: string, name: string) => {\n        const typeInterceptors = interceptors.get(type)\n        if (typeInterceptors) {\n          const index = typeInterceptors.findIndex(i => i.name === name)\n          if (index !== -1) {\n            typeInterceptors.splice(index, 1)\n          }\n        }\n      },\n\n      getDataPipeline: () => {\n        const allInterceptors: any[] = []\n        for (const [_, typeInterceptors] of interceptors) {\n          allInterceptors.push(...typeInterceptors)\n        }\n        return allInterceptors\n      },\n\n      processData: (data: any[], type: string) => {\n        const typeInterceptors = interceptors.get(type)\n        if (!typeInterceptors || typeInterceptors.length === 0) {\n          return data\n        }\n\n        let processedData = data\n        for (const interceptor of typeInterceptors) {\n          if (interceptor.enabled !== false) {\n            try {\n              processedData = interceptor.transform(processedData)\n            } catch (error) {\n              this.logger.error(`Error in interceptor ${interceptor.name}:`, error)\n            }\n          }\n        }\n        return processedData\n      },\n\n      clearPipeline: (type?: string) => {\n        if (type) {\n          interceptors.delete(type)\n        } else {\n          interceptors.clear()\n        }\n      },\n    })\n  }\n\n  private initializeAsyncTasksCapability(): void {\n    const tasks = new Map<string, TaskStatus>()\n    let taskIdCounter = 0\n\n    this.register('async-tasks', {\n      scheduleAsyncTask: async (task: any) => {\n        const taskId = `task-${++taskIdCounter}-${Date.now()}`\n        const taskStatus: TaskStatus = {\n          id: taskId,\n          name: task.name,\n          status: 'pending',\n          startTime: Date.now(),\n        }\n\n        tasks.set(taskId, taskStatus)\n\n        // Execute task asynchronously\n        setTimeout(\n          async () => {\n            try {\n              taskStatus.status = 'running'\n              const result = await task.execute()\n              taskStatus.status = 'completed'\n              taskStatus.result = result\n              taskStatus.endTime = Date.now()\n            } catch (error) {\n              taskStatus.status = 'failed'\n              taskStatus.error = error as Error\n              taskStatus.endTime = Date.now()\n            }\n          },\n          task.priority === 'high' ? 0 : 10\n        )\n\n        return taskId\n      },\n\n      cancelTask: (taskId: string) => {\n        const task = tasks.get(taskId)\n        if (task && (task.status === 'pending' || task.status === 'running')) {\n          task.status = 'cancelled'\n          task.endTime = Date.now()\n          return true\n        }\n        return false\n      },\n\n      getTaskStatus: (taskId: string) => {\n        return (\n          tasks.get(taskId) ||\n          ({\n            id: taskId,\n            name: 'unknown',\n            status: 'failed',\n            error: new Error('Task not found'),\n          } as TaskStatus)\n        )\n      },\n\n      getAllTasks: () => new Map(tasks),\n\n      onTaskComplete: () => {}, // Stub implementation\n      onTaskError: () => {}, // Stub implementation\n      clearCompletedTasks: () => {\n        for (const [taskId, task] of tasks) {\n          if (['completed', 'failed', 'cancelled'].includes(task.status)) {\n            tasks.delete(taskId)\n          }\n        }\n      },\n    })\n  }\n\n  private initializeWebSocketCapability(): void {\n    this.register('websocket', {\n      connect: async () => {\n        // Stub implementation\n        return {\n          id: `ws-${Date.now()}`,\n          url: '',\n          readyState: 1,\n          send: () => {},\n          close: () => {},\n          addEventListener: () => {},\n          removeEventListener: () => {},\n        }\n      },\n      disconnect: () => {},\n      subscribe: () => () => {},\n      unsubscribe: () => {},\n      broadcast: () => {},\n      getConnection: () => null,\n      getConnectionState: () => 'disconnected' as const,\n    })\n  }\n\n  private initializeAICapability(): void {\n    this.register('ai', {\n      analyzeData: async () => ({\n        summary: 'Stub analysis',\n        patterns: [],\n        recommendations: [],\n        statistics: { totalRecords: 0, fields: {} },\n        confidence: 0.8,\n      }),\n      detectAnomalies: async () => [],\n      suggestOptimizations: async () => [],\n      generateSummary: async () => ({\n        recordCount: 0,\n        fieldSummaries: [],\n        insights: [],\n        quality: { completeness: 1, consistency: 1, accuracy: 1 },\n      }),\n      predictTrends: async (_data: any[], field: string) => ({\n        field,\n        predictions: [],\n        trend: 'stable' as const,\n        accuracy: 0.75,\n      }),\n      classifyData: async (_data: any[], field: string) => ({\n        field,\n        categories: [],\n        confidence: 0.8,\n      }),\n    })\n  }\n}\n\n/**\n * Error Handling Extension - Progressive error management\n */\nexport class ErrorHandlingExtension implements UnifiedRegistryExtension {\n  name = 'error-handling'\n  private errors = new Map<string, PluginError>()\n  private mode: 'development' | 'production' = 'production'\n  private onErrorCallback?: (error: PluginError, context: string) => void\n  private logger = createLogger('ErrorHandlingExtension')\n\n  constructor(\n    options: {\n      mode?: 'development' | 'production'\n      onError?: (error: PluginError, context: string) => void\n    } = {}\n  ) {\n    this.mode = options.mode || 'production'\n    this.onErrorCallback = options.onError\n  }\n\n  install(_registry: CorePluginRegistry): void {\n    // Extension is self-contained\n  }\n\n  onEvent(event: string, data: any): void {\n    if (event === 'plugin-error') {\n      this.handleError(data.error, data.plugin)\n    }\n  }\n\n  private handleError(error: PluginError, pluginName: string): void {\n    this.errors.set(pluginName, error)\n\n    if (this.mode === 'development') {\n      // Fail fast in development\n      this.logger.error(`Plugin error in ${pluginName}:`, error)\n      throw new Error(`Plugin '${pluginName}' failed: ${error.message}`)\n    } else {\n      // Graceful handling in production\n      this.logger.warn(`Plugin error in ${pluginName}:`, error.message)\n      this.onErrorCallback?.(error, pluginName)\n    }\n  }\n\n  getErrors(): Map<string, PluginError> {\n    return new Map(this.errors)\n  }\n\n  clearErrors(): void {\n    this.errors.clear()\n  }\n\n  async recover(pluginName: string): Promise<boolean> {\n    // Basic recovery implementation\n    this.errors.delete(pluginName)\n    return true\n  }\n}\n\n/**\n * Monitoring Extension - Performance and health tracking\n */\nexport class MonitoringExtension implements UnifiedRegistryExtension {\n  name = 'monitoring'\n  private healthData = new Map<string, PluginHealth>()\n  private metrics = {\n    totalOperations: 0,\n    successfulOperations: 0,\n    failedOperations: 0,\n    averageOperationTime: 0,\n  }\n\n  install(_registry: CorePluginRegistry): void {\n    // Start basic monitoring\n  }\n\n  onEvent(event: string, data: any): void {\n    if (event === 'plugin-error') {\n      this.recordError(data.plugin)\n    } else if (event === 'plugin-unregistered') {\n      this.recordSuccess()\n    }\n  }\n\n  private recordError(pluginName: string): void {\n    const health = this.healthData.get(pluginName) || {\n      pluginName,\n      healthy: true,\n      errorCount: 0,\n      healthScore: 100,\n      recoveryAttempts: 0,\n    }\n\n    health.errorCount++\n    health.healthy = health.errorCount < 3\n    health.healthScore = Math.max(0, 100 - health.errorCount * 20)\n\n    this.healthData.set(pluginName, health)\n    this.metrics.failedOperations++\n  }\n\n  private recordSuccess(): void {\n    this.metrics.successfulOperations++\n  }\n\n  getHealth(pluginName?: string): PluginHealth | SystemHealth {\n    if (pluginName) {\n      return (\n        this.healthData.get(pluginName) || {\n          pluginName,\n          healthy: true,\n          errorCount: 0,\n          healthScore: 100,\n          recoveryAttempts: 0,\n        }\n      )\n    }\n\n    // System health\n    const allHealth = Array.from(this.healthData.values())\n    const healthyPlugins = allHealth.filter(h => h.healthy).length\n    const totalPlugins = allHealth.length\n\n    return {\n      overallHealth: totalPlugins > 0 ? (healthyPlugins / totalPlugins) * 100 : 100,\n      totalPlugins,\n      healthyPlugins,\n      criticalIssues: allHealth.filter(h => h.healthScore < 30).length,\n      recommendations: this.generateRecommendations(allHealth),\n    }\n  }\n\n  private generateRecommendations(healthData: PluginHealth[]): string[] {\n    const recommendations: string[] = []\n\n    const criticalPlugins = healthData.filter(h => h.healthScore < 30)\n    if (criticalPlugins.length > 0) {\n      recommendations.push(`${criticalPlugins.length} plugins need immediate attention`)\n    }\n\n    return recommendations\n  }\n}\n\n/**\n * Smart Factory Function - Zero Configuration with Progressive Enhancement\n */\nexport function createUnifiedPluginRegistry(\n  api: GridAPI,\n  options: UnifiedPluginRegistryOptions = {}\n): CorePluginRegistry {\n  const registry = new CorePluginRegistry(api)\n\n  // Determine mode\n  const mode =\n    options.mode === 'auto'\n      ? process.env.NODE_ENV === 'development'\n        ? 'development'\n        : 'production'\n      : options.mode || 'production'\n\n  // Always enable capabilities (core functionality)\n  if (options.enableCapabilities !== false) {\n    registry.use(new CapabilityExtension())\n  }\n\n  // Enable error handling based on mode\n  if (options.enableErrorHandling !== false) {\n    registry.use(\n      new ErrorHandlingExtension({\n        mode,\n        onError: options.onError,\n      })\n    )\n  }\n\n  // Enable monitoring for production or large datasets\n  if (options.enableMonitoring !== false) {\n    registry.use(new MonitoringExtension())\n  }\n\n  return registry\n}\n\n// Convenience methods for progressive enhancement\nexport function withErrorHandling(\n  registry: CorePluginRegistry,\n  options: { mode?: 'development' | 'production' } = {}\n): CorePluginRegistry {\n  return registry.use(new ErrorHandlingExtension(options))\n}\n\nexport function withMonitoring(registry: CorePluginRegistry): CorePluginRegistry {\n  return registry.use(new MonitoringExtension())\n}\n\nexport function withCapabilities(registry: CorePluginRegistry): CorePluginRegistry {\n  return registry.use(new CapabilityExtension())\n}\n\n// Export type aliases for compatibility\nexport type UnifiedPluginRegistry = CorePluginRegistry\nexport interface RegistryFeatures {\n  errorHandling: boolean\n  monitoring: boolean\n  debugging: boolean\n  capabilities: boolean\n}\n\n// Alias for backward compatibility with main plugins index export\nexport const createPluginRegistry = createUnifiedPluginRegistry\n","/**\n * Vue 3 Virtual Scrolling Composable\n *\n * Optimized virtual scrolling implementation for Happy Table.\n * Provides smooth 60FPS scrolling with 100k+ rows.\n *\n * Features:\n * - Dynamic item sizing\n * - Overscan for smooth scrolling\n * - Memory-efficient item tracking\n * - Vue 3 reactivity integration\n */\n\nimport { ref, computed, watch, onUnmounted, type Ref, type ComputedRef } from 'vue'\nimport type { VirtualizerOptions, VirtualizerReturn, VirtualItem, VirtualColumn } from '../types'\nexport type { VirtualItem, VirtualizerOptions, VirtualizerReturn, VirtualColumn } from '../types'\n\nexport function useVirtualizer(options: VirtualizerOptions): VirtualizerReturn {\n  const { count, getItemSize, overscan = 5, enabled = ref(true) } = options\n\n  // 1. REACTIVE STATE\n  const scrollElement = ref<HTMLElement | null>(null)\n  const containerSize = ref({ height: 0, width: 0 })\n  const scrollTop = ref(0)\n\n  // 2. SIZE CALCULATIONS\n  // Cache item sizes and prefix sums for performance\n  const sizeCache: (number | undefined)[] = []\n  const prefixCache: (number | undefined)[] = []\n\n  const resetSizeCaches = () => {\n    sizeCache.length = 0\n    prefixCache.length = 0\n  }\n\n  const setSizeCache = (index: number, size: number) => {\n    const previous = sizeCache[index]\n    sizeCache[index] = size\n    if (previous !== size) {\n      prefixCache.length = Math.min(prefixCache.length, index)\n    }\n  }\n\n  const getItemSizeWithCache = (index: number): number => {\n    if (index < 0) return 0\n    const cached = sizeCache[index]\n    if (cached !== undefined) {\n      return cached\n    }\n\n    const size = getItemSize(index)\n    setSizeCache(index, size)\n    return size\n  }\n\n  const getPrefixSum = (index: number): number => {\n    if (index < 0) return 0\n\n    const cached = prefixCache[index]\n    if (cached !== undefined) {\n      return cached\n    }\n\n    let cursor = index\n    while (cursor >= 0 && prefixCache[cursor] === undefined) {\n      cursor--\n    }\n\n    let total = cursor >= 0 ? prefixCache[cursor]! : 0\n    for (let i = cursor + 1; i <= index; i++) {\n      total += getItemSizeWithCache(i)\n      prefixCache[i] = total\n    }\n\n    return prefixCache[index]!\n  }\n\n  const getItemStartPosition = (index: number): number => getPrefixSum(index - 1)\n  const getItemEndPosition = (index: number): number => getPrefixSum(index)\n\n  // Clear cache when count changes\n  watch(count, () => {\n    resetSizeCaches()\n  })\n\n  const findFirstIndexWithEndAfter = (offset: number): number => {\n    const totalCount = count.value\n    if (totalCount === 0) return 0\n\n    const target = Math.max(0, offset)\n    let left = 0\n    let right = totalCount - 1\n    let result = totalCount - 1\n\n    while (left <= right) {\n      const mid = Math.floor((left + right) / 2)\n      const itemEnd = getItemEndPosition(mid)\n\n      if (itemEnd > target) {\n        result = mid\n        right = mid - 1\n      } else {\n        left = mid + 1\n      }\n    }\n\n    return result\n  }\n\n  const findFirstIndexWithStartAtOrAfter = (offset: number): number => {\n    const totalCount = count.value\n    if (totalCount === 0) return 0\n\n    const target = Math.max(0, offset)\n    let left = 0\n    let right = totalCount - 1\n    let result = totalCount\n\n    while (left <= right) {\n      const mid = Math.floor((left + right) / 2)\n      const itemStart = getItemStartPosition(mid)\n\n      if (itemStart >= target) {\n        result = mid\n        right = mid - 1\n      } else {\n        left = mid + 1\n      }\n    }\n\n    return result\n  }\n\n  // 3. TOTAL SIZE CALCULATION\n  const totalSize = computed(() => {\n    if (count.value === 0) return 0\n    return getPrefixSum(count.value - 1)\n  })\n\n  // 4. VISIBLE RANGE CALCULATION WITH DYNAMIC OVERSCAN\n  const visibleRange = computed(() => {\n    const totalCount = count.value\n\n    if (totalCount === 0) {\n      return {\n        start: 0,\n        end: -1,\n      }\n    }\n\n    if (!enabled.value || containerSize.value.height === 0) {\n      return {\n        start: 0,\n        end: totalCount - 1,\n      }\n    }\n\n    const start = findFirstIndexWithEndAfter(scrollTop.value)\n    const viewportBottom = scrollTop.value + containerSize.value.height\n    const firstAfterViewport = findFirstIndexWithStartAtOrAfter(viewportBottom)\n\n    const baseEnd =\n      firstAfterViewport >= totalCount\n        ? totalCount - 1\n        : Math.max(start, Math.max(firstAfterViewport - 1, start))\n\n    // Dynamic overscan based on scroll velocity\n    let dynamicOverscan = overscan\n\n    if (scrollVelocity > 2) {\n      dynamicOverscan = Math.min(overscan * 4, 20)\n    } else if (scrollVelocity > 0.5) {\n      dynamicOverscan = Math.min(overscan * 2, 12)\n    }\n\n    const overscanStart = Math.max(0, start - dynamicOverscan)\n    const overscanEnd = Math.min(totalCount - 1, baseEnd + dynamicOverscan)\n\n    return {\n      start: overscanStart,\n      end: overscanEnd,\n    }\n  })\n\n  // 5. VIRTUAL ITEMS CALCULATION\n  const virtualItems = computed((): VirtualItem[] => {\n    const totalCount = count.value\n\n    if (totalCount === 0) {\n      return []\n    }\n\n    if (!enabled.value) {\n      const items: VirtualItem[] = []\n      for (let i = 0; i < totalCount; i++) {\n        const start = getItemStartPosition(i)\n        const size = getItemSizeWithCache(i)\n        items.push({\n          index: i,\n          start,\n          size,\n          end: start + size,\n        })\n      }\n      return items\n    }\n\n    const items: VirtualItem[] = []\n    const { start, end } = visibleRange.value\n\n    if (start < 0 || end < start) {\n      return items\n    }\n\n    for (let i = start; i <= end; i++) {\n      const startOffset = getItemStartPosition(i)\n      const size = getItemSizeWithCache(i)\n      items.push({\n        index: i,\n        start: startOffset,\n        size,\n        end: startOffset + size,\n      })\n    }\n\n    return items\n  })\n\n  // 6. EXPOSED COMPUTED VALUES\n  const startIndex = computed(() => virtualItems.value[0]?.index ?? 0)\n  const endIndex = computed(() => virtualItems.value[virtualItems.value.length - 1]?.index ?? 0)\n\n  // 7. SCROLL HANDLING WITH VELOCITY TRACKING\n  let scrollRAF: number | null = null\n  let lastScrollTop = 0\n  let lastScrollTime = 0\n  let scrollVelocity = 0\n  \n  const handleScroll = (event: Event) => {\n    const target = event.target as HTMLElement\n    const currentTime = performance.now()\n    const currentScrollTop = target.scrollTop\n    \n    // Calculate scroll velocity (pixels per millisecond)\n    const timeDelta = currentTime - lastScrollTime\n    if (timeDelta > 0) {\n      const scrollDelta = Math.abs(currentScrollTop - lastScrollTop)\n      scrollVelocity = scrollDelta / timeDelta\n    }\n    \n    lastScrollTop = currentScrollTop\n    lastScrollTime = currentTime\n    \n    // Use RAF to throttle scroll updates for better performance\n    if (scrollRAF) {\n      cancelAnimationFrame(scrollRAF)\n    }\n    \n    scrollRAF = requestAnimationFrame(() => {\n      scrollTop.value = currentScrollTop\n      scrollRAF = null\n    })\n  }\n\n  // 8. SCROLL METHODS\n  const scrollToIndex = (index: number, align: 'start' | 'center' | 'end' = 'start') => {\n    if (!scrollElement.value || !enabled.value || count.value === 0) return\n\n    const totalCount = count.value\n    const clampedIndex = Math.min(Math.max(index, 0), totalCount - 1)\n    let targetScrollTop = getItemStartPosition(clampedIndex)\n    const itemSize = getItemSizeWithCache(clampedIndex)\n    const containerHeight = containerSize.value.height\n\n    switch (align) {\n      case 'center':\n        targetScrollTop -= (containerHeight - itemSize) / 2\n        break\n      case 'end':\n        targetScrollTop -= containerHeight - itemSize\n        break\n      case 'start':\n      default:\n        break\n    }\n\n    const maxScrollTop = Math.max(0, totalSize.value - containerHeight)\n    targetScrollTop = Math.max(0, Math.min(targetScrollTop, maxScrollTop))\n\n    scrollElement.value.scrollTop = targetScrollTop\n  }\n\n  const setContainerSize = (size: { height: number; width: number }) => {\n    containerSize.value = size\n  }\n\n  // 9. ELEMENT WATCHER\n  // Set up scroll listener when element is available\n  watch(\n    scrollElement,\n    (newElement, oldElement) => {\n      if (oldElement) {\n        oldElement.removeEventListener('scroll', handleScroll)\n      }\n\n      if (newElement) {\n        newElement.addEventListener('scroll', handleScroll, { passive: true })\n      }\n    },\n    { immediate: true }\n  )\n\n  // 10. CLEANUP\n  onUnmounted(() => {\n    if (scrollElement.value) {\n      scrollElement.value.removeEventListener('scroll', handleScroll)\n    }\n    if (scrollRAF) {\n      cancelAnimationFrame(scrollRAF)\n    }\n    if (logTimeout) {\n      clearTimeout(logTimeout)\n    }\n    resetSizeCaches()\n  })\n\n  // 11. PERFORMANCE MONITORING\n  let logTimeout: number | null = null\n  if (import.meta.env.DEV) {\n    // Monitor virtual item count for debugging - throttled to reduce noise\n    watch(\n      virtualItems,\n      items => {\n        if (logTimeout) {\n          clearTimeout(logTimeout)\n        }\n        logTimeout = window.setTimeout(() => {\n          import('./logger').then(({ createLogger }) => {\n            const logger = createLogger('Virtualization')\n            logger.debug(`Virtual items: ${items.length} / ${count.value} total`)\n          })\n        }, 100) // Throttle to max 10 logs per second\n      },\n      { flush: 'post' }\n    )\n  }\n\n  // 11. PUBLIC API\n  const updateScrollPosition = (newScrollTop: number) => {\n    scrollTop.value = newScrollTop\n  }\n\n  return {\n    scrollElement,\n    totalSize,\n    virtualItems,\n    startIndex,\n    endIndex,\n    scrollToIndex,\n    setContainerSize,\n    updateScrollPosition,\n  }\n}\n\n// 12. UTILITY FUNCTIONS\nexport function estimateItemSize(data: unknown[], sampleSize = 10): number {\n  if (data.length === 0) return 50\n\n  const sample = data.slice(0, Math.min(sampleSize, data.length))\n\n  // Simple estimation based on content length\n  const averageContentLength =\n    sample.reduce((sum: number, item) => {\n      const content = JSON.stringify(item)\n      return sum + content.length\n    }, 0) / sample.length\n\n  // Rough formula: 20px base + 0.5px per character\n  return Math.max(30, Math.min(200, 20 + averageContentLength * 0.5))\n}\n\nexport function createVirtualScrollElement(totalSize: number) {\n  return {\n    height: `${totalSize}px`,\n    position: 'relative' as const,\n    overflow: 'hidden',\n  }\n}\n\n// 13. HORIZONTAL VIRTUALIZATION\nexport interface HorizontalVirtualizerOptions {\n  columns: ComputedRef<import('../types').ColumnDef[]>\n  getColumnWidth: (index: number) => number\n  overscan?: number\n  enabled?: Ref<boolean>\n}\n\nexport interface HorizontalVirtualizerReturn {\n  scrollElement: Ref<HTMLElement | null>\n  totalWidth: ComputedRef<number>\n  virtualColumns: ComputedRef<VirtualColumn[]>\n  startIndex: ComputedRef<number>\n  endIndex: ComputedRef<number>\n  scrollToColumn: (index: number, align?: 'start' | 'center' | 'end') => void\n  setContainerSize: (size: { width: number; height: number }) => void\n  updateScrollPosition: (scrollLeft: number) => void\n}\n\n/**\n * Dynamic overscan calculator based on scroll speed\n * Provides smoother scrolling experience with adaptive buffer\n */\nfunction calculateDynamicOverscan(\n  baseOverscan: number,\n  scrollSpeed: number,\n  maxOverscan: number = 20\n): number {\n  // Normalize scroll speed (pixels per frame)\n  const normalizedSpeed = Math.min(Math.abs(scrollSpeed) / 50, 1)\n\n  // Scale overscan based on speed\n  const dynamicOverscan = Math.floor(baseOverscan + (normalizedSpeed * (maxOverscan - baseOverscan)))\n\n  return Math.min(dynamicOverscan, maxOverscan)\n}\n\nexport function useHorizontalVirtualizer(options: HorizontalVirtualizerOptions): HorizontalVirtualizerReturn {\n  const { columns, getColumnWidth, overscan = 3, enabled = ref(true) } = options\n\n  // 1. REACTIVE STATE\n  const scrollElement = ref<HTMLElement | null>(null)\n  const containerSize = ref({ width: 0, height: 0 })\n  const scrollLeft = ref(0)\n\n  // Track scroll speed for dynamic overscan\n  const previousScrollLeft = ref(0)\n  const scrollSpeed = ref(0)\n\n  // 2. PERFORMANCE OPTIMIZATIONS\n  const widthCache: (number | undefined)[] = []\n  const widthPrefixCache: (number | undefined)[] = []\n\n  const resetWidthCaches = () => {\n    widthCache.length = 0\n    widthPrefixCache.length = 0\n  }\n\n  const setWidthCache = (index: number, width: number) => {\n    const previous = widthCache[index]\n    widthCache[index] = width\n    if (previous !== width) {\n      widthPrefixCache.length = Math.min(widthPrefixCache.length, index)\n    }\n  }\n\n  const getColumnWidthWithCache = (index: number): number => {\n    if (index < 0) return 0\n\n    const cached = widthCache[index]\n    if (cached !== undefined) {\n      return cached\n    }\n\n    const width = getColumnWidth(index)\n    setWidthCache(index, width)\n    return width\n  }\n\n  const getColumnPrefixSum = (index: number): number => {\n    if (index < 0) return 0\n\n    const cached = widthPrefixCache[index]\n    if (cached !== undefined) {\n      return cached\n    }\n\n    let cursor = index\n    while (cursor >= 0 && widthPrefixCache[cursor] === undefined) {\n      cursor--\n    }\n\n    let total = cursor >= 0 ? widthPrefixCache[cursor]! : 0\n    for (let i = cursor + 1; i <= index; i++) {\n      total += getColumnWidthWithCache(i)\n      widthPrefixCache[i] = total\n    }\n\n    return widthPrefixCache[index]!\n  }\n\n  const getColumnStartPosition = (index: number): number => getColumnPrefixSum(index - 1)\n  const getColumnEndPosition = (index: number): number => getColumnPrefixSum(index)\n\n  // Clear cache when columns change\n  watch(columns, () => {\n    resetWidthCaches()\n  }, { deep: true })\n\n  const findFirstColumnWithEndAfter = (offset: number): number => {\n    const columnCount = columns.value.length\n    if (columnCount === 0) return 0\n\n    const target = Math.max(0, offset)\n    let left = 0\n    let right = columnCount - 1\n    let result = columnCount - 1\n\n    while (left <= right) {\n      const mid = Math.floor((left + right) / 2)\n      const columnEnd = getColumnEndPosition(mid)\n\n      if (columnEnd > target) {\n        result = mid\n        right = mid - 1\n      } else {\n        left = mid + 1\n      }\n    }\n\n    return result\n  }\n\n  const findFirstColumnWithStartAtOrAfter = (offset: number): number => {\n    const columnCount = columns.value.length\n    if (columnCount === 0) return 0\n\n    const target = Math.max(0, offset)\n    let left = 0\n    let right = columnCount - 1\n    let result = columnCount\n\n    while (left <= right) {\n      const mid = Math.floor((left + right) / 2)\n      const columnStart = getColumnStartPosition(mid)\n\n      if (columnStart >= target) {\n        result = mid\n        right = mid - 1\n      } else {\n        left = mid + 1\n      }\n    }\n\n    return result\n  }\n\n  // 3. TOTAL WIDTH CALCULATION\n  const totalWidth = computed(() => {\n    const columnCount = columns.value.length\n    if (columnCount === 0) return 0\n    return getColumnPrefixSum(columnCount - 1)\n  })\n\n  // 4. VISIBLE RANGE CALCULATION\n  const visibleRange = computed(() => {\n    const columnCount = columns.value.length\n\n    if (columnCount === 0) {\n      return {\n        start: 0,\n        end: -1,\n      }\n    }\n\n    if (!enabled.value || containerSize.value.width === 0) {\n      return {\n        start: 0,\n        end: columnCount - 1,\n      }\n    }\n\n    const start = findFirstColumnWithEndAfter(scrollLeft.value)\n    const viewportRight = scrollLeft.value + containerSize.value.width\n    const firstAfterViewport = findFirstColumnWithStartAtOrAfter(viewportRight)\n\n    const baseEnd =\n      firstAfterViewport >= columnCount\n        ? columnCount - 1\n        : Math.max(start, Math.max(firstAfterViewport - 1, start))\n\n    const dynamicOverscan = calculateDynamicOverscan(overscan, scrollSpeed.value)\n    const overscanStart = Math.max(0, start - dynamicOverscan)\n    const overscanEnd = Math.min(columnCount - 1, baseEnd + dynamicOverscan)\n\n    return {\n      start: overscanStart,\n      end: overscanEnd,\n    }\n  })\n\n  // 5. VIRTUAL COLUMNS CALCULATION\n  const virtualColumns = computed((): VirtualColumn[] => {\n    const columnCount = columns.value.length\n\n    if (columnCount === 0) {\n      return []\n    }\n\n    if (!enabled.value) {\n      const items: VirtualColumn[] = []\n      for (let i = 0; i < columnCount; i++) {\n        const start = getColumnStartPosition(i)\n        const size = getColumnWidthWithCache(i)\n        items.push({\n          index: i,\n          start,\n          size,\n          end: start + size,\n        })\n      }\n      return items\n    }\n\n    const items: VirtualColumn[] = []\n    const { start, end } = visibleRange.value\n\n    if (start < 0 || end < start) {\n      return items\n    }\n\n    for (let i = start; i <= end; i++) {\n      const startOffset = getColumnStartPosition(i)\n      const size = getColumnWidthWithCache(i)\n      items.push({\n        index: i,\n        start: startOffset,\n        size,\n        end: startOffset + size,\n      })\n    }\n\n    return items\n  })\n\n  // 6. EXPOSED COMPUTED VALUES\n  const startIndex = computed(() => virtualColumns.value[0]?.index ?? 0)\n  const endIndex = computed(() => virtualColumns.value[virtualColumns.value.length - 1]?.index ?? 0)\n\n  // 7. SCROLL HANDLING WITH RAF THROTTLING\n  let scrollRAF: number | null = null\n  const handleScroll = (event: Event) => {\n    const target = event.target as HTMLElement\n\n    // Use RAF to throttle scroll updates for better performance\n    if (scrollRAF) {\n      cancelAnimationFrame(scrollRAF)\n    }\n\n    scrollRAF = requestAnimationFrame(() => {\n      const newScrollLeft = target.scrollLeft\n\n      // Calculate scroll speed for dynamic overscan\n      scrollSpeed.value = newScrollLeft - previousScrollLeft.value\n      previousScrollLeft.value = newScrollLeft\n\n      scrollLeft.value = newScrollLeft\n      scrollRAF = null\n    })\n  }\n\n  // 8. SCROLL METHODS\n  const scrollToColumn = (index: number, align: 'start' | 'center' | 'end' = 'start') => {\n    if (!scrollElement.value || !enabled.value || columns.value.length === 0) return\n\n    const columnCount = columns.value.length\n    const clampedIndex = Math.min(Math.max(index, 0), columnCount - 1)\n    let targetScrollLeft = getColumnStartPosition(clampedIndex)\n    const columnWidth = getColumnWidthWithCache(clampedIndex)\n    const containerWidth = containerSize.value.width\n\n    switch (align) {\n      case 'center':\n        targetScrollLeft -= (containerWidth - columnWidth) / 2\n        break\n      case 'end':\n        targetScrollLeft -= containerWidth - columnWidth\n        break\n      case 'start':\n      default:\n        break\n    }\n\n    const maxScrollLeft = Math.max(0, totalWidth.value - containerWidth)\n    targetScrollLeft = Math.max(0, Math.min(targetScrollLeft, maxScrollLeft))\n\n    scrollElement.value.scrollLeft = targetScrollLeft\n  }\n\n  const setContainerSize = (size: { width: number; height: number }) => {\n    containerSize.value = size\n  }\n\n  // 9. ELEMENT WATCHER\n  // Set up scroll listener when element is available\n  watch(\n    scrollElement,\n    (newElement, oldElement) => {\n      if (oldElement) {\n        oldElement.removeEventListener('scroll', handleScroll)\n      }\n\n      if (newElement) {\n        newElement.addEventListener('scroll', handleScroll, { passive: true })\n      }\n    },\n    { immediate: true }\n  )\n\n  // 10. CLEANUP\n  onUnmounted(() => {\n    if (scrollElement.value) {\n      scrollElement.value.removeEventListener('scroll', handleScroll)\n    }\n    if (scrollRAF) {\n      cancelAnimationFrame(scrollRAF)\n    }\n    if (logTimeout) {\n      clearTimeout(logTimeout)\n    }\n    resetWidthCaches()\n  })\n\n  // 11. PERFORMANCE MONITORING\n  let logTimeout: number | null = null\n  if (import.meta.env.DEV) {\n    // Monitor virtual column count for debugging - throttled to reduce noise\n    watch(\n      virtualColumns,\n      items => {\n        if (logTimeout) {\n          clearTimeout(logTimeout)\n        }\n        logTimeout = window.setTimeout(() => {\n          import('./logger').then(({ createLogger }) => {\n            const logger = createLogger('HorizontalVirtualization')\n            logger.debug(`Virtual columns: ${items.length} / ${columns.value.length} total`)\n          })\n        }, 100) // Throttle to max 10 logs per second\n      },\n      { flush: 'post' }\n    )\n  }\n\n  // 12. PUBLIC API\n  const updateScrollPosition = (newScrollLeft: number) => {\n    scrollLeft.value = newScrollLeft\n  }\n\n  return {\n    scrollElement,\n    totalWidth,\n    virtualColumns,\n    startIndex,\n    endIndex,\n    scrollToColumn,\n    setContainerSize,\n    updateScrollPosition,\n  }\n}\n\n// 14. UTILITY FUNCTIONS FOR HORIZONTAL VIRTUALIZATION\nexport function estimateColumnWidth(columns: unknown[], sampleSize = 10): number {\n  if (columns.length === 0) return 150\n\n  const sample = columns.slice(0, Math.min(sampleSize, columns.length))\n\n  // Simple estimation based on title length and content\n  const averageTitleLength =\n    sample.reduce((sum: number, column: unknown) => {\n      const col = column as { title?: string; field?: string }\n      const titleLength = (col.title || col.field || '').length\n      return sum + titleLength\n    }, 0) / sample.length\n\n  // Rough formula: 60px base + 8px per character\n  return Math.max(80, Math.min(300, 60 + averageTitleLength * 8))\n}\n\nexport function createHorizontalVirtualScrollElement(totalWidth: number) {\n  return {\n    width: `${totalWidth}px`,\n    position: 'relative' as const,\n    overflow: 'hidden',\n  }\n}\n\n// 15. TYPE EXPORTS\n// export type { VirtualItem, VirtualizerOptions, VirtualizerReturn, VirtualColumn, HorizontalVirtualizerOptions, HorizontalVirtualizerReturn }\n","/**\n * Advanced Virtual Scrolling Implementation\n *\n * Optimizations:\n * - Adaptive overscan based on scroll velocity\n * - Item size estimation with dynamic adjustment\n * - Throttled scroll handling with RAF\n * - Memory-efficient item pooling\n * - Smooth scrolling with momentum prediction\n */\n\nimport { ref, computed, watch, onUnmounted, type Ref, type ComputedRef } from 'vue'\n\nexport interface AdvancedVirtualItem {\n  index: number\n  start: number\n  size: number\n  end: number\n  key: string | number // Stable key for recycling\n}\n\nexport interface VirtualizerMetrics {\n  scrollVelocity: number\n  renderTime: number\n  visibleItems: number\n  totalHeight: number\n  lastUpdateTime: number\n}\n\nexport interface AdvancedVirtualizerOptions {\n  count: ComputedRef<number>\n  getItemSize: (index: number) => number\n  estimateItemSize?: () => number\n  overscanCount?: number\n  enableDynamicOverscan?: boolean\n  scrollingDelay?: number\n  itemKey?: (index: number) => string | number\n  enabled?: Ref<boolean>\n}\n\nexport interface AdvancedVirtualizerReturn {\n  scrollElement: Ref<HTMLElement | null>\n  totalSize: ComputedRef<number>\n  virtualItems: ComputedRef<AdvancedVirtualItem[]>\n  startIndex: ComputedRef<number>\n  endIndex: ComputedRef<number>\n  isScrolling: ComputedRef<boolean>\n  metrics: ComputedRef<VirtualizerMetrics>\n  scrollToIndex: (index: number, align?: 'start' | 'center' | 'end') => void\n  scrollToOffset: (offset: number) => void\n  setContainerSize: (size: { height: number; width: number }) => void\n}\n\nexport function useAdvancedVirtualizer(\n  options: AdvancedVirtualizerOptions\n): AdvancedVirtualizerReturn {\n  const {\n    count,\n    getItemSize,\n    overscanCount = 5,\n    enableDynamicOverscan = true,\n    scrollingDelay = 150,\n    itemKey = index => index,\n    enabled = ref(true),\n  } = options\n\n  // State\n  const scrollElement = ref<HTMLElement | null>(null)\n  const containerSize = ref({ height: 0, width: 0 })\n  const scrollTop = ref(0)\n  const scrollLeft = ref(0)\n  const isScrolling = ref(false)\n  const scrollVelocity = ref(0)\n\n  // Performance tracking\n  const metrics = ref<VirtualizerMetrics>({\n    scrollVelocity: 0,\n    renderTime: 0,\n    visibleItems: 0,\n    totalHeight: 0,\n    lastUpdateTime: 0,\n  })\n\n  // Scroll handling with velocity tracking\n  let lastScrollTime = 0\n  let lastScrollTop = 0\n  let scrollingTimeout: number | null = null\n  const rafId: number | null = null\n\n  const handleScroll = (event: Event) => {\n    const target = event.target as HTMLElement\n    const now = performance.now()\n\n    // Update scroll position\n    const currentScrollTop = target.scrollTop\n    scrollTop.value = currentScrollTop\n    scrollLeft.value = target.scrollLeft\n\n    // Calculate velocity for dynamic overscan\n    const deltaTime = now - lastScrollTime\n    const deltaScroll = Math.abs(currentScrollTop - lastScrollTop)\n\n    if (deltaTime > 0) {\n      scrollVelocity.value = deltaScroll / deltaTime\n      metrics.value.scrollVelocity = scrollVelocity.value\n    }\n\n    lastScrollTime = now\n    lastScrollTop = currentScrollTop\n\n    // Set scrolling state\n    isScrolling.value = true\n\n    // Clear previous timeout\n    if (scrollingTimeout) {\n      clearTimeout(scrollingTimeout)\n    }\n\n    // Reset scrolling state after delay\n    scrollingTimeout = window.setTimeout(() => {\n      isScrolling.value = false\n      scrollVelocity.value = 0\n    }, scrollingDelay)\n  }\n\n  // Optimized item size cache with LRU eviction\n  class ItemSizeCache {\n    private cache = new Map<number, number>()\n    private accessOrder: number[] = []\n    private readonly maxSize = 1000\n\n    get(index: number): number | undefined {\n      if (this.cache.has(index)) {\n        // Move to end (most recently used)\n        const pos = this.accessOrder.indexOf(index)\n        if (pos > -1) {\n          this.accessOrder.splice(pos, 1)\n        }\n        this.accessOrder.push(index)\n        return this.cache.get(index)\n      }\n      return undefined\n    }\n\n    set(index: number, size: number): void {\n      if (this.cache.has(index)) {\n        this.cache.set(index, size)\n        return\n      }\n\n      // Remove least recently used if at capacity\n      if (this.cache.size >= this.maxSize) {\n        const lru = this.accessOrder.shift()\n        if (lru !== undefined) {\n          this.cache.delete(lru)\n        }\n      }\n\n      this.cache.set(index, size)\n      this.accessOrder.push(index)\n    }\n\n    clear(): void {\n      this.cache.clear()\n      this.accessOrder = []\n    }\n  }\n\n  const itemSizeCache = new ItemSizeCache()\n\n  // Enhanced item size calculation with estimation\n  const getItemSizeWithCache = (index: number): number => {\n    let size = itemSizeCache.get(index)\n\n    if (size === undefined) {\n      size = getItemSize(index)\n      itemSizeCache.set(index, size)\n    }\n\n    return size\n  }\n\n  // Dynamic overscan calculation based on scroll velocity\n  const getDynamicOverscan = (): number => {\n    if (!enableDynamicOverscan) return overscanCount\n\n    // Increase overscan during fast scrolling\n    const velocityMultiplier = Math.min(scrollVelocity.value / 10, 3)\n    return Math.ceil(overscanCount * (1 + velocityMultiplier))\n  }\n\n  // Total size calculation with optimization\n  const totalSize = computed(() => {\n    if (!enabled.value || count.value === 0) return 0\n\n    const startTime = performance.now()\n    let size = 0\n\n    for (let i = 0; i < count.value; i++) {\n      size += getItemSizeWithCache(i)\n    }\n\n    metrics.value.renderTime = performance.now() - startTime\n    metrics.value.totalHeight = size\n\n    return size\n  })\n\n  // Optimized visible range calculation\n  const visibleRange = computed(() => {\n    if (!enabled.value || count.value === 0 || containerSize.value.height === 0) {\n      return { start: 0, end: count.value - 1 }\n    }\n\n    const containerHeight = containerSize.value.height\n    const currentScrollTop = scrollTop.value\n\n    // Binary search for start index\n    let start = 0\n    let end = count.value - 1\n\n    // Find start index\n    while (start <= end) {\n      const mid = Math.floor((start + end) / 2)\n      let midHeight = 0\n\n      for (let i = 0; i <= mid; i++) {\n        midHeight += getItemSizeWithCache(i)\n      }\n\n      if (midHeight <= currentScrollTop) {\n        start = mid + 1\n      } else {\n        end = mid - 1\n      }\n    }\n\n    const startIndex = Math.max(0, start - 1)\n\n    // Find end index\n    let visibleHeight = 0\n    let endIndex = startIndex\n\n    for (let i = startIndex; i < count.value; i++) {\n      visibleHeight += getItemSizeWithCache(i)\n      if (visibleHeight >= containerHeight) {\n        endIndex = i\n        break\n      }\n      endIndex = i\n    }\n\n    // Apply dynamic overscan\n    const dynamicOverscan = getDynamicOverscan()\n    const overscanStart = Math.max(0, startIndex - dynamicOverscan)\n    const overscanEnd = Math.min(count.value - 1, endIndex + dynamicOverscan)\n\n    return { start: overscanStart, end: overscanEnd }\n  })\n\n  // Virtual items with stable keys for recycling\n  const virtualItems = computed((): AdvancedVirtualItem[] => {\n    const startTime = performance.now()\n\n    if (!enabled.value || count.value === 0) {\n      // Return all items when virtualization is disabled\n      const items: AdvancedVirtualItem[] = []\n      let start = 0\n\n      for (let i = 0; i < count.value; i++) {\n        const size = getItemSizeWithCache(i)\n        items.push({\n          index: i,\n          start,\n          size,\n          end: start + size,\n          key: itemKey(i),\n        })\n        start += size\n      }\n\n      metrics.value.visibleItems = items.length\n      return items\n    }\n\n    const items: AdvancedVirtualItem[] = []\n    const { start, end } = visibleRange.value\n    let currentStart = 0\n\n    // Calculate start position\n    for (let i = 0; i < start; i++) {\n      currentStart += getItemSizeWithCache(i)\n    }\n\n    // Generate virtual items for visible range\n    for (let i = start; i <= end; i++) {\n      const size = getItemSizeWithCache(i)\n      items.push({\n        index: i,\n        start: currentStart,\n        size,\n        end: currentStart + size,\n        key: itemKey(i),\n      })\n      currentStart += size\n    }\n\n    metrics.value.visibleItems = items.length\n    metrics.value.renderTime = performance.now() - startTime\n    metrics.value.lastUpdateTime = performance.now()\n\n    return items\n  })\n\n  // Exposed computed values\n  const startIndex = computed(() => virtualItems.value[0]?.index ?? 0)\n  const endIndex = computed(() => virtualItems.value[virtualItems.value.length - 1]?.index ?? 0)\n\n  // Smooth scrolling methods\n  const scrollToIndex = (index: number, align: 'start' | 'center' | 'end' = 'start') => {\n    if (!scrollElement.value || !enabled.value) return\n\n    let targetScrollTop = 0\n\n    // Calculate position of target index\n    for (let i = 0; i < index; i++) {\n      targetScrollTop += getItemSizeWithCache(i)\n    }\n\n    // Adjust based on alignment\n    const itemSize = getItemSizeWithCache(index)\n    const containerHeight = containerSize.value.height\n\n    switch (align) {\n      case 'center':\n        targetScrollTop -= (containerHeight - itemSize) / 2\n        break\n      case 'end':\n        targetScrollTop -= containerHeight - itemSize\n        break\n      case 'start':\n      default:\n        break\n    }\n\n    // Clamp to valid range\n    targetScrollTop = Math.max(0, Math.min(targetScrollTop, totalSize.value - containerHeight))\n\n    // Smooth scroll\n    scrollElement.value.scrollTo({\n      top: targetScrollTop,\n      behavior: 'smooth',\n    })\n  }\n\n  const scrollToOffset = (offset: number) => {\n    if (!scrollElement.value) return\n\n    scrollElement.value.scrollTo({\n      top: offset,\n      behavior: 'smooth',\n    })\n  }\n\n  const setContainerSize = (size: { height: number; width: number }) => {\n    containerSize.value = size\n  }\n\n  // Optimized scroll listener setup\n  watch(\n    scrollElement,\n    (newElement, oldElement) => {\n      if (oldElement) {\n        oldElement.removeEventListener('scroll', handleScroll)\n      }\n\n      if (newElement) {\n        newElement.addEventListener('scroll', handleScroll, { passive: true })\n      }\n    },\n    { immediate: true }\n  )\n\n  // Clear cache when count changes\n  watch(count, () => {\n    itemSizeCache.clear()\n  })\n\n  // Cleanup\n  onUnmounted(() => {\n    if (scrollElement.value) {\n      scrollElement.value.removeEventListener('scroll', handleScroll)\n    }\n    if (scrollingTimeout) {\n      clearTimeout(scrollingTimeout)\n    }\n    if (rafId) {\n      cancelAnimationFrame(rafId)\n    }\n    itemSizeCache.clear()\n  })\n\n  return {\n    scrollElement,\n    totalSize,\n    virtualItems,\n    startIndex,\n    endIndex,\n    isScrolling: computed(() => isScrolling.value),\n    metrics: computed(() => metrics.value),\n    scrollToIndex,\n    scrollToOffset,\n    setContainerSize,\n  }\n}\n\n// Performance monitoring utilities\nexport function createPerformanceMonitor() {\n  const frameTime = ref(0)\n  const fps = ref(60)\n  let lastTime = 0\n  let frameCount = 0\n  let fpsInterval: number | null = null\n\n  const updateFPS = () => {\n    const now = performance.now()\n    frameCount++\n\n    if (now - lastTime >= 1000) {\n      fps.value = Math.round((frameCount * 1000) / (now - lastTime))\n      frameCount = 0\n      lastTime = now\n    }\n\n    requestAnimationFrame(updateFPS)\n  }\n\n  const startMonitoring = () => {\n    if (!fpsInterval) {\n      lastTime = performance.now()\n      requestAnimationFrame(updateFPS)\n    }\n  }\n\n  const stopMonitoring = () => {\n    if (fpsInterval) {\n      cancelAnimationFrame(fpsInterval)\n      fpsInterval = null\n    }\n  }\n\n  return {\n    fps: computed(() => fps.value),\n    frameTime: computed(() => frameTime.value),\n    startMonitoring,\n    stopMonitoring,\n  }\n}\n","/**\n * Three-Pane Virtualization Composable\n *\n * Specialized virtualization system for Happy Table's three-pane layout.\n * Only virtualizes the CENTER pane (scrollable columns) while keeping\n * LEFT and RIGHT panes (frozen columns) fully rendered for performance.\n *\n * Features:\n * - Horizontal virtualization for center pane only\n * - Perfect scroll synchronization between header and body\n * - Integration with existing TableRenderer architecture\n * - Memory-efficient column and cell tracking\n */\n\nimport { computed, onUnmounted, ref, watch, type ComputedRef, type Ref } from 'vue'\nimport type { ColumnDef, RowData } from '../types'\nimport type { PaneConfig } from '../types/layout'\nimport { useVirtualizer, type VirtualItem } from './virtualization'\nimport { DEFAULT_COLUMN_WIDTH } from './column-constants'\n\n// ===================================================================\n// TYPE DEFINITIONS\n// ===================================================================\n\nexport type VirtualColumn = import('../types').VirtualColumn & {\n  column: ColumnDef\n}\n\nexport interface ThreePaneVirtualCell {\n  rowIndex: number\n  columnIndex: number\n  column: ColumnDef\n  value: unknown\n  rowData: RowData\n}\n\nexport type VirtualCell = ThreePaneVirtualCell\n\nexport interface ThreePaneVirtualizerOptions {\n  /** Existing three-pane configuration from TableRenderer */\n  paneConfig: ComputedRef<PaneConfig>\n\n  /** Row configuration (reuse existing) */\n  rowCount: ComputedRef<number>\n  getRowSize: (index: number) => number\n\n  /** Container and performance */\n  containerSize: Ref<{ width: number; height: number }>\n  overscan?: {\n    rows?: number\n    columns?: number\n  }\n\n  /** Row data for cell virtualization */\n  rowData: ComputedRef<RowData[]>\n}\n\nexport interface PaneVirtualData {\n  columns: ColumnDef[]\n  rows: VirtualItem[]\n  width: number\n}\n\nexport interface CenterPaneVirtualData {\n  virtualColumns: VirtualColumn[]\n  virtualRows: VirtualItem[]\n  virtualCells: VirtualCell[][]\n  width: number\n  totalWidth: number\n}\n\nexport interface ThreePaneVirtualizerReturn {\n  /** Per-pane virtual data */\n  leftPane: ComputedRef<PaneVirtualData>\n  centerPane: ComputedRef<CenterPaneVirtualData>\n  rightPane: ComputedRef<PaneVirtualData>\n\n  /** Navigation and scroll control */\n  scrollToCell: (row: number, column: number) => void\n  scrollToColumn: (column: number, align?: 'start' | 'center' | 'end') => void\n  updateScrollPosition: (scroll: { top: number; left: number }) => void\n\n  /** Integration with TableRenderer */\n  headerScrollSync: ComputedRef<number>\n  totalDimensions: ComputedRef<{ width: number; height: number }>\n\n  /** Internal scroll state for coordination */\n  scrollLeft: Ref<number>\n  scrollTop: Ref<number>\n}\n\n// ===================================================================\n// THREE-PANE VIRTUALIZER COMPOSABLE\n// ===================================================================\n\nexport function useThreePaneVirtualizer(\n  options: ThreePaneVirtualizerOptions\n): ThreePaneVirtualizerReturn {\n  const {\n    paneConfig,\n    rowCount,\n    getRowSize,\n    containerSize,\n    rowData,\n    overscan = { rows: 5, columns: 3 }\n  } = options\n\n  // ===================================================================\n  // REACTIVE STATE\n  // ===================================================================\n\n  const scrollLeft = ref(0)\n  const scrollTop = ref(0)\n\n  // ===================================================================\n  // ROW VIRTUALIZATION (Reuse existing system)\n  // ===================================================================\n\n  // Use existing vertical virtualizer for rows with enhanced overscan for fast scrolling\n  const rowVirtualizer = useVirtualizer({\n    count: rowCount,\n    getItemSize: getRowSize,\n    overscan: overscan.rows || 8, // Increased default overscan for better fast-scroll performance\n    enabled: computed(() => rowCount.value > 50) // Auto-enable for large datasets\n  })\n\n  // ===================================================================\n  // COLUMN VIRTUALIZATION (Center pane only)\n  // ===================================================================\n\n  // Column size cache for performance\n  const columnSizeCache = new Map<string, number>()\n\n  const getColumnSize = (column: ColumnDef): number => {\n    const cacheKey = column.id\n    if (columnSizeCache.has(cacheKey)) {\n      return columnSizeCache.get(cacheKey)!\n    }\n\n    const size = column.width ?? DEFAULT_COLUMN_WIDTH\n    columnSizeCache.set(cacheKey, size)\n    return size\n  }\n\n  // Clear cache when columns change\n  watch(\n    () => paneConfig.value.center.columns,\n    () => {\n      columnSizeCache.clear()\n    },\n    { deep: true }\n  )\n\n  // Calculate total width of center pane\n  const centerPaneTotalWidth = computed(() => {\n    return paneConfig.value.center.columns.reduce(\n      (sum, col) => sum + getColumnSize(col),\n      0\n    )\n  })\n\n  // Calculate visible column range for center pane\n  const centerColumnRange = computed(() => {\n    const columns = paneConfig.value.center.columns\n    const containerWidth = containerSize.value.width\n    const leftPaneWidth = paneConfig.value.left.width\n    const rightPaneWidth = paneConfig.value.right.width\n    const availableWidth = containerWidth - leftPaneWidth - rightPaneWidth\n\n    if (columns.length === 0 || availableWidth <= 0) {\n      return { start: 0, end: -1 }\n    }\n\n    let start = 0\n    let accumulatedWidth = 0\n\n    // Find start index\n    for (let i = 0; i < columns.length; i++) {\n      const column = columns[i]\n      if (!column) continue\n\n      const columnSize = getColumnSize(column)\n\n      if (accumulatedWidth + columnSize > scrollLeft.value) {\n        start = i\n        break\n      }\n\n      accumulatedWidth += columnSize\n    }\n\n    // Find end index\n    let end = start\n    let visibleWidth = 0\n\n    for (let i = start; i < columns.length; i++) {\n      const column = columns[i]\n      if (!column) continue\n\n      const columnSize = getColumnSize(column)\n      visibleWidth += columnSize\n      end = i\n\n      if (visibleWidth >= availableWidth) {\n        break\n      }\n    }\n\n    // Apply overscan\n    const overscanStart = Math.max(0, start - (overscan.columns || 3))\n    const overscanEnd = Math.min(columns.length - 1, end + (overscan.columns || 3))\n\n    return {\n      start: overscanStart,\n      end: overscanEnd,\n    }\n  })\n\n  // Generate virtual columns for center pane\n  const centerVirtualColumns = computed((): VirtualColumn[] => {\n    const columns = paneConfig.value.center.columns\n    const { start, end } = centerColumnRange.value\n\n    if (start > end) return []\n\n    const virtualColumns: VirtualColumn[] = []\n    let currentStart = 0\n\n    // Calculate start position\n    for (let i = 0; i < start; i++) {\n      const column = columns[i]\n      if (column) {\n        currentStart += getColumnSize(column)\n      }\n    }\n\n    // Generate virtual columns for visible range\n    for (let i = start; i <= end; i++) {\n      const column = columns[i]\n      if (!column) continue\n\n      const size = getColumnSize(column)\n\n      virtualColumns.push({\n        index: i,\n        start: currentStart,\n        size,\n        end: currentStart + size,\n        column,\n      })\n\n      currentStart += size\n    }\n\n    return virtualColumns\n  })\n\n  // ===================================================================\n  // PANE DATA COMPUTATION\n  // ===================================================================\n\n  // Left pane (no virtualization - always fully rendered)\n  const leftPane = computed((): PaneVirtualData => ({\n    columns: paneConfig.value.left.columns,\n    rows: rowVirtualizer.virtualItems.value,\n    width: paneConfig.value.left.width,\n  }))\n\n  // Right pane (no virtualization - always fully rendered)\n  const rightPane = computed((): PaneVirtualData => ({\n    columns: paneConfig.value.right.columns,\n    rows: rowVirtualizer.virtualItems.value,\n    width: paneConfig.value.right.width,\n  }))\n\n  // Center pane (with column virtualization)\n  const centerPane = computed((): CenterPaneVirtualData => {\n    const virtualColumns = centerVirtualColumns.value\n    const virtualRows = rowVirtualizer.virtualItems.value\n    const data = rowData.value\n\n    // Generate virtual cells for the intersection of visible rows and columns\n    const virtualCells: VirtualCell[][] = []\n\n    for (const rowItem of virtualRows) {\n      const rowIndex = rowItem.index\n      const row = data[rowIndex]\n      const rowCells: VirtualCell[] = []\n\n      for (const colItem of virtualColumns) {\n        const columnIndex = colItem.index\n        const column = colItem.column\n\n        rowCells.push({\n          rowIndex,\n          columnIndex,\n          column,\n          value: row?.[column.field],\n          rowData: row || {},\n        })\n      }\n\n      virtualCells.push(rowCells)\n    }\n\n    return {\n      virtualColumns,\n      virtualRows,\n      virtualCells,\n      width: paneConfig.value.center.width,\n      totalWidth: centerPaneTotalWidth.value,\n    }\n  })\n\n  // ===================================================================\n  // SCROLL COORDINATION\n  // ===================================================================\n\n  // Header scroll sync (for horizontal scrolling)\n  const headerScrollSync = computed(() => scrollLeft.value)\n\n  // Total dimensions for scrollbar calculations\n  const totalDimensions = computed(() => ({\n    width: centerPaneTotalWidth.value,\n    height: rowVirtualizer.totalSize.value,\n  }))\n\n  // ===================================================================\n  // NAVIGATION METHODS\n  // ===================================================================\n\n  const scrollToCell = (row: number, column: number) => {\n    // Scroll to row using existing row virtualizer\n    rowVirtualizer.scrollToIndex(row, 'start')\n\n    // Scroll to column in center pane\n    const centerColumns = paneConfig.value.center.columns\n    if (column >= 0 && column < centerColumns.length) {\n      scrollToColumn(column, 'start')\n    }\n  }\n\n  const scrollToColumn = (column: number, align: 'start' | 'center' | 'end' = 'start') => {\n    const columns = paneConfig.value.center.columns\n    if (column < 0 || column >= columns.length) return\n\n    const containerWidth = containerSize.value.width\n    const leftPaneWidth = paneConfig.value.left.width\n    const rightPaneWidth = paneConfig.value.right.width\n    const availableWidth = containerWidth - leftPaneWidth - rightPaneWidth\n\n    let targetScrollLeft = 0\n\n    // Calculate position of target column\n    for (let i = 0; i < column; i++) {\n      const col = columns[i]\n      if (col) {\n        targetScrollLeft += getColumnSize(col)\n      }\n    }\n\n    // Adjust based on alignment\n    const targetColumn = columns[column]\n    if (!targetColumn) return\n\n    const columnSize = getColumnSize(targetColumn)\n\n    switch (align) {\n      case 'center':\n        targetScrollLeft -= (availableWidth - columnSize) / 2\n        break\n      case 'end':\n        targetScrollLeft -= availableWidth - columnSize\n        break\n      case 'start':\n      default:\n        // No adjustment needed\n        break\n    }\n\n    // Clamp to valid range\n    const maxScrollLeft = Math.max(0, centerPaneTotalWidth.value - availableWidth)\n    targetScrollLeft = Math.max(0, Math.min(targetScrollLeft, maxScrollLeft))\n\n    scrollLeft.value = targetScrollLeft\n  }\n\n  const updateScrollPosition = (scroll: { top: number; left: number }) => {\n    scrollTop.value = scroll.top\n    scrollLeft.value = scroll.left\n\n    // Update row virtualizer\n    rowVirtualizer.updateScrollPosition(scroll.top)\n  }\n\n  // ===================================================================\n  // CONTAINER SIZE COORDINATION\n  // ===================================================================\n\n  // Keep row virtualizer in sync with container size\n  watch(\n    containerSize,\n    (size) => {\n      rowVirtualizer.setContainerSize(size)\n    },\n    { immediate: true }\n  )\n\n  // ===================================================================\n  // CLEANUP\n  // ===================================================================\n\n  onUnmounted(() => {\n    columnSizeCache.clear()\n  })\n\n  // ===================================================================\n  // PUBLIC API\n  // ===================================================================\n\n  return {\n    leftPane,\n    centerPane,\n    rightPane,\n    scrollToCell,\n    scrollToColumn,\n    updateScrollPosition,\n    headerScrollSync,\n    totalDimensions,\n    scrollLeft,\n    scrollTop,\n  }\n}\n\n// ===================================================================\n// UTILITY FUNCTIONS\n// ===================================================================\n\n/**\n * Calculate the optimal column overscan based on container size and column sizes\n */\nexport function calculateOptimalColumnOverscan(\n  containerWidth: number,\n  averageColumnWidth = 150\n): number {\n  const visibleColumns = Math.ceil(containerWidth / averageColumnWidth)\n\n  // Use 50% of visible columns as overscan, with min 2 and max 5\n  return Math.min(5, Math.max(2, Math.ceil(visibleColumns * 0.5)))\n}\n\n/**\n * Estimate the total width of a column array\n */\nexport function estimateColumnsWidth(columns: ColumnDef[]): number {\n  return columns.reduce((sum, col) => sum + (col.width ?? DEFAULT_COLUMN_WIDTH), 0)\n}\n\n/**\n * Find the column index by horizontal position\n */\nexport function findColumnAtPosition(\n  columns: ColumnDef[],\n  position: number\n): { index: number; offset: number } {\n  let accumulatedWidth = 0\n\n  for (let i = 0; i < columns.length; i++) {\n    const column = columns[i]\n    if (!column) continue\n\n    const columnWidth = column.width ?? DEFAULT_COLUMN_WIDTH\n\n    if (accumulatedWidth + columnWidth > position) {\n      return {\n        index: i,\n        offset: position - accumulatedWidth,\n      }\n    }\n\n    accumulatedWidth += columnWidth\n  }\n\n  // Return last column if position exceeds total width\n  const lastColumn = columns[columns.length - 1]\n  return {\n    index: columns.length - 1,\n    offset: (lastColumn?.width || 150) - 1,\n  }\n}\n","/**\n * Memory Management and Leak Prevention\n *\n * Features:\n * - Automatic cleanup on component unmount\n * - WeakMap-based caching to prevent memory leaks\n * - Resource pooling and recycling\n * - Memory usage monitoring\n * - Automatic garbage collection triggers\n */\n\nimport { onUnmounted, ref, watch } from 'vue'\nimport { createLogger } from './logger'\n\nconst logger = createLogger('MemoryManagement')\n\n// WeakMap-based cache that doesn't prevent garbage collection\nexport class WeakCache<K extends object, V> {\n  private cache = new WeakMap<K, V>()\n\n  get(key: K): V | undefined {\n    return this.cache.get(key)\n  }\n\n  set(key: K, value: V): void {\n    this.cache.set(key, value)\n  }\n\n  has(key: K): boolean {\n    return this.cache.has(key)\n  }\n\n  delete(key: K): void {\n    this.cache.delete(key)\n  }\n}\n\n// Resource cleanup manager\nexport class ResourceManager {\n  private resources = new Set<() => void>()\n  private timers = new Set<number>()\n  private intervals = new Set<number>()\n  private listeners = new Map<\n    EventTarget,\n    Array<{ event: string; handler: EventListener; options?: AddEventListenerOptions }>\n  >()\n\n  // Register cleanup function\n  register(cleanup: () => void): void {\n    this.resources.add(cleanup)\n  }\n\n  // Register timer for automatic cleanup\n  setTimeout(callback: () => void, delay: number): number {\n    const id = window.setTimeout(callback, delay)\n    this.timers.add(id)\n    return id\n  }\n\n  // Register interval for automatic cleanup\n  setInterval(callback: () => void, interval: number): number {\n    const id = window.setInterval(callback, interval)\n    this.intervals.add(id)\n    return id\n  }\n\n  // Register event listener for automatic cleanup\n  addEventListener(\n    target: EventTarget,\n    event: string,\n    handler: EventListener,\n    options?: AddEventListenerOptions\n  ): void {\n    target.addEventListener(event, handler, options)\n\n    if (!this.listeners.has(target)) {\n      this.listeners.set(target, [])\n    }\n\n    this.listeners.get(target)!.push({ event, handler, options })\n  }\n\n  // Clear specific timer\n  clearTimeout(id: number): void {\n    clearTimeout(id)\n    this.timers.delete(id)\n  }\n\n  // Clear specific interval\n  clearInterval(id: number): void {\n    clearInterval(id)\n    this.intervals.delete(id)\n  }\n\n  // Cleanup all resources\n  cleanup(): void {\n    // Execute cleanup functions\n    this.resources.forEach(cleanup => {\n      try {\n        cleanup()\n      } catch (error) {\n        logger.warn('Error during cleanup:', { module: 'MemoryManagement' }, error)\n      }\n    })\n\n    // Clear timers\n    this.timers.forEach(id => clearTimeout(id))\n\n    // Clear intervals\n    this.intervals.forEach(id => clearInterval(id))\n\n    // Remove event listeners\n    this.listeners.forEach((listeners, target) => {\n      listeners.forEach(({ event, handler, options }) => {\n        target.removeEventListener(event, handler, options)\n      })\n    })\n\n    // Clear collections\n    this.resources.clear()\n    this.timers.clear()\n    this.intervals.clear()\n    this.listeners.clear()\n  }\n}\n\n// Memory usage monitor\nexport class MemoryMonitor {\n  private measurements: Array<{ timestamp: number; used: number; total: number }> = []\n  private interval: number\n  private onThreshold?: (usage: number) => void\n  private threshold: number\n\n  constructor(intervalMs: number = 5000, thresholdMB: number = 200) {\n    this.threshold = thresholdMB * 1024 * 1024 // Convert to bytes\n    this.interval = setInterval(() => {\n      this.measure()\n    }, intervalMs)\n  }\n\n  private measure(): void {\n    if ('memory' in performance) {\n      const memory = (performance as any).memory\n      const measurement = {\n        timestamp: Date.now(),\n        used: memory.usedJSHeapSize,\n        total: memory.totalJSHeapSize,\n      }\n\n      this.measurements.push(measurement)\n\n      // Keep only last 50 measurements\n      if (this.measurements.length > 50) {\n        this.measurements.shift()\n      }\n\n      // Check threshold\n      if (this.onThreshold && measurement.used > this.threshold) {\n        this.onThreshold(measurement.used / (1024 * 1024))\n      }\n    }\n  }\n\n  onMemoryThreshold(callback: (usageMB: number) => void): void {\n    this.onThreshold = callback\n  }\n\n  getCurrentUsage(): { used: number; total: number } | null {\n    if ('memory' in performance) {\n      const memory = (performance as any).memory\n      return {\n        used: memory.usedJSHeapSize / (1024 * 1024), // MB\n        total: memory.totalJSHeapSize / (1024 * 1024), // MB\n      }\n    }\n    return null\n  }\n\n  getHistory(): Array<{ timestamp: number; used: number; total: number }> {\n    return [...this.measurements]\n  }\n\n  destroy(): void {\n    clearInterval(this.interval)\n    this.measurements = []\n    this.onThreshold = undefined\n  }\n}\n\n// Object pool for memory efficiency\nexport class ObjectPool<T> {\n  private pool: T[] = []\n  private createFn: () => T\n  private resetFn: (obj: T) => void\n  private maxSize: number\n\n  constructor(createFn: () => T, resetFn: (obj: T) => void = () => {}, maxSize: number = 100) {\n    this.createFn = createFn\n    this.resetFn = resetFn\n    this.maxSize = maxSize\n  }\n\n  acquire(): T {\n    let obj = this.pool.pop()\n\n    if (!obj) {\n      obj = this.createFn()\n    }\n\n    return obj\n  }\n\n  release(obj: T): void {\n    if (this.pool.length < this.maxSize) {\n      this.resetFn(obj)\n      this.pool.push(obj)\n    }\n  }\n\n  clear(): void {\n    this.pool = []\n  }\n\n  get size(): number {\n    return this.pool.length\n  }\n}\n\n// Automatic garbage collection helper\nexport class GCScheduler {\n  private interval: number\n  private threshold: number\n  private lastGC: number = Date.now()\n\n  constructor(intervalMs: number = 30000, memoryThresholdMB: number = 150) {\n    this.threshold = memoryThresholdMB * 1024 * 1024\n    this.interval = setInterval(() => {\n      this.checkAndGC()\n    }, intervalMs)\n  }\n\n  private checkAndGC(): void {\n    if ('memory' in performance && 'gc' in window) {\n      const memory = (performance as any).memory\n      const now = Date.now()\n\n      // Force GC if memory usage is high or it's been a while\n      if (memory.usedJSHeapSize > this.threshold || now - this.lastGC > 60000) {\n        try {\n          ;(window as any).gc()\n          this.lastGC = now\n        } catch (_error) {\n          // GC not available in this environment\n        }\n      }\n    }\n  }\n\n  forceGC(): void {\n    if ('gc' in window) {\n      try {\n        ;(window as any).gc()\n        this.lastGC = Date.now()\n      } catch (error) {\n        logger.warn('Manual GC failed:', { module: 'MemoryManagement' }, error)\n      }\n    }\n  }\n\n  destroy(): void {\n    clearInterval(this.interval)\n  }\n}\n\n// Data structure for memory-efficient row storage\nexport class RowDataManager {\n  private rowCache = new WeakCache<object, Map<string, any>>()\n  private columnCache = new Map<string, any>()\n  private pool = new ObjectPool<Map<string, any>>(\n    () => new Map(),\n    map => map.clear()\n  )\n\n  // Get row data with caching\n  getRowData(row: Record<string, unknown>, columnId: string): unknown {\n    let rowMap = this.rowCache.get(row)\n\n    if (!rowMap) {\n      rowMap = this.pool.acquire()\n      this.rowCache.set(row, rowMap)\n    }\n\n    if (!rowMap.has(columnId)) {\n      // Compute and cache the value\n      const value = (row as any)[columnId]\n      rowMap.set(columnId, value)\n    }\n\n    return rowMap.get(columnId)\n  }\n\n  // Release row data when no longer needed\n  releaseRowData(row: object): void {\n    const rowMap = this.rowCache.get(row)\n    if (rowMap) {\n      this.pool.release(rowMap)\n    }\n  }\n\n  // Clear all caches\n  clear(): void {\n    this.columnCache.clear()\n    this.pool.clear()\n  }\n\n  getStats(): { poolSize: number; cacheSize: number } {\n    return {\n      poolSize: this.pool.size,\n      cacheSize: this.columnCache.size,\n    }\n  }\n}\n\n// Vue composable for memory management\nexport function useMemoryManagement() {\n\n  const resourceManager = new ResourceManager()\n  const memoryMonitor = new MemoryMonitor()\n  const memoryUsage = ref<{ used: number; total: number } | null>(null)\n  const memoryWarning = ref(false)\n\n  // Monitor memory usage\n  memoryMonitor.onMemoryThreshold(usage => {\n    memoryWarning.value = true\n    logger.warn(`High memory usage detected: ${usage.toFixed(2)}MB`)\n  })\n\n  // Update memory usage periodically\n  const updateMemoryUsage = () => {\n    memoryUsage.value = memoryMonitor.getCurrentUsage()\n  }\n\n  resourceManager.setInterval(updateMemoryUsage, 5000)\n\n  // Watch for memory warnings and trigger cleanup\n  const stopWatcher = watch(memoryWarning, warning => {\n    if (warning) {\n      // Force garbage collection if available\n      if ('gc' in window) {\n        try {\n          ;(window as any).gc()\n        } catch (_error) {\n          logger.warn('GC not available')\n        }\n      }\n\n      // Reset warning after 10 seconds\n      resourceManager.setTimeout(() => {\n        memoryWarning.value = false\n      }, 10000)\n    }\n  })\n\n  // Cleanup on unmount\n  onUnmounted(() => {\n    stopWatcher()\n    resourceManager.cleanup()\n    memoryMonitor.destroy()\n  })\n\n  return {\n    resourceManager,\n    memoryUsage,\n    memoryWarning,\n    getCurrentMemoryUsage: () => memoryMonitor.getCurrentUsage(),\n    getMemoryHistory: () => memoryMonitor.getHistory(),\n    forceCleanup: () => {\n      resourceManager.cleanup()\n      if ('gc' in window) {\n        try {\n          ;(window as any).gc()\n        } catch (_error) {\n          logger.warn('Manual GC failed')\n        }\n      }\n    },\n  }\n}\n\n// Debounced array operations for large datasets\nexport class LazyArray<T> {\n  private data: T[] = []\n  private pendingOperations: Array<() => void> = []\n  private rafId: number | null = null\n\n  constructor(initialData: T[] = []) {\n    this.data = [...initialData]\n  }\n\n  push(item: T): void {\n    this.scheduleOperation(() => {\n      this.data.push(item)\n    })\n  }\n\n  pop(): T | undefined {\n    let result: T | undefined\n    this.scheduleOperation(() => {\n      result = this.data.pop()\n    })\n    return result\n  }\n\n  splice(start: number, deleteCount?: number, ...items: T[]): T[] {\n    let result: T[] = []\n    this.scheduleOperation(() => {\n      result = this.data.splice(start, deleteCount || 0, ...items)\n    })\n    return result\n  }\n\n  get(index: number): T | undefined {\n    return this.data[index]\n  }\n\n  get length(): number {\n    return this.data.length\n  }\n\n  toArray(): T[] {\n    this.flush()\n    return [...this.data]\n  }\n\n  private scheduleOperation(operation: () => void): void {\n    this.pendingOperations.push(operation)\n\n    if (this.rafId) return\n\n    this.rafId = requestAnimationFrame(() => {\n      const operations = this.pendingOperations.splice(0)\n      operations.forEach(op => op())\n      this.rafId = null\n    })\n  }\n\n  flush(): void {\n    if (this.rafId) {\n      cancelAnimationFrame(this.rafId)\n      this.rafId = null\n    }\n\n    const operations = this.pendingOperations.splice(0)\n    operations.forEach(op => op())\n  }\n\n  clear(): void {\n    this.flush()\n    this.data = []\n  }\n}\n","/**\n * Performance Monitoring and Testing Framework\n *\n * Features:\n * - Real-time FPS monitoring\n * - Render time tracking\n * - Memory usage analysis\n * - Performance regression detection\n * - Automated performance testing\n * - Core Web Vitals measurement\n */\n\nimport { ref, onUnmounted, nextTick } from 'vue'\nimport { createLogger } from './logger'\n\nconst logger = createLogger('PerformanceMonitoring')\n\n// Performance metrics interface\nexport interface PerformanceMetrics {\n  fps: number\n  avgRenderTime: number\n  memoryUsage: number\n  scrollLatency: number\n  firstContentfulPaint: number\n  largestContentfulPaint: number\n  cumulativeLayoutShift: number\n  interactionLatency: number\n  timestamp: number\n}\n\n// FPS Counter\nexport class FPSCounter {\n  private frames = 0\n  private lastTime = performance.now()\n  private fps = 60\n  private callbacks = new Set<(fps: number) => void>()\n  private rafId: number | null = null\n  private isRunning = false\n\n  start(): void {\n    if (this.isRunning) return\n\n    this.isRunning = true\n    this.lastTime = performance.now()\n    this.frames = 0\n    this.tick()\n  }\n\n  stop(): void {\n    this.isRunning = false\n    if (this.rafId) {\n      cancelAnimationFrame(this.rafId)\n      this.rafId = null\n    }\n  }\n\n  onUpdate(callback: (fps: number) => void): () => void {\n    this.callbacks.add(callback)\n    return () => this.callbacks.delete(callback)\n  }\n\n  get currentFPS(): number {\n    return this.fps\n  }\n\n  private tick(): void {\n    if (!this.isRunning) return\n\n    this.frames++\n    const now = performance.now()\n\n    if (now - this.lastTime >= 1000) {\n      this.fps = Math.round((this.frames * 1000) / (now - this.lastTime))\n      this.frames = 0\n      this.lastTime = now\n\n      this.callbacks.forEach(callback => callback(this.fps))\n    }\n\n    this.rafId = requestAnimationFrame(() => this.tick())\n  }\n}\n\n// Render time profiler\nexport class RenderProfiler {\n  private measurements: Array<{ name: string; duration: number; timestamp: number }> = []\n  private activeTimers = new Map<string, number>()\n  private maxMeasurements = 1000\n\n  start(name: string): void {\n    this.activeTimers.set(name, performance.now())\n  }\n\n  end(name: string): number {\n    const startTime = this.activeTimers.get(name)\n    if (!startTime) {\n      logger.warn(`No start time found for measurement: ${name}`)\n      return 0\n    }\n\n    const duration = performance.now() - startTime\n    this.activeTimers.delete(name)\n\n    this.measurements.push({\n      name,\n      duration,\n      timestamp: Date.now(),\n    })\n\n    // Keep only recent measurements\n    if (this.measurements.length > this.maxMeasurements) {\n      this.measurements.shift()\n    }\n\n    return duration\n  }\n\n  getAverage(name: string, samples: number = 10): number {\n    const recent = this.measurements.filter(m => m.name === name).slice(-samples)\n\n    if (recent.length === 0) return 0\n\n    return recent.reduce((sum, m) => sum + m.duration, 0) / recent.length\n  }\n\n  getAll(): Array<{ name: string; duration: number; timestamp: number }> {\n    return [...this.measurements]\n  }\n\n  clear(): void {\n    this.measurements = []\n    this.activeTimers.clear()\n  }\n}\n\n// Scroll performance tracker\nexport class ScrollPerformanceTracker {\n  private scrollEvents: Array<{ timestamp: number; position: number }> = []\n  private frameCount = 0\n  private lastFrame = performance.now()\n  private isTracking = false\n\n  start(): void {\n    this.isTracking = true\n    this.scrollEvents = []\n    this.frameCount = 0\n    this.lastFrame = performance.now()\n  }\n\n  recordScroll(position: number): void {\n    if (!this.isTracking) return\n\n    this.scrollEvents.push({\n      timestamp: performance.now(),\n      position,\n    })\n\n    this.frameCount++\n  }\n\n  stop(): { avgFPS: number; scrollLatency: number; jankCount: number } {\n    if (!this.isTracking) return { avgFPS: 0, scrollLatency: 0, jankCount: 0 }\n\n    this.isTracking = false\n\n    const now = performance.now()\n    const duration = now - this.lastFrame\n    const avgFPS = (this.frameCount * 1000) / duration\n\n    // Calculate scroll latency (time between scroll events)\n    let totalLatency = 0\n    let jankCount = 0\n\n    for (let i = 1; i < this.scrollEvents.length; i++) {\n      const latency = this.scrollEvents[i]!.timestamp - this.scrollEvents[i - 1]!.timestamp\n      totalLatency += latency\n\n      // Count jank (frames taking longer than 16.67ms for 60fps)\n      if (latency > 16.67) {\n        jankCount++\n      }\n    }\n\n    const scrollLatency = totalLatency / (this.scrollEvents.length - 1) || 0\n\n    return {\n      avgFPS: Math.round(avgFPS),\n      scrollLatency: Math.round(scrollLatency * 100) / 100,\n      jankCount,\n    }\n  }\n}\n\n// Core Web Vitals measurement\nexport class WebVitalsMonitor {\n  private metrics = ref<{\n    lcp: number | null\n    fid: number | null\n    cls: number | null\n    fcp: number | null\n    ttfb: number | null\n  }>({\n    lcp: null,\n    fid: null,\n    cls: null,\n    fcp: null,\n    ttfb: null,\n  })\n\n  constructor() {\n    this.measureCoreWebVitals()\n  }\n\n  private measureCoreWebVitals(): void {\n    // Largest Contentful Paint\n    if ('PerformanceObserver' in window) {\n      try {\n        const lcpObserver = new PerformanceObserver(list => {\n          const entries = list.getEntries()\n          const lastEntry = entries[entries.length - 1] as any\n          this.metrics.value.lcp = lastEntry.startTime\n        })\n        lcpObserver.observe({ entryTypes: ['largest-contentful-paint'] })\n\n        // First Contentful Paint\n        const fcpObserver = new PerformanceObserver(list => {\n          const entries = list.getEntries()\n          const fcpEntry = entries.find(entry => entry.name === 'first-contentful-paint') as any\n          if (fcpEntry) {\n            this.metrics.value.fcp = fcpEntry.startTime\n          }\n        })\n        fcpObserver.observe({ entryTypes: ['paint'] })\n\n        // Cumulative Layout Shift\n        const clsObserver = new PerformanceObserver(list => {\n          let clsValue = 0\n          for (const entry of list.getEntries() as any[]) {\n            if (!entry.hadRecentInput) {\n              clsValue += entry.value\n            }\n          }\n          this.metrics.value.cls = clsValue\n        })\n        clsObserver.observe({ entryTypes: ['layout-shift'] })\n\n        // First Input Delay\n        const fidObserver = new PerformanceObserver(list => {\n          const entries = list.getEntries() as any[]\n          const firstInput = entries[0]\n          if (firstInput) {\n            this.metrics.value.fid = firstInput.processingStart - firstInput.startTime\n          }\n        })\n        fidObserver.observe({ entryTypes: ['first-input'] })\n      } catch (error) {\n        logger.warn('Performance observer not fully supported:', { module: 'PerformanceMonitoring' }, error)\n      }\n    }\n\n    // Time to First Byte\n    if ('performance' in window && 'timing' in performance) {\n      const timing = performance.timing\n      this.metrics.value.ttfb = timing.responseStart - timing.fetchStart\n    }\n  }\n\n  getMetrics() {\n    return this.metrics\n  }\n}\n\n// Performance test suite\nexport class PerformanceTestSuite {\n  private tests = new Map<string, () => Promise<PerformanceMetrics>>()\n  private results: Array<{ testName: string; metrics: PerformanceMetrics; passed: boolean }> = []\n\n  addTest(name: string, test: () => Promise<PerformanceMetrics>): void {\n    this.tests.set(name, test)\n  }\n\n  async runAll(): Promise<\n    Array<{ testName: string; metrics: PerformanceMetrics; passed: boolean }>\n  > {\n    this.results = []\n\n    for (const [testName, test] of this.tests.entries()) {\n      try {\n        const metrics = await test()\n        const passed = this.evaluatePerformance(metrics)\n\n        this.results.push({\n          testName,\n          metrics,\n          passed,\n        })\n      } catch (error) {\n        logger.error(`Performance test failed: ${testName}`, { module: 'PerformanceMonitoring' }, error)\n        this.results.push({\n          testName,\n          metrics: this.getDefaultMetrics(),\n          passed: false,\n        })\n      }\n    }\n\n    return this.results\n  }\n\n  private evaluatePerformance(metrics: PerformanceMetrics): boolean {\n    // Performance thresholds\n    const thresholds = {\n      fps: 55, // Minimum acceptable FPS\n      avgRenderTime: 16.67, // Maximum render time for 60fps\n      memoryUsage: 200, // Maximum memory usage in MB\n      scrollLatency: 20, // Maximum scroll latency in ms\n      interactionLatency: 100, // Maximum interaction latency in ms\n    }\n\n    return (\n      metrics.fps >= thresholds.fps &&\n      metrics.avgRenderTime <= thresholds.avgRenderTime &&\n      metrics.memoryUsage <= thresholds.memoryUsage &&\n      metrics.scrollLatency <= thresholds.scrollLatency &&\n      metrics.interactionLatency <= thresholds.interactionLatency\n    )\n  }\n\n  private getDefaultMetrics(): PerformanceMetrics {\n    return {\n      fps: 0,\n      avgRenderTime: 0,\n      memoryUsage: 0,\n      scrollLatency: 0,\n      firstContentfulPaint: 0,\n      largestContentfulPaint: 0,\n      cumulativeLayoutShift: 0,\n      interactionLatency: 0,\n      timestamp: Date.now(),\n    }\n  }\n\n  getResults() {\n    return this.results\n  }\n\n  generateReport(): string {\n    const passed = this.results.filter(r => r.passed).length\n    const total = this.results.length\n\n    let report = `Performance Test Report\\n`\n    report += `========================\\n`\n    report += `Passed: ${passed}/${total}\\n\\n`\n\n    this.results.forEach(result => {\n      const status = result.passed ? '✅' : '❌'\n      report += `${status} ${result.testName}\\n`\n      report += `   FPS: ${result.metrics.fps}\\n`\n      report += `   Render Time: ${result.metrics.avgRenderTime.toFixed(2)}ms\\n`\n      report += `   Memory: ${result.metrics.memoryUsage.toFixed(2)}MB\\n`\n      report += `   Scroll Latency: ${result.metrics.scrollLatency.toFixed(2)}ms\\n\\n`\n    })\n\n    return report\n  }\n}\n\n// Vue composable for performance monitoring\nexport function usePerformanceMonitoring() {\n\n  const fpsCounter = new FPSCounter()\n  const renderProfiler = new RenderProfiler()\n  const scrollTracker = new ScrollPerformanceTracker()\n  const webVitals = new WebVitalsMonitor()\n\n  const currentFPS = ref(60)\n  const isMonitoring = ref(false)\n\n  let unsubscribeFPS: (() => void) | null = null\n\n  // Start monitoring\n  const startMonitoring = () => {\n    if (isMonitoring.value) return\n\n    isMonitoring.value = true\n    fpsCounter.start()\n\n    // Update FPS display\n    unsubscribeFPS = fpsCounter.onUpdate(fps => {\n      currentFPS.value = fps\n    })\n  }\n\n  const stopMonitoring = () => {\n    isMonitoring.value = false\n    fpsCounter.stop()\n    if (unsubscribeFPS) {\n      unsubscribeFPS()\n      unsubscribeFPS = null\n    }\n  }\n\n  // Profile render operations\n  const profileRender = async (name: string, renderFn: () => Promise<void> | void) => {\n    renderProfiler.start(name)\n    await renderFn()\n    const duration = renderProfiler.end(name)\n    return duration\n  }\n\n  // Track scroll performance\n  const trackScrollStart = () => scrollTracker.start()\n  const trackScrollEvent = (position: number) => scrollTracker.recordScroll(position)\n  const trackScrollEnd = () => scrollTracker.stop()\n\n  // Get performance metrics\n  const getMetrics = (): PerformanceMetrics => {\n    const memory = 'memory' in performance ? (performance as any).memory : null\n\n    return {\n      fps: currentFPS.value,\n      avgRenderTime: renderProfiler.getAverage('render'),\n      memoryUsage: memory ? memory.usedJSHeapSize / (1024 * 1024) : 0,\n      scrollLatency: 0, // Will be updated by scroll tracking\n      firstContentfulPaint: webVitals.getMetrics().value.fcp || 0,\n      largestContentfulPaint: webVitals.getMetrics().value.lcp || 0,\n      cumulativeLayoutShift: webVitals.getMetrics().value.cls || 0,\n      interactionLatency: webVitals.getMetrics().value.fid || 0,\n      timestamp: Date.now(),\n    }\n  }\n\n  // Create performance test\n  const createPerformanceTest = (_name: string, testFn: () => Promise<void>) => {\n    return async (): Promise<PerformanceMetrics> => {\n      const startTime = performance.now()\n\n      await testFn()\n      await nextTick() // Wait for Vue to update\n\n      const endTime = performance.now()\n      const endMetrics = getMetrics()\n\n      return {\n        ...endMetrics,\n        avgRenderTime: endTime - startTime,\n        timestamp: Date.now(),\n      }\n    }\n  }\n\n  // Cleanup\n  onUnmounted(() => {\n    stopMonitoring()\n    renderProfiler.clear()\n  })\n\n  return {\n    // State\n    currentFPS,\n    isMonitoring,\n    webVitalsMetrics: webVitals.getMetrics(),\n\n    // Controls\n    startMonitoring,\n    stopMonitoring,\n\n    // Profiling\n    profileRender,\n    trackScrollStart,\n    trackScrollEvent,\n    trackScrollEnd,\n\n    // Metrics\n    getMetrics,\n    getRenderStats: () => renderProfiler.getAll(),\n\n    // Testing\n    createPerformanceTest,\n\n    // Utilities\n    createTestSuite: () => new PerformanceTestSuite(),\n  }\n}\n\n// Performance benchmarking utilities\nexport async function benchmarkOperation(\n  name: string,\n  operation: () => Promise<void> | void,\n  iterations: number = 100\n): Promise<{ name: string; avgTime: number; minTime: number; maxTime: number; totalTime: number }> {\n  const times: number[] = []\n\n  for (let i = 0; i < iterations; i++) {\n    const start = performance.now()\n    await operation()\n    const end = performance.now()\n    times.push(end - start)\n  }\n\n  const totalTime = times.reduce((sum, time) => sum + time, 0)\n  const avgTime = totalTime / iterations\n  const minTime = Math.min(...times)\n  const maxTime = Math.max(...times)\n\n  return {\n    name,\n    avgTime: Math.round(avgTime * 100) / 100,\n    minTime: Math.round(minTime * 100) / 100,\n    maxTime: Math.round(maxTime * 100) / 100,\n    totalTime: Math.round(totalTime * 100) / 100,\n  }\n}\n\n// Export performance testing helpers\n// export { FPSCounter, RenderProfiler, ScrollPerformanceTracker, WebVitalsMonitor, PerformanceTestSuite }\n","/**\n * DOM Performance Optimization Utilities\n *\n * Features:\n * - Element pooling for virtual scrolling\n * - Hardware acceleration utilities\n * - DOM batching for performance\n * - Intersection Observer for visibility\n * - Memory-efficient event delegation\n */\n\nimport { ref, onUnmounted } from 'vue'\n\n// Element Pool for efficient DOM reuse\nexport class ElementPool<T extends HTMLElement = HTMLElement> {\n  private pool: T[] = []\n  private activeElements = new Set<T>()\n  private createElement: () => T\n  private resetElement: (element: T) => void\n  private maxPoolSize: number\n\n  constructor(\n    createElement: () => T,\n    resetElement: (element: T) => void = () => {},\n    maxPoolSize: number = 100\n  ) {\n    this.createElement = createElement\n    this.resetElement = resetElement\n    this.maxPoolSize = maxPoolSize\n  }\n\n  acquire(): T {\n    let element = this.pool.pop()\n\n    if (!element) {\n      element = this.createElement()\n    }\n\n    this.activeElements.add(element)\n    return element\n  }\n\n  release(element: T): void {\n    if (!this.activeElements.has(element)) return\n\n    this.activeElements.delete(element)\n    this.resetElement(element)\n\n    if (this.pool.length < this.maxPoolSize) {\n      this.pool.push(element)\n    }\n  }\n\n  clear(): void {\n    this.pool = []\n    this.activeElements.clear()\n  }\n\n  get stats() {\n    return {\n      poolSize: this.pool.length,\n      activeElements: this.activeElements.size,\n      totalElements: this.pool.length + this.activeElements.size,\n    }\n  }\n}\n\n// Hardware acceleration utilities\nexport function enableHardwareAcceleration(element: HTMLElement): void {\n  element.style.transform = 'translateZ(0)'\n  element.style.willChange = 'transform'\n}\n\nexport function disableHardwareAcceleration(element: HTMLElement): void {\n  element.style.transform = ''\n  element.style.willChange = 'auto'\n}\n\n// CSS Containment helper\nexport function applyCSSContainment(\n  element: HTMLElement,\n  types: string[] = ['layout', 'style', 'paint']\n): void {\n  element.style.contain = types.join(' ')\n}\n\n// DOM Batching utility for performance\nexport class DOMBatcher {\n  private batches: Array<() => void> = []\n  private rafId: number | null = null\n\n  add(operation: () => void): void {\n    this.batches.push(operation)\n    this.schedule()\n  }\n\n  private schedule(): void {\n    if (this.rafId) return\n\n    this.rafId = requestAnimationFrame(() => {\n      const operations = this.batches.splice(0)\n      operations.forEach(op => op())\n      this.rafId = null\n    })\n  }\n\n  flush(): void {\n    if (this.rafId) {\n      cancelAnimationFrame(this.rafId)\n      this.rafId = null\n    }\n\n    const operations = this.batches.splice(0)\n    operations.forEach(op => op())\n  }\n\n  clear(): void {\n    if (this.rafId) {\n      cancelAnimationFrame(this.rafId)\n      this.rafId = null\n    }\n    this.batches = []\n  }\n}\n\n// Efficient event delegation\nexport class EventDelegator {\n  private listeners = new Map<string, Set<(event: Event, target: Element) => void>>()\n  private boundHandler: (event: Event) => void\n  private container: HTMLElement\n\n  constructor(container: HTMLElement) {\n    this.container = container\n    this.boundHandler = this.handleEvent.bind(this)\n    this.container.addEventListener('click', this.boundHandler, { passive: true })\n    this.container.addEventListener('dblclick', this.boundHandler, { passive: true })\n    this.container.addEventListener('mousedown', this.boundHandler, { passive: true })\n    this.container.addEventListener('mouseup', this.boundHandler, { passive: true })\n  }\n\n  on(eventType: string, selector: string, handler: (event: Event, target: Element) => void): void {\n    const key = `${eventType}:${selector}`\n    if (!this.listeners.has(key)) {\n      this.listeners.set(key, new Set())\n    }\n    this.listeners.get(key)!.add(handler)\n  }\n\n  off(eventType: string, selector: string, handler: (event: Event, target: Element) => void): void {\n    const key = `${eventType}:${selector}`\n    const handlers = this.listeners.get(key)\n    if (handlers) {\n      handlers.delete(handler)\n      if (handlers.size === 0) {\n        this.listeners.delete(key)\n      }\n    }\n  }\n\n  private handleEvent(event: Event): void {\n    const target = event.target as Element\n    if (!target) return\n\n    for (const [key, handlers] of this.listeners.entries()) {\n      const [eventType, selector] = key.split(':')\n      if (event.type === eventType && selector) {\n        const matchedElement = target.closest(selector)\n        if (matchedElement && this.container.contains(matchedElement)) {\n          handlers.forEach(handler => handler(event, matchedElement))\n        }\n      }\n    }\n  }\n\n  destroy(): void {\n    this.container.removeEventListener('click', this.boundHandler)\n    this.container.removeEventListener('dblclick', this.boundHandler)\n    this.container.removeEventListener('mousedown', this.boundHandler)\n    this.container.removeEventListener('mouseup', this.boundHandler)\n    this.listeners.clear()\n  }\n}\n\n// Intersection Observer for visibility optimization\nexport function useVisibilityObserver(threshold: number = 0.1, rootMargin: string = '50px') {\n  const visibleElements = ref(new Set<Element>())\n\n  const observer = new IntersectionObserver(\n    entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          visibleElements.value.add(entry.target)\n        } else {\n          visibleElements.value.delete(entry.target)\n        }\n      })\n    },\n    {\n      threshold,\n      rootMargin,\n    }\n  )\n\n  const observe = (element: Element) => {\n    observer.observe(element)\n  }\n\n  const unobserve = (element: Element) => {\n    observer.unobserve(element)\n    visibleElements.value.delete(element)\n  }\n\n  const isVisible = (element: Element) => {\n    return visibleElements.value.has(element)\n  }\n\n  onUnmounted(() => {\n    observer.disconnect()\n    visibleElements.value.clear()\n  })\n\n  return {\n    visibleElements,\n    observe,\n    unobserve,\n    isVisible,\n  }\n}\n\n// Performance-optimized style updates\nexport class StyleBatcher {\n  private updates = new Map<HTMLElement, Record<string, string>>()\n  private rafId: number | null = null\n\n  setStyle(element: HTMLElement, property: string, value: string): void {\n    if (!this.updates.has(element)) {\n      this.updates.set(element, {})\n    }\n\n    this.updates.get(element)![property] = value\n    this.schedule()\n  }\n\n  setStyles(element: HTMLElement, styles: Record<string, string>): void {\n    if (!this.updates.has(element)) {\n      this.updates.set(element, {})\n    }\n\n    Object.assign(this.updates.get(element)!, styles)\n    this.schedule()\n  }\n\n  private schedule(): void {\n    if (this.rafId) return\n\n    this.rafId = requestAnimationFrame(() => {\n      for (const [element, styles] of this.updates.entries()) {\n        Object.assign(element.style, styles)\n      }\n      this.updates.clear()\n      this.rafId = null\n    })\n  }\n\n  flush(): void {\n    if (this.rafId) {\n      cancelAnimationFrame(this.rafId)\n      this.rafId = null\n    }\n\n    for (const [element, styles] of this.updates.entries()) {\n      Object.assign(element.style, styles)\n    }\n    this.updates.clear()\n  }\n}\n\n// Optimized virtual row component factory\nexport function createVirtualRowFactory() {\n  const rowPool = new ElementPool(\n    () => {\n      const row = document.createElement('div')\n      row.className = 'ht-virtual-row'\n      applyCSSContainment(row)\n      enableHardwareAcceleration(row)\n      return row\n    },\n    row => {\n      // Reset row state\n      row.style.transform = ''\n      row.style.height = ''\n      row.innerHTML = ''\n      row.className = 'ht-virtual-row'\n    }\n  )\n\n  const cellPool = new ElementPool(\n    () => {\n      const cell = document.createElement('div')\n      cell.className = 'ht-virtual-cell'\n      return cell\n    },\n    cell => {\n      // Reset cell state\n      cell.innerHTML = ''\n      cell.className = 'ht-virtual-cell'\n      cell.style.width = ''\n    }\n  )\n\n  const styleBatcher = new StyleBatcher()\n\n  return {\n    acquireRow: () => rowPool.acquire(),\n    releaseRow: (row: HTMLDivElement) => rowPool.release(row as HTMLDivElement),\n    acquireCell: () => cellPool.acquire(),\n    releaseCell: (cell: HTMLDivElement) => cellPool.release(cell as HTMLDivElement),\n    batchStyle: (element: HTMLElement, styles: Record<string, string>) => {\n      styleBatcher.setStyles(element, styles)\n    },\n    flushStyles: () => styleBatcher.flush(),\n    getStats: () => ({\n      rows: rowPool.stats,\n      cells: cellPool.stats,\n    }),\n    cleanup: () => {\n      rowPool.clear()\n      cellPool.clear()\n      styleBatcher.flush()\n    },\n  }\n}\n\n// Memory leak detection utilities\nexport class MemoryLeakDetector {\n  private elements = new WeakSet<HTMLElement>()\n  private callbacks = new Set<() => void>()\n  private checkInterval: number\n\n  constructor(intervalMs: number = 5000) {\n    this.checkInterval = setInterval(() => {\n      this.checkForLeaks()\n    }, intervalMs)\n  }\n\n  track(element: HTMLElement): void {\n    this.elements.add(element)\n  }\n\n  onLeak(callback: () => void): void {\n    this.callbacks.add(callback)\n  }\n\n  private checkForLeaks(): void {\n    // Simple heuristic: check for unusually high element counts\n    const allElements = document.querySelectorAll('*').length\n    const threshold = 10000 // Adjust based on your app\n\n    if (allElements > threshold) {\n      this.callbacks.forEach(callback => callback())\n    }\n  }\n\n  destroy(): void {\n    clearInterval(this.checkInterval)\n    this.callbacks.clear()\n  }\n}\n\n// Optimized scroll handler\nexport function createOptimizedScrollHandler(\n  callback: (scrollTop: number, scrollLeft: number) => void\n) {\n  let rafId: number | null = null\n  let lastScrollTop = 0\n  let lastScrollLeft = 0\n\n  const handler = (event: Event) => {\n    const target = event.target as HTMLElement\n    const scrollTop = target.scrollTop\n    const scrollLeft = target.scrollLeft\n\n    // Skip if position hasn't changed\n    if (scrollTop === lastScrollTop && scrollLeft === lastScrollLeft) {\n      return\n    }\n\n    if (rafId) {\n      cancelAnimationFrame(rafId)\n    }\n\n    rafId = requestAnimationFrame(() => {\n      callback(scrollTop, scrollLeft)\n      lastScrollTop = scrollTop\n      lastScrollLeft = scrollLeft\n      rafId = null\n    })\n  }\n\n  const cleanup = () => {\n    if (rafId) {\n      cancelAnimationFrame(rafId)\n    }\n  }\n\n  return { handler, cleanup }\n}\n","/**\n * Data Pipeline Processing Utilities\n *\n * Features:\n * - High-performance data transformation pipeline\n * - Memory-efficient data processing with streaming support\n * - Pluggable interceptor system integration\n * - Async and sync processing modes\n * - Performance monitoring and error handling\n * - Integration with Vue 3 reactivity system\n */\n\nimport { ref, computed, onUnmounted, type Ref, type ComputedRef } from 'vue'\nimport type { RowData, GridAPI } from '../types'\nimport { createLogger } from './logger'\n\nexport interface DataPipelineInterceptor {\n  type: 'filter' | 'sort' | 'transform' | 'grouping' | 'aggregation'\n  priority: number\n  name: string\n  process: (data: RowData[], context?: unknown) => RowData[] | Promise<RowData[]>\n  enabled: boolean\n}\n\nexport interface DataPipelineStage {\n  name: string\n  interceptors: DataPipelineInterceptor[]\n  metrics: {\n    processedCount: number\n    averageTime: number\n    lastProcessTime: number\n    errorCount: number\n  }\n}\n\nexport interface DataPipelineMetrics {\n  totalProcessTime: number\n  stagesCompleted: number\n  itemsProcessed: number\n  errorCount: number\n  lastRunTime: number\n  throughputPerSecond: number\n}\n\nexport interface DataPipelineOptions {\n  enableMetrics?: boolean\n  maxBatchSize?: number\n  asyncProcessing?: boolean\n  errorHandling?: 'throw' | 'log' | 'ignore'\n  debounceMs?: number\n}\n\nexport interface DataPipelineReturn {\n  // State\n  isProcessing: ComputedRef<boolean>\n  metrics: ComputedRef<DataPipelineMetrics>\n  stages: ComputedRef<DataPipelineStage[]>\n  lastError: Ref<Error | null>\n\n  // Data processing\n  processData: (data: RowData[], context?: unknown) => Promise<RowData[]>\n\n  // Interceptor management\n  addInterceptor: (interceptor: DataPipelineInterceptor) => void\n  removeInterceptor: (name: string) => void\n  enableInterceptor: (name: string) => void\n  disableInterceptor: (name: string) => void\n  getInterceptors: (type?: DataPipelineInterceptor['type']) => DataPipelineInterceptor[]\n\n  // Pipeline control\n  clearPipeline: (type?: DataPipelineInterceptor['type']) => void\n  resetMetrics: () => void\n\n  // Performance\n  benchmark: (data: RowData[], iterations?: number) => Promise<DataPipelineBenchmarkResult>\n}\n\nexport interface DataPipelineBenchmarkResult {\n  averageTime: number\n  minTime: number\n  maxTime: number\n  totalTime: number\n  throughput: number\n  iterations: number\n}\n\n// Memory-efficient data stream processor\nclass DataStreamProcessor {\n  private batchSize: number\n  private abortController?: AbortController\n\n  constructor(batchSize: number = 1000) {\n    this.batchSize = batchSize\n  }\n\n  async processBatches<T>(\n    data: T[],\n    processor: (batch: T[], batchIndex: number) => T[] | Promise<T[]>,\n    signal?: AbortSignal\n  ): Promise<T[]> {\n    if (data.length <= this.batchSize) {\n      return await processor(data, 0)\n    }\n\n    const result: T[] = []\n    const batches = Math.ceil(data.length / this.batchSize)\n\n    for (let i = 0; i < batches; i++) {\n      if (signal?.aborted) {\n        throw new Error('Processing aborted')\n      }\n\n      const start = i * this.batchSize\n      const end = Math.min((i + 1) * this.batchSize, data.length)\n      const batch = data.slice(start, end)\n\n      const processed = await processor(batch, i)\n      result.push(...processed)\n\n      // Allow other tasks to run\n      if (i < batches - 1) {\n        await new Promise(resolve => setTimeout(resolve, 0))\n      }\n    }\n\n    return result\n  }\n\n  abort(): void {\n    if (this.abortController) {\n      this.abortController.abort()\n    }\n  }\n}\n\n// Performance monitoring for pipeline stages\nclass PipelineProfiler {\n  private measurements = new Map<string, number[]>()\n  private readonly maxMeasurements = 100\n\n  start(stageName: string): () => number {\n    const startTime = performance.now()\n\n    return (): number => {\n      const duration = performance.now() - startTime\n      this.recordMeasurement(stageName, duration)\n      return duration\n    }\n  }\n\n  private recordMeasurement(stageName: string, duration: number): void {\n    if (!this.measurements.has(stageName)) {\n      this.measurements.set(stageName, [])\n    }\n\n    const measurements = this.measurements.get(stageName)!\n    measurements.push(duration)\n\n    // Keep only recent measurements\n    if (measurements.length > this.maxMeasurements) {\n      measurements.shift()\n    }\n  }\n\n  getAverageTime(stageName: string): number {\n    const measurements = this.measurements.get(stageName)\n    if (!measurements || measurements.length === 0) return 0\n\n    return measurements.reduce((sum, time) => sum + time, 0) / measurements.length\n  }\n\n  getMetrics(stageName: string): { avg: number; min: number; max: number; count: number } {\n    const measurements = this.measurements.get(stageName) || []\n\n    if (measurements.length === 0) {\n      return { avg: 0, min: 0, max: 0, count: 0 }\n    }\n\n    return {\n      avg: measurements.reduce((sum, time) => sum + time, 0) / measurements.length,\n      min: Math.min(...measurements),\n      max: Math.max(...measurements),\n      count: measurements.length,\n    }\n  }\n\n  clear(): void {\n    this.measurements.clear()\n  }\n}\n\n// Main data pipeline composable\nexport function useDataPipeline(\n  api?: GridAPI,\n  options: DataPipelineOptions = {}\n): DataPipelineReturn {\n  // Logger for data pipeline\n  const logger = createLogger('DataPipeline')\n\n  const {\n    enableMetrics = true,\n    maxBatchSize = 1000,\n    asyncProcessing = true,\n    errorHandling = 'log',\n    debounceMs = 16,\n  } = options\n\n  // State\n  const interceptors = ref<DataPipelineInterceptor[]>([])\n  const isProcessing = ref(false)\n  const lastError = ref<Error | null>(null)\n  const metrics = ref<DataPipelineMetrics>({\n    totalProcessTime: 0,\n    stagesCompleted: 0,\n    itemsProcessed: 0,\n    errorCount: 0,\n    lastRunTime: 0,\n    throughputPerSecond: 0,\n  })\n\n  // Internal utilities\n  const streamProcessor = new DataStreamProcessor(maxBatchSize)\n  const profiler = enableMetrics ? new PipelineProfiler() : null\n  let debounceTimeout: number | null = null\n\n  // Computed stages grouped by type\n  const stages = computed((): DataPipelineStage[] => {\n    const stageTypes: DataPipelineInterceptor['type'][] = [\n      'filter',\n      'sort',\n      'transform',\n      'grouping',\n      'aggregation',\n    ]\n\n    return stageTypes.map(type => {\n      const stageInterceptors = interceptors.value\n        .filter(i => i.type === type && i.enabled)\n        .sort((a, b) => a.priority - b.priority)\n\n      const stageMetrics = profiler?.getMetrics(type) || { avg: 0, min: 0, max: 0, count: 0 }\n\n      return {\n        name: type,\n        interceptors: stageInterceptors,\n        metrics: {\n          processedCount: stageMetrics.count,\n          averageTime: stageMetrics.avg,\n          lastProcessTime: stageMetrics.max,\n          errorCount: 0, // Track separately if needed\n        },\n      }\n    })\n  })\n\n  // Core data processing function\n  const processData = async (data: RowData[], context?: unknown): Promise<RowData[]> => {\n    if (isProcessing.value) {\n      logger.warn('Processing already in progress, skipping')\n      return data\n    }\n\n    isProcessing.value = true\n    lastError.value = null\n\n    const startTime = performance.now()\n    let currentData = [...data] // Defensive copy\n    let stagesCompleted = 0\n\n    try {\n      // Process through each stage in order\n      const stageTypes: DataPipelineInterceptor['type'][] = [\n        'filter',\n        'sort',\n        'transform',\n        'grouping',\n        'aggregation',\n      ]\n\n      for (const stageType of stageTypes) {\n        const stageInterceptors = interceptors.value\n          .filter(i => i.type === stageType && i.enabled)\n          .sort((a, b) => a.priority - b.priority)\n\n        if (stageInterceptors.length === 0) continue\n\n        const stageProfiler = profiler?.start(stageType)\n\n        try {\n          // Process through all interceptors in this stage\n          for (const interceptor of stageInterceptors) {\n            const interceptorProfiler = profiler?.start(`${stageType}:${interceptor.name}`)\n\n            if (asyncProcessing && currentData.length > maxBatchSize) {\n              // Use streaming for large datasets\n              currentData = await streamProcessor.processBatches(currentData, async batch => {\n                const result = await interceptor.process(batch, context)\n                return Array.isArray(result) ? result : ([result] as RowData[])\n              })\n            } else {\n              // Direct processing for smaller datasets\n              const result = await interceptor.process(currentData, context)\n              currentData = Array.isArray(result) ? result : ([result] as RowData[])\n            }\n\n            interceptorProfiler?.()\n          }\n\n          stagesCompleted++\n        } catch (error) {\n          logger.error(`Error in ${stageType} stage:`, { module: 'DataPipeline', stage: stageType }, error)\n\n          if (errorHandling === 'throw') {\n            throw error\n          }\n\n          if (errorHandling === 'log') {\n            lastError.value = error as Error\n            metrics.value.errorCount++\n          }\n        }\n\n        stageProfiler?.()\n      }\n\n      // Update metrics\n      const totalTime = performance.now() - startTime\n      if (enableMetrics) {\n        metrics.value = {\n          totalProcessTime: totalTime,\n          stagesCompleted,\n          itemsProcessed: currentData.length,\n          errorCount: metrics.value.errorCount,\n          lastRunTime: Date.now(),\n          throughputPerSecond: currentData.length / (totalTime / 1000),\n        }\n      }\n\n      // Emit completion event if API is available\n      if (api) {\n        api.emit?.('data-pipeline-complete', {\n          originalCount: data.length,\n          processedCount: currentData.length,\n          processingTime: totalTime,\n          stagesCompleted,\n        })\n      }\n\n      return currentData\n    } catch (error) {\n      lastError.value = error as Error\n      metrics.value.errorCount++\n\n      if (api) {\n        api.emit?.('data-pipeline-error', { error, stage: stagesCompleted })\n      }\n\n      if (errorHandling === 'throw') {\n        throw error\n      }\n\n      // Return original data on error for graceful degradation\n      return data\n    } finally {\n      isProcessing.value = false\n    }\n  }\n\n  // Debounced data processing\n  const debouncedProcessData = (data: RowData[], context?: unknown): Promise<RowData[]> => {\n    return new Promise((resolve, reject) => {\n      if (debounceTimeout) {\n        clearTimeout(debounceTimeout)\n      }\n\n      debounceTimeout = window.setTimeout(async () => {\n        try {\n          const result = await processData(data, context)\n          resolve(result)\n        } catch (error) {\n          reject(error)\n        }\n      }, debounceMs)\n    })\n  }\n\n  // Interceptor management\n  const addInterceptor = (interceptor: DataPipelineInterceptor): void => {\n    // Validate interceptor\n    if (!interceptor.name || !interceptor.process) {\n      throw new Error('Invalid interceptor: name and process function are required')\n    }\n\n    // Remove existing interceptor with same name\n    removeInterceptor(interceptor.name)\n\n    // Add new interceptor\n    interceptors.value.push({ ...interceptor })\n\n    if (api) {\n      // Backward compatible event name\n      api.emit?.('data-interceptor-added', { name: interceptor.name, type: interceptor.type })\n      // Standardized event name used by capability-based pipeline\n      api.emit?.('data-interceptor-registered', { type: interceptor.type, interceptor })\n    }\n  }\n\n  const removeInterceptor = (name: string): void => {\n    const index = interceptors.value.findIndex(i => i.name === name)\n    if (index !== -1) {\n      const removed = interceptors.value.splice(index, 1)[0]\n\n      if (api && removed) {\n        api.emit?.('data-interceptor-removed', { name, type: removed.type })\n      }\n    }\n  }\n\n  const enableInterceptor = (name: string): void => {\n    const interceptor = interceptors.value.find(i => i.name === name)\n    if (interceptor) {\n      interceptor.enabled = true\n    }\n  }\n\n  const disableInterceptor = (name: string): void => {\n    const interceptor = interceptors.value.find(i => i.name === name)\n    if (interceptor) {\n      interceptor.enabled = false\n    }\n  }\n\n  const getInterceptors = (type?: DataPipelineInterceptor['type']): DataPipelineInterceptor[] => {\n    if (type) {\n      return interceptors.value.filter(i => i.type === type)\n    }\n    return [...interceptors.value]\n  }\n\n  // Pipeline control\n  const clearPipeline = (type?: DataPipelineInterceptor['type']): void => {\n    if (type) {\n      interceptors.value = interceptors.value.filter(i => i.type !== type)\n    } else {\n      interceptors.value = []\n    }\n\n    if (api) {\n      api.emit?.('data-pipeline-cleared', { type })\n    }\n  }\n\n  const resetMetrics = (): void => {\n    metrics.value = {\n      totalProcessTime: 0,\n      stagesCompleted: 0,\n      itemsProcessed: 0,\n      errorCount: 0,\n      lastRunTime: 0,\n      throughputPerSecond: 0,\n    }\n\n    profiler?.clear()\n  }\n\n  // Performance benchmarking\n  const benchmark = async (\n    data: RowData[],\n    iterations: number = 10\n  ): Promise<DataPipelineBenchmarkResult> => {\n    const times: number[] = []\n\n    for (let i = 0; i < iterations; i++) {\n      const start = performance.now()\n      await processData(data)\n      const end = performance.now()\n      times.push(end - start)\n    }\n\n    const totalTime = times.reduce((sum, time) => sum + time, 0)\n    const averageTime = totalTime / iterations\n    const minTime = Math.min(...times)\n    const maxTime = Math.max(...times)\n    const throughput = data.length / (averageTime / 1000)\n\n    return {\n      averageTime,\n      minTime,\n      maxTime,\n      totalTime,\n      throughput,\n      iterations,\n    }\n  }\n\n  // Cleanup\n  onUnmounted(() => {\n    if (debounceTimeout) {\n      clearTimeout(debounceTimeout)\n    }\n    streamProcessor.abort()\n    interceptors.value = []\n    profiler?.clear()\n  })\n\n  return {\n    // State\n    isProcessing: computed(() => isProcessing.value),\n    metrics: computed(() => metrics.value),\n    stages,\n    lastError,\n\n    // Data processing\n    processData: debounceMs > 0 ? debouncedProcessData : processData,\n\n    // Interceptor management\n    addInterceptor,\n    removeInterceptor,\n    enableInterceptor,\n    disableInterceptor,\n    getInterceptors,\n\n    // Pipeline control\n    clearPipeline,\n    resetMetrics,\n\n    // Performance\n    benchmark,\n  }\n}\n\n// Utility functions for common data operations\nexport const DataPipelineUtils = {\n  // Create common filter interceptors\n  createFilterInterceptor: (\n    name: string,\n    filterFn: (row: RowData) => boolean,\n    priority: number = 0\n  ): DataPipelineInterceptor => ({\n    type: 'filter',\n    name,\n    priority,\n    enabled: true,\n    process: (data: RowData[]) => data.filter(filterFn),\n  }),\n\n  // Create common sort interceptors\n  createSortInterceptor: (\n    name: string,\n    sortFn: (a: RowData, b: RowData) => number,\n    priority: number = 0\n  ): DataPipelineInterceptor => ({\n    type: 'sort',\n    name,\n    priority,\n    enabled: true,\n    process: (data: RowData[]) => [...data].sort(sortFn),\n  }),\n\n  // Create common transform interceptors\n  createTransformInterceptor: (\n    name: string,\n    transformFn: (row: RowData) => RowData,\n    priority: number = 0\n  ): DataPipelineInterceptor => ({\n    type: 'transform',\n    name,\n    priority,\n    enabled: true,\n    process: (data: RowData[]) => data.map(transformFn),\n  }),\n\n  // Create async interceptor with progress tracking\n  createAsyncInterceptor: (\n    name: string,\n    type: DataPipelineInterceptor['type'],\n    asyncProcess: (data: RowData[], onProgress?: (progress: number) => void) => Promise<RowData[]>,\n    priority: number = 0\n  ): DataPipelineInterceptor => ({\n    type,\n    name,\n    priority,\n    enabled: true,\n    process: async (data: RowData[]) => {\n      return await asyncProcess(data, (_progress) => {\n        // Progress callback - consider emitting progress events instead\n        // Note: Logger not imported here to avoid circular dependencies\n      })\n    },\n  }),\n}\n","/**\n * Platform Detection Utilities\n *\n * Provides cross-platform compatibility helpers for Happy Table components.\n * Handles keyboard shortcuts, OS-specific behaviors, and accessibility features.\n */\n\nexport interface PlatformInfo {\n  /** Whether the current platform is macOS/iOS */\n  isMac: boolean\n  /** Whether the current platform is Windows */\n  isWindows: boolean\n  /** Whether the current platform is Linux */\n  isLinux: boolean\n  /** Whether the current platform is mobile */\n  isMobile: boolean\n  /** The appropriate modifier key name for shortcuts */\n  modifierKey: 'Cmd' | 'Ctrl'\n  /** The appropriate modifier key symbol for UI display */\n  modifierSymbol: '⌘' | 'Ctrl'\n}\n\n/**\n * Detect current platform and return platform information\n */\nexport function detectPlatform(): PlatformInfo {\n  // Server-side rendering fallback\n  if (typeof navigator === 'undefined') {\n    return {\n      isMac: false,\n      isWindows: false,\n      isLinux: false,\n      isMobile: false,\n      modifierKey: 'Ctrl',\n      modifierSymbol: 'Ctrl',\n    }\n  }\n\n  const userAgent = navigator.userAgent\n  const platform = navigator.platform\n\n  // macOS/iOS detection\n  const isMac = /Mac|iPhone|iPad|iPod/.test(platform) ||\n                ((navigator as any).userAgentData?.platform === 'macOS') ||\n                /Macintosh|MacIntel|MacPPC|Mac68K/.test(platform)\n\n  // Windows detection\n  const isWindows = /Win/.test(platform) ||\n                    ((navigator as any).userAgentData?.platform === 'Windows') ||\n                    /Windows/.test(userAgent)\n\n  // Linux detection\n  const isLinux = /Linux/.test(platform) ||\n                  ((navigator as any).userAgentData?.platform === 'Linux') ||\n                  /X11/.test(platform)\n\n  // Mobile detection\n  const isMobile = /Mobi|Android/i.test(userAgent) ||\n                   /iPhone|iPad|iPod/.test(platform) ||\n                   ((navigator as any).userAgentData?.mobile === true)\n\n  return {\n    isMac,\n    isWindows,\n    isLinux,\n    isMobile,\n    modifierKey: isMac ? 'Cmd' : 'Ctrl',\n    modifierSymbol: isMac ? '⌘' : 'Ctrl',\n  }\n}\n\n/**\n * Check if a keyboard event has the platform-appropriate modifier key pressed\n */\nexport function hasModifierKey(event: KeyboardEvent | MouseEvent): boolean {\n  return event.ctrlKey || event.metaKey\n}\n\n/**\n * Get platform-appropriate modifier key text for tooltips and help text\n */\nexport function getModifierKeyText(): string {\n  return detectPlatform().modifierKey\n}\n\n/**\n * Get platform-appropriate modifier key symbol for compact UI display\n */\nexport function getModifierKeySymbol(): string {\n  return detectPlatform().modifierSymbol\n}\n\n/**\n * Generate platform-aware keyboard shortcut text\n */\nexport function formatShortcut(key: string, withModifier: boolean = true): string {\n  const platform = detectPlatform()\n\n  if (!withModifier) {\n    return key\n  }\n\n  return `${platform.modifierKey}+${key}`\n}\n\n/**\n * Generate platform-aware keyboard shortcut text with symbols\n */\nexport function formatShortcutSymbol(key: string, withModifier: boolean = true): string {\n  const platform = detectPlatform()\n\n  if (!withModifier) {\n    return key\n  }\n\n  return `${platform.modifierSymbol}+${key}`\n}","/**\n * ID生成工具\n * 为组件生成唯一且稳定的标识符\n *\n * 设计原则:\n * - 确定性: 使用计数器确保同一会话内 ID 递增\n * - 唯一性: 结合时间戳和随机数防止跨会话冲突\n * - 简洁性: 使用 36 进制缩短 ID 长度\n * - 性能优化: 减少随机数生成次数，使用位运算\n */\n\nlet counter = 0\nconst SESSION_ID = Math.random().toString(36).slice(2, 8) // 会话 ID，仅生成一次\n\n/**\n * 生成唯一的组件 ID\n * @param prefix - ID 前缀 (如 'ht-select', 'ht-input')\n * @returns 唯一的 ID 字符串\n * @example\n * generateComponentId('ht-select') // 'ht-select-1-l8x9k2mn'\n * generateComponentId('ht-input')  // 'ht-input-2-l8x9k2mn'\n */\nexport function generateComponentId(prefix: string): string {\n  counter = (counter + 1) % 10000 // 防止计数器无限增长\n  const timestamp = Date.now().toString(36) // 36进制时间戳 (更短)\n  return `${prefix}-${counter}-${SESSION_ID}${timestamp}`\n}\n\n/**\n * 为组件生成一组相关的 ID\n * @param prefix - ID 前缀\n * @param keys - ID 键名列表\n * @returns ID 映射对象\n * @example\n * generateIdGroup('ht-select', ['triggerId', 'contentId'])\n * // {\n * //   triggerId: 'ht-select-1-l8x9k2mn-triggerId',\n * //   contentId: 'ht-select-1-l8x9k2mn-contentId'\n * // }\n */\nexport function generateIdGroup<K extends string>(\n  prefix: string,\n  keys: readonly K[]\n): Record<K, string> {\n  const baseId = generateComponentId(prefix)\n  const result = {} as Record<K, string>\n\n  for (const key of keys) {\n    result[key] = `${baseId}-${key}`\n  }\n\n  return result\n}\n","import type { ColumnDef, ColumnDragContext, PinnedLocation } from '../types'\n\nconst validPinnedLocations: ReadonlyArray<PinnedLocation> = ['left', 'right', 'center']\n\nfunction normalizePinnedLocation(value: ColumnDef['pinned']): PinnedLocation {\n  if (value === 'left' || value === 'right') {\n    return value\n  }\n  return 'center'\n}\n\n/**\n * 判断拖拽中的列是否允许在目标列附近释放\n */\nexport function isColumnDropBlocked(\n  dragContext: ColumnDragContext | null | undefined,\n  targetColumn: ColumnDef | null | undefined\n): boolean {\n  if (!dragContext || !targetColumn) {\n    return false\n  }\n\n  if (dragContext.columnId === targetColumn.id) {\n    return false\n  }\n\n  const targetPinned = normalizePinnedLocation(targetColumn.pinned)\n  return dragContext.pinned !== targetPinned\n}\n\n/**\n * 读取列的固定区域\n */\nexport function getColumnPinnedLocation(column: ColumnDef | null | undefined): PinnedLocation {\n  if (!column) {\n    return 'center'\n  }\n\n  const normalized = normalizePinnedLocation(column.pinned)\n  return validPinnedLocations.includes(normalized) ? normalized : 'center'\n}\n\n","/**\n * scroll-optimization.ts - RAF-based scroll optimization with velocity tracking\n *\n * Features:\n * 1. requestAnimationFrame for smooth scroll handling\n * 2. Debouncing for scroll end detection\n * 3. Velocity tracking for adaptive performance optimization\n * 4. Memory-efficient event handling\n */\n\n/**\n * Scroll velocity information\n */\nexport interface ScrollVelocity {\n  /** Horizontal velocity in pixels per millisecond */\n  horizontal: number\n  /** Vertical velocity in pixels per millisecond */\n  vertical: number\n  /** Overall scroll speed */\n  magnitude: number\n}\n\n/**\n * RAF-based scroll handler with debouncing\n * Combines requestAnimationFrame for smooth updates with debouncing for scroll end detection\n */\nexport function createRAFScrollHandler(options: {\n  /** Callback for scroll events (throttled by RAF) */\n  onScroll: (event: Event, velocity: ScrollVelocity) => void\n  /** Callback when scrolling ends (debounced) */\n  onScrollEnd?: (event: Event) => void\n  /** Debounce delay in ms for scroll end detection (default: 150ms) */\n  debounceDelay?: number\n  /** Enable velocity tracking (default: true) */\n  trackVelocity?: boolean\n}) {\n  const { onScroll, onScrollEnd, debounceDelay = 150, trackVelocity = true } = options\n\n  let rafId: number | null = null\n  let debounceTimer: number | null = null\n  let latestEvent: Event | null = null\n  let isScheduled = false\n\n  // Velocity tracking\n  let lastScrollLeft = 0\n  let lastScrollTop = 0\n  let lastScrollTime = 0\n  let currentVelocity: ScrollVelocity = { horizontal: 0, vertical: 0, magnitude: 0 }\n\n  const calculateVelocity = (event: Event): ScrollVelocity => {\n    if (!trackVelocity) {\n      return { horizontal: 0, vertical: 0, magnitude: 0 }\n    }\n\n    const target = event.target as HTMLElement\n    const currentTime = performance.now()\n    const currentScrollLeft = target.scrollLeft || 0\n    const currentScrollTop = target.scrollTop || 0\n\n    const timeDelta = currentTime - lastScrollTime\n    if (timeDelta > 0) {\n      const scrollLeftDelta = Math.abs(currentScrollLeft - lastScrollLeft)\n      const scrollTopDelta = Math.abs(currentScrollTop - lastScrollTop)\n\n      const horizontalVelocity = scrollLeftDelta / timeDelta\n      const verticalVelocity = scrollTopDelta / timeDelta\n      const magnitude = Math.sqrt(horizontalVelocity ** 2 + verticalVelocity ** 2)\n\n      currentVelocity = {\n        horizontal: horizontalVelocity,\n        vertical: verticalVelocity,\n        magnitude,\n      }\n    }\n\n    lastScrollLeft = currentScrollLeft\n    lastScrollTop = currentScrollTop\n    lastScrollTime = currentTime\n\n    return currentVelocity\n  }\n\n  const scheduleRAF = () => {\n    if (isScheduled || !latestEvent) return\n\n    isScheduled = true\n    rafId = requestAnimationFrame(() => {\n      if (latestEvent) {\n        onScroll(latestEvent, currentVelocity)\n        latestEvent = null\n      }\n      isScheduled = false\n    })\n  }\n\n  const handleScroll = (event: Event) => {\n    // Calculate velocity\n    calculateVelocity(event)\n\n    // Store latest event\n    latestEvent = event\n\n    // Schedule RAF if not already scheduled\n    scheduleRAF()\n\n    // Handle scroll end debouncing\n    if (onScrollEnd) {\n      if (debounceTimer !== null) {\n        clearTimeout(debounceTimer)\n      }\n      debounceTimer = window.setTimeout(() => {\n        onScrollEnd(event)\n        debounceTimer = null\n        // Reset velocity when scrolling stops\n        currentVelocity = { horizontal: 0, vertical: 0, magnitude: 0 }\n      }, debounceDelay)\n    }\n  }\n\n  const cleanup = () => {\n    if (rafId !== null) {\n      cancelAnimationFrame(rafId)\n      rafId = null\n    }\n    if (debounceTimer !== null) {\n      clearTimeout(debounceTimer)\n      debounceTimer = null\n    }\n    latestEvent = null\n    isScheduled = false\n  }\n\n  const getVelocity = () => currentVelocity\n\n  return {\n    handleScroll,\n    cleanup,\n    getVelocity,\n  }\n}\n\n/**\n * Composable for RAF-based scroll handling in Vue components\n */\nexport function useRAFScroll(options: {\n  onScroll: (event: Event, velocity: ScrollVelocity) => void\n  onScrollEnd?: (event: Event) => void\n  debounceDelay?: number\n  trackVelocity?: boolean\n}) {\n  const handler = createRAFScrollHandler(options)\n\n  // Cleanup on component unmount\n  if (typeof window !== 'undefined' && 'onUnmounted' in globalThis) {\n    const { onUnmounted } = globalThis as any\n    onUnmounted(() => handler.cleanup())\n  }\n\n  return handler\n}","/**\n * Happy Table Utility Modules\n *\n * Performance-optimized utilities for data grid operations\n * All utilities follow Vue 3 Composition API patterns\n */\n\n// Core virtualization\nexport { useVirtualizer, useHorizontalVirtualizer } from './virtualization'\nexport { useAdvancedVirtualizer } from './advanced-virtualization'\nexport { useBiDirectionalVirtualizer } from './bidirectional-virtualization'\nexport { useThreePaneVirtualizer } from './three-pane-virtualization'\nexport type { VirtualItem, VirtualizerOptions, VirtualizerReturn, VirtualColumn, HorizontalVirtualizerOptions, HorizontalVirtualizerReturn } from './virtualization'\nexport type {\n  AdvancedVirtualItem,\n  VirtualizerMetrics,\n  AdvancedVirtualizerOptions,\n  AdvancedVirtualizerReturn,\n} from './advanced-virtualization'\nexport type {\n  VirtualCell,\n  BiDirectionalVirtualizerOptions,\n  BiDirectionalVirtualizerReturn\n} from './bidirectional-virtualization'\nexport type {\n  ThreePaneVirtualizerOptions,\n  ThreePaneVirtualizerReturn,\n  PaneVirtualData,\n  CenterPaneVirtualData,\n  VirtualCell as ThreePaneVirtualCell\n} from './three-pane-virtualization'\n\n// Memory management\nexport {\n  useMemoryManagement,\n  WeakCache,\n  ResourceManager,\n  MemoryMonitor,\n  ObjectPool,\n  GCScheduler,\n  RowDataManager,\n  LazyArray,\n} from './memory-management'\n\n// Performance monitoring\nexport {\n  usePerformanceMonitoring,\n  benchmarkOperation,\n  FPSCounter,\n  RenderProfiler,\n  ScrollPerformanceTracker,\n  WebVitalsMonitor,\n  PerformanceTestSuite,\n} from './performance-monitoring'\nexport type { PerformanceMetrics } from './performance-monitoring'\n\n// DOM optimization\nexport {\n  ElementPool,\n  enableHardwareAcceleration,\n  disableHardwareAcceleration,\n  applyCSSContainment,\n  DOMBatcher,\n  EventDelegator,\n  useVisibilityObserver,\n  StyleBatcher,\n  createVirtualRowFactory,\n  MemoryLeakDetector,\n  createOptimizedScrollHandler,\n} from './dom-optimization'\n\n// Browser optimization\nexport {\n  BrowserFeatures,\n  HardwareAcceleration,\n  CriticalRenderingOptimizer,\n  OptimizedEventManager,\n  RAFScheduler,\n  IntersectionObserverPool,\n  BrowserOptimizations,\n  browserOptimizations,\n  PerformanceHints,\n} from './browser-optimization'\n\n// Data pipeline\nexport { useDataPipeline, DataPipelineUtils } from './data-pipeline'\nexport type {\n  DataPipelineInterceptor,\n  DataPipelineStage,\n  DataPipelineMetrics,\n  DataPipelineOptions,\n  DataPipelineReturn,\n  DataPipelineBenchmarkResult,\n} from './data-pipeline'\n\n// Logging utilities\nexport {\n  logger,\n  Logger,\n  ScopedLogger,\n  createLogger,\n  devTools\n} from './logger'\nexport type { LogLevel, LogContext } from './logger'\n\n// Platform detection utilities\nexport {\n  detectPlatform,\n  hasModifierKey,\n  getModifierKeyText,\n  getModifierKeySymbol,\n  formatShortcut,\n  formatShortcutSymbol,\n  type PlatformInfo,\n} from './platform'\n\n// Column configuration constants\nexport {\n  DEFAULT_COLUMN_WIDTH,\n  DEFAULT_MIN_COLUMN_WIDTH,\n  DEFAULT_MAX_COLUMN_WIDTH,\n  COLUMN_WIDTH_RANGE,\n  normalizeColumn,\n} from './column-constants'\n\n// ID generation utilities\nexport { generateComponentId, generateIdGroup } from './id-generator'\n\n// Column reordering helpers\nexport {\n  isColumnDropBlocked,\n  getColumnPinnedLocation,\n} from './column-reorder'\n\n// Utility constants\nexport const UTILS_VERSION = '1.1.0'\n\n// Feature detection\nexport const UtilityFeatures = {\n  ADVANCED_VIRTUALIZATION: true,\n  BIDIRECTIONAL_VIRTUALIZATION: true, // New feature flag\n  MEMORY_MANAGEMENT: true,\n  PERFORMANCE_MONITORING: true,\n  DOM_OPTIMIZATION: true,\n  BROWSER_OPTIMIZATION: true,\n  DATA_PIPELINE: true,\n  HARDWARE_ACCELERATION: typeof CSS !== 'undefined' && CSS.supports('transform', 'translateZ(0)'),\n  INTERSECTION_OBSERVER: typeof IntersectionObserver !== 'undefined',\n  RESIZE_OBSERVER: typeof ResizeObserver !== 'undefined',\n  PERFORMANCE_OBSERVER: typeof PerformanceObserver !== 'undefined',\n  WEB_WORKERS: typeof Worker !== 'undefined',\n  OFFSCREEN_CANVAS: typeof OffscreenCanvas !== 'undefined',\n} as const\n\n/**\n * Initialize all utility systems\n * Call this once during application startup for optimal performance\n */\nexport async function initializeUtilities(): Promise<void> {\n  // Initialize browser optimizations\n  if (typeof window !== 'undefined') {\n    const { initializeBrowserOptimizations } = await import('./browser-optimization')\n    initializeBrowserOptimizations()\n  }\n}\n\n/**\n * Get information about available utility features\n */\nexport function getUtilityInfo() {\n  return {\n    version: UTILS_VERSION,\n    features: UtilityFeatures,\n    modules: {\n      virtualization: 'Core virtual scrolling with dynamic sizing',\n      advancedVirtualization: 'Advanced virtual scrolling with velocity-based overscan',\n      bidirectionalVirtualization: 'Combined row and column virtualization for large grids',\n      threePaneVirtualization: 'Three-pane virtualization for frozen columns',\n      memoryManagement: 'Memory leak prevention and cleanup utilities',\n      performanceMonitoring: 'Real-time performance metrics and benchmarking',\n      domOptimization: 'DOM manipulation optimization and pooling',\n      browserOptimization: 'Browser-specific performance optimizations',\n      dataPipeline: 'High-performance data processing pipeline',\n    },\n  }\n}\n\n/**\n * Quick start utilities for common scenarios\n */\nexport const quickStartUtils = {\n  /**\n   * Setup basic virtualization\n   */\n  basicVirtualization: (count: number, itemHeight: number = 50) => ({\n    count,\n    getItemSize: () => itemHeight,\n    overscan: 5,\n    enabled: true,\n  }),\n\n  /**\n   * Setup high-performance virtualization for large datasets\n   */\n  highPerformanceVirtualization: (count: number, itemHeight: number = 50) => ({\n    count,\n    getItemSize: () => itemHeight,\n    overscanCount: 10,\n    enableDynamicOverscan: true,\n    scrollingDelay: 100,\n  }),\n\n  /**\n   * Setup bidirectional virtualization for large grids\n   */\n  bidirectionalVirtualization: (rowCount: number, rowHeight: number = 32, columnWidth: number = 150) => ({\n    rowCount,\n    getRowSize: () => rowHeight,\n    columns: [], // Will be provided from grid state\n    getColumnWidth: () => columnWidth,\n    overscan: { rows: 5, columns: 2 },\n    enabled: { vertical: true, horizontal: true },\n  }),\n\n  /**\n   * Setup memory management for large datasets\n   */\n  memoryOptimization: () => ({\n    enableGC: true,\n    poolSize: 100,\n    cacheSize: 1000,\n    cleanupInterval: 30000,\n  }),\n\n  /**\n   * Setup performance monitoring\n   */\n  performanceTracking: () => ({\n    enableFPS: true,\n    enableRenderProfiling: true,\n    enableMemoryTracking: true,\n    enableWebVitals: true,\n  }),\n}\n// Scroll optimization\nexport {\n  createRAFScrollHandler,\n  useRAFScroll,\n} from './scroll-optimization'\nexport type { ScrollVelocity } from './scroll-optimization'\n\n// Data type inference\nexport { inferDataType, inferDataTypeForColumn } from './infer-data-type'\n","/**\n * Renderer Registry - Dynamic renderer management and switching\n *\n * Manages multiple renderer instances and provides safe switching\n * between TableRenderer and ExcelRenderer (or other custom renderers).\n */\n\nimport type {\n  RendererFactory,\n  RendererInstance,\n  RendererOptions,\n  VirtualRow,\n} from './renderer-interface'\nimport type { GridAPI, GridState, ColumnDef, RowData } from '../../types'\nimport { createLogger } from '../../utils/logger'\n\n/**\n * Registry for managing renderer instances\n */\nexport class RendererRegistry {\n  private renderers = new Map<string, RendererFactory>()\n  private instances = new Map<string, RendererInstance>()\n  private currentRenderer: string | null = null\n  private logger = createLogger('RendererRegistry')\n\n  /**\n   * Register a renderer factory\n   */\n  register(name: string, factory: RendererFactory): void {\n    this.renderers.set(name, factory)\n  }\n\n  /**\n   * Unregister a renderer\n   */\n  unregister(name: string): void {\n    // Cleanup instance if exists\n    const instance = this.instances.get(name)\n    if (instance) {\n      instance.renderer.unmount()\n    }\n\n    this.renderers.delete(name)\n    this.instances.delete(name)\n\n    // If this was the current renderer, clear it\n    if (this.currentRenderer === name) {\n      this.currentRenderer = null\n    }\n  }\n\n  /**\n   * Get available renderer names\n   */\n  getAvailable(): string[] {\n    return Array.from(this.renderers.keys())\n  }\n\n  /**\n   * Check if a renderer is registered\n   */\n  has(name: string): boolean {\n    return this.renderers.has(name)\n  }\n\n  /**\n   * Create or get a renderer instance\n   */\n  getInstance(\n    name: string,\n    _host: HTMLElement,\n    _api: GridAPI,\n    options?: RendererOptions\n  ): RendererInstance | null {\n    // Check if factory exists\n    const factory = this.renderers.get(name)\n    if (!factory) {\n      this.logger.error(`Renderer '${name}' is not registered`)\n      return null\n    }\n\n    // Check if instance already exists and can be reused\n    let instance = this.instances.get(name)\n    if (instance) {\n      // Update with new options if provided\n      if (options && instance.renderer.updateConfig) {\n        instance.renderer.updateConfig(options)\n      }\n      return instance\n    }\n\n    // Create new instance\n    try {\n      const renderer = factory(options)\n      instance = {\n        renderer,\n        factory,\n        options: options || {},\n        metadata: {\n          createdAt: new Date(),\n          lastUsed: new Date(),\n          renderCount: 0,\n        },\n      }\n\n      this.instances.set(name, instance)\n      return instance\n    } catch (error) {\n      this.logger.error(`Failed to create renderer '${name}':`, error)\n      return null\n    }\n  }\n\n  /**\n   * Switch to a different renderer\n   */\n  async switchTo(\n    name: string,\n    host: HTMLElement,\n    api: GridAPI,\n    options?: RendererOptions\n  ): Promise<RendererInstance | null> {\n    try {\n      // Deactivate current renderer\n      if (this.currentRenderer) {\n        const current = this.instances.get(this.currentRenderer)\n        if (current) {\n          await current.renderer.unmount()\n        }\n      }\n\n      // Get or create new renderer instance\n      const newInstance = this.getInstance(name, host, api, options)\n      if (!newInstance) {\n        return null\n      }\n\n      // Activate new renderer\n      await newInstance.renderer.mount(host, api)\n      newInstance.metadata.lastUsed = new Date()\n\n      // Force a render to ensure proper display\n      const state = api.getState()\n      if (state) {\n        const virtualRows = this.buildVirtualRows(state, state.data || [])\n        newInstance.renderer.render(state, state.columns || [], virtualRows)\n        newInstance.metadata.renderCount++\n      }\n\n      this.currentRenderer = name\n      return newInstance\n    } catch (error) {\n      this.logger.error(`Failed to switch to renderer '${name}':`, error)\n      return null\n    }\n  }\n\n  /**\n   * Get the current active renderer\n   */\n  getCurrent(): RendererInstance | null {\n    if (!this.currentRenderer) return null\n    return this.instances.get(this.currentRenderer) || null\n  }\n\n  /**\n   * Get the current renderer name\n   */\n  getCurrentName(): string | null {\n    return this.currentRenderer\n  }\n\n  /**\n   * Force render on current renderer\n   */\n  render(state: GridState, columns: ColumnDef[], rows: RowData[]): void {\n    const current = this.getCurrent()\n    if (current) {\n      const virtualRows = this.buildVirtualRows(state, rows)\n      current.renderer.render(state, columns, virtualRows)\n      current.metadata.renderCount++\n    }\n  }\n\n  /**\n   * Update size on current renderer\n   */\n  updateSize(width: number, height: number): void {\n    const current = this.getCurrent()\n    if (current && current.renderer.resize) {\n      current.renderer.resize(width, height)\n    }\n  }\n\n  /**\n   * Cleanup all renderer instances\n   */\n  cleanup(): void {\n    for (const [name, instance] of this.instances) {\n      try {\n        instance.renderer.unmount()\n      } catch (error) {\n        this.logger.error(`Error cleaning up renderer '${name}':`, error)\n      }\n    }\n\n    this.instances.clear()\n    this.currentRenderer = null\n  }\n\n  /**\n   * Get renderer statistics\n   */\n  getStats(): {\n    registered: number\n    instances: number\n    current: string | null\n    renderers: Array<{\n      name: string\n      hasInstance: boolean\n      renderCount: number\n      lastUsed?: Date\n    }>\n  } {\n    const renderers = Array.from(this.renderers.keys()).map(name => {\n      const instance = this.instances.get(name)\n      return {\n        name,\n        hasInstance: !!instance,\n        renderCount: instance?.metadata.renderCount || 0,\n        lastUsed: instance?.metadata.lastUsed,\n      }\n    })\n\n    return {\n      registered: this.renderers.size,\n      instances: this.instances.size,\n      current: this.currentRenderer,\n      renderers,\n    }\n  }\n\n  private buildVirtualRows(state: GridState, rows: RowData[]): VirtualRow[] {\n    const rowHeight = state?.config?.rowHeight ?? 32\n\n    return rows.map((row, index) => {\n      const rawId = row?.id\n      const id = typeof rawId === 'string' || typeof rawId === 'number' ? rawId : index\n\n      return {\n        id,\n        index,\n        data: row,\n        top: index * rowHeight,\n        height: rowHeight,\n        visible: true,\n      }\n    })\n  }\n}\n\n/**\n * Global renderer registry instance\n */\nexport const rendererRegistry = new RendererRegistry()\n\n/**\n * Helper function to register common renderers\n */\nexport function registerCommonRenderers(): void {\n  // This would register TableRenderer, ExcelRenderer, etc.\n  // Implementation depends on actual renderer implementations\n  const logger = createLogger('RendererRegistry')\n  logger.info('Common renderers registration would happen here')\n}\n\n/**\n * Helper to check renderer compatibility\n */\nexport function checkRendererCompatibility(\n  name: string,\n  state: GridState\n): {\n  compatible: boolean\n  issues: string[]\n  recommendations: string[]\n} {\n  const issues: string[] = []\n  const recommendations: string[] = []\n\n  // Basic compatibility checks\n  if (!rendererRegistry.has(name)) {\n    issues.push(`Renderer '${name}' is not registered`)\n  }\n\n  // Check data size for performance considerations\n  const dataSize = state.data?.length || 0\n  if (name === 'excel' && dataSize > 50000) {\n    recommendations.push('Consider using pagination for large datasets in Excel mode')\n  }\n\n  if (name === 'table' && dataSize > 100000) {\n    recommendations.push('Enable virtualization for large datasets in Table mode')\n  }\n\n  // Check feature compatibility\n  const hasGrouping = !!(state as any).grouping\n  const hasPivot = !!(state as any).pivot\n\n  if (name === 'table' && (hasGrouping || hasPivot)) {\n    recommendations.push('Excel renderer might provide better support for grouping/pivot features')\n  }\n\n  return {\n    compatible: issues.length === 0,\n    issues,\n    recommendations,\n  }\n}\n\n/**\n * Performance monitoring for renderer switching\n */\nexport class RendererPerformanceMonitor {\n  private metrics = new Map<\n    string,\n    {\n      switchCount: number\n      avgSwitchTime: number\n      lastSwitch: number\n      errors: number\n    }\n  >()\n\n  recordSwitch(rendererName: string, duration: number, success: boolean): void {\n    const current = this.metrics.get(rendererName) || {\n      switchCount: 0,\n      avgSwitchTime: 0,\n      lastSwitch: 0,\n      errors: 0,\n    }\n\n    current.switchCount++\n    current.lastSwitch = Date.now()\n\n    if (success) {\n      // Update average switch time\n      current.avgSwitchTime =\n        (current.avgSwitchTime * (current.switchCount - 1) + duration) / current.switchCount\n    } else {\n      current.errors++\n    }\n\n    this.metrics.set(rendererName, current)\n  }\n\n  getMetrics(): Map<string, any> {\n    return new Map(this.metrics)\n  }\n\n  reset(): void {\n    this.metrics.clear()\n  }\n}\n\n/**\n * Default renderer selection logic\n */\nexport function selectOptimalRenderer(state: GridState): string {\n  const dataSize = state.data?.length || 0\n  const columnCount = state.columns?.length || 0\n  const hasComplexFeatures = !!(state as any).grouping || !!(state as any).pivot\n\n  // Simple heuristic for renderer selection\n  if (hasComplexFeatures || dataSize > 10000) {\n    return 'excel' // Better for complex operations\n  }\n\n  if (columnCount > 20) {\n    return 'excel' // Better for wide tables\n  }\n\n  return 'table' // Default to table renderer\n}\n\n/**\n * Create a renderer registry instance\n */\nexport function createRendererRegistry(): RendererRegistry {\n  return new RendererRegistry()\n}\n\n/**\n * Switch to a different renderer using the global registry\n */\nexport function switchRenderer(\n  name: string,\n  host: HTMLElement,\n  api: GridAPI,\n  options?: RendererOptions\n): Promise<RendererInstance | null> {\n  return rendererRegistry.switchTo(name, host, api, options)\n}\n\n/**\n * Get the current active renderer from global registry\n */\nexport function getCurrentRenderer(): RendererInstance | null {\n  return rendererRegistry.getCurrent()\n}\n\n/**\n * Get all available renderers from global registry\n */\nexport function getAvailableRenderers(): string[] {\n  return rendererRegistry.getAvailable()\n}\n","/**\n * Functional Columns Type Definitions\n *\n * Functional columns are non-data-binding columns that provide common grid interactions\n * such as sequence numbers, selection, expansion, dragging, and actions.\n */\n\nimport type { RowData, ColumnDef } from './index'\n\n/**\n * Functional column types\n */\nexport type FunctionalColumnType =\n  | 'seq'        // Sequence/row number column\n  | 'checkbox'   // Multi-selection column\n  | 'radio'      // Single-selection column\n  | 'drag'       // Row drag handle column\n  | 'actions'    // Action buttons column\n\n/**\n * Context passed to selection filter and validator functions\n */\nexport interface SelectionContext {\n  /** Zero-based row index in the current view */\n  rowIndex: number\n  /** The row data object */\n  rowData: RowData\n  /** Whether the row is currently filtered */\n  isFiltered: boolean\n  /** Whether the row is part of a group */\n  isGrouped: boolean\n  /** Number of rows currently selected (if available) */\n  selectedCount?: number\n}\n\n/**\n * Options for checkbox column (multi-selection)\n */\nexport interface CheckboxColumnOptions {\n  /** Whether to show indeterminate state in header */\n  showIndeterminate?: boolean\n}\n\n/**\n * Options for radio column (single-selection)\n */\nexport interface RadioColumnOptions {\n  /** Shared group name for radio inputs */\n  radioGroupName?: string\n  /** Optional header label */\n  headerLabel?: string\n}\n\n/**\n * Options for sequence column\n */\nexport interface SeqColumnOptions {\n  /** Starting number (default: 1) */\n  baseNumber?: number\n  /** Custom formatter for sequence numbers */\n  formatter?: (index: number, baseNumber: number) => string | number\n}\n\n/**\n * Result of a drag operation\n */\nexport interface DragResult {\n  /** Source row index */\n  sourceIndex: number\n  /** Destination row index */\n  destinationIndex: number\n  /** The dragged row data */\n  rowData: RowData\n}\n\n/**\n * Context provided when determining drag availability\n */\nexport interface DragContext {\n  /** Zero-based row index in the current view */\n  rowIndex: number\n}\n\n/**\n * Options for drag column\n */\nexport interface DragColumnOptions {\n  /** Callback when drag operation completes */\n  onDragEnd?: (result: DragResult) => void\n  /** Whether to enable cross-table dragging (requires plugin) */\n  crossTable?: boolean\n  /** Guard to determine whether a row can be dragged */\n  isRowDraggable?: (row: RowData, context: DragContext) => boolean | { disabled: boolean; reason?: string }\n  /** Provide a custom drag image element */\n  dragImageElement?: (row: RowData) => HTMLElement | null\n  /** Customize the text content shown in the default drag preview */\n  dragPreviewContent?: (row: RowData) => string\n}\n\n/**\n * Options for actions column\n */\nexport interface ActionsColumnOptions {\n  /** Default button configurations (if not using slots) */\n  buttons?: Array<{\n    label: string\n    icon?: string\n    onClick: (row: RowData) => void\n    disabled?: (row: RowData) => boolean\n    visible?: (row: RowData) => boolean\n  }>\n}\n\n/**\n * Base functional column definition (shared properties)\n */\nexport interface BaseFunctionalColumnDef extends Omit<ColumnDef, 'dataType' | 'field'> {\n  /** Functional column type */\n  type: FunctionalColumnType\n  /** Field is auto-generated for functional columns, but can be overridden */\n  field: string\n  /** Override default pinning (functional columns default to 'left', actions to 'right') */\n  pinned?: 'left' | 'right'\n  /** Override default width */\n  width?: number\n  /** Minimum width */\n  minWidth?: number\n  /** Maximum width */\n  maxWidth?: number\n  /** Whether the column can be resized (default: false for functional columns) */\n  resizable?: boolean\n  /** Whether the column can be reordered (default: false for functional columns) */\n  isDraggable?: boolean\n  /** Custom cell slot name */\n  cellSlot?: string\n  /** Custom header slot name */\n  headerSlot?: string\n}\n\n/**\n * Discriminated union of all functional column types\n * This provides type-safe access to functionalOptions based on column type\n */\nexport type FunctionalColumnDef =\n  | (BaseFunctionalColumnDef & {\n      type: 'checkbox'\n      functionalOptions?: CheckboxColumnOptions\n    })\n  | (BaseFunctionalColumnDef & {\n      type: 'radio'\n      functionalOptions?: RadioColumnOptions\n    })\n  | (BaseFunctionalColumnDef & {\n      type: 'seq'\n      functionalOptions?: SeqColumnOptions\n    })\n  | (BaseFunctionalColumnDef & {\n      type: 'drag'\n      functionalOptions?: DragColumnOptions\n    })\n  | (BaseFunctionalColumnDef & {\n      type: 'actions'\n      functionalOptions?: ActionsColumnOptions\n    })\n\n/**\n * Type guard to check if a column is a functional column\n */\nexport function isFunctionalColumn(column: ColumnDef): column is ColumnDef & { type: FunctionalColumnType } {\n  return 'type' in column && (\n    (column as any).type === 'seq' ||\n    (column as any).type === 'checkbox' ||\n    (column as any).type === 'radio' ||\n    (column as any).type === 'drag' ||\n    (column as any).type === 'actions'\n  )\n}\n\n/**\n * Default widths for functional columns (in pixels)\n */\nexport const FUNCTIONAL_COLUMN_DEFAULTS = {\n  seq: {\n    width: 48,\n    minWidth: 40,\n    pinned: 'left' as const,\n  },\n  checkbox: {\n    width: 52,\n    minWidth: 52,\n    pinned: 'left' as const,\n  },\n  radio: {\n    width: 52,\n    minWidth: 52,\n    pinned: 'left' as const,\n  },\n  drag: {\n    width: 48,\n    minWidth: 48,\n    pinned: 'left' as const,\n  },\n  actions: {\n    width: 120,\n    minWidth: 80,\n    pinned: 'right' as const,\n  },\n} as const\n\n/**\n * Default order for left-pinned functional columns\n */\nexport const DEFAULT_LEFT_FUNCTIONAL_ORDER: FunctionalColumnType[] = [\n  'drag',\n  'checkbox',\n  'radio',\n  'seq',\n]\n","/**\n * Utility functions for functional columns\n */\n\nimport type {\n  ColumnDef,\n  InternalColumnDef,\n  FunctionalColumnDef,\n  FunctionalColumnType,\n} from '../types'\nimport {\n  isFunctionalColumn,\n  FUNCTIONAL_COLUMN_DEFAULTS,\n  DEFAULT_LEFT_FUNCTIONAL_ORDER,\n} from '../types/functional-columns'\n\n// Re-export for convenience\nexport { isFunctionalColumn }\n\n/**\n * Generate a unique ID for a functional column\n */\nexport function generateFunctionalColumnId(type: FunctionalColumnType, index: number = 0): string {\n  return `__functional_${type}_${index}`\n}\n\n/**\n * Normalize a functional column definition with defaults\n */\nexport function normalizeFunctionalColumn(\n  col: FunctionalColumnDef,\n  index: number = 0\n): InternalColumnDef {\n  const defaults = FUNCTIONAL_COLUMN_DEFAULTS[col.type]\n\n  return {\n    ...col,\n    id: col.id || generateFunctionalColumnId(col.type, index),\n    field: col.field || `__functional_${col.type}`,\n    title: col.title || '',\n    pinned: col.pinned || defaults.pinned,\n    width: col.width ?? defaults.width,\n    minWidth: col.minWidth ?? defaults.minWidth,\n    resizable: col.resizable ?? false,\n    isDraggable: col.isDraggable ?? false,\n    sortable: false,\n    filterable: false,\n    visible: col.visible ?? true,\n  } as InternalColumnDef\n}\n\n/**\n * Create a default functional column definition\n */\nexport function createDefaultFunctionalColumn(type: FunctionalColumnType, index: number = 0): FunctionalColumnDef {\n  const defaults = FUNCTIONAL_COLUMN_DEFAULTS[type]\n\n  const base = {\n    type,\n    id: generateFunctionalColumnId(type, index),\n    field: `__functional_${type}`,\n    title: '',\n    pinned: defaults.pinned,\n    width: defaults.width,\n    minWidth: defaults.minWidth,\n  }\n\n  // Return with proper discriminated union type\n  switch (type) {\n    case 'checkbox':\n      return { ...base, type: 'checkbox' } as FunctionalColumnDef\n    case 'radio':\n      return { ...base, type: 'radio' } as FunctionalColumnDef\n    case 'seq':\n      return { ...base, type: 'seq' } as FunctionalColumnDef\n    case 'drag':\n      return { ...base, type: 'drag' } as FunctionalColumnDef\n    case 'actions':\n      return { ...base, type: 'actions' } as FunctionalColumnDef\n    default:\n      return { ...base, type: 'seq' } as FunctionalColumnDef\n  }\n}\n\n/**\n * Merge functional columns from props and columnDefs\n * Deduplicates by type and maintains order\n */\nexport function mergeFunctionalColumns(\n  propsColumns: FunctionalColumnType[] | boolean | undefined,\n  columnDefs: ColumnDef[]\n): ColumnDef[] {\n  // Extract existing functional columns from columnDefs\n  const existingFunctional = columnDefs.filter(isFunctionalColumn)\n  const existingTypes = new Set(existingFunctional.map(c => (c as any).type as FunctionalColumnType))\n\n  // Determine which types to add from props\n  const propsTypes: FunctionalColumnType[] = Array.isArray(propsColumns)\n    ? propsColumns\n    : propsColumns === true\n      ? [] // true means use only what's in columnDefs\n      : []\n\n  // Create missing functional columns from props\n  const additionalColumns = propsTypes\n    .filter(type => !existingTypes.has(type))\n    .map((type, index) => createDefaultFunctionalColumn(type, existingFunctional.length + index))\n\n  // Merge and return - cast to ColumnDef[] since FunctionalColumnDef extends ColumnDef\n  return [...additionalColumns, ...columnDefs] as ColumnDef[]\n}\n\n/**\n * Sort functional columns by default order\n * Left-pinned functional columns: drag → checkbox → radio → seq\n * Right-pinned: actions\n * Non-functional: preserved order\n */\nexport function sortFunctionalColumns(columns: InternalColumnDef[]): InternalColumnDef[] {\n  const functional = columns.filter(isFunctionalColumn)\n  const nonFunctional = columns.filter(c => !isFunctionalColumn(c))\n\n  const leftFunctional = functional\n    .filter(c => c.pinned === 'left')\n    .sort((a, b) => {\n      const aType = (a as any).type as FunctionalColumnType\n      const bType = (b as any).type as FunctionalColumnType\n      const aIndex = DEFAULT_LEFT_FUNCTIONAL_ORDER.indexOf(aType)\n      const bIndex = DEFAULT_LEFT_FUNCTIONAL_ORDER.indexOf(bType)\n      return (aIndex === -1 ? 999 : aIndex) - (bIndex === -1 ? 999 : bIndex)\n    })\n\n  const rightFunctional = functional.filter(c => c.pinned === 'right')\n\n  return [\n    ...leftFunctional,\n    ...nonFunctional,\n    ...rightFunctional,\n  ]\n}\n\n/**\n * Enforce mutual exclusivity for selection columns (checkbox/radio).\n * If both exist or duplicates exist, keep the first encountered among\n * checkbox/radio in the original input order and remove the rest.\n * Also deduplicate multiple instances of the same selection type.\n */\nexport function enforceSelectionColumnExclusivity(columns: InternalColumnDef[]): InternalColumnDef[] {\n  let seenSelection = false\n  return columns.filter(col => {\n    if (!isFunctionalColumn(col)) return true\n    const t = (col as any).type as FunctionalColumnType\n    if (t === 'checkbox' || t === 'radio') {\n      if (seenSelection) return false\n      seenSelection = true\n      return true\n    }\n    return true\n  })\n}\n\n/**\n * Validate functional column dependencies\n * Returns validation result with error message if invalid\n */\nexport interface FunctionalColumnValidation {\n  valid: boolean\n  error?: string\n  columnId?: string\n}\n\nexport function validateFunctionalColumn(\n  col: FunctionalColumnDef,\n  hasPlugin: (name: string) => boolean\n): FunctionalColumnValidation {\n  // Validate drag column requires drag-drop plugin\n  if (col.type === 'drag') {\n    if (!hasPlugin('drag-drop')) {\n      return {\n        valid: false,\n        error: 'Drag column requires \"drag-drop\" plugin. Please install it or remove the drag column.',\n        columnId: col.id,\n      }\n    }\n  }\n\n  // Add more validations as needed\n  return { valid: true }\n}\n\n/**\n * Check if selection mode is compatible with functional columns\n */\nexport function validateSelectionMode(\n  columns: ColumnDef[],\n  selectionMode: string | undefined\n): { valid: boolean; warning?: string; suggestedMode?: string } {\n  const hasCheckbox = columns.some(c => isFunctionalColumn(c) && (c as FunctionalColumnDef).type === 'checkbox')\n  const hasRadio = columns.some(c => isFunctionalColumn(c) && (c as FunctionalColumnDef).type === 'radio')\n\n  if (hasCheckbox && selectionMode !== 'multiple') {\n    return {\n      valid: false,\n      warning: 'Checkbox column detected but selectionMode is not \"multiple\". Auto-adjusting to \"multiple\".',\n      suggestedMode: 'multiple',\n    }\n  }\n\n  if (hasRadio && selectionMode !== 'single') {\n    return {\n      valid: false,\n      warning: 'Radio column detected but selectionMode is not \"single\". Auto-adjusting to \"single\".',\n      suggestedMode: 'single',\n    }\n  }\n\n  if (hasCheckbox && hasRadio) {\n    return {\n      valid: false,\n      warning: 'Both checkbox and radio columns detected. Please use only one selection column type.',\n    }\n  }\n\n  return { valid: true }\n}\n","/**\n * useGridState - The \"Brain\" of Happy Table\n *\n * Smart Composable implementing the single source of truth for grid state.\n * Follows Vue 3 reactivity patterns optimized for large datasets (100k+ rows).\n * Serves as the plugin host and implements the complete data processing pipeline.\n *\n * Architecture: Smart Composable + Plugin Host + Capability System\n * Performance: Strategic reactivity with performance optimizations\n * Pipeline: Raw Data → Filtered → Sorted → Grouped → Virtualized → Rendered\n */\n\nimport { ref, reactive, computed, watch, markRaw, onUnmounted, type ComputedRef } from 'vue'\nimport type { GridConfig, ColumnDef, RowData, GridAPI, GridPlugin, InternalColumnDef } from '../types'\nimport { inferDataTypeForColumn } from '../utils/infer-data-type'\nimport { createPluginRegistry, type UnifiedPluginRegistry, type ErrorHandlingExtension, type CapabilityExtension } from '../plugins'\nimport { createLogger } from '../utils'\nimport { createRendererRegistry, type RendererRegistry } from '../renderers/base/renderer-registry'\nimport type { RendererFactory } from '../renderers/base/renderer-interface'\nimport {\n  DEFAULT_COLUMN_WIDTH,\n  DEFAULT_MIN_COLUMN_WIDTH,\n  DEFAULT_MAX_COLUMN_WIDTH,\n} from '../utils/column-constants'\nimport {\n  isFunctionalColumn,\n  normalizeFunctionalColumn,\n  sortFunctionalColumns,\n  enforceSelectionColumnExclusivity,\n} from '../utils/functional-columns'\nimport type { FunctionalColumnDef } from '../types/functional-columns'\n\n// Performance-optimized selection tracking using Set with stable references\nclass OptimizedSelection {\n  private selection = new Set<string | number>()\n  private callbacks = new Set<() => void>()\n\n  add(id: string | number): boolean {\n    if (this.selection.has(id)) return false\n    this.selection.add(id)\n    this.notifyChange()\n    return true\n  }\n\n  delete(id: string | number): boolean {\n    if (!this.selection.has(id)) return false\n    this.selection.delete(id)\n    this.notifyChange()\n    return true\n  }\n\n  clear(): void {\n    if (this.selection.size === 0) return\n    this.selection.clear()\n    this.notifyChange()\n  }\n\n  has(id: string | number): boolean {\n    return this.selection.has(id)\n  }\n\n  toArray(): (string | number)[] {\n    return Array.from(this.selection)\n  }\n\n  get size(): number {\n    return this.selection.size\n  }\n\n  private notifyChange(): void {\n    this.callbacks.forEach(callback => callback())\n  }\n\n  subscribe(callback: () => void): () => void {\n    this.callbacks.add(callback)\n    return () => this.callbacks.delete(callback)\n  }\n}\n\n// Debounced update utility for high-frequency operations\nfunction createDebouncer<T extends (...args: unknown[]) => void>(\n  fn: T,\n  delay: number\n): T & { cancel: () => void } {\n  let timeoutId: number | null = null\n\n  const debounced = ((...args: Parameters<T>) => {\n    if (timeoutId) {\n      clearTimeout(timeoutId)\n    }\n    timeoutId = window.setTimeout(() => {\n      fn(...args)\n    }, delay)\n  }) as T & { cancel: () => void }\n\n  debounced.cancel = () => {\n    if (timeoutId) {\n      clearTimeout(timeoutId)\n      timeoutId = null\n    }\n  }\n\n  return debounced\n}\n\n// Cache implementation for expensive computations\nclass ComputedCache<T> {\n  private cache = new Map<string, { value: T; timestamp: number }>()\n  private readonly ttl: number\n\n  constructor(ttl: number = 10000) {\n    this.ttl = ttl\n  }\n\n  get(key: string): T | undefined {\n    const cached = this.cache.get(key)\n    if (!cached) return undefined\n\n    if (Date.now() - cached.timestamp > this.ttl) {\n      this.cache.delete(key)\n      return undefined\n    }\n\n    return cached.value\n  }\n\n  set(key: string, value: T): void {\n    this.cache.set(key, {\n      value,\n      timestamp: Date.now(),\n    })\n  }\n\n  clear(): void {\n    this.cache.clear()\n  }\n\n  cleanup(): void {\n    const now = Date.now()\n    for (const [key, { timestamp }] of this.cache.entries()) {\n      if (now - timestamp > this.ttl) {\n        this.cache.delete(key)\n      }\n    }\n  }\n}\n\n// Performance-optimized reactive state interface\ninterface GridReactiveState {\n  // High-frequency updates - use ref for deep reactivity\n  scrollPosition: { top: number; left: number }\n  focusedCell: { rowId: string | number; columnId: string } | null\n\n  // Large datasets - use markRaw for optimal performance\n  rawData: RowData[]\n  processedData: RowData[] // Data after capability processing\n\n  // Configuration - use reactive for nested object updates\n  columns: InternalColumnDef[]\n  config: GridConfig\n\n  // UI state - standard ref for boolean/primitive values\n  loading: boolean\n  error: string | null\n  virtualizationEnabled: boolean\n\n  // Performance tracking\n  renderMetrics: {\n    lastRenderTime: number\n    avgRenderTime: number\n    renderCount: number\n  }\n}\n\n// Enhanced event system for plugins\nclass EventEmitter {\n  private listeners = new Map<string, Set<(...args: unknown[]) => void>>()\n  private logger = createLogger({ module: 'EventEmitter', operation: 'useGridState' })\n\n  on(event: string, handler: (...args: unknown[]) => void): () => void {\n    if (!this.listeners.has(event)) {\n      this.listeners.set(event, new Set())\n    }\n    const listeners = this.listeners.get(event)\n    if (listeners) {\n      listeners.add(handler)\n    }\n\n    return () => {\n      this.listeners.get(event)?.delete(handler)\n    }\n  }\n\n  off(event: string, handler: (...args: unknown[]) => void): void {\n    this.listeners.get(event)?.delete(handler)\n  }\n\n  emit(event: string, ...args: unknown[]): void {\n    const eventListeners = this.listeners.get(event)\n    if (eventListeners) {\n      eventListeners.forEach(handler => {\n        try {\n          handler(...args)\n        } catch (error) {\n          this.logger.error(`Error in event handler for '${event}':`, { module: 'useGridState', event }, error)\n        }\n      })\n    }\n  }\n\n  clear(): void {\n    this.listeners.clear()\n  }\n}\n\n/**\n * @internal\n * Processes user-defined columns to create internal column representations.\n * - Normalizes functional columns with their defaults\n * - Applies default widths to data columns\n * - Sorts functional columns in the correct order\n * - Calculates properties for pinned columns (`isLastPinned`, `isFirstRightPinned`).\n */\nfunction processColumns(\n  columns: ColumnDef[],\n  hasPlugin?: (name: string) => boolean,\n  rawSample?: RowData[]\n): InternalColumnDef[] {\n  const processedColumns: InternalColumnDef[] = columns.map((col, index) => {\n    // Check if this is a functional column\n    if (isFunctionalColumn(col)) {\n      // Use normalizeFunctionalColumn for functional columns\n      const normalized = normalizeFunctionalColumn(col as FunctionalColumnDef, index)\n\n      // Disable drag handle if drag-drop plugin is not installed\n      if ((normalized as any).type === 'drag') {\n        const pluginAvailable = hasPlugin ? hasPlugin('drag-drop') : false\n        if (!pluginAvailable) {\n          // Attach a disabling guard so the UI remains consistent but non-interactive\n          const opts = (normalized as any).functionalOptions || {}\n          ;(normalized as any).functionalOptions = {\n            ...opts,\n            isRowDraggable: () => ({ disabled: true, reason: 'Drag-drop plugin not installed' }),\n          }\n        }\n      }\n\n      return normalized\n    }\n\n    // Standard data column processing\n    const inferredType = col.dataType || (rawSample && rawSample.length > 0 ? inferDataTypeForColumn(rawSample, col) : undefined)\n    return {\n      ...col,\n      dataType: inferredType || col.dataType,\n      width: col.width ?? DEFAULT_COLUMN_WIDTH,\n      minWidth: col.minWidth ?? DEFAULT_MIN_COLUMN_WIDTH,\n      maxWidth: col.maxWidth ?? DEFAULT_MAX_COLUMN_WIDTH,\n      isLastPinned: false,\n      isFirstRightPinned: false,\n    }\n  })\n\n  // Enforce mutual exclusivity for selection columns\n  const exclusiveColumns = enforceSelectionColumnExclusivity(processedColumns)\n\n  // Sort functional columns to maintain consistent order\n  const sortedColumns = sortFunctionalColumns(exclusiveColumns)\n\n  // Calculate pinned column flags\n  const leftPinned = sortedColumns.filter(c => c.pinned === 'left')\n  const rightPinned = sortedColumns.filter(c => c.pinned === 'right')\n\n  if (leftPinned.length > 0) {\n    const lastLeftPinned = leftPinned[leftPinned.length - 1]\n    if (lastLeftPinned) {\n      lastLeftPinned.isLastPinned = true\n    }\n  }\n\n  if (rightPinned.length > 0 && rightPinned[0]) {\n    rightPinned[0].isFirstRightPinned = true\n  }\n\n  return sortedColumns\n}\n\nexport function useGridState(\n  initialConfig: Partial<GridConfig> = {},\n  initialPlugins: GridPlugin[] = []\n) {\n  // Logger for useGridState\n  const logger = createLogger('useGridState')\n\n  // 1. PERFORMANCE INFRASTRUCTURE\n  // Optimized selection tracking\n  const selectionManager = new OptimizedSelection()\n  const selectionVersion = ref(0)\n\n  // Subscribe to selection changes\n  const unsubscribeSelection = selectionManager.subscribe(() => {\n    selectionVersion.value++\n  })\n\n  // Computed cache for expensive operations\n  const computedCache = new ComputedCache<RowData[] | number | boolean>(10000)\n\n  // Enhanced event system\n  const eventEmitter = new EventEmitter()\n\n  // Memory cleanup registry\n  const cleanupFunctions = new Set<() => void>()\n\n  // Cell renderer registry\n  const cellRenderers = new Map<string, unknown>() // Vue component type\n\n  // Grid renderer registry (using RendererRegistry system)\n  const rendererRegistry: RendererRegistry = createRendererRegistry()\n  let pendingRenderFrame: number | null = null\n\n  // 2. REACTIVE STATE ARCHITECTURE\n  // Strategic use of ref types for optimal performance\n  const state = reactive<GridReactiveState>({\n    // High-frequency updates requiring deep reactivity\n    scrollPosition: { top: 0, left: 0 },\n    focusedCell: null,\n\n    // Large datasets - shallow reactivity with markRaw for immutable data\n    rawData: [],\n    processedData: [],\n\n    // Configuration objects\n    columns: [],\n    config: {\n      rowHeight: 32,\n      headerHeight: 40,\n      virtualizationThreshold: 1000,\n      enableVirtualization: true,\n      ...initialConfig,\n    },\n\n    // UI state\n    loading: false,\n    error: null,\n    virtualizationEnabled: false,\n\n    // Performance metrics\n    renderMetrics: {\n      lastRenderTime: 0,\n      avgRenderTime: 0,\n      renderCount: 0,\n    },\n  })\n\n  // 3. GRID API IMPLEMENTATION\n  // Enhanced plugin communication interface with capabilities\n  const api: GridAPI = {\n    // Data operations with performance optimization\n    setData: (data: RowData[]) => {\n      // Mark data as immutable for Vue's reactivity optimization\n      const markedData = markRaw([...data])\n      state.rawData = markedData\n\n      // Auto-enable virtualization for large datasets\n      if (data.length >= state.config.virtualizationThreshold) {\n        state.virtualizationEnabled = true\n      }\n\n      // Clear cache when data changes\n      computedCache.clear()\n\n      // Process data through capability pipeline\n      processDataThroughPipeline(markedData)\n\n      // If columns exist and some are missing dataType, infer now that data is available\n      if (state.columns && state.columns.length > 0) {\n        const needsInference = state.columns.some(col => !col.dataType)\n        if (needsInference) {\n          state.columns = processColumns(state.columns as unknown as ColumnDef[], (name: string) => !!pluginRegistry.get(name), state.rawData)\n          eventEmitter.emit('columns-changed', state.columns)\n        }\n      }\n\n      // Emit data change event\n      eventEmitter.emit('data-changed', markedData)\n    },\n\n    getData: () => state.rawData,\n    getFilteredData: () => state.processedData,\n\n    // Optimized selection operations\n    selectRow: (rowId: string | number) => {\n      selectionManager.add(rowId)\n    },\n\n    selectRows: (rowIds: (string | number)[]) => {\n      rowIds.forEach(id => selectionManager.add(id))\n    },\n\n    clearSelection: () => {\n      selectionManager.clear()\n    },\n\n    // Column operations\n    setColumns: (columns: ColumnDef[]) => {\n      state.columns = processColumns(columns, (name: string) => !!pluginRegistry.get(name), state.rawData)\n      eventEmitter.emit('columns-changed', state.columns)\n      api.renderWithActiveRenderer?.()\n    },\n\n    updateColumn: (columnId: string, updates: Partial<ColumnDef>) => {\n      const index = state.columns.findIndex(col => col.id === columnId)\n      if (index !== -1) {\n        const originalColumn = state.columns[index]\n        if (!originalColumn) return;\n\n        const updatedColumn: InternalColumnDef = {\n          ...originalColumn,\n          ...updates,\n          id: originalColumn.id, // Explicitly preserve the original ID\n          field: updates.field ?? originalColumn.field,\n        };\n\n        const newColumns = [...state.columns]\n        newColumns[index] = updatedColumn\n\n        state.columns = processColumns(newColumns, (name: string) => !!pluginRegistry.get(name), state.rawData)\n        eventEmitter.emit('column-updated', { columnId, updates })\n        api.renderWithActiveRenderer?.()\n      }\n    },\n\n    // State access\n    getState: (): import('../types').GridState => ({\n      data: state.processedData,\n      columns: state.columns,\n      config: state.config,\n      selectedRows: new Set(selectionManager.toArray()),\n      focusedCell: state.focusedCell,\n      scrollPosition: state.scrollPosition,\n      loading: state.loading,\n      error: state.error,\n    }),\n\n    // Configuration\n    updateConfig: (updates: Partial<GridConfig>) => {\n      state.config = { ...state.config, ...updates }\n\n      // Clear cache on config changes\n      computedCache.clear()\n\n      // Process data again if needed\n      if (state.rawData.length > 0) {\n        processDataThroughPipeline(state.rawData)\n      }\n\n      // Emit config change event\n      eventEmitter.emit('config-changed', state.config)\n    },\n\n    // Enhanced event system\n    emit: <K extends keyof import('../types').GridEvents>(event: K, payload: import('../types').GridEvents[K]) => {\n      eventEmitter.emit(event, payload as unknown)\n    },\n\n    on: <K extends keyof import('../types').GridEvents>(event: K, handler: (payload: import('../types').GridEvents[K]) => void) => {\n      return eventEmitter.on(event, handler as (...args: unknown[]) => void)\n    },\n\n    off: <K extends keyof import('../types').GridEvents>(event: K, handler: (payload: import('../types').GridEvents[K]) => void) => {\n      eventEmitter.off(event, handler as (...args: unknown[]) => void)\n    },\n\n    // Enhanced plugin system\n    loadPlugin: async (plugin: GridPlugin) => {\n      const result = await pluginRegistry.register(plugin)\n      return result.success\n    },\n\n    unloadPlugin: async (pluginName: string) => {\n      const result = await pluginRegistry.unregister(pluginName)\n      return result.success\n    },\n\n    getPlugin: (pluginName: string) => {\n      return pluginRegistry.get(pluginName)\n    },\n\n    listPlugins: () => {\n      return pluginRegistry.list()\n    },\n\n    getPluginErrors: () => {\n      const errorExt = pluginRegistry.getExtension<ErrorHandlingExtension>('error-handling')\n      return errorExt?.getErrors() || new Map()\n    },\n\n    // Cell renderer registration\n    registerCellRenderer: (name: string, component: unknown) => {\n      cellRenderers.set(name, component)\n      eventEmitter.emit('cell-renderer-registered', { name, component })\n    },\n\n    unregisterCellRenderer: (name: string) => {\n      cellRenderers.delete(name)\n      eventEmitter.emit('cell-renderer-unregistered', { name })\n    },\n\n    // Grid renderer registration\n    registerRenderer: (name: string, factory: RendererFactory) => {\n      rendererRegistry.register(name, factory)\n      eventEmitter.emit('renderer-registered', { name, factory })\n    },\n\n    setRenderer: async (name: string) => {\n      logger.debug(`Switching to renderer: ${name}`)\n      // Note: This is a simplified version. Full switching requires host element and state\n      // The actual switch happens in initializeRenderer when host is available\n      const available = rendererRegistry.getAvailable()\n      if (available.includes(name)) {\n        eventEmitter.emit('renderer-changed', { name })\n        return true\n      }\n      logger.warn(`Renderer '${name}' not registered. Available: ${available.join(', ')}`)\n      return false\n    },\n\n    getRenderer: () => {\n      return rendererRegistry.getCurrentName() || 'table'\n    },\n\n    // Renderer system methods (full implementations)\n    renderWithActiveRenderer: () => {\n      const executeRender = () => {\n        const current = rendererRegistry.getCurrent()\n        if (!current) {\n          return\n        }\n\n        const currentState = api.getState()\n        rendererRegistry.render(currentState, state.columns, state.processedData)\n        logger.debug('Rendered with active renderer')\n      }\n\n      if (typeof window === 'undefined' || typeof window.requestAnimationFrame === 'undefined') {\n        executeRender()\n        return\n      }\n\n      if (pendingRenderFrame !== null) {\n        return\n      }\n\n      pendingRenderFrame = window.requestAnimationFrame(() => {\n        pendingRenderFrame = null\n        executeRender()\n      })\n    },\n\n    initializeRenderer: async (hostElement: HTMLElement) => {\n      try {\n        // Get the configured renderer name from config\n        const rendererName = state.config.renderer || 'table'\n\n        logger.debug(`Initializing renderer: ${rendererName}`)\n\n        // Check if renderer is registered\n        if (!rendererRegistry.has(rendererName)) {\n          throw new Error(`Renderer '${rendererName}' is not registered`)\n        }\n\n        // Switch to the renderer (this will mount it)\n        const instance = await rendererRegistry.switchTo(rendererName, hostElement, api, state.config)\n\n        if (!instance) {\n          throw new Error(`Failed to initialize renderer '${rendererName}'`)\n        }\n\n        logger.debug(`Renderer '${rendererName}' initialized successfully`)\n        return true\n      } catch (error) {\n        logger.error('Renderer initialization failed:', { module: 'useGridState' }, error)\n        return false\n      }\n    },\n\n    resizeRenderer: (width: number, height: number) => {\n      rendererRegistry.updateSize(width, height)\n      logger.debug(`Renderer resized to ${width}x${height}`)\n    },\n\n    getAvailableRenderers: () => {\n      return rendererRegistry.getAvailable()\n    },\n\n    getActiveRendererInstance: () => {\n      return rendererRegistry.getCurrent()\n    },\n\n    // Memory management\n    registerMemoryCleanup: (cleanup: () => void) => {\n      cleanupFunctions.add(cleanup)\n    },\n  }\n\n  // Initialize plugin registry with API reference\n  const pluginRegistry: UnifiedPluginRegistry = createPluginRegistry(api)\n\n  // Helper function to get data pipeline capability (follows Law of Demeter)\n  function getDataPipelineCapability() {\n    const capabilityExt = pluginRegistry.getExtension<CapabilityExtension>('capabilities')\n    return capabilityExt?.get('data-pipeline')\n  }\n\n  // 4. DATA PROCESSING PIPELINE WITH CAPABILITY INTEGRATION\n  // Process data through all registered data pipeline capabilities\n  function processDataThroughPipeline(data: RowData[]): void {\n    const dataPipelineCapability = getDataPipelineCapability()\n\n    if (!dataPipelineCapability) {\n      // Fallback to built-in processing if capability system is not available\n      state.processedData = markRaw([...data])\n      return\n    }\n\n    const start = (typeof performance !== 'undefined' && performance.now) ? performance.now() : Date.now()\n    let stageIndex = 0 // 1:filter, 2:sort, 3:transform, 4:grouping, 5:aggregation\n\n    try {\n      // Process data through the capability pipeline in order: filter -> sort -> transform -> grouping -> aggregation\n      let processedData = data\n\n      // 1. Filter\n      stageIndex = 1\n      processedData = dataPipelineCapability.processData(processedData, 'filter')\n\n      // 2. Sort\n      stageIndex = 2\n      processedData = dataPipelineCapability.processData(processedData, 'sort')\n\n      // 3. Transform\n      stageIndex = 3\n      processedData = dataPipelineCapability.processData(processedData, 'transform')\n\n      // 4. Grouping (if needed)\n      stageIndex = 4\n      processedData = dataPipelineCapability.processData(processedData, 'grouping')\n\n      // 5. Aggregation (if needed)\n      stageIndex = 5\n      processedData = dataPipelineCapability.processData(processedData, 'aggregation')\n\n      // Mark final data as immutable\n      state.processedData = markRaw(processedData)\n\n      // Emit final processed event with metrics matching type definition\n      const end = (typeof performance !== 'undefined' && performance.now) ? performance.now() : Date.now()\n      eventEmitter.emit('data-pipeline-complete', {\n        originalCount: data.length,\n        processedCount: state.processedData.length,\n        processingTime: end - start,\n        stagesCompleted: 5,\n      } as any)\n    } catch (error) {\n      logger.error('Error processing data through pipeline:', { module: 'useGridState' }, error)\n      // Fallback to raw data on error\n      state.processedData = markRaw([...data])\n      eventEmitter.emit('data-pipeline-error', { error, stage: stageIndex } as any)\n    }\n  }\n\n  // Virtualized data computation with performance optimization\n  const virtualizedDataComputed: ComputedRef<{\n    visibleRows: RowData[]\n    startIndex: number\n    endIndex: number\n    totalHeight: number\n  }> = computed(() => {\n    const data = state.processedData\n    const { rowHeight } = state.config\n\n    // Always return all data since we're using external virtualization\n    const result = {\n      visibleRows: data,\n      startIndex: 0,\n      endIndex: data.length - 1,\n      totalHeight: data.length * rowHeight,\n    }\n\n    // Emit virtualization event\n    eventEmitter.emit('data-processed', { stage: 'virtualization', data: result.visibleRows })\n\n    return result\n  })\n\n  // 5. DEBOUNCED UPDATE FUNCTIONS\n  // High-frequency operation optimization\n  const debouncedDataUpdate = createDebouncer(() => {\n    if (state.rawData.length > 0) {\n      processDataThroughPipeline(state.rawData)\n    }\n  }, 16) // ~60fps\n\n  // 6. PERFORMANCE WATCHERS\n  // Optimized watchers with proper cleanup\n  const watchers: (() => void)[] = []\n\n  // Watch for data changes with debouncing\n  watchers.push(\n    watch(\n      () => state.rawData,\n      () => {\n        debouncedDataUpdate()\n      },\n      { flush: 'post' }\n    )\n  )\n\n  // Watch for config changes that affect data processing\n  watchers.push(\n    watch(\n      () => [state.config.sort, state.config.filters],\n      () => {\n        debouncedDataUpdate()\n      },\n      { flush: 'post', deep: true }\n    )\n  )\n\n  // Watch virtualization threshold\n  watchers.push(\n    watch(\n      [() => state.processedData.length, () => state.config.virtualizationThreshold],\n      ([dataLength, threshold]) => {\n        state.virtualizationEnabled = dataLength >= threshold\n      }\n    )\n  )\n\n  // Listen for data pipeline events to trigger updates\n  eventEmitter.on('data-interceptor-registered', () => {\n    debouncedDataUpdate()\n  })\n\n  eventEmitter.on('data-interceptor-removed', () => {\n    debouncedDataUpdate()\n  })\n\n  eventEmitter.on('data-refresh-requested', () => {\n    debouncedDataUpdate()\n  })\n\n  // Trigger render when data processing is complete\n  eventEmitter.on('data-pipeline-complete', () => {\n    api.renderWithActiveRenderer?.()\n  })\n\n  // Periodic cache cleanup\n  const cacheCleanupInterval = setInterval(() => {\n    computedCache.cleanup()\n  }, 30000) // Clean every 30 seconds\n\n  // 7. PLUGIN INITIALIZATION\n  // Load initial plugins\n  if (initialPlugins.length > 0) {\n    initialPlugins.forEach(plugin => {\n      try {\n        api.loadPlugin(plugin)\n      } catch (error) {\n        logger.error(`Failed to load initial plugin ${plugin.name}:`, { module: 'useGridState', plugin: plugin.name }, error)\n      }\n    })\n  }\n\n  // 8. MEMORY MANAGEMENT AND CLEANUP\n  onUnmounted(() => {\n    if (pendingRenderFrame !== null && typeof window !== 'undefined' && typeof window.cancelAnimationFrame === 'function') {\n      window.cancelAnimationFrame(pendingRenderFrame)\n      pendingRenderFrame = null\n    }\n\n    // Stop debounced operations\n    debouncedDataUpdate.cancel()\n\n    // Clear selection\n    selectionManager.clear()\n    unsubscribeSelection()\n\n    // Clear caches\n    computedCache.clear()\n\n    // Clear intervals\n    clearInterval(cacheCleanupInterval)\n\n    // Clear watchers\n    watchers.forEach(stop => stop())\n\n    // Cleanup renderer registry\n    rendererRegistry.cleanup()\n\n    // Cleanup plugins\n    pluginRegistry.cleanup()\n\n    // Clear event emitter\n    eventEmitter.clear()\n\n    // Execute registered cleanup functions\n    cleanupFunctions.forEach(cleanup => {\n      try {\n        cleanup()\n      } catch (error) {\n        logger.error('Error during cleanup:', { module: 'useGridState' }, error)\n      }\n    })\n    cleanupFunctions.clear()\n\n    // Clear data references\n    state.rawData = []\n    state.processedData = []\n  })\n\n  // 9. PUBLIC INTERFACE\n  // Expose optimized reactive state and methods\n  return {\n    // Reactive state (read-only computed for external use)\n    data: virtualizedDataComputed,\n    columns: computed(() => state.columns),\n    selectedRows: computed(() => {\n      void selectionVersion.value // Track selection changes\n      return selectionManager.toArray()\n    }),\n    loading: computed(() => state.loading),\n    error: computed(() => state.error),\n    scrollPosition: computed(() => state.scrollPosition),\n    focusedCell: computed(() => state.focusedCell),\n\n    // Configuration\n    config: computed(() => state.config),\n    virtualizationEnabled: computed(() => state.virtualizationEnabled),\n\n    // Performance metrics\n    renderMetrics: computed(() => state.renderMetrics),\n\n    // Methods (GridAPI)\n    api,\n\n    // Internal state access (for plugins and advanced components)\n    __internal: {\n      state,\n      selectionManager,\n      pluginRegistry,\n      eventEmitter,\n      processDataThroughPipeline,\n      updateScrollPosition: (position: { top: number; left: number }) => {\n        state.scrollPosition = position\n      },\n      setFocusedCell: (cell: { rowId: string | number; columnId: string } | null) => {\n        state.focusedCell = cell\n      },\n      setLoading: (loading: boolean) => {\n        state.loading = loading\n      },\n      setError: (error: string | null) => {\n        state.error = error\n      },\n      clearCache: () => {\n        computedCache.clear()\n      },\n    },\n  }\n}\n\n// 10. TYPE EXPORTS\nexport type UseGridStateReturn = ReturnType<typeof useGridState>\nexport type GridStateInternal = UseGridStateReturn['__internal']\n","/**\n * Interaction Contract - Communication interface between renderers and core logic\n *\n * Provides a standardized way for renderers to communicate with the grid's core\n * logic without direct coupling. Supports event-driven communication and\n * callback registration for different interaction types.\n */\n\nimport { createLogger } from '../../utils/logger'\nimport type {\n  GridInteractionContract,\n  GridEvents,\n  CellPosition,\n  InteractionPayload,\n  CoreLogicCallbacks,\n} from '../../types'\n\nconst logger = createLogger('interaction-contract')\n\nexport type InteractionEvent =\n  | 'cell-click'\n  | 'cell-double-click'\n  | 'cell-right-click'\n  | 'cell-hover'\n  | 'cell-focus'\n  | 'cell-edit-start'\n  | 'cell-edit-complete'\n  | 'cell-edit-cancel'\n  | 'row-select'\n  | 'toggle-selection'\n  | 'clear-selection'\n  | 'column-resize'\n  | 'column-sort'\n  | 'column-move'\n  | 'scroll'\n  | 'keyboard-navigation'\n\n// GridInteractionContract is now imported from main types\n\n/**\n * Concrete implementation of GridInteractionContract\n */\nexport class InteractionContractImpl implements GridInteractionContract {\n  private eventEmitter: ((eventName: string, payload: any) => void) | null = null\n  private coreCallbacks: Partial<CoreLogicCallbacks> = {}\n  private destroyed = false\n\n  constructor(rendererId: string) {\n    logger.debug(`Creating interaction contract for renderer: ${rendererId}`)\n  }\n\n\n  /**\n   * Register event emitter (from GridInteractionContract)\n   */\n  registerEventEmitter<K extends keyof import('../../types').GridEvents>(\n    emit: (eventName: K, payload: import('../../types').GridEvents[K]) => void\n  ): void {\n    this.eventEmitter = emit as any\n  }\n\n  /**\n   * Update visual selection state\n   */\n  updateSelection(_selectedIds: Set<string | number>, _reason: 'programmatic' | 'user'): void {\n    // Implementation depends on specific renderer\n  }\n\n  /**\n   * Set or clear the active focus item\n   */\n  setActive(_activeId: string | number | null): void {\n    // Implementation depends on specific renderer\n  }\n\n  /**\n   * Ensure specified item is visible in viewport\n   */\n  ensureVisible(_id: string | number, _behavior: 'smooth' | 'auto'): void {\n    // Implementation depends on specific renderer\n  }\n\n  /**\n   * Toggle edit mode for specified cell/item\n   */\n  async toggleEditMode(_id: string | number, _mode: 'enter' | 'exit'): Promise<boolean> {\n    // Implementation depends on specific renderer\n    return false\n  }\n\n  /**\n   * Update scroll position in core state\n   */\n  updateScrollPosition?(_position: { top: number; left: number }): void {\n    // Implementation depends on specific renderer\n  }\n\n  /**\n   * Force re-render of all visible content\n   */\n  refresh?(): void {\n    // Implementation depends on specific renderer\n  }\n\n  /**\n   * Register core logic callbacks (override method)\n   */\n  registerCoreCallbacks(callbacks: Partial<CoreLogicCallbacks>): void {\n    this.coreCallbacks = { ...this.coreCallbacks, ...callbacks }\n  }\n\n  /**\n   * Emit an interaction event\n   */\n  emit<K extends keyof GridEvents>(eventName: K, payload: GridEvents[K]): void {\n    if (this.destroyed) {\n      logger.warn(`Attempted to emit '${eventName}' on destroyed contract`)\n      return\n    }\n\n    // Fallback to event emitter (if available)\n    if (this.eventEmitter) {\n      try {\n        // Type cast is necessary here as we're bridging two different type systems\n        (this.eventEmitter as any)(eventName, payload)\n      } catch (error) {\n        logger.error(`Error emitting event '${eventName}':`, error)\n      }\n    } else {\n      logger.debug(`No event emitter registered for event '${eventName}'`)\n    }\n  }\n\n  /**\n   * Destroy the contract and cleanup\n   */\n  destroy(): void {\n    this.destroyed = true\n    this.eventEmitter = null\n    this.coreCallbacks = {}\n  }\n\n  /**\n   * Check if contract is destroyed\n   */\n  isDestroyed(): boolean {\n    return this.destroyed\n  }\n}\n\n/**\n * Factory function to create interaction contracts\n */\nexport function createInteractionContract(rendererId: string): GridInteractionContract {\n  return new InteractionContractImpl(rendererId)\n}\n\n/**\n * Utility functions for common interaction patterns\n */\nexport const InteractionUtils = {\n  /**\n   * Create cell position from DOM event\n   */\n  getCellPositionFromEvent(\n    event: Event,\n    renderer: { getCellPosition?: (event: Event) => CellPosition | null }\n  ): CellPosition | null {\n    if (renderer.getCellPosition) {\n      return renderer.getCellPosition(event)\n    }\n\n    // Fallback implementation\n    const target = event.target as HTMLElement\n    const cell = target.closest('[data-cell-id]')\n    if (!cell) return null\n\n    const cellId = cell.getAttribute('data-cell-id')\n    const rowId = cell.getAttribute('data-row-id')\n    const columnId = cell.getAttribute('data-column-id')\n\n    if (!cellId || !rowId || !columnId) return null\n\n    return {\n      rowId,\n      columnId,\n      rowIndex: parseInt(cell.getAttribute('data-row-index') || '0'),\n      columnIndex: parseInt(cell.getAttribute('data-column-index') || '0'),\n    }\n  },\n\n  /**\n   * Create standardized interaction payload\n   */\n  createPayload(\n    position?: CellPosition,\n    event?: Event,\n    additionalData?: Record<string, any>\n  ): InteractionPayload {\n    return {\n      position,\n      event,\n      timestamp: Date.now(),\n      ...additionalData,\n    }\n  },\n\n  /**\n   * Check if interaction should be handled\n   */\n  shouldHandleInteraction(event: Event, contract: GridInteractionContract): boolean {\n    if ((contract as any).destroyed) return false\n\n    // Check if event is from a disabled element\n    const target = event.target as HTMLElement\n    if (target.hasAttribute('disabled') || target.closest('[disabled]')) {\n      return false\n    }\n\n    // Check if event is from an input being edited\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA') {\n      return false\n    }\n\n    return true\n  },\n}\n\nexport type { CellPosition, InteractionPayload, CoreLogicCallbacks } from '../../types'\n","/**\n * Shared injection keys for Happy Table components.\n * Using symbols avoids accidental key collisions across the app.\n */\n\nexport const GRID_INSTANCE_ID_KEY = Symbol('ht-grid-instance-id')\nexport const GRID_API_KEY = Symbol('ht-grid-api')\n","<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport type { ButtonStyleProps, ButtonVariant, ButtonSize } from '../../types/primitives'\n\n/**\n * HtButton - Atomic Button Component\n *\n * Design: shadcn-vue pattern (80%) + Headless UI interactions (10%)\n * Features: Variant/Size system, loading state, block mode, full accessibility\n */\n\nexport interface HtButtonProps extends ButtonStyleProps {\n  // Content\n  label?: string\n\n  // State\n  disabled?: boolean\n  loading?: boolean\n\n  // Native\n  type?: 'button' | 'submit' | 'reset'\n}\n\nconst props = withDefaults(defineProps<HtButtonProps>(), {\n  label: '',\n  variant: 'default',\n  size: 'md',\n  block: false,\n  disabled: false,\n  loading: false,\n  type: 'button',\n})\n\n// Base styles - Use ring-offset for better focus visibility on all backgrounds\nconst baseClasses = [\n  'inline-flex items-center justify-center',\n  'rounded-md font-medium select-none',\n  'transition-colors',\n  'focus:outline-none focus-visible:ring-1 focus-visible:ring-offset-1',\n  'disabled:opacity-50 disabled:pointer-events-none',\n  'gap-2',\n].join(' ')\n\n// Static class maps to keep Tailwind v4 scanner happy\nconst variantClasses: Record<ButtonVariant, string> = {\n  // All variants use primary ring with offset for visibility on any background\n  default:\n    'bg-[var(--ht-primary)] text-[var(--ht-text-inverse)] hover:bg-[var(--ht-primary-hover)] focus-visible:ring-[var(--ht-primary)]',\n  filled:\n    'bg-[var(--ht-bg-subtle)] text-[var(--ht-text)] hover:bg-[var(--ht-cell-hover)] focus-visible:ring-[var(--ht-primary)]',\n  primary:\n    'bg-[var(--ht-primary)] text-[var(--ht-text-inverse)] hover:bg-[var(--ht-primary-hover)] focus-visible:ring-[var(--ht-primary)]',\n  secondary:\n    'bg-[var(--ht-bg-subtle)] text-[var(--ht-text)] border border-[var(--ht-border-strong)] hover:bg-[var(--ht-cell-hover)] focus-visible:ring-[var(--ht-primary)]',\n  outline:\n    'border border-[var(--ht-border-strong)] text-[var(--ht-text)] bg-transparent hover:bg-[var(--ht-cell-hover)] focus-visible:ring-[var(--ht-primary)]',\n  ghost:\n    'bg-transparent text-[var(--ht-text)] hover:bg-[var(--ht-cell-hover)] focus-visible:ring-[var(--ht-primary)]',\n  destructive:\n    'bg-[var(--ht-danger)] text-[var(--ht-text-inverse)] hover:bg-[var(--ht-danger)]/90 focus-visible:ring-[var(--ht-danger)]',\n  link:\n    'bg-transparent text-[var(--ht-primary)] underline-offset-4 hover:underline focus-visible:ring-[var(--ht-primary)]',\n}\n\nconst sizeClasses: Record<ButtonSize, string> = {\n  micro: 'h-6 px-1.5 text-xs gap-1',  // 24px height - smallest functional button\n  xs: 'h-7 px-2 text-xs',\n  sm: 'h-8 px-2.5 text-sm',\n  md: 'h-9 px-3 text-sm',\n  lg: 'h-11 px-4 text-base',\n  'icon-micro': 'size-6 p-0',  // 24px - smallest icon button\n  'icon-xs': 'size-7 p-0',\n  'icon-sm': 'size-8 p-0',\n  icon: 'size-9 p-0',\n  'icon-lg': 'size-11 p-0',\n}\n\nconst classes = computed(() =>\n  [baseClasses, variantClasses[props.variant], sizeClasses[props.size], props.block ? 'w-full' : ''].join(' ')\n)\n</script>\n\n<template>\n  <button :type=\"props.type\" :disabled=\"props.disabled || props.loading\" :class=\"classes\">\n    <span v-if=\"props.loading\" class=\"inline-flex items-center justify-center\">\n      <svg class=\"animate-spin w-4 h-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n        <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n      </svg>\n    </span>\n    <slot>{{ props.label || 'Button' }}</slot>\n  </button>\n</template>\n","<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport type { ButtonStyleProps, ButtonVariant, ButtonSize } from '../../types/primitives'\n\n/**\n * HtButton - Atomic Button Component\n *\n * Design: shadcn-vue pattern (80%) + Headless UI interactions (10%)\n * Features: Variant/Size system, loading state, block mode, full accessibility\n */\n\nexport interface HtButtonProps extends ButtonStyleProps {\n  // Content\n  label?: string\n\n  // State\n  disabled?: boolean\n  loading?: boolean\n\n  // Native\n  type?: 'button' | 'submit' | 'reset'\n}\n\nconst props = withDefaults(defineProps<HtButtonProps>(), {\n  label: '',\n  variant: 'default',\n  size: 'md',\n  block: false,\n  disabled: false,\n  loading: false,\n  type: 'button',\n})\n\n// Base styles - Use ring-offset for better focus visibility on all backgrounds\nconst baseClasses = [\n  'inline-flex items-center justify-center',\n  'rounded-md font-medium select-none',\n  'transition-colors',\n  'focus:outline-none focus-visible:ring-1 focus-visible:ring-offset-1',\n  'disabled:opacity-50 disabled:pointer-events-none',\n  'gap-2',\n].join(' ')\n\n// Static class maps to keep Tailwind v4 scanner happy\nconst variantClasses: Record<ButtonVariant, string> = {\n  // All variants use primary ring with offset for visibility on any background\n  default:\n    'bg-[var(--ht-primary)] text-[var(--ht-text-inverse)] hover:bg-[var(--ht-primary-hover)] focus-visible:ring-[var(--ht-primary)]',\n  filled:\n    'bg-[var(--ht-bg-subtle)] text-[var(--ht-text)] hover:bg-[var(--ht-cell-hover)] focus-visible:ring-[var(--ht-primary)]',\n  primary:\n    'bg-[var(--ht-primary)] text-[var(--ht-text-inverse)] hover:bg-[var(--ht-primary-hover)] focus-visible:ring-[var(--ht-primary)]',\n  secondary:\n    'bg-[var(--ht-bg-subtle)] text-[var(--ht-text)] border border-[var(--ht-border-strong)] hover:bg-[var(--ht-cell-hover)] focus-visible:ring-[var(--ht-primary)]',\n  outline:\n    'border border-[var(--ht-border-strong)] text-[var(--ht-text)] bg-transparent hover:bg-[var(--ht-cell-hover)] focus-visible:ring-[var(--ht-primary)]',\n  ghost:\n    'bg-transparent text-[var(--ht-text)] hover:bg-[var(--ht-cell-hover)] focus-visible:ring-[var(--ht-primary)]',\n  destructive:\n    'bg-[var(--ht-danger)] text-[var(--ht-text-inverse)] hover:bg-[var(--ht-danger)]/90 focus-visible:ring-[var(--ht-danger)]',\n  link:\n    'bg-transparent text-[var(--ht-primary)] underline-offset-4 hover:underline focus-visible:ring-[var(--ht-primary)]',\n}\n\nconst sizeClasses: Record<ButtonSize, string> = {\n  micro: 'h-6 px-1.5 text-xs gap-1',  // 24px height - smallest functional button\n  xs: 'h-7 px-2 text-xs',\n  sm: 'h-8 px-2.5 text-sm',\n  md: 'h-9 px-3 text-sm',\n  lg: 'h-11 px-4 text-base',\n  'icon-micro': 'size-6 p-0',  // 24px - smallest icon button\n  'icon-xs': 'size-7 p-0',\n  'icon-sm': 'size-8 p-0',\n  icon: 'size-9 p-0',\n  'icon-lg': 'size-11 p-0',\n}\n\nconst classes = computed(() =>\n  [baseClasses, variantClasses[props.variant], sizeClasses[props.size], props.block ? 'w-full' : ''].join(' ')\n)\n</script>\n\n<template>\n  <button :type=\"props.type\" :disabled=\"props.disabled || props.loading\" :class=\"classes\">\n    <span v-if=\"props.loading\" class=\"inline-flex items-center justify-center\">\n      <svg class=\"animate-spin w-4 h-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n        <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n      </svg>\n    </span>\n    <slot>{{ props.label || 'Button' }}</slot>\n  </button>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, useAttrs, useId } from 'vue'\nimport type { InputStyleProps } from '../../types/primitives'\n\n/**\n * HtInput - Atomic Input Component\n *\n * Design: shadcn-vue pattern (80%) + Headless UI interactions (10%)\n * Features: Variant/Size/State system, clearable, prefix/suffix slots, full accessibility\n */\n\nexport interface HtInputProps extends InputStyleProps {\n  // Core\n  modelValue?: string | number\n  type?: 'text' | 'number' | 'email' | 'password' | 'search' | 'url' | 'tel'\n\n  // Functionality\n  placeholder?: string\n  disabled?: boolean\n  readonly?: boolean\n  clearable?: boolean\n\n  // Native attributes\n  autocomplete?: string\n  maxlength?: number\n  minlength?: number\n  pattern?: string\n\n  // Accessibility\n  required?: boolean\n}\n\nexport interface HtInputEmits {\n  'update:modelValue': [value: string | number]\n  'clear': []\n  'focus': [event: FocusEvent]\n  'blur': [event: FocusEvent]\n  'keydown': [event: KeyboardEvent]\n}\n\nconst props = withDefaults(defineProps<HtInputProps>(), {\n  type: 'text',\n  size: 'md',\n  variant: 'default',\n  state: 'default',\n  clearable: false,\n})\n\nconst emit = defineEmits<HtInputEmits>()\n\n// Generate stable ID for accessibility (SSR compatible)\nconst inputId = useId()\nconst attrs = useAttrs()\n\n// Base styles aligned with HtButton pattern\nconst baseClasses = [\n  'rounded-md transition-colors outline-none',\n  'focus-visible:ring-1 focus-visible:ring-offset-1',\n  'disabled:opacity-50 disabled:pointer-events-none disabled:cursor-not-allowed',\n  'placeholder:text-[var(--ht-text-subtle)]',\n].join(' ')\n\n// Variant system (matches CoreVariant from shared types)\n// Uses stronger border for better visibility, aligned with checkbox/radio pattern\nconst variantClasses: Record<string, string> = {\n  default: 'bg-[var(--ht-bg)] border border-[var(--ht-border-strong)] text-[var(--ht-text)] hover:border-[var(--ht-text)]/60',\n  filled: 'bg-[var(--ht-bg-subtle)] border border-transparent text-[var(--ht-text)]',\n  outline: 'bg-transparent border border-[var(--ht-border-strong)] text-[var(--ht-text)] hover:border-[var(--ht-text)]/60',\n  ghost: 'bg-transparent border border-transparent text-[var(--ht-text)] hover:bg-[var(--ht-bg-subtle)]',\n}\n\n// Size system (uses @theme tokens from primitives.css)\nconst sizeClasses: Record<string, string> = {\n  sm: 'h-[var(--size-ht-input-sm)] px-2.5 text-sm',  // 32px\n  md: 'h-[var(--size-ht-input-md)] px-3 text-sm',    // 36px\n  lg: 'h-[var(--size-ht-input-lg)] px-4 text-base',  // 44px\n}\n\n// State system (visual feedback for validation)\nconst stateClasses: Record<string, string> = {\n  default: 'focus-visible:ring-[var(--ht-primary)]',\n  error: 'border-[var(--ht-danger)] focus-visible:ring-[var(--ht-danger)]',\n  success: 'border-[var(--ht-success)] focus-visible:ring-[var(--ht-success)]',\n  warning: 'border-[var(--ht-warning)] focus-visible:ring-[var(--ht-warning)]',\n}\n\nconst inputClasses = computed(() => [\n  baseClasses,\n  variantClasses[props.variant],\n  sizeClasses[props.size],\n  stateClasses[props.state],\n].join(' '))\n\n// Check if input has value (handles string, number, 0)\nconst hasValue = computed(() => {\n  if (props.modelValue === undefined || props.modelValue === null) {\n    return false\n  }\n\n  if (typeof props.modelValue === 'string') {\n    return props.modelValue.length > 0\n  }\n\n  // Number 0 is a valid value\n  if (typeof props.modelValue === 'number') {\n    return !isNaN(props.modelValue)\n  }\n\n  return true\n})\n\nconst handleInput = (event: Event) => {\n  const target = event.target as HTMLInputElement\n  const value = props.type === 'number' ? (target.valueAsNumber || 0) : target.value\n  emit('update:modelValue', value)\n}\n\nconst handleClear = () => {\n  emit('update:modelValue', props.type === 'number' ? 0 : '')\n  emit('clear')\n}\n\nconst handleKeydown = (event: KeyboardEvent) => {\n  emit('keydown', event)\n\n  // Escape key clears input if clearable\n  if (event.key === 'Escape' && props.clearable && hasValue.value) {\n    handleClear()\n    event.preventDefault()\n  }\n}\n</script>\n\n<template>\n  <div class=\"relative inline-flex items-center w-full\">\n    <!-- Prefix slot -->\n    <div\n      v-if=\"$slots.prefix\"\n      class=\"absolute left-3 flex items-center pointer-events-none text-[var(--ht-text-muted)]\"\n    >\n      <slot name=\"prefix\" />\n    </div>\n\n    <!-- Main input element -->\n    <input\n      :id=\"inputId\"\n      :type=\"type\"\n      :value=\"modelValue\"\n      :class=\"[\n        inputClasses,\n        'w-full',\n        $slots.prefix ? 'pl-10' : '',\n        clearable || $slots.suffix ? 'pr-10' : '',\n      ]\"\n      :placeholder=\"placeholder\"\n      :disabled=\"disabled\"\n      :readonly=\"readonly\"\n      :required=\"required\"\n      :autocomplete=\"autocomplete\"\n      :maxlength=\"maxlength\"\n      :minlength=\"minlength\"\n      :pattern=\"pattern\"\n      :aria-invalid=\"state === 'error'\"\n      :aria-describedby=\"attrs['aria-describedby'] as string\"\n      :aria-errormessage=\"attrs['aria-errormessage'] as string\"\n      :aria-required=\"required\"\n      v-bind=\"$attrs\"\n      @input=\"handleInput\"\n      @focus=\"emit('focus', $event as FocusEvent)\"\n      @blur=\"emit('blur', $event as FocusEvent)\"\n      @keydown=\"handleKeydown\"\n    />\n\n    <!-- Clear button / Suffix slot -->\n    <div\n      v-if=\"clearable || $slots.suffix\"\n      class=\"absolute right-3 flex items-center\"\n    >\n      <button\n        v-if=\"clearable && hasValue && !disabled && !readonly\"\n        type=\"button\"\n        class=\"text-[var(--ht-text-muted)] hover:text-[var(--ht-text)] transition-colors\"\n        :aria-label=\"'Clear input'\"\n        tabindex=\"-1\"\n        @click=\"handleClear\"\n      >\n        <svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n          <path\n            fill-rule=\"evenodd\"\n            d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n            clip-rule=\"evenodd\"\n          />\n        </svg>\n      </button>\n      <div v-else-if=\"$slots.suffix\" class=\"text-[var(--ht-text-muted)]\">\n        <slot name=\"suffix\" />\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, useAttrs, useId } from 'vue'\nimport type { InputStyleProps } from '../../types/primitives'\n\n/**\n * HtInput - Atomic Input Component\n *\n * Design: shadcn-vue pattern (80%) + Headless UI interactions (10%)\n * Features: Variant/Size/State system, clearable, prefix/suffix slots, full accessibility\n */\n\nexport interface HtInputProps extends InputStyleProps {\n  // Core\n  modelValue?: string | number\n  type?: 'text' | 'number' | 'email' | 'password' | 'search' | 'url' | 'tel'\n\n  // Functionality\n  placeholder?: string\n  disabled?: boolean\n  readonly?: boolean\n  clearable?: boolean\n\n  // Native attributes\n  autocomplete?: string\n  maxlength?: number\n  minlength?: number\n  pattern?: string\n\n  // Accessibility\n  required?: boolean\n}\n\nexport interface HtInputEmits {\n  'update:modelValue': [value: string | number]\n  'clear': []\n  'focus': [event: FocusEvent]\n  'blur': [event: FocusEvent]\n  'keydown': [event: KeyboardEvent]\n}\n\nconst props = withDefaults(defineProps<HtInputProps>(), {\n  type: 'text',\n  size: 'md',\n  variant: 'default',\n  state: 'default',\n  clearable: false,\n})\n\nconst emit = defineEmits<HtInputEmits>()\n\n// Generate stable ID for accessibility (SSR compatible)\nconst inputId = useId()\nconst attrs = useAttrs()\n\n// Base styles aligned with HtButton pattern\nconst baseClasses = [\n  'rounded-md transition-colors outline-none',\n  'focus-visible:ring-1 focus-visible:ring-offset-1',\n  'disabled:opacity-50 disabled:pointer-events-none disabled:cursor-not-allowed',\n  'placeholder:text-[var(--ht-text-subtle)]',\n].join(' ')\n\n// Variant system (matches CoreVariant from shared types)\n// Uses stronger border for better visibility, aligned with checkbox/radio pattern\nconst variantClasses: Record<string, string> = {\n  default: 'bg-[var(--ht-bg)] border border-[var(--ht-border-strong)] text-[var(--ht-text)] hover:border-[var(--ht-text)]/60',\n  filled: 'bg-[var(--ht-bg-subtle)] border border-transparent text-[var(--ht-text)]',\n  outline: 'bg-transparent border border-[var(--ht-border-strong)] text-[var(--ht-text)] hover:border-[var(--ht-text)]/60',\n  ghost: 'bg-transparent border border-transparent text-[var(--ht-text)] hover:bg-[var(--ht-bg-subtle)]',\n}\n\n// Size system (uses @theme tokens from primitives.css)\nconst sizeClasses: Record<string, string> = {\n  sm: 'h-[var(--size-ht-input-sm)] px-2.5 text-sm',  // 32px\n  md: 'h-[var(--size-ht-input-md)] px-3 text-sm',    // 36px\n  lg: 'h-[var(--size-ht-input-lg)] px-4 text-base',  // 44px\n}\n\n// State system (visual feedback for validation)\nconst stateClasses: Record<string, string> = {\n  default: 'focus-visible:ring-[var(--ht-primary)]',\n  error: 'border-[var(--ht-danger)] focus-visible:ring-[var(--ht-danger)]',\n  success: 'border-[var(--ht-success)] focus-visible:ring-[var(--ht-success)]',\n  warning: 'border-[var(--ht-warning)] focus-visible:ring-[var(--ht-warning)]',\n}\n\nconst inputClasses = computed(() => [\n  baseClasses,\n  variantClasses[props.variant],\n  sizeClasses[props.size],\n  stateClasses[props.state],\n].join(' '))\n\n// Check if input has value (handles string, number, 0)\nconst hasValue = computed(() => {\n  if (props.modelValue === undefined || props.modelValue === null) {\n    return false\n  }\n\n  if (typeof props.modelValue === 'string') {\n    return props.modelValue.length > 0\n  }\n\n  // Number 0 is a valid value\n  if (typeof props.modelValue === 'number') {\n    return !isNaN(props.modelValue)\n  }\n\n  return true\n})\n\nconst handleInput = (event: Event) => {\n  const target = event.target as HTMLInputElement\n  const value = props.type === 'number' ? (target.valueAsNumber || 0) : target.value\n  emit('update:modelValue', value)\n}\n\nconst handleClear = () => {\n  emit('update:modelValue', props.type === 'number' ? 0 : '')\n  emit('clear')\n}\n\nconst handleKeydown = (event: KeyboardEvent) => {\n  emit('keydown', event)\n\n  // Escape key clears input if clearable\n  if (event.key === 'Escape' && props.clearable && hasValue.value) {\n    handleClear()\n    event.preventDefault()\n  }\n}\n</script>\n\n<template>\n  <div class=\"relative inline-flex items-center w-full\">\n    <!-- Prefix slot -->\n    <div\n      v-if=\"$slots.prefix\"\n      class=\"absolute left-3 flex items-center pointer-events-none text-[var(--ht-text-muted)]\"\n    >\n      <slot name=\"prefix\" />\n    </div>\n\n    <!-- Main input element -->\n    <input\n      :id=\"inputId\"\n      :type=\"type\"\n      :value=\"modelValue\"\n      :class=\"[\n        inputClasses,\n        'w-full',\n        $slots.prefix ? 'pl-10' : '',\n        clearable || $slots.suffix ? 'pr-10' : '',\n      ]\"\n      :placeholder=\"placeholder\"\n      :disabled=\"disabled\"\n      :readonly=\"readonly\"\n      :required=\"required\"\n      :autocomplete=\"autocomplete\"\n      :maxlength=\"maxlength\"\n      :minlength=\"minlength\"\n      :pattern=\"pattern\"\n      :aria-invalid=\"state === 'error'\"\n      :aria-describedby=\"attrs['aria-describedby'] as string\"\n      :aria-errormessage=\"attrs['aria-errormessage'] as string\"\n      :aria-required=\"required\"\n      v-bind=\"$attrs\"\n      @input=\"handleInput\"\n      @focus=\"emit('focus', $event as FocusEvent)\"\n      @blur=\"emit('blur', $event as FocusEvent)\"\n      @keydown=\"handleKeydown\"\n    />\n\n    <!-- Clear button / Suffix slot -->\n    <div\n      v-if=\"clearable || $slots.suffix\"\n      class=\"absolute right-3 flex items-center\"\n    >\n      <button\n        v-if=\"clearable && hasValue && !disabled && !readonly\"\n        type=\"button\"\n        class=\"text-[var(--ht-text-muted)] hover:text-[var(--ht-text)] transition-colors\"\n        :aria-label=\"'Clear input'\"\n        tabindex=\"-1\"\n        @click=\"handleClear\"\n      >\n        <svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n          <path\n            fill-rule=\"evenodd\"\n            d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n            clip-rule=\"evenodd\"\n          />\n        </svg>\n      </button>\n      <div v-else-if=\"$slots.suffix\" class=\"text-[var(--ht-text-muted)]\">\n        <slot name=\"suffix\" />\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, useId } from 'vue'\nimport type { CheckboxStyleProps } from '../../types/primitives'\n\n/**\n * HtCheckbox - Atomic Checkbox Component\n *\n * Design: shadcn-vue pattern (80%) + Headless UI interactions (10%)\n * Features: Variant/Size/State system, indeterminate support, full accessibility\n */\n\nexport interface HtCheckboxProps extends CheckboxStyleProps {\n  // Core\n  modelValue?: boolean | 'indeterminate'\n  value?: string | number // Value for checkbox groups\n\n  // Functionality\n  disabled?: boolean\n  required?: boolean\n  indeterminate?: boolean\n\n  // Label\n  label?: string\n  description?: string\n\n  // Accessibility\n  name?: string\n}\n\nexport interface HtCheckboxEmits {\n  'update:modelValue': [value: boolean | 'indeterminate']\n  'change': [checked: boolean, event: Event]\n}\n\nconst props = withDefaults(defineProps<HtCheckboxProps>(), {\n  size: 'md',\n  variant: 'default',\n  state: 'default',\n  modelValue: false,\n  indeterminate: false,\n})\n\nconst emit = defineEmits<HtCheckboxEmits>()\n\n// Generate stable ID for accessibility (SSR compatible)\nconst checkboxId = useId()\n\n// Computed\nconst isChecked = computed(() => {\n  if (props.indeterminate || props.modelValue === 'indeterminate') {\n    return false\n  }\n  return props.modelValue === true\n})\n\nconst isIndeterminate = computed(() => {\n  return props.indeterminate || props.modelValue === 'indeterminate'\n})\n\n// Base styles aligned with HtButton/HtInput pattern + 2025 UI standards\nconst baseClasses = [\n  'inline-flex items-center justify-center',\n  'rounded-sm border-[1px]', // Use 1.5px border for better visibility\n  'cursor-pointer',\n  'transition-all duration-200', // Smooth 0.2s transitions per 2025 standards\n  'will-change-auto',\n].join(' ')\n\n// Variant system (matches CoreVariant from shared types)\n// Uses text color for maximum visibility in dark mode, matching main text brightness\nconst variantClasses: Record<string, string> = {\n  default: 'border-[var(--ht-text)] bg-[var(--ht-bg)]',\n  filled: 'border-[var(--ht-text)] bg-[var(--ht-bg-subtle)]',\n  outline: 'border-[var(--ht-text)] bg-transparent',\n  ghost: 'border-[var(--ht-text)] bg-transparent',\n}\n\n// Checked state styles - uses high-opacity primary bg for clear visibility (2025 UI standards)\nconst checkedVariantClasses: Record<string, string> = {\n  default: 'border-[var(--ht-primary)] bg-[var(--ht-primary)]/90 text-[var(--ht-text-inverse)]',\n  filled: 'border-[var(--ht-primary)] bg-[var(--ht-primary)]/90 text-[var(--ht-text-inverse)]',\n  outline: 'border-[var(--ht-primary)] bg-[var(--ht-primary)]/90 text-[var(--ht-text-inverse)]',\n  ghost: 'border-[var(--ht-primary)] bg-[var(--ht-primary)]/90 text-[var(--ht-text-inverse)]',\n}\n\n// Disabled unchecked state - gray border, no background (for label element)\nconst disabledVariantClasses: Record<string, string> = {\n  default: 'border-[var(--ht-text-subtle)] bg-[var(--ht-bg)]',\n  filled: 'border-[var(--ht-text-subtle)] bg-[var(--ht-bg-subtle)]',\n  outline: 'border-[var(--ht-text-subtle)] bg-transparent',\n  ghost: 'border-[var(--ht-text-subtle)] bg-transparent',\n}\n\n// Disabled checked state - gray border and background (for label element)\nconst disabledCheckedVariantClasses: Record<string, string> = {\n  default: 'border-[var(--ht-text-subtle)] bg-[var(--ht-text-subtle)]/10 text-[var(--ht-text-subtle)]',\n  filled: 'border-[var(--ht-text-subtle)] bg-[var(--ht-text-subtle)]/10 text-[var(--ht-text-subtle)]',\n  outline: 'border-[var(--ht-text-subtle)] bg-[var(--ht-text-subtle)]/10 text-[var(--ht-text-subtle)]',\n  ghost: 'border-[var(--ht-text-subtle)] bg-[var(--ht-text-subtle)]/10 text-[var(--ht-text-subtle)]',\n}\n\n// Common disabled behavior - 40% opacity per 2025 UI standards\nconst disabledClasses = [\n  'opacity-40',\n  'cursor-not-allowed',\n  'pointer-events-none',\n].join(' ')\n\n// Size system (uses @theme tokens from primitives.css)\nconst sizeClasses: Record<string, string> = {\n  sm: 'w-4 h-4',   // 16px\n  md: 'w-5 h-5',   // 20px\n  lg: 'w-6 h-6',   // 24px\n}\n\n// State system (visual feedback for validation)\nconst stateClasses: Record<string, string> = {\n  default: 'focus-visible:ring-[var(--ht-primary)]',\n  error: 'border-[var(--ht-danger)] focus-visible:ring-[var(--ht-danger)]',\n  success: 'border-[var(--ht-success)] focus-visible:ring-[var(--ht-success)]',\n  warning: 'border-[var(--ht-warning)] focus-visible:ring-[var(--ht-warning)]',\n}\n\nconst checkboxClasses = computed(() => {\n  const isActive = isChecked.value || isIndeterminate.value\n\n  // Choose classes based on disabled state and checked state\n  let stateClass: string\n  if (props.disabled) {\n    // Disabled state - use gray colors\n    stateClass = isActive\n      ? (disabledCheckedVariantClasses[props.variant] ?? '')\n      : (disabledVariantClasses[props.variant] ?? '')\n  } else {\n    // Enabled state - use primary colors when checked\n    stateClass = isActive\n      ? (checkedVariantClasses[props.variant] ?? '')\n      : (variantClasses[props.variant] ?? '')\n  }\n\n  return [\n    baseClasses,\n    props.disabled ? disabledClasses : '',\n    stateClass,\n    sizeClasses[props.size],\n    stateClasses[props.state],\n  ].join(' ')\n})\n\n// Icon size based on checkbox size\nconst iconSize = computed(() => {\n  const sizes = {\n    sm: 'w-3 h-3',\n    md: 'w-4 h-4',\n    lg: 'w-5 h-5',\n  }\n  return sizes[props.size]\n})\n\n// Top margin offset based on checkbox size for better text alignment\n// All sizes use top alignment (items-start) for consistency with multi-line text\nconst topOffset = computed(() => {\n  const offsets = {\n    sm: 'mt-[-4px]',  // 16px checkbox + 12px text: negative offset to lift checkbox closer to text top\n    md: 'mt-[-1px]',     // 20px checkbox + 14px text: 2px positive offset\n    lg: 'mt-[2px]',   // 24px checkbox + 16px text: 3px positive offset for better balance\n  }\n  return offsets[props.size]\n})\n\n// Text size based on checkbox size for proportional appearance\nconst textSize = computed(() => {\n  const sizes = {\n    sm: 'text-xs',    // 12px font for 16px checkbox\n    md: 'text-sm',    // 14px font for 20px checkbox\n    lg: 'text-base',  // 16px font for 24px checkbox\n  }\n  return sizes[props.size]\n})\n\n// Description text size (always one step smaller than label)\nconst descriptionSize = computed(() => {\n  const sizes = {\n    sm: 'text-[11px]',  // Extra small for sm checkbox\n    md: 'text-xs',      // 12px for md checkbox\n    lg: 'text-sm',      // 14px for lg checkbox\n  }\n  return sizes[props.size]\n})\n\n// Methods\nconst handleChange = (event: Event) => {\n  if (props.disabled) return\n\n  const target = event.target as HTMLInputElement\n  const checked = target.checked\n\n  emit('update:modelValue', checked)\n  emit('change', checked, event)\n}\n\nconst handleLabelClick = (event: MouseEvent) => {\n  // Prevent default label behavior that might cause unwanted scrolling\n  // The click will still toggle the checkbox via the for attribute\n  event.preventDefault()\n\n  if (props.disabled) return\n\n  // Manually toggle the checkbox\n  const newValue = !isChecked.value\n  emit('update:modelValue', newValue)\n  emit('change', newValue, event)\n}\n\nconst handleKeydown = (event: KeyboardEvent) => {\n  // Space key toggles checkbox\n  if (event.key === ' ') {\n    event.preventDefault()\n    const checkbox = event.target as HTMLInputElement\n    checkbox.click()\n  }\n}\n</script>\n\n<template>\n  <div class=\"ht-checkbox-wrapper inline-flex items-start gap-2\">\n    <div class=\"ht-checkbox-container relative flex-shrink-0\" :class=\"topOffset\">\n      <!-- Hidden native checkbox for form integration -->\n      <input\n        :id=\"checkboxId\"\n        type=\"checkbox\"\n        :name=\"name\"\n        :value=\"value\"\n        :checked=\"isChecked\"\n        :disabled=\"disabled\"\n        :required=\"required\"\n        :aria-checked=\"isIndeterminate ? 'mixed' : isChecked\"\n        :aria-invalid=\"state === 'error'\"\n        :aria-required=\"required\"\n        class=\"sr-only peer\"\n        @change=\"handleChange\"\n        @keydown=\"handleKeydown\"\n      />\n\n      <!-- Visual checkbox -->\n      <label\n        :for=\"checkboxId\"\n        :class=\"checkboxClasses\"\n        @click=\"handleLabelClick\"\n      >\n        <!-- Always render SVG container to prevent layout shift -->\n        <!-- Check icon -->\n        <svg\n          v-show=\"isChecked && !isIndeterminate\"\n          :class=\"iconSize\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n          stroke-width=\"3\"\n          aria-hidden=\"true\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            d=\"M5 13l4 4L19 7\"\n          />\n        </svg>\n\n        <!-- Indeterminate icon -->\n        <svg\n          v-show=\"isIndeterminate\"\n          :class=\"iconSize\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n          stroke-width=\"3\"\n          aria-hidden=\"true\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            d=\"M6 12h12\"\n          />\n        </svg>\n\n        <!-- Empty placeholder for unchecked state -->\n        <span\n          v-show=\"!isChecked && !isIndeterminate\"\n          :class=\"iconSize\"\n          aria-hidden=\"true\"\n        ></span>\n      </label>\n    </div>\n\n    <!-- Label and description -->\n    <div v-if=\"label || description || $slots.default\" class=\"ht-checkbox-label-container flex-1\">\n      <label\n        v-if=\"label || $slots.default\"\n        :for=\"checkboxId\"\n        :class=\"[\n          textSize,\n          'font-medium text-[var(--ht-text)] cursor-pointer select-none block leading-snug',\n          { 'opacity-50': disabled }\n        ]\"\n      >\n        <slot>{{ label }}</slot>\n      </label>\n      <p\n        v-if=\"description || $slots.description\"\n        :class=\"[\n          descriptionSize,\n          'text-[var(--ht-text-muted)] mt-1 leading-snug',\n          { 'opacity-50': disabled }\n        ]\"\n      >\n        <slot name=\"description\">{{ description }}</slot>\n      </p>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n/* Screen reader only - hidden but accessible */\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n\n/* Prevent layout shift on state change */\n.ht-checkbox-container {\n  /* Use contain to isolate layout changes */\n  contain: layout;\n}\n\n.ht-checkbox-container label {\n  /* Fixed dimensions prevent layout shift */\n  display: inline-flex;\n  /* Prevent any size changes during transitions */\n  flex-shrink: 0;\n}\n\n/* Focus state from peer (native checkbox) - use outline with offset for universal visibility */\n.peer:focus-visible + label {\n  outline: 1px solid var(--ht-primary);\n  outline-offset: 1px;\n}\n\n/* Disabled state */\n.ht-checkbox-container input:disabled + label {\n  cursor: not-allowed;\n}\n\n/* Ensure icons don't trigger layout */\n.ht-checkbox-container label > * {\n  display: block;\n  flex-shrink: 0;\n}\n</style>\n","<script setup lang=\"ts\">\nimport { computed, useId } from 'vue'\nimport type { CheckboxStyleProps } from '../../types/primitives'\n\n/**\n * HtCheckbox - Atomic Checkbox Component\n *\n * Design: shadcn-vue pattern (80%) + Headless UI interactions (10%)\n * Features: Variant/Size/State system, indeterminate support, full accessibility\n */\n\nexport interface HtCheckboxProps extends CheckboxStyleProps {\n  // Core\n  modelValue?: boolean | 'indeterminate'\n  value?: string | number // Value for checkbox groups\n\n  // Functionality\n  disabled?: boolean\n  required?: boolean\n  indeterminate?: boolean\n\n  // Label\n  label?: string\n  description?: string\n\n  // Accessibility\n  name?: string\n}\n\nexport interface HtCheckboxEmits {\n  'update:modelValue': [value: boolean | 'indeterminate']\n  'change': [checked: boolean, event: Event]\n}\n\nconst props = withDefaults(defineProps<HtCheckboxProps>(), {\n  size: 'md',\n  variant: 'default',\n  state: 'default',\n  modelValue: false,\n  indeterminate: false,\n})\n\nconst emit = defineEmits<HtCheckboxEmits>()\n\n// Generate stable ID for accessibility (SSR compatible)\nconst checkboxId = useId()\n\n// Computed\nconst isChecked = computed(() => {\n  if (props.indeterminate || props.modelValue === 'indeterminate') {\n    return false\n  }\n  return props.modelValue === true\n})\n\nconst isIndeterminate = computed(() => {\n  return props.indeterminate || props.modelValue === 'indeterminate'\n})\n\n// Base styles aligned with HtButton/HtInput pattern + 2025 UI standards\nconst baseClasses = [\n  'inline-flex items-center justify-center',\n  'rounded-sm border-[1px]', // Use 1.5px border for better visibility\n  'cursor-pointer',\n  'transition-all duration-200', // Smooth 0.2s transitions per 2025 standards\n  'will-change-auto',\n].join(' ')\n\n// Variant system (matches CoreVariant from shared types)\n// Uses text color for maximum visibility in dark mode, matching main text brightness\nconst variantClasses: Record<string, string> = {\n  default: 'border-[var(--ht-text)] bg-[var(--ht-bg)]',\n  filled: 'border-[var(--ht-text)] bg-[var(--ht-bg-subtle)]',\n  outline: 'border-[var(--ht-text)] bg-transparent',\n  ghost: 'border-[var(--ht-text)] bg-transparent',\n}\n\n// Checked state styles - uses high-opacity primary bg for clear visibility (2025 UI standards)\nconst checkedVariantClasses: Record<string, string> = {\n  default: 'border-[var(--ht-primary)] bg-[var(--ht-primary)]/90 text-[var(--ht-text-inverse)]',\n  filled: 'border-[var(--ht-primary)] bg-[var(--ht-primary)]/90 text-[var(--ht-text-inverse)]',\n  outline: 'border-[var(--ht-primary)] bg-[var(--ht-primary)]/90 text-[var(--ht-text-inverse)]',\n  ghost: 'border-[var(--ht-primary)] bg-[var(--ht-primary)]/90 text-[var(--ht-text-inverse)]',\n}\n\n// Disabled unchecked state - gray border, no background (for label element)\nconst disabledVariantClasses: Record<string, string> = {\n  default: 'border-[var(--ht-text-subtle)] bg-[var(--ht-bg)]',\n  filled: 'border-[var(--ht-text-subtle)] bg-[var(--ht-bg-subtle)]',\n  outline: 'border-[var(--ht-text-subtle)] bg-transparent',\n  ghost: 'border-[var(--ht-text-subtle)] bg-transparent',\n}\n\n// Disabled checked state - gray border and background (for label element)\nconst disabledCheckedVariantClasses: Record<string, string> = {\n  default: 'border-[var(--ht-text-subtle)] bg-[var(--ht-text-subtle)]/10 text-[var(--ht-text-subtle)]',\n  filled: 'border-[var(--ht-text-subtle)] bg-[var(--ht-text-subtle)]/10 text-[var(--ht-text-subtle)]',\n  outline: 'border-[var(--ht-text-subtle)] bg-[var(--ht-text-subtle)]/10 text-[var(--ht-text-subtle)]',\n  ghost: 'border-[var(--ht-text-subtle)] bg-[var(--ht-text-subtle)]/10 text-[var(--ht-text-subtle)]',\n}\n\n// Common disabled behavior - 40% opacity per 2025 UI standards\nconst disabledClasses = [\n  'opacity-40',\n  'cursor-not-allowed',\n  'pointer-events-none',\n].join(' ')\n\n// Size system (uses @theme tokens from primitives.css)\nconst sizeClasses: Record<string, string> = {\n  sm: 'w-4 h-4',   // 16px\n  md: 'w-5 h-5',   // 20px\n  lg: 'w-6 h-6',   // 24px\n}\n\n// State system (visual feedback for validation)\nconst stateClasses: Record<string, string> = {\n  default: 'focus-visible:ring-[var(--ht-primary)]',\n  error: 'border-[var(--ht-danger)] focus-visible:ring-[var(--ht-danger)]',\n  success: 'border-[var(--ht-success)] focus-visible:ring-[var(--ht-success)]',\n  warning: 'border-[var(--ht-warning)] focus-visible:ring-[var(--ht-warning)]',\n}\n\nconst checkboxClasses = computed(() => {\n  const isActive = isChecked.value || isIndeterminate.value\n\n  // Choose classes based on disabled state and checked state\n  let stateClass: string\n  if (props.disabled) {\n    // Disabled state - use gray colors\n    stateClass = isActive\n      ? (disabledCheckedVariantClasses[props.variant] ?? '')\n      : (disabledVariantClasses[props.variant] ?? '')\n  } else {\n    // Enabled state - use primary colors when checked\n    stateClass = isActive\n      ? (checkedVariantClasses[props.variant] ?? '')\n      : (variantClasses[props.variant] ?? '')\n  }\n\n  return [\n    baseClasses,\n    props.disabled ? disabledClasses : '',\n    stateClass,\n    sizeClasses[props.size],\n    stateClasses[props.state],\n  ].join(' ')\n})\n\n// Icon size based on checkbox size\nconst iconSize = computed(() => {\n  const sizes = {\n    sm: 'w-3 h-3',\n    md: 'w-4 h-4',\n    lg: 'w-5 h-5',\n  }\n  return sizes[props.size]\n})\n\n// Top margin offset based on checkbox size for better text alignment\n// All sizes use top alignment (items-start) for consistency with multi-line text\nconst topOffset = computed(() => {\n  const offsets = {\n    sm: 'mt-[-4px]',  // 16px checkbox + 12px text: negative offset to lift checkbox closer to text top\n    md: 'mt-[-1px]',     // 20px checkbox + 14px text: 2px positive offset\n    lg: 'mt-[2px]',   // 24px checkbox + 16px text: 3px positive offset for better balance\n  }\n  return offsets[props.size]\n})\n\n// Text size based on checkbox size for proportional appearance\nconst textSize = computed(() => {\n  const sizes = {\n    sm: 'text-xs',    // 12px font for 16px checkbox\n    md: 'text-sm',    // 14px font for 20px checkbox\n    lg: 'text-base',  // 16px font for 24px checkbox\n  }\n  return sizes[props.size]\n})\n\n// Description text size (always one step smaller than label)\nconst descriptionSize = computed(() => {\n  const sizes = {\n    sm: 'text-[11px]',  // Extra small for sm checkbox\n    md: 'text-xs',      // 12px for md checkbox\n    lg: 'text-sm',      // 14px for lg checkbox\n  }\n  return sizes[props.size]\n})\n\n// Methods\nconst handleChange = (event: Event) => {\n  if (props.disabled) return\n\n  const target = event.target as HTMLInputElement\n  const checked = target.checked\n\n  emit('update:modelValue', checked)\n  emit('change', checked, event)\n}\n\nconst handleLabelClick = (event: MouseEvent) => {\n  // Prevent default label behavior that might cause unwanted scrolling\n  // The click will still toggle the checkbox via the for attribute\n  event.preventDefault()\n\n  if (props.disabled) return\n\n  // Manually toggle the checkbox\n  const newValue = !isChecked.value\n  emit('update:modelValue', newValue)\n  emit('change', newValue, event)\n}\n\nconst handleKeydown = (event: KeyboardEvent) => {\n  // Space key toggles checkbox\n  if (event.key === ' ') {\n    event.preventDefault()\n    const checkbox = event.target as HTMLInputElement\n    checkbox.click()\n  }\n}\n</script>\n\n<template>\n  <div class=\"ht-checkbox-wrapper inline-flex items-start gap-2\">\n    <div class=\"ht-checkbox-container relative flex-shrink-0\" :class=\"topOffset\">\n      <!-- Hidden native checkbox for form integration -->\n      <input\n        :id=\"checkboxId\"\n        type=\"checkbox\"\n        :name=\"name\"\n        :value=\"value\"\n        :checked=\"isChecked\"\n        :disabled=\"disabled\"\n        :required=\"required\"\n        :aria-checked=\"isIndeterminate ? 'mixed' : isChecked\"\n        :aria-invalid=\"state === 'error'\"\n        :aria-required=\"required\"\n        class=\"sr-only peer\"\n        @change=\"handleChange\"\n        @keydown=\"handleKeydown\"\n      />\n\n      <!-- Visual checkbox -->\n      <label\n        :for=\"checkboxId\"\n        :class=\"checkboxClasses\"\n        @click=\"handleLabelClick\"\n      >\n        <!-- Always render SVG container to prevent layout shift -->\n        <!-- Check icon -->\n        <svg\n          v-show=\"isChecked && !isIndeterminate\"\n          :class=\"iconSize\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n          stroke-width=\"3\"\n          aria-hidden=\"true\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            d=\"M5 13l4 4L19 7\"\n          />\n        </svg>\n\n        <!-- Indeterminate icon -->\n        <svg\n          v-show=\"isIndeterminate\"\n          :class=\"iconSize\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n          stroke-width=\"3\"\n          aria-hidden=\"true\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            d=\"M6 12h12\"\n          />\n        </svg>\n\n        <!-- Empty placeholder for unchecked state -->\n        <span\n          v-show=\"!isChecked && !isIndeterminate\"\n          :class=\"iconSize\"\n          aria-hidden=\"true\"\n        ></span>\n      </label>\n    </div>\n\n    <!-- Label and description -->\n    <div v-if=\"label || description || $slots.default\" class=\"ht-checkbox-label-container flex-1\">\n      <label\n        v-if=\"label || $slots.default\"\n        :for=\"checkboxId\"\n        :class=\"[\n          textSize,\n          'font-medium text-[var(--ht-text)] cursor-pointer select-none block leading-snug',\n          { 'opacity-50': disabled }\n        ]\"\n      >\n        <slot>{{ label }}</slot>\n      </label>\n      <p\n        v-if=\"description || $slots.description\"\n        :class=\"[\n          descriptionSize,\n          'text-[var(--ht-text-muted)] mt-1 leading-snug',\n          { 'opacity-50': disabled }\n        ]\"\n      >\n        <slot name=\"description\">{{ description }}</slot>\n      </p>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n/* Screen reader only - hidden but accessible */\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n\n/* Prevent layout shift on state change */\n.ht-checkbox-container {\n  /* Use contain to isolate layout changes */\n  contain: layout;\n}\n\n.ht-checkbox-container label {\n  /* Fixed dimensions prevent layout shift */\n  display: inline-flex;\n  /* Prevent any size changes during transitions */\n  flex-shrink: 0;\n}\n\n/* Focus state from peer (native checkbox) - use outline with offset for universal visibility */\n.peer:focus-visible + label {\n  outline: 1px solid var(--ht-primary);\n  outline-offset: 1px;\n}\n\n/* Disabled state */\n.ht-checkbox-container input:disabled + label {\n  cursor: not-allowed;\n}\n\n/* Ensure icons don't trigger layout */\n.ht-checkbox-container label > * {\n  display: block;\n  flex-shrink: 0;\n}\n</style>\n","<script setup lang=\"ts\">\nimport { computed, useId } from 'vue'\nimport type { ComponentSize, CoreVariant, ComponentState } from '../../types/primitives'\n\n/**\n * HtRadio - Atomic Radio Component\n *\n * Design: shadcn-vue pattern (80%) + Headless UI interactions (10%)\n * Features: Variant/Size/State system, full accessibility, radio group support\n */\n\nexport interface HtRadioProps {\n  // Core\n  modelValue?: any\n  value: any // Required for radio button - the value this radio represents\n\n  // Style system (matches CheckboxStyleProps pattern)\n  variant?: CoreVariant\n  size?: ComponentSize\n  state?: ComponentState\n\n  // Functionality\n  disabled?: boolean\n  required?: boolean\n\n  // Label\n  label?: string\n  description?: string\n\n  // Accessibility\n  name?: string\n}\n\nexport interface HtRadioEmits {\n  'update:modelValue': [value: any]\n  'change': [value: any, event: Event]\n}\n\nconst props = withDefaults(defineProps<HtRadioProps>(), {\n  size: 'md',\n  variant: 'default',\n  state: 'default',\n})\n\nconst emit = defineEmits<HtRadioEmits>()\n\n// Generate stable ID for accessibility (SSR compatible)\nconst radioId = useId()\n\n// Computed\nconst isChecked = computed(() => {\n  return props.modelValue === props.value\n})\n\n// Base styles aligned with HtButton/HtInput/HtCheckbox pattern + 2025 UI standards\nconst baseClasses = [\n  'inline-flex items-center justify-center',\n  'rounded-full border-[1px]', // Use 1.5px border for better visibility\n  'cursor-pointer',\n  'transition-all duration-200', // Smooth 0.2s transitions per 2025 standards\n  'will-change-auto',\n].join(' ')\n\n// Variant system (matches CoreVariant from shared types)\n// Uses text color for maximum visibility in dark mode, matching main text brightness\nconst variantClasses: Record<string, string> = {\n  default: 'border-[var(--ht-text)] bg-[var(--ht-bg)]',\n  filled: 'border-[var(--ht-text)] bg-[var(--ht-bg-subtle)]',\n  outline: 'border-[var(--ht-text)] bg-transparent',\n  ghost: 'border-[var(--ht-text)] bg-transparent',\n}\n\n// Checked state styles - uses high-opacity primary bg for clear visibility (2025 UI standards)\nconst checkedVariantClasses: Record<string, string> = {\n  default: 'border-[var(--ht-primary)] bg-[var(--ht-primary)]/90',\n  filled: 'border-[var(--ht-primary)] bg-[var(--ht-primary)]/90',\n  outline: 'border-[var(--ht-primary)] bg-[var(--ht-primary)]/90',\n  ghost: 'border-[var(--ht-primary)] bg-[var(--ht-primary)]/90',\n}\n\n// Disabled unchecked state - gray border, no background (for label element)\nconst disabledVariantClasses: Record<string, string> = {\n  default: 'border-[var(--ht-text-subtle)] bg-[var(--ht-bg)]',\n  filled: 'border-[var(--ht-text-subtle)] bg-[var(--ht-bg-subtle)]',\n  outline: 'border-[var(--ht-text-subtle)] bg-transparent',\n  ghost: 'border-[var(--ht-text-subtle)] bg-transparent',\n}\n\n// Disabled checked state - gray border and background (for label element)\nconst disabledCheckedVariantClasses: Record<string, string> = {\n  default: 'border-[var(--ht-text-subtle)] bg-[var(--ht-text-subtle)]/10',\n  filled: 'border-[var(--ht-text-subtle)] bg-[var(--ht-text-subtle)]/10',\n  outline: 'border-[var(--ht-text-subtle)] bg-[var(--ht-text-subtle)]/10',\n  ghost: 'border-[var(--ht-text-subtle)] bg-[var(--ht-text-subtle)]/10',\n}\n\n// Common disabled behavior - 40% opacity per 2025 UI standards\nconst disabledClasses = [\n  'opacity-40',\n  'cursor-not-allowed',\n  'pointer-events-none',\n].join(' ')\n\n// Size system (uses @theme tokens from primitives.css)\nconst sizeClasses: Record<string, string> = {\n  sm: 'w-4 h-4',   // 16px\n  md: 'w-5 h-5',   // 20px\n  lg: 'w-6 h-6',   // 24px\n}\n\n// Inner dot size (smaller than outer circle)\nconst dotSizeClasses: Record<string, string> = {\n  sm: 'w-2 h-2',   // 8px (50% of 16px)\n  md: 'w-2.5 h-2.5', // 10px (50% of 20px)\n  lg: 'w-3 h-3',   // 12px (50% of 24px)\n}\n\n// State system (visual feedback for validation)\nconst stateClasses: Record<string, string> = {\n  default: 'focus-visible:ring-[var(--ht-primary)]',\n  error: 'border-[var(--ht-danger)] focus-visible:ring-[var(--ht-danger)]',\n  success: 'border-[var(--ht-success)] focus-visible:ring-[var(--ht-success)]',\n  warning: 'border-[var(--ht-warning)] focus-visible:ring-[var(--ht-warning)]',\n}\n\nconst radioClasses = computed(() => {\n  // Choose classes based on disabled state and checked state\n  let stateClass: string\n  if (props.disabled) {\n    // Disabled state - use gray colors\n    stateClass = isChecked.value\n      ? (disabledCheckedVariantClasses[props.variant] ?? '')\n      : (disabledVariantClasses[props.variant] ?? '')\n  } else {\n    // Enabled state - use primary colors when checked\n    stateClass = isChecked.value\n      ? (checkedVariantClasses[props.variant] ?? '')\n      : (variantClasses[props.variant] ?? '')\n  }\n\n  return [\n    baseClasses,\n    props.disabled ? disabledClasses : '',\n    stateClass,\n    sizeClasses[props.size],\n    stateClasses[props.state],\n  ].join(' ')\n})\n\n// Top margin offset based on radio size for better text alignment\nconst topOffset = computed(() => {\n  const offsets = {\n    sm: 'mt-[-5px]',  // 16px radio + 12px text: negative offset\n    md: 'mt-[-2px]',     // 20px radio + 14px text: 2px positive offset\n    lg: 'mt-[0px]',   // 24px radio + 16px text: 3px positive offset\n  }\n  return offsets[props.size]\n})\n\n// Text size based on radio size for proportional appearance\nconst textSize = computed(() => {\n  const sizes = {\n    sm: 'text-xs',    // 12px font for 16px radio\n    md: 'text-sm',    // 14px font for 20px radio\n    lg: 'text-base',  // 16px font for 24px radio\n  }\n  return sizes[props.size]\n})\n\n// Description text size (always one step smaller than label)\nconst descriptionSize = computed(() => {\n  const sizes = {\n    sm: 'text-[11px]',  // Extra small for sm radio\n    md: 'text-xs',      // 12px for md radio\n    lg: 'text-sm',      // 14px for lg radio\n  }\n  return sizes[props.size]\n})\n\n// Inner dot color - uses inverse text when enabled, subtle gray when disabled (2025 UI standards)\nconst dotClasses = computed(() => {\n  return [\n    dotSizeClasses[props.size],\n    'rounded-full transition-transform',\n    props.disabled ? 'bg-[var(--ht-text-subtle)]' : 'bg-[var(--ht-text-inverse)]',\n  ].join(' ')\n})\n\n// Methods\nconst handleChange = (event: Event) => {\n  if (props.disabled) return\n\n  // Radio buttons always become checked when clicked\n  // They cannot be unchecked by clicking again (use different radio or reset)\n  emit('update:modelValue', props.value)\n  emit('change', props.value, event)\n}\n\nconst handleLabelClick = (event: MouseEvent) => {\n  // Prevent default label behavior that might cause unwanted scrolling\n  event.preventDefault()\n\n  if (props.disabled) return\n\n  // Manually select the radio\n  emit('update:modelValue', props.value)\n  emit('change', props.value, event)\n}\n\nconst handleKeydown = (event: KeyboardEvent) => {\n  // Space key selects radio\n  if (event.key === ' ') {\n    event.preventDefault()\n    const radio = event.target as HTMLInputElement\n    radio.click()\n  }\n\n  // Arrow keys navigate within radio group\n  // This is handled automatically by native radio inputs with the same name\n}\n</script>\n\n<template>\n  <div class=\"ht-radio-wrapper inline-flex items-start gap-2\">\n    <div class=\"ht-radio-container relative flex-shrink-0\" :class=\"topOffset\">\n      <!-- Hidden native radio for form integration -->\n      <input\n        :id=\"radioId\"\n        type=\"radio\"\n        :name=\"name\"\n        :value=\"value\"\n        :checked=\"isChecked\"\n        :disabled=\"disabled\"\n        :required=\"required\"\n        :aria-checked=\"isChecked\"\n        :aria-invalid=\"state === 'error'\"\n        :aria-required=\"required\"\n        class=\"sr-only peer\"\n        @change=\"handleChange\"\n        @keydown=\"handleKeydown\"\n      />\n\n      <!-- Visual radio button -->\n      <label\n        :for=\"radioId\"\n        :class=\"radioClasses\"\n        @click=\"handleLabelClick\"\n      >\n        <!-- Inner dot (only visible when checked) -->\n        <span\n          v-show=\"isChecked\"\n          :class=\"dotClasses\"\n          aria-hidden=\"true\"\n        ></span>\n\n        <!-- Empty placeholder for unchecked state -->\n        <span\n          v-show=\"!isChecked\"\n          :class=\"dotSizeClasses[size]\"\n          aria-hidden=\"true\"\n        ></span>\n      </label>\n    </div>\n\n    <!-- Label and description -->\n    <div v-if=\"label || description || $slots.default\" class=\"ht-radio-label-container flex-1\">\n      <label\n        v-if=\"label || $slots.default\"\n        :for=\"radioId\"\n        :class=\"[\n          textSize,\n          'font-medium text-[var(--ht-text)] cursor-pointer select-none block leading-snug',\n          { 'opacity-50': disabled }\n        ]\"\n      >\n        <slot>{{ label }}</slot>\n      </label>\n      <p\n        v-if=\"description || $slots.description\"\n        :class=\"[\n          descriptionSize,\n          'text-[var(--ht-text-muted)] mt-1 leading-snug',\n          { 'opacity-50': disabled }\n        ]\"\n      >\n        <slot name=\"description\">{{ description }}</slot>\n      </p>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n/* Screen reader only - hidden but accessible */\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n\n/* Prevent layout shift on state change */\n.ht-radio-container {\n  /* Use contain to isolate layout changes */\n  contain: layout;\n}\n\n.ht-radio-container label {\n  /* Fixed dimensions prevent layout shift */\n  display: inline-flex;\n  /* Prevent any size changes during transitions */\n  flex-shrink: 0;\n}\n\n/* Focus state from peer (native radio) - use outline with offset for universal visibility */\n.peer:focus-visible + label {\n  outline: 1px solid var(--ht-primary);\n  outline-offset: 1px;\n}\n\n/* Disabled state */\n.ht-radio-container input:disabled + label {\n  cursor: not-allowed;\n}\n\n/* Ensure inner dot doesn't trigger layout */\n.ht-radio-container label > * {\n  display: block;\n  flex-shrink: 0;\n}\n</style>\n","<script setup lang=\"ts\">\nimport { computed, useId } from 'vue'\nimport type { ComponentSize, CoreVariant, ComponentState } from '../../types/primitives'\n\n/**\n * HtRadio - Atomic Radio Component\n *\n * Design: shadcn-vue pattern (80%) + Headless UI interactions (10%)\n * Features: Variant/Size/State system, full accessibility, radio group support\n */\n\nexport interface HtRadioProps {\n  // Core\n  modelValue?: any\n  value: any // Required for radio button - the value this radio represents\n\n  // Style system (matches CheckboxStyleProps pattern)\n  variant?: CoreVariant\n  size?: ComponentSize\n  state?: ComponentState\n\n  // Functionality\n  disabled?: boolean\n  required?: boolean\n\n  // Label\n  label?: string\n  description?: string\n\n  // Accessibility\n  name?: string\n}\n\nexport interface HtRadioEmits {\n  'update:modelValue': [value: any]\n  'change': [value: any, event: Event]\n}\n\nconst props = withDefaults(defineProps<HtRadioProps>(), {\n  size: 'md',\n  variant: 'default',\n  state: 'default',\n})\n\nconst emit = defineEmits<HtRadioEmits>()\n\n// Generate stable ID for accessibility (SSR compatible)\nconst radioId = useId()\n\n// Computed\nconst isChecked = computed(() => {\n  return props.modelValue === props.value\n})\n\n// Base styles aligned with HtButton/HtInput/HtCheckbox pattern + 2025 UI standards\nconst baseClasses = [\n  'inline-flex items-center justify-center',\n  'rounded-full border-[1px]', // Use 1.5px border for better visibility\n  'cursor-pointer',\n  'transition-all duration-200', // Smooth 0.2s transitions per 2025 standards\n  'will-change-auto',\n].join(' ')\n\n// Variant system (matches CoreVariant from shared types)\n// Uses text color for maximum visibility in dark mode, matching main text brightness\nconst variantClasses: Record<string, string> = {\n  default: 'border-[var(--ht-text)] bg-[var(--ht-bg)]',\n  filled: 'border-[var(--ht-text)] bg-[var(--ht-bg-subtle)]',\n  outline: 'border-[var(--ht-text)] bg-transparent',\n  ghost: 'border-[var(--ht-text)] bg-transparent',\n}\n\n// Checked state styles - uses high-opacity primary bg for clear visibility (2025 UI standards)\nconst checkedVariantClasses: Record<string, string> = {\n  default: 'border-[var(--ht-primary)] bg-[var(--ht-primary)]/90',\n  filled: 'border-[var(--ht-primary)] bg-[var(--ht-primary)]/90',\n  outline: 'border-[var(--ht-primary)] bg-[var(--ht-primary)]/90',\n  ghost: 'border-[var(--ht-primary)] bg-[var(--ht-primary)]/90',\n}\n\n// Disabled unchecked state - gray border, no background (for label element)\nconst disabledVariantClasses: Record<string, string> = {\n  default: 'border-[var(--ht-text-subtle)] bg-[var(--ht-bg)]',\n  filled: 'border-[var(--ht-text-subtle)] bg-[var(--ht-bg-subtle)]',\n  outline: 'border-[var(--ht-text-subtle)] bg-transparent',\n  ghost: 'border-[var(--ht-text-subtle)] bg-transparent',\n}\n\n// Disabled checked state - gray border and background (for label element)\nconst disabledCheckedVariantClasses: Record<string, string> = {\n  default: 'border-[var(--ht-text-subtle)] bg-[var(--ht-text-subtle)]/10',\n  filled: 'border-[var(--ht-text-subtle)] bg-[var(--ht-text-subtle)]/10',\n  outline: 'border-[var(--ht-text-subtle)] bg-[var(--ht-text-subtle)]/10',\n  ghost: 'border-[var(--ht-text-subtle)] bg-[var(--ht-text-subtle)]/10',\n}\n\n// Common disabled behavior - 40% opacity per 2025 UI standards\nconst disabledClasses = [\n  'opacity-40',\n  'cursor-not-allowed',\n  'pointer-events-none',\n].join(' ')\n\n// Size system (uses @theme tokens from primitives.css)\nconst sizeClasses: Record<string, string> = {\n  sm: 'w-4 h-4',   // 16px\n  md: 'w-5 h-5',   // 20px\n  lg: 'w-6 h-6',   // 24px\n}\n\n// Inner dot size (smaller than outer circle)\nconst dotSizeClasses: Record<string, string> = {\n  sm: 'w-2 h-2',   // 8px (50% of 16px)\n  md: 'w-2.5 h-2.5', // 10px (50% of 20px)\n  lg: 'w-3 h-3',   // 12px (50% of 24px)\n}\n\n// State system (visual feedback for validation)\nconst stateClasses: Record<string, string> = {\n  default: 'focus-visible:ring-[var(--ht-primary)]',\n  error: 'border-[var(--ht-danger)] focus-visible:ring-[var(--ht-danger)]',\n  success: 'border-[var(--ht-success)] focus-visible:ring-[var(--ht-success)]',\n  warning: 'border-[var(--ht-warning)] focus-visible:ring-[var(--ht-warning)]',\n}\n\nconst radioClasses = computed(() => {\n  // Choose classes based on disabled state and checked state\n  let stateClass: string\n  if (props.disabled) {\n    // Disabled state - use gray colors\n    stateClass = isChecked.value\n      ? (disabledCheckedVariantClasses[props.variant] ?? '')\n      : (disabledVariantClasses[props.variant] ?? '')\n  } else {\n    // Enabled state - use primary colors when checked\n    stateClass = isChecked.value\n      ? (checkedVariantClasses[props.variant] ?? '')\n      : (variantClasses[props.variant] ?? '')\n  }\n\n  return [\n    baseClasses,\n    props.disabled ? disabledClasses : '',\n    stateClass,\n    sizeClasses[props.size],\n    stateClasses[props.state],\n  ].join(' ')\n})\n\n// Top margin offset based on radio size for better text alignment\nconst topOffset = computed(() => {\n  const offsets = {\n    sm: 'mt-[-5px]',  // 16px radio + 12px text: negative offset\n    md: 'mt-[-2px]',     // 20px radio + 14px text: 2px positive offset\n    lg: 'mt-[0px]',   // 24px radio + 16px text: 3px positive offset\n  }\n  return offsets[props.size]\n})\n\n// Text size based on radio size for proportional appearance\nconst textSize = computed(() => {\n  const sizes = {\n    sm: 'text-xs',    // 12px font for 16px radio\n    md: 'text-sm',    // 14px font for 20px radio\n    lg: 'text-base',  // 16px font for 24px radio\n  }\n  return sizes[props.size]\n})\n\n// Description text size (always one step smaller than label)\nconst descriptionSize = computed(() => {\n  const sizes = {\n    sm: 'text-[11px]',  // Extra small for sm radio\n    md: 'text-xs',      // 12px for md radio\n    lg: 'text-sm',      // 14px for lg radio\n  }\n  return sizes[props.size]\n})\n\n// Inner dot color - uses inverse text when enabled, subtle gray when disabled (2025 UI standards)\nconst dotClasses = computed(() => {\n  return [\n    dotSizeClasses[props.size],\n    'rounded-full transition-transform',\n    props.disabled ? 'bg-[var(--ht-text-subtle)]' : 'bg-[var(--ht-text-inverse)]',\n  ].join(' ')\n})\n\n// Methods\nconst handleChange = (event: Event) => {\n  if (props.disabled) return\n\n  // Radio buttons always become checked when clicked\n  // They cannot be unchecked by clicking again (use different radio or reset)\n  emit('update:modelValue', props.value)\n  emit('change', props.value, event)\n}\n\nconst handleLabelClick = (event: MouseEvent) => {\n  // Prevent default label behavior that might cause unwanted scrolling\n  event.preventDefault()\n\n  if (props.disabled) return\n\n  // Manually select the radio\n  emit('update:modelValue', props.value)\n  emit('change', props.value, event)\n}\n\nconst handleKeydown = (event: KeyboardEvent) => {\n  // Space key selects radio\n  if (event.key === ' ') {\n    event.preventDefault()\n    const radio = event.target as HTMLInputElement\n    radio.click()\n  }\n\n  // Arrow keys navigate within radio group\n  // This is handled automatically by native radio inputs with the same name\n}\n</script>\n\n<template>\n  <div class=\"ht-radio-wrapper inline-flex items-start gap-2\">\n    <div class=\"ht-radio-container relative flex-shrink-0\" :class=\"topOffset\">\n      <!-- Hidden native radio for form integration -->\n      <input\n        :id=\"radioId\"\n        type=\"radio\"\n        :name=\"name\"\n        :value=\"value\"\n        :checked=\"isChecked\"\n        :disabled=\"disabled\"\n        :required=\"required\"\n        :aria-checked=\"isChecked\"\n        :aria-invalid=\"state === 'error'\"\n        :aria-required=\"required\"\n        class=\"sr-only peer\"\n        @change=\"handleChange\"\n        @keydown=\"handleKeydown\"\n      />\n\n      <!-- Visual radio button -->\n      <label\n        :for=\"radioId\"\n        :class=\"radioClasses\"\n        @click=\"handleLabelClick\"\n      >\n        <!-- Inner dot (only visible when checked) -->\n        <span\n          v-show=\"isChecked\"\n          :class=\"dotClasses\"\n          aria-hidden=\"true\"\n        ></span>\n\n        <!-- Empty placeholder for unchecked state -->\n        <span\n          v-show=\"!isChecked\"\n          :class=\"dotSizeClasses[size]\"\n          aria-hidden=\"true\"\n        ></span>\n      </label>\n    </div>\n\n    <!-- Label and description -->\n    <div v-if=\"label || description || $slots.default\" class=\"ht-radio-label-container flex-1\">\n      <label\n        v-if=\"label || $slots.default\"\n        :for=\"radioId\"\n        :class=\"[\n          textSize,\n          'font-medium text-[var(--ht-text)] cursor-pointer select-none block leading-snug',\n          { 'opacity-50': disabled }\n        ]\"\n      >\n        <slot>{{ label }}</slot>\n      </label>\n      <p\n        v-if=\"description || $slots.description\"\n        :class=\"[\n          descriptionSize,\n          'text-[var(--ht-text-muted)] mt-1 leading-snug',\n          { 'opacity-50': disabled }\n        ]\"\n      >\n        <slot name=\"description\">{{ description }}</slot>\n      </p>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n/* Screen reader only - hidden but accessible */\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n\n/* Prevent layout shift on state change */\n.ht-radio-container {\n  /* Use contain to isolate layout changes */\n  contain: layout;\n}\n\n.ht-radio-container label {\n  /* Fixed dimensions prevent layout shift */\n  display: inline-flex;\n  /* Prevent any size changes during transitions */\n  flex-shrink: 0;\n}\n\n/* Focus state from peer (native radio) - use outline with offset for universal visibility */\n.peer:focus-visible + label {\n  outline: 1px solid var(--ht-primary);\n  outline-offset: 1px;\n}\n\n/* Disabled state */\n.ht-radio-container input:disabled + label {\n  cursor: not-allowed;\n}\n\n/* Ensure inner dot doesn't trigger layout */\n.ht-radio-container label > * {\n  display: block;\n  flex-shrink: 0;\n}\n</style>\n","import { provide, inject, ref, watch, nextTick, computed } from 'vue'\nimport type { SelectContext, NavigableOption } from '../../../../types/primitives/select'\nimport type { HtSelectBaseProps } from '../../../../types/primitives/select'\nimport { generateIdGroup } from '../../../../utils/id-generator'\n\nconst SELECT_CONTEXT_KEY = Symbol('HtSelect')\nconst SELECT_PROPS_KEY = Symbol('HtSelectProps')\nexport const SELECT_GROUP_KEY = Symbol('HtSelectGroup') // 导出供 HtSelectGroup 和 HtSelectItem 使用\n\n/**\n * Provide Select Context\n * 在 HtSelect 根组件中调用,提供状态管理\n */\nexport function provideSelectContext(props: any, emit: any): SelectContext {\n  const open = ref(false)\n  const selectedValue = ref(props.modelValue)\n  const highlightedIndex = ref(-1)\n  const triggerRef = ref<HTMLElement | null>(null)\n  const inputValue = ref('') // 统一的输入框值/搜索查询\n  const navigableOptions = ref<NavigableOption[]>([])\n\n  // Generate stable, unique IDs for accessibility\n  const ids = generateIdGroup('ht-select', ['triggerId', 'contentId'] as const)\n\n  // Use ref to make Map reactive - whenever set/delete is called, trigger updates\n  const optionsMap = ref(new Map<any, string>())\n\n  const enabledOptionIndexes = computed<number[]>(() =>\n    navigableOptions.value.filter(option => !option.disabled).map(option => option.index)\n  )\n\n  function highlightIndex(index: number | null) {\n    highlightedIndex.value = typeof index === 'number' && index >= 0 ? index : -1\n  }\n\n  const clearHighlight = () => {\n    highlightIndex(null)\n  }\n\n  const getEnabledOptionByIndex = (index: number) =>\n    navigableOptions.value.find(option => option.index === index && !option.disabled)\n\n  const highlightFirst = () => {\n    const [first] = enabledOptionIndexes.value\n    highlightIndex(first ?? null)\n  }\n\n  const highlightLast = () => {\n    const enabled = enabledOptionIndexes.value\n    const last = enabled[enabled.length - 1]\n    highlightIndex(typeof last === 'number' ? last : null)\n  }\n\n  const moveHighlight = (direction: 1 | -1) => {\n    const enabled = enabledOptionIndexes.value\n    if (!enabled.length) {\n      highlightIndex(null)\n      return\n    }\n\n    const current = highlightedIndex.value\n    const currentPosition = enabled.indexOf(current)\n\n    if (currentPosition === -1) {\n      highlightIndex(direction === 1 ? enabled[0]! : enabled[enabled.length - 1]!)\n      return\n    }\n\n    const nextPosition = (currentPosition + direction + enabled.length) % enabled.length\n    highlightIndex(enabled[nextPosition]!)\n  }\n\n  const selectHighlighted = () => {\n    const active = getEnabledOptionByIndex(highlightedIndex.value)\n    if (!active) return\n    select(active.value)\n  }\n\n  const syncHighlightWithSelection = (preferCurrentHighlight = false) => {\n    const enabled = enabledOptionIndexes.value\n    if (!enabled.length) {\n      clearHighlight()\n      return\n    }\n\n    if (preferCurrentHighlight && getEnabledOptionByIndex(highlightedIndex.value)) {\n      return\n    }\n\n    const selected = navigableOptions.value.find(option => !option.disabled && isSelected(option.value))\n    if (selected) {\n      highlightIndex(selected.index)\n      return\n    }\n\n    highlightFirst()\n  }\n\n  // Sync external modelValue changes\n  watch(\n    () => props.modelValue,\n    (newValue) => {\n      selectedValue.value = newValue\n    }\n  )\n\n  const toggle = () => {\n    if (props.disabled) return\n    open.value = !open.value\n  }\n\n  const close = () => {\n    open.value = false\n    clearHighlight()\n    inputValue.value = '' // 清空输入/搜索\n\n    // Return focus to trigger when closing (Button mode only)\n    // In Combobox mode (searchable), input keeps focus naturally\n    // Use nextTick to ensure DOM has updated before focusing\n    if (!props.searchable) {\n      nextTick(() => {\n        if (triggerRef.value) {\n          triggerRef.value.focus()\n        }\n      })\n    }\n  }\n\n  const openDropdown = () => {\n    if (props.disabled) return\n    open.value = true\n  }\n\n  const select = (value: any) => {\n    selectedValue.value = value\n    emit('update:modelValue', value)\n    emit('change', value)\n    close()\n  }\n\n  const isSelected = (value: any): boolean => {\n    const current = selectedValue.value\n\n    // No selection\n    if (current === undefined || current === null) return false\n\n    // Custom comparison function\n    if (props.by && typeof props.by === 'function') {\n      return props.by(current, value)\n    }\n\n    // Field-based comparison\n    if (props.by && typeof props.by === 'string') {\n      return current?.[props.by] === value?.[props.by]\n    }\n\n    // Reference equality (default)\n    return current === value\n  }\n\n  const registerOption = (value: any, textValue: string) => {\n    optionsMap.value.set(value, textValue)\n  }\n\n  const unregisterOption = (value: any) => {\n    optionsMap.value.delete(value)\n  }\n\n  const context: SelectContext = {\n    open,\n    selectedValue,\n    highlightedIndex,\n    triggerRef,\n    optionsMap,\n    inputValue,\n    ids,\n    toggle,\n    close,\n    openDropdown,\n    select,\n    isSelected,\n    registerOption,\n    unregisterOption,\n    setNavigableOptions: (options: NavigableOption[]) => {\n      navigableOptions.value = options\n      if (open.value) {\n        syncHighlightWithSelection(true)\n      } else {\n        clearHighlight()\n      }\n    },\n    moveHighlight,\n    highlightFirst,\n    highlightLast,\n    selectHighlighted,\n    clearHighlight,\n  }\n\n  watch(selectedValue, () => {\n    if (open.value) {\n      syncHighlightWithSelection()\n    }\n  })\n\n  watch(() => open.value, (isOpen) => {\n    if (isOpen) {\n      nextTick(() => {\n        syncHighlightWithSelection()\n      })\n    } else {\n      clearHighlight()\n    }\n  })\n\n  provide(SELECT_CONTEXT_KEY, context)\n  return context\n}\n\n/**\n * Inject Select Context\n * 在子组件中调用,获取共享状态\n */\nexport function injectSelectContext(): SelectContext {\n  const context = inject<SelectContext>(SELECT_CONTEXT_KEY)\n\n  if (!context) {\n    throw new Error('useSelectContext must be used within HtSelect')\n  }\n\n  return context\n}\n\n/**\n * Provide Select Props\n * 在 HtSelect 根组件中调用,提供 props 给子组件\n */\nexport function provideSelectProps(props: HtSelectBaseProps): void {\n  provide(SELECT_PROPS_KEY, props)\n}\n\n/**\n * Inject Select Props\n * 在子组件(如 HtSelectTrigger)中调用,获取父组件 props\n */\nexport function injectSelectProps(): HtSelectBaseProps {\n  const props = inject<HtSelectBaseProps>(SELECT_PROPS_KEY, {\n    size: 'md',\n    variant: 'outline',\n    state: 'default',\n    disabled: false,\n  })\n\n  return props\n}\n","/**\n * useDebounceFn - 防抖函数工具\n *\n * 延迟函数执行直到指定时间内没有新的调用\n *\n * @param fn - 要防抖的函数\n * @param delay - 延迟时间（毫秒）\n * @returns 防抖后的函数\n */\nexport function useDebounceFn<T extends (...args: any[]) => any>(\n  fn: T,\n  delay: number\n): (...args: Parameters<T>) => void {\n  let timeoutId: ReturnType<typeof setTimeout> | null = null\n\n  const debounced = (...args: Parameters<T>) => {\n    if (timeoutId !== null) {\n      clearTimeout(timeoutId)\n    }\n\n    timeoutId = setTimeout(() => {\n      fn(...args)\n      timeoutId = null\n    }, delay)\n  }\n\n  // 提供取消方法（可选）\n  debounced.cancel = () => {\n    if (timeoutId !== null) {\n      clearTimeout(timeoutId)\n      timeoutId = null\n    }\n  }\n\n  return debounced\n}\n","import { ref, computed, watch } from 'vue'\nimport { useDebounceFn } from '../../../../utils/composables'\nimport type { Ref } from 'vue'\nimport type { SelectOption, AsyncSourceConfig, AsyncLoadingState } from '../../../../types/primitives/select'\n\n/**\n * useAsyncSource - 异步数据源管理\n *\n * 职责边界:\n * - HtSelect 负责: 调用函数、管理状态、取消请求、防抖缓存\n * - 用户代码负责: HTTP请求、认证、重试、数据转换\n *\n * @param config - 异步数据源配置\n * @param inputValue - 搜索输入值\n * @param emit - 事件触发函数\n * @returns 异步数据源管理对象\n */\nexport function useAsyncSource(\n  config: AsyncSourceConfig,\n  inputValue: Ref<string>,\n  emit: (event: string, ...args: any[]) => void\n) {\n  // ==========================================\n  // 状态管理\n  // ==========================================\n\n  const loadingState = ref<AsyncLoadingState>({\n    loading: false,\n    error: null,\n    abortController: null,\n  })\n\n  const cachedOptions = ref<Map<string, SelectOption[]>>(new Map())\n  const currentOptions = ref<SelectOption[]>([])\n\n  // ==========================================\n  // 缓存管理\n  // ==========================================\n\n  const getCacheKey = (query: string): string => {\n    return `async-source:${query.toLowerCase().trim()}`\n  }\n\n  const getFromCache = async (query: string): Promise<SelectOption[] | null> => {\n    const key = getCacheKey(query)\n\n    // 内存缓存\n    if (config.cacheStrategy === 'memory' || !config.cacheStrategy) {\n      return cachedOptions.value.get(key) || null\n    }\n\n    // 会话缓存\n    if (config.cacheStrategy === 'session') {\n      const cached = sessionStorage.getItem(key)\n      return cached ? JSON.parse(cached) : null\n    }\n\n    // 自定义缓存\n    if (config.cacheStrategy === 'custom' && config.cache) {\n      return await config.cache.get(key)\n    }\n\n    return null\n  }\n\n  const setToCache = async (query: string, options: SelectOption[]): Promise<void> => {\n    const key = getCacheKey(query)\n\n    // 内存缓存\n    if (config.cacheStrategy === 'memory' || !config.cacheStrategy) {\n      cachedOptions.value.set(key, options)\n      return\n    }\n\n    // 会话缓存\n    if (config.cacheStrategy === 'session') {\n      sessionStorage.setItem(key, JSON.stringify(options))\n      return\n    }\n\n    // 自定义缓存\n    if (config.cacheStrategy === 'custom' && config.cache) {\n      await config.cache.set(key, options)\n    }\n  }\n\n  // ==========================================\n  // 数据加载\n  // ==========================================\n\n  const loadOptions = async (query: string): Promise<void> => {\n    // 取消上一个请求\n    if (loadingState.value.abortController) {\n      loadingState.value.abortController.abort()\n    }\n\n    // 检查缓存\n    const cached = await getFromCache(query)\n    if (cached) {\n      currentOptions.value = cached\n      return\n    }\n\n    // 创建新的 AbortController\n    const abortController = new AbortController()\n    loadingState.value = {\n      loading: true,\n      error: null,\n      abortController,\n    }\n\n    emit('loading-start', query)\n\n    try {\n      const options = await config.source(query, abortController.signal)\n\n      // 检查请求是否已被取消\n      if (abortController.signal.aborted) {\n        return\n      }\n\n      currentOptions.value = options\n      await setToCache(query, options)\n\n      loadingState.value = {\n        loading: false,\n        error: null,\n        abortController: null,\n      }\n\n      emit('loading-end', options, query)\n    } catch (error) {\n      // 忽略取消错误\n      if (error instanceof Error && error.name === 'AbortError') {\n        return\n      }\n\n      const err = error instanceof Error ? error : new Error(String(error))\n      loadingState.value = {\n        loading: false,\n        error: err,\n        abortController: null,\n      }\n\n      emit('loading-error', err, query)\n\n      // 调用错误处理回调\n      if (config.onError) {\n        config.onError(err)\n      }\n    }\n  }\n\n  // ==========================================\n  // 防抖搜索\n  // ==========================================\n\n  const debouncedLoad = useDebounceFn(\n    loadOptions,\n    config.debounce ?? 250\n  )\n\n  // ==========================================\n  // 搜索阈值检查\n  // ==========================================\n\n  const shouldSearch = computed(() => {\n    const threshold = config.searchThreshold ?? 0\n    return inputValue.value.length >= threshold\n  })\n\n  // ==========================================\n  // 监听输入变化\n  // ==========================================\n\n  watch(\n    () => inputValue.value,\n    (query) => {\n      if (!shouldSearch.value) {\n        currentOptions.value = []\n        return\n      }\n\n      debouncedLoad(query)\n    },\n    { immediate: false }\n  )\n\n  // ==========================================\n  // 清理\n  // ==========================================\n\n  const cleanup = (): void => {\n    if (loadingState.value.abortController) {\n      loadingState.value.abortController.abort()\n    }\n    cachedOptions.value.clear()\n  }\n\n  // ==========================================\n  // 导出\n  // ==========================================\n\n  return {\n    // 状态\n    loading: computed(() => loadingState.value.loading),\n    error: computed(() => loadingState.value.error),\n    options: computed(() => currentOptions.value),\n\n    // 方法\n    loadOptions,\n    cleanup,\n    clearCache: () => cachedOptions.value.clear(),\n  }\n}\n","<script setup lang=\"ts\">\n/**\n * HtSelectTrigger - 下拉触发器\n *\n * 职责:\n * - 根据 searchable 自动切换模式:\n *   - searchable=false: Button 模式 (HtButton)\n *   - searchable=true: Combobox 模式 (HtInput)\n * - 将 ref 注册到 context (供 BasePopover 定位)\n * - 处理点击/输入事件\n * - ARIA 属性\n */\nimport { ref, onMounted, computed, watch } from 'vue'\nimport HtButton from '../HtButton.vue'\nimport { injectSelectContext, injectSelectProps } from './composables/useSelectContext'\n\nconst context = injectSelectContext()\nconst selectProps = injectSelectProps()\nconst buttonComponentRef = ref<InstanceType<typeof HtButton> | null>(null)\nconst comboboxTriggerRef = ref<HTMLElement | null>(null) // Combobox 外层容器 ref\n\n// Combobox: 选中项标签\nconst selectedLabel = computed(() => {\n  const selectedVal = context.selectedValue.value\n  if (selectedVal === undefined || selectedVal === null) return ''\n  return context.optionsMap.value.get(selectedVal) || ''\n})\n\n// Combobox: 输入框是否有选中项\nconst hasSelection = computed(() => {\n  return context.selectedValue.value !== undefined && context.selectedValue.value !== null\n})\n\nconst pendingClear = ref(false)\n\n// Compute active descendant id for combobox\nconst activeDescendantId = computed(() => {\n  const idx = context.highlightedIndex.value\n  if (!selectProps.searchable || !context.open.value || idx < 0) return undefined\n  return `${context.ids.contentId}-opt-${idx}`\n})\n\n// Combobox: 输入事件处理\nconst handleInput = (value: string | number) => {\n  // 只在用户输入时打开下拉（更精准的意图识别）\n  if (!context.open.value) {\n    context.openDropdown()\n  }\n  context.inputValue.value = String(value)\n  pendingClear.value = false\n}\n\n// Combobox: 聚焦时不自动打开下拉\n// 只有用户主动输入或点击箭头时才打开\n// 这样避免 Tab 导航时误触，交互更精准\nconst handleFocus = () => {\n  // Do nothing - dropdown opens on input or chevron click only\n}\n\n// Combobox: 点击箭头图标切换下拉框\nconst handleChevronClick = (e: MouseEvent) => {\n  e.preventDefault()\n  e.stopPropagation()\n  context.toggle()\n}\n\n// Combobox: 清除选中项\nconst handleClearSelection = (e: MouseEvent) => {\n  e.preventDefault()\n  e.stopPropagation()\n  context.select(null) // 清空选中值\n  context.inputValue.value = '' // 清空输入\n  pendingClear.value = false\n\n  // 聚焦到输入框（如果有自定义输入框）\n  const inputEl = document.getElementById(context.ids.triggerId) as HTMLInputElement\n  if (inputEl) {\n    inputEl.focus()\n  }\n}\n\nconst handleInputKeydown = (event: KeyboardEvent) => {\n  if (selectProps.disabled) return\n\n  if (event.key === 'Backspace') {\n    if (!context.inputValue.value && hasSelection.value) {\n      event.preventDefault()\n      if (!pendingClear.value) {\n        pendingClear.value = true\n      } else {\n        context.select(null)\n        context.inputValue.value = ''\n        pendingClear.value = false\n      }\n      return\n    }\n  } else {\n    pendingClear.value = false\n  }\n\n  switch (event.key) {\n    case 'ArrowDown':\n      event.preventDefault()\n      if (!context.open.value) {\n        context.openDropdown()\n        context.highlightFirst()\n      } else {\n        context.moveHighlight(1)\n      }\n      break\n    case 'ArrowUp':\n      event.preventDefault()\n      if (!context.open.value) {\n        context.openDropdown()\n        context.highlightLast()\n      } else {\n        context.moveHighlight(-1)\n      }\n      break\n    case 'Home':\n      if (context.open.value) {\n        event.preventDefault()\n        context.highlightFirst()\n      }\n      break\n    case 'End':\n      if (context.open.value) {\n        event.preventDefault()\n        context.highlightLast()\n      }\n      break\n    case 'Enter':\n      if (context.open.value) {\n        event.preventDefault()\n        context.selectHighlighted()\n      }\n      break\n    case 'Escape':\n      if (context.open.value) {\n        event.preventDefault()\n        context.close()\n      }\n      break\n    case 'Tab':\n      if (context.open.value) {\n        context.close()\n      }\n      break\n    default:\n      pendingClear.value = false\n      break\n  }\n}\n\nconst handleButtonKeydown = (event: KeyboardEvent) => {\n  if (selectProps.disabled) return\n\n  switch (event.key) {\n    case 'ArrowDown':\n      event.preventDefault()\n      if (!context.open.value) {\n        context.openDropdown()\n        context.highlightFirst()\n      } else {\n        context.moveHighlight(1)\n      }\n      break\n    case 'ArrowUp':\n      event.preventDefault()\n      if (!context.open.value) {\n        context.openDropdown()\n        context.highlightLast()\n      } else {\n        context.moveHighlight(-1)\n      }\n      break\n    case 'Home':\n      if (context.open.value) {\n        event.preventDefault()\n        context.highlightFirst()\n      }\n      break\n    case 'End':\n      if (context.open.value) {\n        event.preventDefault()\n        context.highlightLast()\n      }\n      break\n    case 'Enter':\n    case ' ': // Space key\n    case 'Space':\n    case 'Spacebar':\n      event.preventDefault()\n      if (!context.open.value) {\n        context.openDropdown()\n        context.highlightFirst()\n      } else {\n        context.selectHighlighted()\n      }\n      break\n    case 'Escape':\n      if (context.open.value) {\n        event.preventDefault()\n        context.close()\n      }\n      break\n    case 'Tab':\n      if (context.open.value) {\n        context.close()\n      }\n      break\n    default:\n      pendingClear.value = false\n      break\n  }\n}\n\nwatch(\n  () => context.selectedValue.value,\n  () => {\n    pendingClear.value = false\n  }\n)\n\n// Register trigger DOM element to context when mounted\nonMounted(() => {\n  if (selectProps.searchable) {\n    // Combobox 模式: 注册外层容器元素（而非 input 元素）\n    // 这样 BasePopover 可以正确计算包含标签的完整高度\n    if (comboboxTriggerRef.value) {\n      context.triggerRef.value = comboboxTriggerRef.value\n    }\n  } else {\n    // Button 模式: 注册按钮元素\n    if (buttonComponentRef.value && buttonComponentRef.value.$el) {\n      context.triggerRef.value = buttonComponentRef.value.$el as HTMLElement\n    }\n  }\n})\n</script>\n\n<template>\n  <!-- Combobox 模式: 自定义输入框布局（标签在输入框内） -->\n  <div\n    v-if=\"selectProps.searchable\"\n    ref=\"comboboxTriggerRef\"\n    class=\"ht-combobox-trigger\"\n    :class=\"{\n      'ht-combobox-trigger--disabled': selectProps.disabled,\n      'ht-combobox-trigger--open': context.open.value,\n      [`ht-combobox-trigger--${selectProps.size}`]: selectProps.size,\n      [`ht-combobox-trigger--${selectProps.variant}`]: selectProps.variant,\n      [`ht-combobox-trigger--${selectProps.state}`]: selectProps.state,\n    }\"\n  >\n    <!-- 选中项标签 -->\n    <div\n      v-if=\"hasSelection\"\n      :class=\"['ht-combobox-tag', { 'ht-combobox-tag--pending-clear': pendingClear }]\"\n    >\n      <span class=\"ht-combobox-tag__text\">{{ selectedLabel }}</span>\n      <button\n        v-if=\"!selectProps.disabled\"\n        type=\"button\"\n        class=\"ht-combobox-tag__close\"\n        aria-label=\"Clear selection\"\n        tabindex=\"-1\"\n        @click=\"handleClearSelection\"\n      >\n        <svg class=\"w-3 h-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n          <path\n            d=\"M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z\"\n          />\n        </svg>\n      </button>\n    </div>\n\n    <!-- 输入框 -->\n    <input\n      :id=\"context.ids.triggerId\"\n      type=\"text\"\n      :value=\"context.inputValue.value\"\n      :disabled=\"selectProps.disabled\"\n      :placeholder=\"hasSelection ? '' : selectProps.placeholder\"\n      class=\"ht-combobox-input\"\n      role=\"combobox\"\n      :aria-expanded=\"context.open.value ? 'true' : 'false'\"\n      :aria-haspopup=\"'listbox'\"\n      :aria-controls=\"context.ids.contentId\"\n      aria-autocomplete=\"list\"\n      :aria-activedescendant=\"activeDescendantId\"\n      @input=\"handleInput(($event.target as HTMLInputElement).value)\"\n      @focus=\"handleFocus\"\n      @keydown=\"handleInputKeydown\"\n    />\n\n    <!-- 下拉箭头图标 -->\n    <div class=\"ht-combobox-suffix\">\n      <svg\n        class=\"h-4 w-4 transition-transform cursor-pointer\"\n        :class=\"{ 'rotate-180': context.open.value }\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        viewBox=\"0 0 24 24\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        @click=\"handleChevronClick\"\n      >\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\" />\n      </svg>\n    </div>\n  </div>\n\n  <!-- Button 模式: 按钮 Trigger (默认) -->\n  <HtButton\n    v-else\n    ref=\"buttonComponentRef\"\n    type=\"button\"\n    :id=\"context.ids.triggerId\"\n    role=\"button\"\n    :aria-expanded=\"context.open.value ? 'true' : 'false'\"\n    :aria-haspopup=\"'listbox'\"\n    :aria-controls=\"context.ids.contentId\"\n    :size=\"selectProps.size\"\n    :variant=\"selectProps.variant\"\n    :disabled=\"selectProps.disabled\"\n    class=\"w-full justify-between\"\n    @click=\"context.toggle()\"\n    @keydown=\"handleButtonKeydown\"\n  >\n    <slot />\n\n    <!-- Dropdown chevron icon -->\n    <svg\n      class=\"w-4 h-4 ml-2 shrink-0 transition-transform\"\n      :class=\"{ 'rotate-180': context.open.value }\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      viewBox=\"0 0 24 24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\" />\n    </svg>\n  </HtButton>\n</template>\n\n<style scoped>\n/* Combobox Trigger Container */\n.ht-combobox-trigger {\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 0.375rem;\n  width: 100%;\n  min-height: var(--size-ht-9); /* md size default */\n  padding: 0 0.75rem;\n  border: 1px solid var(--ht-border);\n  border-radius: var(--radius-ht-md);\n  background-color: var(--ht-bg);\n  transition: var(--ht-transition-fast);\n  cursor: text;\n}\n\n/* Size variants */\n.ht-combobox-trigger--sm {\n  min-height: var(--size-ht-8);\n  padding: 0 0.625rem;\n  font-size: 0.875rem;\n}\n\n.ht-combobox-trigger--md {\n  min-height: var(--size-ht-9);\n  padding: 0 0.75rem;\n  font-size: 0.875rem;\n}\n\n.ht-combobox-trigger--lg {\n  min-height: var(--size-ht-10);\n  padding: 0 0.875rem;\n  font-size: 1rem;\n}\n\n/* Variant styles */\n.ht-combobox-trigger--default {\n  border-color: var(--ht-border);\n  background-color: var(--ht-bg);\n}\n\n.ht-combobox-trigger--outline {\n  border-color: var(--ht-border);\n  background-color: transparent;\n}\n\n.ht-combobox-trigger--ghost {\n  border-color: transparent;\n  background-color: transparent;\n}\n\n/* State styles */\n.ht-combobox-trigger--error {\n  border-color: var(--ht-error);\n}\n\n.ht-combobox-trigger--warning {\n  border-color: var(--ht-warning);\n}\n\n.ht-combobox-trigger--success {\n  border-color: var(--ht-success);\n}\n\n/* Focus state */\n.ht-combobox-trigger:focus-within:not(.ht-combobox-trigger--disabled) {\n  outline: 2px solid var(--ht-primary);\n  outline-offset: 1px;\n  border-color: var(--ht-primary);\n}\n\n/* Open state */\n.ht-combobox-trigger--open {\n  border-color: var(--ht-primary);\n}\n\n/* Disabled state */\n.ht-combobox-trigger--disabled {\n  opacity: 0.5;\n  pointer-events: none;\n  cursor: not-allowed;\n}\n\n/* Selected Item Tag */\n.ht-combobox-tag {\n  display: inline-flex;\n  align-items: center;\n  gap: 0.25rem;\n  padding: 0.125rem 0.375rem;\n  background-color: var(--ht-primary-subtle);\n  color: var(--ht-primary);\n  border-radius: var(--radius-ht-sm);\n  border: 1px solid transparent;\n  font-size: 0.8125rem;\n  font-weight: 500;\n  line-height: 1.25rem;\n  white-space: nowrap;\n  flex-shrink: 1; /* 允许标签收缩，为箭头留出空间 */\n  min-width: 0; /* 允许标签缩小到内容宽度以下 */\n  max-width: calc(100% - 80px); /* 确保留出输入框和箭头的最小空间 */\n}\n\n.ht-combobox-tag--pending-clear {\n  border-color: var(--ht-error-border);\n  background-color: var(--ht-error-subtle);\n  color: var(--ht-error);\n}\n\n.ht-combobox-tag__text {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  /* 移除固定的 max-width，让父容器控制 */\n}\n\n.ht-combobox-tag__close {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.125rem;\n  border-radius: var(--radius-ht-sm);\n  color: var(--ht-primary);\n  transition: var(--ht-transition-fast);\n  cursor: pointer;\n}\n\n.ht-combobox-tag__close:hover {\n  background-color: var(--ht-primary);\n  color: var(--ht-bg);\n}\n\n/* Input Field */\n.ht-combobox-input {\n  flex: 1;\n  min-width: 40px; /* 减小最小宽度，但确保输入框始终可见 */\n  border: none;\n  outline: none;\n  background: transparent;\n  font-size: inherit;\n  color: var(--ht-text);\n  padding: 0;\n}\n\n.ht-combobox-input::placeholder {\n  color: var(--ht-text-muted);\n}\n\n.ht-combobox-input:disabled {\n  cursor: not-allowed;\n}\n\n/* Suffix Icon Container */\n.ht-combobox-suffix {\n  display: flex;\n  align-items: center;\n  flex-shrink: 0; /* 箭头图标永不收缩 */\n  color: var(--ht-text-muted);\n  pointer-events: auto;\n  margin-left: auto; /* 确保箭头始终靠右 */\n}\n</style>\n","<script setup lang=\"ts\">\n/**\n * HtSelectTrigger - 下拉触发器\n *\n * 职责:\n * - 根据 searchable 自动切换模式:\n *   - searchable=false: Button 模式 (HtButton)\n *   - searchable=true: Combobox 模式 (HtInput)\n * - 将 ref 注册到 context (供 BasePopover 定位)\n * - 处理点击/输入事件\n * - ARIA 属性\n */\nimport { ref, onMounted, computed, watch } from 'vue'\nimport HtButton from '../HtButton.vue'\nimport { injectSelectContext, injectSelectProps } from './composables/useSelectContext'\n\nconst context = injectSelectContext()\nconst selectProps = injectSelectProps()\nconst buttonComponentRef = ref<InstanceType<typeof HtButton> | null>(null)\nconst comboboxTriggerRef = ref<HTMLElement | null>(null) // Combobox 外层容器 ref\n\n// Combobox: 选中项标签\nconst selectedLabel = computed(() => {\n  const selectedVal = context.selectedValue.value\n  if (selectedVal === undefined || selectedVal === null) return ''\n  return context.optionsMap.value.get(selectedVal) || ''\n})\n\n// Combobox: 输入框是否有选中项\nconst hasSelection = computed(() => {\n  return context.selectedValue.value !== undefined && context.selectedValue.value !== null\n})\n\nconst pendingClear = ref(false)\n\n// Compute active descendant id for combobox\nconst activeDescendantId = computed(() => {\n  const idx = context.highlightedIndex.value\n  if (!selectProps.searchable || !context.open.value || idx < 0) return undefined\n  return `${context.ids.contentId}-opt-${idx}`\n})\n\n// Combobox: 输入事件处理\nconst handleInput = (value: string | number) => {\n  // 只在用户输入时打开下拉（更精准的意图识别）\n  if (!context.open.value) {\n    context.openDropdown()\n  }\n  context.inputValue.value = String(value)\n  pendingClear.value = false\n}\n\n// Combobox: 聚焦时不自动打开下拉\n// 只有用户主动输入或点击箭头时才打开\n// 这样避免 Tab 导航时误触，交互更精准\nconst handleFocus = () => {\n  // Do nothing - dropdown opens on input or chevron click only\n}\n\n// Combobox: 点击箭头图标切换下拉框\nconst handleChevronClick = (e: MouseEvent) => {\n  e.preventDefault()\n  e.stopPropagation()\n  context.toggle()\n}\n\n// Combobox: 清除选中项\nconst handleClearSelection = (e: MouseEvent) => {\n  e.preventDefault()\n  e.stopPropagation()\n  context.select(null) // 清空选中值\n  context.inputValue.value = '' // 清空输入\n  pendingClear.value = false\n\n  // 聚焦到输入框（如果有自定义输入框）\n  const inputEl = document.getElementById(context.ids.triggerId) as HTMLInputElement\n  if (inputEl) {\n    inputEl.focus()\n  }\n}\n\nconst handleInputKeydown = (event: KeyboardEvent) => {\n  if (selectProps.disabled) return\n\n  if (event.key === 'Backspace') {\n    if (!context.inputValue.value && hasSelection.value) {\n      event.preventDefault()\n      if (!pendingClear.value) {\n        pendingClear.value = true\n      } else {\n        context.select(null)\n        context.inputValue.value = ''\n        pendingClear.value = false\n      }\n      return\n    }\n  } else {\n    pendingClear.value = false\n  }\n\n  switch (event.key) {\n    case 'ArrowDown':\n      event.preventDefault()\n      if (!context.open.value) {\n        context.openDropdown()\n        context.highlightFirst()\n      } else {\n        context.moveHighlight(1)\n      }\n      break\n    case 'ArrowUp':\n      event.preventDefault()\n      if (!context.open.value) {\n        context.openDropdown()\n        context.highlightLast()\n      } else {\n        context.moveHighlight(-1)\n      }\n      break\n    case 'Home':\n      if (context.open.value) {\n        event.preventDefault()\n        context.highlightFirst()\n      }\n      break\n    case 'End':\n      if (context.open.value) {\n        event.preventDefault()\n        context.highlightLast()\n      }\n      break\n    case 'Enter':\n      if (context.open.value) {\n        event.preventDefault()\n        context.selectHighlighted()\n      }\n      break\n    case 'Escape':\n      if (context.open.value) {\n        event.preventDefault()\n        context.close()\n      }\n      break\n    case 'Tab':\n      if (context.open.value) {\n        context.close()\n      }\n      break\n    default:\n      pendingClear.value = false\n      break\n  }\n}\n\nconst handleButtonKeydown = (event: KeyboardEvent) => {\n  if (selectProps.disabled) return\n\n  switch (event.key) {\n    case 'ArrowDown':\n      event.preventDefault()\n      if (!context.open.value) {\n        context.openDropdown()\n        context.highlightFirst()\n      } else {\n        context.moveHighlight(1)\n      }\n      break\n    case 'ArrowUp':\n      event.preventDefault()\n      if (!context.open.value) {\n        context.openDropdown()\n        context.highlightLast()\n      } else {\n        context.moveHighlight(-1)\n      }\n      break\n    case 'Home':\n      if (context.open.value) {\n        event.preventDefault()\n        context.highlightFirst()\n      }\n      break\n    case 'End':\n      if (context.open.value) {\n        event.preventDefault()\n        context.highlightLast()\n      }\n      break\n    case 'Enter':\n    case ' ': // Space key\n    case 'Space':\n    case 'Spacebar':\n      event.preventDefault()\n      if (!context.open.value) {\n        context.openDropdown()\n        context.highlightFirst()\n      } else {\n        context.selectHighlighted()\n      }\n      break\n    case 'Escape':\n      if (context.open.value) {\n        event.preventDefault()\n        context.close()\n      }\n      break\n    case 'Tab':\n      if (context.open.value) {\n        context.close()\n      }\n      break\n    default:\n      pendingClear.value = false\n      break\n  }\n}\n\nwatch(\n  () => context.selectedValue.value,\n  () => {\n    pendingClear.value = false\n  }\n)\n\n// Register trigger DOM element to context when mounted\nonMounted(() => {\n  if (selectProps.searchable) {\n    // Combobox 模式: 注册外层容器元素（而非 input 元素）\n    // 这样 BasePopover 可以正确计算包含标签的完整高度\n    if (comboboxTriggerRef.value) {\n      context.triggerRef.value = comboboxTriggerRef.value\n    }\n  } else {\n    // Button 模式: 注册按钮元素\n    if (buttonComponentRef.value && buttonComponentRef.value.$el) {\n      context.triggerRef.value = buttonComponentRef.value.$el as HTMLElement\n    }\n  }\n})\n</script>\n\n<template>\n  <!-- Combobox 模式: 自定义输入框布局（标签在输入框内） -->\n  <div\n    v-if=\"selectProps.searchable\"\n    ref=\"comboboxTriggerRef\"\n    class=\"ht-combobox-trigger\"\n    :class=\"{\n      'ht-combobox-trigger--disabled': selectProps.disabled,\n      'ht-combobox-trigger--open': context.open.value,\n      [`ht-combobox-trigger--${selectProps.size}`]: selectProps.size,\n      [`ht-combobox-trigger--${selectProps.variant}`]: selectProps.variant,\n      [`ht-combobox-trigger--${selectProps.state}`]: selectProps.state,\n    }\"\n  >\n    <!-- 选中项标签 -->\n    <div\n      v-if=\"hasSelection\"\n      :class=\"['ht-combobox-tag', { 'ht-combobox-tag--pending-clear': pendingClear }]\"\n    >\n      <span class=\"ht-combobox-tag__text\">{{ selectedLabel }}</span>\n      <button\n        v-if=\"!selectProps.disabled\"\n        type=\"button\"\n        class=\"ht-combobox-tag__close\"\n        aria-label=\"Clear selection\"\n        tabindex=\"-1\"\n        @click=\"handleClearSelection\"\n      >\n        <svg class=\"w-3 h-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n          <path\n            d=\"M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z\"\n          />\n        </svg>\n      </button>\n    </div>\n\n    <!-- 输入框 -->\n    <input\n      :id=\"context.ids.triggerId\"\n      type=\"text\"\n      :value=\"context.inputValue.value\"\n      :disabled=\"selectProps.disabled\"\n      :placeholder=\"hasSelection ? '' : selectProps.placeholder\"\n      class=\"ht-combobox-input\"\n      role=\"combobox\"\n      :aria-expanded=\"context.open.value ? 'true' : 'false'\"\n      :aria-haspopup=\"'listbox'\"\n      :aria-controls=\"context.ids.contentId\"\n      aria-autocomplete=\"list\"\n      :aria-activedescendant=\"activeDescendantId\"\n      @input=\"handleInput(($event.target as HTMLInputElement).value)\"\n      @focus=\"handleFocus\"\n      @keydown=\"handleInputKeydown\"\n    />\n\n    <!-- 下拉箭头图标 -->\n    <div class=\"ht-combobox-suffix\">\n      <svg\n        class=\"h-4 w-4 transition-transform cursor-pointer\"\n        :class=\"{ 'rotate-180': context.open.value }\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        viewBox=\"0 0 24 24\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        @click=\"handleChevronClick\"\n      >\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\" />\n      </svg>\n    </div>\n  </div>\n\n  <!-- Button 模式: 按钮 Trigger (默认) -->\n  <HtButton\n    v-else\n    ref=\"buttonComponentRef\"\n    type=\"button\"\n    :id=\"context.ids.triggerId\"\n    role=\"button\"\n    :aria-expanded=\"context.open.value ? 'true' : 'false'\"\n    :aria-haspopup=\"'listbox'\"\n    :aria-controls=\"context.ids.contentId\"\n    :size=\"selectProps.size\"\n    :variant=\"selectProps.variant\"\n    :disabled=\"selectProps.disabled\"\n    class=\"w-full justify-between\"\n    @click=\"context.toggle()\"\n    @keydown=\"handleButtonKeydown\"\n  >\n    <slot />\n\n    <!-- Dropdown chevron icon -->\n    <svg\n      class=\"w-4 h-4 ml-2 shrink-0 transition-transform\"\n      :class=\"{ 'rotate-180': context.open.value }\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      viewBox=\"0 0 24 24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\" />\n    </svg>\n  </HtButton>\n</template>\n\n<style scoped>\n/* Combobox Trigger Container */\n.ht-combobox-trigger {\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 0.375rem;\n  width: 100%;\n  min-height: var(--size-ht-9); /* md size default */\n  padding: 0 0.75rem;\n  border: 1px solid var(--ht-border);\n  border-radius: var(--radius-ht-md);\n  background-color: var(--ht-bg);\n  transition: var(--ht-transition-fast);\n  cursor: text;\n}\n\n/* Size variants */\n.ht-combobox-trigger--sm {\n  min-height: var(--size-ht-8);\n  padding: 0 0.625rem;\n  font-size: 0.875rem;\n}\n\n.ht-combobox-trigger--md {\n  min-height: var(--size-ht-9);\n  padding: 0 0.75rem;\n  font-size: 0.875rem;\n}\n\n.ht-combobox-trigger--lg {\n  min-height: var(--size-ht-10);\n  padding: 0 0.875rem;\n  font-size: 1rem;\n}\n\n/* Variant styles */\n.ht-combobox-trigger--default {\n  border-color: var(--ht-border);\n  background-color: var(--ht-bg);\n}\n\n.ht-combobox-trigger--outline {\n  border-color: var(--ht-border);\n  background-color: transparent;\n}\n\n.ht-combobox-trigger--ghost {\n  border-color: transparent;\n  background-color: transparent;\n}\n\n/* State styles */\n.ht-combobox-trigger--error {\n  border-color: var(--ht-error);\n}\n\n.ht-combobox-trigger--warning {\n  border-color: var(--ht-warning);\n}\n\n.ht-combobox-trigger--success {\n  border-color: var(--ht-success);\n}\n\n/* Focus state */\n.ht-combobox-trigger:focus-within:not(.ht-combobox-trigger--disabled) {\n  outline: 2px solid var(--ht-primary);\n  outline-offset: 1px;\n  border-color: var(--ht-primary);\n}\n\n/* Open state */\n.ht-combobox-trigger--open {\n  border-color: var(--ht-primary);\n}\n\n/* Disabled state */\n.ht-combobox-trigger--disabled {\n  opacity: 0.5;\n  pointer-events: none;\n  cursor: not-allowed;\n}\n\n/* Selected Item Tag */\n.ht-combobox-tag {\n  display: inline-flex;\n  align-items: center;\n  gap: 0.25rem;\n  padding: 0.125rem 0.375rem;\n  background-color: var(--ht-primary-subtle);\n  color: var(--ht-primary);\n  border-radius: var(--radius-ht-sm);\n  border: 1px solid transparent;\n  font-size: 0.8125rem;\n  font-weight: 500;\n  line-height: 1.25rem;\n  white-space: nowrap;\n  flex-shrink: 1; /* 允许标签收缩，为箭头留出空间 */\n  min-width: 0; /* 允许标签缩小到内容宽度以下 */\n  max-width: calc(100% - 80px); /* 确保留出输入框和箭头的最小空间 */\n}\n\n.ht-combobox-tag--pending-clear {\n  border-color: var(--ht-error-border);\n  background-color: var(--ht-error-subtle);\n  color: var(--ht-error);\n}\n\n.ht-combobox-tag__text {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  /* 移除固定的 max-width，让父容器控制 */\n}\n\n.ht-combobox-tag__close {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.125rem;\n  border-radius: var(--radius-ht-sm);\n  color: var(--ht-primary);\n  transition: var(--ht-transition-fast);\n  cursor: pointer;\n}\n\n.ht-combobox-tag__close:hover {\n  background-color: var(--ht-primary);\n  color: var(--ht-bg);\n}\n\n/* Input Field */\n.ht-combobox-input {\n  flex: 1;\n  min-width: 40px; /* 减小最小宽度，但确保输入框始终可见 */\n  border: none;\n  outline: none;\n  background: transparent;\n  font-size: inherit;\n  color: var(--ht-text);\n  padding: 0;\n}\n\n.ht-combobox-input::placeholder {\n  color: var(--ht-text-muted);\n}\n\n.ht-combobox-input:disabled {\n  cursor: not-allowed;\n}\n\n/* Suffix Icon Container */\n.ht-combobox-suffix {\n  display: flex;\n  align-items: center;\n  flex-shrink: 0; /* 箭头图标永不收缩 */\n  color: var(--ht-text-muted);\n  pointer-events: auto;\n  margin-left: auto; /* 确保箭头始终靠右 */\n}\n</style>\n","<script setup lang=\"ts\">\n/**\n * HtSelectValue - 选中值显示\n *\n * 职责:\n * - 显示当前选中值的文本（从 optionsMap 查找）\n * - 未选中时显示 placeholder\n * - 支持自定义格式化 (Phase 3)\n */\nimport { computed } from 'vue'\nimport { injectSelectContext } from './composables/useSelectContext'\n\nconst props = withDefaults(defineProps<{\n  placeholder?: string\n}>(), {\n  placeholder: 'Select...',\n})\n\nconst context = injectSelectContext()\n\nconst displayValue = computed(() => {\n  const value = context.selectedValue.value\n\n  // No selection\n  if (value === undefined || value === null) {\n    return props.placeholder\n  }\n\n  // Look up text value from optionsMap\n  const textValue = context.optionsMap.value.get(value)\n  if (textValue) {\n    return textValue\n  }\n\n  // Fallback: Object with label property\n  if (typeof value === 'object' && value !== null && 'label' in value) {\n    return value.label\n  }\n\n  // Fallback: Primitive value\n  return String(value)\n})\n\nconst hasValue = computed(() => {\n  const value = context.selectedValue.value\n  return value !== undefined && value !== null\n})\n</script>\n\n<template>\n  <span\n    class=\"flex-1 text-left truncate\"\n    :class=\"{ 'text-[var(--ht-text-muted)]': !hasValue }\"\n  >\n    {{ displayValue }}\n  </span>\n</template>\n","<script setup lang=\"ts\">\n/**\n * HtSelectValue - 选中值显示\n *\n * 职责:\n * - 显示当前选中值的文本（从 optionsMap 查找）\n * - 未选中时显示 placeholder\n * - 支持自定义格式化 (Phase 3)\n */\nimport { computed } from 'vue'\nimport { injectSelectContext } from './composables/useSelectContext'\n\nconst props = withDefaults(defineProps<{\n  placeholder?: string\n}>(), {\n  placeholder: 'Select...',\n})\n\nconst context = injectSelectContext()\n\nconst displayValue = computed(() => {\n  const value = context.selectedValue.value\n\n  // No selection\n  if (value === undefined || value === null) {\n    return props.placeholder\n  }\n\n  // Look up text value from optionsMap\n  const textValue = context.optionsMap.value.get(value)\n  if (textValue) {\n    return textValue\n  }\n\n  // Fallback: Object with label property\n  if (typeof value === 'object' && value !== null && 'label' in value) {\n    return value.label\n  }\n\n  // Fallback: Primitive value\n  return String(value)\n})\n\nconst hasValue = computed(() => {\n  const value = context.selectedValue.value\n  return value !== undefined && value !== null\n})\n</script>\n\n<template>\n  <span\n    class=\"flex-1 text-left truncate\"\n    :class=\"{ 'text-[var(--ht-text-muted)]': !hasValue }\"\n  >\n    {{ displayValue }}\n  </span>\n</template>\n","<!--\n  BasePopover.vue - Reusable Popover Component\n\n  Responsibilities:\n  - Smart positioning with viewport detection\n  - Focus trap and keyboard navigation\n  - Click-outside-to-close behavior\n  - ARIA-compliant accessibility\n\n  Features:\n  - Auto-repositioning on scroll/resize\n  - Configurable anchor side and alignment\n  - Teleport to body to avoid clipping\n  - Animation support\n-->\n\n<script setup lang=\"ts\">\nimport { onUnmounted, ref, watch, nextTick } from 'vue'\n\nexport interface PopoverPosition {\n  placement?: 'bottom' | 'top' | 'left' | 'right'\n  align?: 'start' | 'center' | 'end'\n  offset?: number\n  autoFlip?: boolean\n}\n\nconst props = withDefaults(defineProps<{\n  open: boolean\n  anchor?: HTMLElement | null\n  position?: PopoverPosition\n  role?: 'dialog' | 'menu' | 'listbox'\n  ariaLabel?: string\n  closeOnClickOutside?: boolean\n  closeOnEscape?: boolean\n  trapFocus?: boolean\n  keepAlive?: boolean\n}>(), {\n  anchor: null,\n  position: () => ({ placement: 'bottom', align: 'center', offset: 4, autoFlip: true }),\n  role: 'dialog',\n  ariaLabel: '',\n  closeOnClickOutside: true,\n  closeOnEscape: true,\n  trapFocus: true,\n  keepAlive: false,\n})\n\nconst emit = defineEmits<{\n  'update:open': [value: boolean]\n  'close': []\n  'opened': []\n  'closed': []\n}>()\n\n// Refs\nconst popoverRef = ref<HTMLElement | null>(null)\nconst popoverStyle = ref<Record<string, string>>({\n  position: 'fixed',\n  top: '-10000px',\n  left: '-10000px',\n  transform: 'none',\n  zIndex: '1000',\n})\nconst visible = ref(false)\n\n// Positioning logic\nfunction updatePosition() {\n  const anchor = props.anchor\n  const popover = popoverRef.value\n  if (!anchor || !popover) return\n\n  const anchorRect = anchor.getBoundingClientRect()\n  const popoverRect = popover.getBoundingClientRect()\n  const vw = window.innerWidth\n  const vh = window.innerHeight\n\n  // Check if anchor is out of viewport\n  // Strategy: Close on vertical scroll out, follow on horizontal scroll\n  // Reasoning:\n  // - Vertical scroll: Usually means context switch, dropdown loses meaning\n  // - Horizontal scroll: Usually browsing content, user expects dropdown to follow\n  const isOutOfViewport =\n    anchorRect.bottom < 0 ||           // 完全在上方：关闭\n    anchorRect.top > vh                 // 完全在下方：关闭\n    // 水平移出：继续跟随，不关闭（响应式设计考虑）\n\n  if (isOutOfViewport) {\n    close()\n    return\n  }\n\n  const { placement = 'bottom', align = 'center', offset = 4, autoFlip = true } = props.position || {}\n\n  let top = 0\n  let bottom: number | undefined\n  let left = 0\n\n  // Calculate base position\n  switch (placement) {\n    case 'bottom':\n      top = anchorRect.bottom + offset\n      left = anchorRect.left + (align === 'center' ? anchorRect.width / 2 - popoverRect.width / 2 : align === 'end' ? anchorRect.width - popoverRect.width : 0)\n      break\n    case 'top':\n      // Use bottom positioning to keep bottom edge sticky when content height changes\n      bottom = vh - anchorRect.top + offset\n      left = anchorRect.left + (align === 'center' ? anchorRect.width / 2 - popoverRect.width / 2 : align === 'end' ? anchorRect.width - popoverRect.width : 0)\n      break\n    case 'left':\n      top = anchorRect.top + (align === 'center' ? anchorRect.height / 2 - popoverRect.height / 2 : align === 'end' ? anchorRect.height - popoverRect.height : 0)\n      left = anchorRect.left - popoverRect.width - offset\n      break\n    case 'right':\n      top = anchorRect.top + (align === 'center' ? anchorRect.height / 2 - popoverRect.height / 2 : align === 'end' ? anchorRect.height - popoverRect.height : 0)\n      left = anchorRect.right + offset\n      break\n  }\n\n  // Auto-flip if overflow\n  if (autoFlip) {\n    if (placement === 'bottom' && top + popoverRect.height > vh) {\n      // Flip to top: use bottom positioning\n      bottom = vh - anchorRect.top + offset\n      top = 0  // Will be ignored when bottom is set\n    } else if (placement === 'top' && bottom !== undefined && vh - bottom + popoverRect.height > vh) {\n      // Flip to bottom: use top positioning\n      top = anchorRect.bottom + offset\n      bottom = undefined\n    }\n  }\n\n  // Clamp to viewport\n  const padding = 8\n  if (left < padding) left = padding\n  if (left + popoverRect.width > vw - padding) left = vw - padding - popoverRect.width\n\n  // Clamp vertical position based on positioning mode\n  if (bottom !== undefined) {\n    // Using bottom positioning (placement='top')\n    if (bottom < padding) bottom = padding\n    if (vh - bottom - popoverRect.height < padding) {\n      bottom = Math.max(padding, vh - padding - popoverRect.height)\n    }\n  } else {\n    // Using top positioning (placement='bottom')\n    if (top < padding) top = padding\n    if (top + popoverRect.height > vh - padding) {\n      top = Math.max(padding, vh - padding - popoverRect.height)\n    }\n  }\n\n  popoverStyle.value = {\n    position: 'fixed',\n    ...(bottom !== undefined ? { bottom: `${bottom}px` } : { top: `${top}px` }),\n    left: `${left}px`,\n    transform: 'none',\n    zIndex: '1000',\n  }\n\n  visible.value = true\n}\n\n// Focus management\nfunction getFocusableElements(): HTMLElement[] {\n  const selectors = [\n    'button:not([disabled])',\n    'input:not([disabled])',\n    'select:not([disabled])',\n    'textarea:not([disabled])',\n    '[tabindex]:not([tabindex=\"-1\"])',\n  ].join(',')\n  if (!popoverRef.value) return []\n  return Array.from(popoverRef.value.querySelectorAll<HTMLElement>(selectors)).filter(el => el.offsetParent !== null)\n}\n\nfunction focusFirst() {\n  if (!props.trapFocus) return\n  const focusables = getFocusableElements()\n  const first = focusables[0]\n  if (first) {\n    try {\n      first.focus()\n    } catch {\n      // Ignore focus errors\n    }\n  }\n}\n\nfunction trapFocusOnTab(e: KeyboardEvent) {\n  if (!props.trapFocus) return\n  const focusables = getFocusableElements()\n  if (focusables.length === 0) return\n\n  const first = focusables[0]!\n  const last = focusables[focusables.length - 1]!\n  const active = document.activeElement as HTMLElement | null\n\n  if (e.shiftKey) {\n    if (!active || active === first || !popoverRef.value?.contains(active)) {\n      e.preventDefault()\n      if (last) last.focus()\n    }\n  } else {\n    if (!active || active === last || !popoverRef.value?.contains(active)) {\n      e.preventDefault()\n      if (first) first.focus()\n    }\n  }\n}\n\n// Event handlers\nfunction handleKeydown(e: KeyboardEvent) {\n  if (e.key === 'Escape' && props.closeOnEscape) {\n    e.preventDefault()\n    e.stopPropagation()\n    close()\n  } else if (e.key === 'Tab') {\n    trapFocusOnTab(e)\n  }\n}\n\nfunction close() {\n  emit('update:open', false)\n  emit('close')\n}\n\n// Lifecycle\nlet cleanupFns: Array<() => void> = []\nlet scrollRAF: number | null = null // Track RAF for scroll updates\n\n// Watch anchor changes and update position\nwatch(() => props.anchor, (newAnchor) => {\n  if (newAnchor && props.open) {\n    nextTick(() => {\n      updatePosition()\n    })\n  }\n}, { immediate: false })\n\nwatch(() => props.open, (isOpen) => {\n  if (isOpen) {\n    visible.value = false\n    nextTick(() => {\n      updatePosition()\n      requestAnimationFrame(() => {\n        focusFirst()\n        emit('opened')\n      })\n    })\n\n    // Setup event listeners\n    const onDocClick = (e: MouseEvent) => {\n      if (!props.closeOnClickOutside) return\n      const target = e.target as Node\n      if (props.anchor?.contains(target) || popoverRef.value?.contains(target)) return\n      close()\n    }\n\n    // Optimized scroll handler with RAF for smooth following\n    const onScroll = () => {\n      // Cancel previous RAF if still pending\n      if (scrollRAF !== null) {\n        cancelAnimationFrame(scrollRAF)\n      }\n\n      // Schedule position update in next animation frame\n      scrollRAF = requestAnimationFrame(() => {\n        updatePosition()\n        scrollRAF = null\n      })\n    }\n\n    const onResize = () => updatePosition()\n\n    document.addEventListener('mousedown', onDocClick)\n    document.addEventListener('scroll', onScroll, { capture: true, passive: true })\n    window.addEventListener('resize', onResize)\n\n    cleanupFns = [\n      () => document.removeEventListener('mousedown', onDocClick),\n      () => document.removeEventListener('scroll', onScroll, { capture: true }),\n      () => window.removeEventListener('resize', onResize),\n      () => {\n        if (scrollRAF !== null) {\n          cancelAnimationFrame(scrollRAF)\n          scrollRAF = null\n        }\n      },\n    ]\n  } else {\n    visible.value = false\n    emit('closed')\n    cleanupFns.forEach(fn => {\n      try {\n        fn()\n      } catch {\n        // Ignore cleanup errors\n      }\n    })\n    cleanupFns = []\n  }\n})\n\nonUnmounted(() => {\n  cleanupFns.forEach(fn => {\n    try {\n      fn()\n    } catch {\n      // Ignore cleanup errors\n    }\n  })\n  cleanupFns = []\n})\n</script>\n\n<template>\n  <teleport to=\"body\">\n    <div\n      v-if=\"keepAlive || open\"\n      v-show=\"!keepAlive || open\"\n      ref=\"popoverRef\"\n      :role=\"role\"\n      :aria-modal=\"role === 'dialog' ? 'true' : undefined\"\n      :aria-label=\"ariaLabel\"\n      :style=\"{ ...popoverStyle, opacity: visible ? '1' : '0' }\"\n      class=\"ht-popover\"\n      @click.stop\n      @mousedown.stop\n      @keydown.stop=\"handleKeydown\"\n    >\n      <slot />\n    </div>\n  </teleport>\n</template>\n\n<style scoped>\n.ht-popover {\n  /* Opacity transition for show/hide */\n  transition:\n    opacity 150ms cubic-bezier(0.4, 0, 0.2, 1),\n    transform 100ms cubic-bezier(0.4, 0, 0.2, 1);\n  contain: layout style paint;\n\n  /* Enable GPU acceleration for smoother scrolling */\n  will-change: transform;\n}\n</style>\n","<!--\n  BasePopover.vue - Reusable Popover Component\n\n  Responsibilities:\n  - Smart positioning with viewport detection\n  - Focus trap and keyboard navigation\n  - Click-outside-to-close behavior\n  - ARIA-compliant accessibility\n\n  Features:\n  - Auto-repositioning on scroll/resize\n  - Configurable anchor side and alignment\n  - Teleport to body to avoid clipping\n  - Animation support\n-->\n\n<script setup lang=\"ts\">\nimport { onUnmounted, ref, watch, nextTick } from 'vue'\n\nexport interface PopoverPosition {\n  placement?: 'bottom' | 'top' | 'left' | 'right'\n  align?: 'start' | 'center' | 'end'\n  offset?: number\n  autoFlip?: boolean\n}\n\nconst props = withDefaults(defineProps<{\n  open: boolean\n  anchor?: HTMLElement | null\n  position?: PopoverPosition\n  role?: 'dialog' | 'menu' | 'listbox'\n  ariaLabel?: string\n  closeOnClickOutside?: boolean\n  closeOnEscape?: boolean\n  trapFocus?: boolean\n  keepAlive?: boolean\n}>(), {\n  anchor: null,\n  position: () => ({ placement: 'bottom', align: 'center', offset: 4, autoFlip: true }),\n  role: 'dialog',\n  ariaLabel: '',\n  closeOnClickOutside: true,\n  closeOnEscape: true,\n  trapFocus: true,\n  keepAlive: false,\n})\n\nconst emit = defineEmits<{\n  'update:open': [value: boolean]\n  'close': []\n  'opened': []\n  'closed': []\n}>()\n\n// Refs\nconst popoverRef = ref<HTMLElement | null>(null)\nconst popoverStyle = ref<Record<string, string>>({\n  position: 'fixed',\n  top: '-10000px',\n  left: '-10000px',\n  transform: 'none',\n  zIndex: '1000',\n})\nconst visible = ref(false)\n\n// Positioning logic\nfunction updatePosition() {\n  const anchor = props.anchor\n  const popover = popoverRef.value\n  if (!anchor || !popover) return\n\n  const anchorRect = anchor.getBoundingClientRect()\n  const popoverRect = popover.getBoundingClientRect()\n  const vw = window.innerWidth\n  const vh = window.innerHeight\n\n  // Check if anchor is out of viewport\n  // Strategy: Close on vertical scroll out, follow on horizontal scroll\n  // Reasoning:\n  // - Vertical scroll: Usually means context switch, dropdown loses meaning\n  // - Horizontal scroll: Usually browsing content, user expects dropdown to follow\n  const isOutOfViewport =\n    anchorRect.bottom < 0 ||           // 完全在上方：关闭\n    anchorRect.top > vh                 // 完全在下方：关闭\n    // 水平移出：继续跟随，不关闭（响应式设计考虑）\n\n  if (isOutOfViewport) {\n    close()\n    return\n  }\n\n  const { placement = 'bottom', align = 'center', offset = 4, autoFlip = true } = props.position || {}\n\n  let top = 0\n  let bottom: number | undefined\n  let left = 0\n\n  // Calculate base position\n  switch (placement) {\n    case 'bottom':\n      top = anchorRect.bottom + offset\n      left = anchorRect.left + (align === 'center' ? anchorRect.width / 2 - popoverRect.width / 2 : align === 'end' ? anchorRect.width - popoverRect.width : 0)\n      break\n    case 'top':\n      // Use bottom positioning to keep bottom edge sticky when content height changes\n      bottom = vh - anchorRect.top + offset\n      left = anchorRect.left + (align === 'center' ? anchorRect.width / 2 - popoverRect.width / 2 : align === 'end' ? anchorRect.width - popoverRect.width : 0)\n      break\n    case 'left':\n      top = anchorRect.top + (align === 'center' ? anchorRect.height / 2 - popoverRect.height / 2 : align === 'end' ? anchorRect.height - popoverRect.height : 0)\n      left = anchorRect.left - popoverRect.width - offset\n      break\n    case 'right':\n      top = anchorRect.top + (align === 'center' ? anchorRect.height / 2 - popoverRect.height / 2 : align === 'end' ? anchorRect.height - popoverRect.height : 0)\n      left = anchorRect.right + offset\n      break\n  }\n\n  // Auto-flip if overflow\n  if (autoFlip) {\n    if (placement === 'bottom' && top + popoverRect.height > vh) {\n      // Flip to top: use bottom positioning\n      bottom = vh - anchorRect.top + offset\n      top = 0  // Will be ignored when bottom is set\n    } else if (placement === 'top' && bottom !== undefined && vh - bottom + popoverRect.height > vh) {\n      // Flip to bottom: use top positioning\n      top = anchorRect.bottom + offset\n      bottom = undefined\n    }\n  }\n\n  // Clamp to viewport\n  const padding = 8\n  if (left < padding) left = padding\n  if (left + popoverRect.width > vw - padding) left = vw - padding - popoverRect.width\n\n  // Clamp vertical position based on positioning mode\n  if (bottom !== undefined) {\n    // Using bottom positioning (placement='top')\n    if (bottom < padding) bottom = padding\n    if (vh - bottom - popoverRect.height < padding) {\n      bottom = Math.max(padding, vh - padding - popoverRect.height)\n    }\n  } else {\n    // Using top positioning (placement='bottom')\n    if (top < padding) top = padding\n    if (top + popoverRect.height > vh - padding) {\n      top = Math.max(padding, vh - padding - popoverRect.height)\n    }\n  }\n\n  popoverStyle.value = {\n    position: 'fixed',\n    ...(bottom !== undefined ? { bottom: `${bottom}px` } : { top: `${top}px` }),\n    left: `${left}px`,\n    transform: 'none',\n    zIndex: '1000',\n  }\n\n  visible.value = true\n}\n\n// Focus management\nfunction getFocusableElements(): HTMLElement[] {\n  const selectors = [\n    'button:not([disabled])',\n    'input:not([disabled])',\n    'select:not([disabled])',\n    'textarea:not([disabled])',\n    '[tabindex]:not([tabindex=\"-1\"])',\n  ].join(',')\n  if (!popoverRef.value) return []\n  return Array.from(popoverRef.value.querySelectorAll<HTMLElement>(selectors)).filter(el => el.offsetParent !== null)\n}\n\nfunction focusFirst() {\n  if (!props.trapFocus) return\n  const focusables = getFocusableElements()\n  const first = focusables[0]\n  if (first) {\n    try {\n      first.focus()\n    } catch {\n      // Ignore focus errors\n    }\n  }\n}\n\nfunction trapFocusOnTab(e: KeyboardEvent) {\n  if (!props.trapFocus) return\n  const focusables = getFocusableElements()\n  if (focusables.length === 0) return\n\n  const first = focusables[0]!\n  const last = focusables[focusables.length - 1]!\n  const active = document.activeElement as HTMLElement | null\n\n  if (e.shiftKey) {\n    if (!active || active === first || !popoverRef.value?.contains(active)) {\n      e.preventDefault()\n      if (last) last.focus()\n    }\n  } else {\n    if (!active || active === last || !popoverRef.value?.contains(active)) {\n      e.preventDefault()\n      if (first) first.focus()\n    }\n  }\n}\n\n// Event handlers\nfunction handleKeydown(e: KeyboardEvent) {\n  if (e.key === 'Escape' && props.closeOnEscape) {\n    e.preventDefault()\n    e.stopPropagation()\n    close()\n  } else if (e.key === 'Tab') {\n    trapFocusOnTab(e)\n  }\n}\n\nfunction close() {\n  emit('update:open', false)\n  emit('close')\n}\n\n// Lifecycle\nlet cleanupFns: Array<() => void> = []\nlet scrollRAF: number | null = null // Track RAF for scroll updates\n\n// Watch anchor changes and update position\nwatch(() => props.anchor, (newAnchor) => {\n  if (newAnchor && props.open) {\n    nextTick(() => {\n      updatePosition()\n    })\n  }\n}, { immediate: false })\n\nwatch(() => props.open, (isOpen) => {\n  if (isOpen) {\n    visible.value = false\n    nextTick(() => {\n      updatePosition()\n      requestAnimationFrame(() => {\n        focusFirst()\n        emit('opened')\n      })\n    })\n\n    // Setup event listeners\n    const onDocClick = (e: MouseEvent) => {\n      if (!props.closeOnClickOutside) return\n      const target = e.target as Node\n      if (props.anchor?.contains(target) || popoverRef.value?.contains(target)) return\n      close()\n    }\n\n    // Optimized scroll handler with RAF for smooth following\n    const onScroll = () => {\n      // Cancel previous RAF if still pending\n      if (scrollRAF !== null) {\n        cancelAnimationFrame(scrollRAF)\n      }\n\n      // Schedule position update in next animation frame\n      scrollRAF = requestAnimationFrame(() => {\n        updatePosition()\n        scrollRAF = null\n      })\n    }\n\n    const onResize = () => updatePosition()\n\n    document.addEventListener('mousedown', onDocClick)\n    document.addEventListener('scroll', onScroll, { capture: true, passive: true })\n    window.addEventListener('resize', onResize)\n\n    cleanupFns = [\n      () => document.removeEventListener('mousedown', onDocClick),\n      () => document.removeEventListener('scroll', onScroll, { capture: true }),\n      () => window.removeEventListener('resize', onResize),\n      () => {\n        if (scrollRAF !== null) {\n          cancelAnimationFrame(scrollRAF)\n          scrollRAF = null\n        }\n      },\n    ]\n  } else {\n    visible.value = false\n    emit('closed')\n    cleanupFns.forEach(fn => {\n      try {\n        fn()\n      } catch {\n        // Ignore cleanup errors\n      }\n    })\n    cleanupFns = []\n  }\n})\n\nonUnmounted(() => {\n  cleanupFns.forEach(fn => {\n    try {\n      fn()\n    } catch {\n      // Ignore cleanup errors\n    }\n  })\n  cleanupFns = []\n})\n</script>\n\n<template>\n  <teleport to=\"body\">\n    <div\n      v-if=\"keepAlive || open\"\n      v-show=\"!keepAlive || open\"\n      ref=\"popoverRef\"\n      :role=\"role\"\n      :aria-modal=\"role === 'dialog' ? 'true' : undefined\"\n      :aria-label=\"ariaLabel\"\n      :style=\"{ ...popoverStyle, opacity: visible ? '1' : '0' }\"\n      class=\"ht-popover\"\n      @click.stop\n      @mousedown.stop\n      @keydown.stop=\"handleKeydown\"\n    >\n      <slot />\n    </div>\n  </teleport>\n</template>\n\n<style scoped>\n.ht-popover {\n  /* Opacity transition for show/hide */\n  transition:\n    opacity 150ms cubic-bezier(0.4, 0, 0.2, 1),\n    transform 100ms cubic-bezier(0.4, 0, 0.2, 1);\n  contain: layout style paint;\n\n  /* Enable GPU acceleration for smoother scrolling */\n  will-change: transform;\n}\n</style>\n","<script setup lang=\"ts\">\n/**\n * HtSelectContent - 下拉内容容器\n *\n * 职责:\n * - 包装 BasePopover 实现定位\n * - 内容滚动区域\n * - 自动匹配 trigger 宽度\n */\nimport { ref, computed, watch } from 'vue'\nimport BasePopover from '../../shared/BasePopover.vue'\nimport { injectSelectContext, injectSelectProps } from './composables/useSelectContext'\n\nconst props = withDefaults(defineProps<{\n  placement?: 'bottom' | 'top' | 'left' | 'right'\n  align?: 'start' | 'center' | 'end'\n  maxHeight?: string\n}>(), {\n  placement: 'bottom',\n  align: 'start',\n  maxHeight: '300px',\n})\n\nconst context = injectSelectContext()\nconst selectProps = injectSelectProps()\nconst contentRef = ref<HTMLElement | null>(null)\n\n// Auto-detect trigger width\nconst triggerWidth = ref<string>('')\n\n// Watch for trigger element changes and measure its width\nwatch(\n  () => context.triggerRef.value,\n  (triggerEl) => {\n    if (triggerEl) {\n      // Get computed width of trigger element\n      const computedWidth = triggerEl.getBoundingClientRect().width\n      triggerWidth.value = `${computedWidth}px`\n    }\n  },\n  { immediate: true }\n)\n\n// Also update width when dropdown opens (in case trigger size changed)\nwatch(\n  () => context.open.value,\n  (isOpen) => {\n    if (isOpen && context.triggerRef.value) {\n      const computedWidth = context.triggerRef.value.getBoundingClientRect().width\n      triggerWidth.value = `${computedWidth}px`\n    }\n  }\n)\n\n// Compute content style with auto-detected width\nconst contentStyle = computed(() => {\n  const baseStyle: Record<string, string> = {\n    maxHeight: props.maxHeight,\n  }\n\n  // Priority: explicit absolute width > auto-detected width > fallback\n  // Note: Percentage widths (like \"100%\") don't work with fixed positioning,\n  // so we treat them as \"auto\" and use trigger width instead\n  const hasAbsoluteWidth = selectProps.width && !selectProps.width.includes('%')\n\n  if (hasAbsoluteWidth) {\n    // Explicit absolute width set by user (e.g., \"280px\", \"20rem\")\n    baseStyle.width = selectProps.width!\n  } else if (triggerWidth.value) {\n    // Auto-detected trigger width: use as fixed width (not minWidth)\n    // This keeps dropdown width consistent with trigger\n    // Also used when width is percentage (e.g., \"100%\")\n    baseStyle.width = triggerWidth.value\n  } else {\n    // Fallback: minimum width\n    baseStyle.width = '8rem'\n  }\n\n  return baseStyle\n})\n</script>\n\n<template>\n  <BasePopover\n    :open=\"context.open.value\"\n    :anchor=\"context.triggerRef.value\"\n    :position=\"{ placement, align, offset: 4, autoFlip: true }\"\n    role=\"dialog\"\n    :close-on-click-outside=\"true\"\n    :close-on-escape=\"true\"\n    :trap-focus=\"false\"\n    :keep-alive=\"true\"\n    @update:open=\"context.open.value = $event\"\n  >\n    <div\n      ref=\"contentRef\"\n      :id=\"context.ids.contentId\"\n      role=\"listbox\"\n      :aria-labelledby=\"context.ids.triggerId\"\n      tabindex=\"-1\"\n      class=\"ht-select-content\"\n      :style=\"contentStyle\"\n    >\n      <slot />\n    </div>\n  </BasePopover>\n</template>\n\n<style scoped>\n.ht-select-content {\n  overflow-y: auto;\n  overflow-x: hidden;\n  border-radius: var(--radius-ht-md);\n  border: 1px solid var(--ht-border);\n  background-color: var(--ht-bg);\n  color: var(--ht-text);\n  box-shadow: var(--shadow-ht-md);\n  padding: 0.25rem;\n  outline: none;\n\n  /* Smooth scrolling for better UX */\n  scroll-behavior: smooth;\n\n  /* Scroll shadows for better depth perception */\n  background:\n    /* Top shadow */\n    linear-gradient(var(--ht-bg) 30%, rgba(255, 255, 255, 0)),\n    linear-gradient(rgba(255, 255, 255, 0), var(--ht-bg) 70%) 0 100%,\n    /* Top shadow cover */\n    radial-gradient(farthest-side at 50% 0, rgba(0, 0, 0, 0.15), transparent),\n    /* Bottom shadow cover */\n    radial-gradient(farthest-side at 50% 100%, rgba(0, 0, 0, 0.15), transparent) 0 100%;\n  background-repeat: no-repeat;\n  background-color: var(--ht-bg);\n  background-size: 100% 40px, 100% 40px, 100% 14px, 100% 14px;\n  background-attachment: local, local, scroll, scroll;\n}\n\n/* Custom scrollbar */\n.ht-select-content::-webkit-scrollbar {\n  width: var(--ht-scrollbar-width);\n}\n\n.ht-select-content::-webkit-scrollbar-track {\n  background: var(--ht-scrollbar-track);\n  border-radius: var(--radius-ht-md);\n}\n\n.ht-select-content::-webkit-scrollbar-thumb {\n  background: var(--ht-scrollbar-thumb);\n  border-radius: var(--radius-ht-md);\n  transition: background 150ms ease;\n}\n\n.ht-select-content::-webkit-scrollbar-thumb:hover {\n  background: var(--ht-scrollbar-thumb-hover);\n}\n</style>\n","<script setup lang=\"ts\">\n/**\n * HtSelectContent - 下拉内容容器\n *\n * 职责:\n * - 包装 BasePopover 实现定位\n * - 内容滚动区域\n * - 自动匹配 trigger 宽度\n */\nimport { ref, computed, watch } from 'vue'\nimport BasePopover from '../../shared/BasePopover.vue'\nimport { injectSelectContext, injectSelectProps } from './composables/useSelectContext'\n\nconst props = withDefaults(defineProps<{\n  placement?: 'bottom' | 'top' | 'left' | 'right'\n  align?: 'start' | 'center' | 'end'\n  maxHeight?: string\n}>(), {\n  placement: 'bottom',\n  align: 'start',\n  maxHeight: '300px',\n})\n\nconst context = injectSelectContext()\nconst selectProps = injectSelectProps()\nconst contentRef = ref<HTMLElement | null>(null)\n\n// Auto-detect trigger width\nconst triggerWidth = ref<string>('')\n\n// Watch for trigger element changes and measure its width\nwatch(\n  () => context.triggerRef.value,\n  (triggerEl) => {\n    if (triggerEl) {\n      // Get computed width of trigger element\n      const computedWidth = triggerEl.getBoundingClientRect().width\n      triggerWidth.value = `${computedWidth}px`\n    }\n  },\n  { immediate: true }\n)\n\n// Also update width when dropdown opens (in case trigger size changed)\nwatch(\n  () => context.open.value,\n  (isOpen) => {\n    if (isOpen && context.triggerRef.value) {\n      const computedWidth = context.triggerRef.value.getBoundingClientRect().width\n      triggerWidth.value = `${computedWidth}px`\n    }\n  }\n)\n\n// Compute content style with auto-detected width\nconst contentStyle = computed(() => {\n  const baseStyle: Record<string, string> = {\n    maxHeight: props.maxHeight,\n  }\n\n  // Priority: explicit absolute width > auto-detected width > fallback\n  // Note: Percentage widths (like \"100%\") don't work with fixed positioning,\n  // so we treat them as \"auto\" and use trigger width instead\n  const hasAbsoluteWidth = selectProps.width && !selectProps.width.includes('%')\n\n  if (hasAbsoluteWidth) {\n    // Explicit absolute width set by user (e.g., \"280px\", \"20rem\")\n    baseStyle.width = selectProps.width!\n  } else if (triggerWidth.value) {\n    // Auto-detected trigger width: use as fixed width (not minWidth)\n    // This keeps dropdown width consistent with trigger\n    // Also used when width is percentage (e.g., \"100%\")\n    baseStyle.width = triggerWidth.value\n  } else {\n    // Fallback: minimum width\n    baseStyle.width = '8rem'\n  }\n\n  return baseStyle\n})\n</script>\n\n<template>\n  <BasePopover\n    :open=\"context.open.value\"\n    :anchor=\"context.triggerRef.value\"\n    :position=\"{ placement, align, offset: 4, autoFlip: true }\"\n    role=\"dialog\"\n    :close-on-click-outside=\"true\"\n    :close-on-escape=\"true\"\n    :trap-focus=\"false\"\n    :keep-alive=\"true\"\n    @update:open=\"context.open.value = $event\"\n  >\n    <div\n      ref=\"contentRef\"\n      :id=\"context.ids.contentId\"\n      role=\"listbox\"\n      :aria-labelledby=\"context.ids.triggerId\"\n      tabindex=\"-1\"\n      class=\"ht-select-content\"\n      :style=\"contentStyle\"\n    >\n      <slot />\n    </div>\n  </BasePopover>\n</template>\n\n<style scoped>\n.ht-select-content {\n  overflow-y: auto;\n  overflow-x: hidden;\n  border-radius: var(--radius-ht-md);\n  border: 1px solid var(--ht-border);\n  background-color: var(--ht-bg);\n  color: var(--ht-text);\n  box-shadow: var(--shadow-ht-md);\n  padding: 0.25rem;\n  outline: none;\n\n  /* Smooth scrolling for better UX */\n  scroll-behavior: smooth;\n\n  /* Scroll shadows for better depth perception */\n  background:\n    /* Top shadow */\n    linear-gradient(var(--ht-bg) 30%, rgba(255, 255, 255, 0)),\n    linear-gradient(rgba(255, 255, 255, 0), var(--ht-bg) 70%) 0 100%,\n    /* Top shadow cover */\n    radial-gradient(farthest-side at 50% 0, rgba(0, 0, 0, 0.15), transparent),\n    /* Bottom shadow cover */\n    radial-gradient(farthest-side at 50% 100%, rgba(0, 0, 0, 0.15), transparent) 0 100%;\n  background-repeat: no-repeat;\n  background-color: var(--ht-bg);\n  background-size: 100% 40px, 100% 40px, 100% 14px, 100% 14px;\n  background-attachment: local, local, scroll, scroll;\n}\n\n/* Custom scrollbar */\n.ht-select-content::-webkit-scrollbar {\n  width: var(--ht-scrollbar-width);\n}\n\n.ht-select-content::-webkit-scrollbar-track {\n  background: var(--ht-scrollbar-track);\n  border-radius: var(--radius-ht-md);\n}\n\n.ht-select-content::-webkit-scrollbar-thumb {\n  background: var(--ht-scrollbar-thumb);\n  border-radius: var(--radius-ht-md);\n  transition: background 150ms ease;\n}\n\n.ht-select-content::-webkit-scrollbar-thumb:hover {\n  background: var(--ht-scrollbar-thumb-hover);\n}\n</style>\n","<script setup lang=\"ts\">\n/**\n * HtSelectItem - 单个选项\n *\n * 职责:\n * - 渲染选项内容\n * - 处理选择逻辑\n * - 显示选中状态\n * - ARIA 属性\n * - 注册选项文本到 context\n * - 检测是否在分组内，应用缩进样式\n */\nimport { computed, watch, ref, onMounted, onUnmounted, inject } from 'vue'\nimport { injectSelectContext, injectSelectProps, SELECT_GROUP_KEY } from './composables/useSelectContext'\n\n// 注入分组状态 (如果在 HtSelectGroup 内部则为 true)\nconst isInGroup = inject(SELECT_GROUP_KEY, false)\n\nconst props = defineProps<{\n  value: any\n  disabled?: boolean\n  textValue?: string\n  itemIndex?: number\n}>()\n\nconst context = injectSelectContext()\nconst selectProps = injectSelectProps()\nconst itemRef = ref<HTMLElement | null>(null)\n\n// Get text content from slot or textValue prop\nconst getTextValue = (): string => {\n  if (props.textValue) return props.textValue\n  if (itemRef.value) {\n    return itemRef.value.textContent?.trim() || String(props.value)\n  }\n  return String(props.value)\n}\n\n// Register option on mount and update\nonMounted(() => {\n  if (!itemRef.value) return\n  // Register option text\n  context.registerOption(props.value, getTextValue())\n})\n\n// Unregister option on unmount\nonUnmounted(() => {\n  context.unregisterOption(props.value)\n})\n\n// Calculate item index (reactive, based on enabled items only)\nconst itemIndex = computed(() => {\n  if (typeof props.itemIndex === 'number') {\n    return props.itemIndex\n  }\n\n  if (!itemRef.value) return -1\n\n  const content = itemRef.value.closest('.ht-select-content')\n  if (!content) return -1\n\n  // Only count enabled items (same logic as keyboard navigation)\n  const items = Array.from(\n    content.querySelectorAll('[data-ht-select-item=\"true\"]:not([aria-disabled=\"true\"])')\n  )\n  return items.indexOf(itemRef.value)\n})\n\nconst isSelected = computed(() => context.isSelected(props.value))\n\nconst isHighlighted = computed(() => {\n  return itemIndex.value >= 0 && context.highlightedIndex.value === itemIndex.value\n})\n\nconst handleClick = () => {\n  if (!props.disabled) {\n    context.select(props.value)\n  }\n}\n\n// Auto-scroll when highlighted\nwatch(isHighlighted, (highlighted) => {\n  if (highlighted && itemRef.value) {\n    itemRef.value.scrollIntoView({ block: 'nearest', behavior: 'smooth' })\n  }\n})\n</script>\n\n<template>\n  <div\n    ref=\"itemRef\"\n    data-ht-select-item=\"true\"\n    :id=\"itemIndex >= 0 ? `${context.ids.contentId}-opt-${itemIndex}` : undefined\"\n    role=\"option\"\n    :aria-selected=\"isSelected ? 'true' : 'false'\"\n    :aria-disabled=\"disabled ? 'true' : 'false'\"\n    :data-highlighted=\"isHighlighted ? 'true' : 'false'\"\n    class=\"ht-select-item\"\n    :class=\"{\n      'ht-select-item--selected': isSelected,\n      'ht-select-item--disabled': disabled,\n      'ht-select-item--highlighted': isHighlighted,\n      'ht-select-item--multiline': selectProps.showMultiLines && selectProps.showMultiLines > 1,\n      'ht-select-item--grouped': isInGroup,\n    }\"\n    @click=\"handleClick\"\n  >\n    <!-- Text content wrapper for ellipsis -->\n    <span\n      class=\"ht-select-item__text\"\n      :style=\"{\n        WebkitLineClamp: selectProps.showMultiLines && selectProps.showMultiLines > 1 ? selectProps.showMultiLines : undefined,\n      }\"\n    >\n      <slot />\n    </span>\n\n    <!-- Check icon for selected item -->\n    <svg\n      v-if=\"isSelected\"\n      class=\"w-4 h-4 ml-auto shrink-0\"\n      fill=\"currentColor\"\n      viewBox=\"0 0 20 20\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fill-rule=\"evenodd\"\n        d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n        clip-rule=\"evenodd\"\n      />\n    </svg>\n  </div>\n</template>\n\n<style scoped>\n.ht-select-item {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.375rem 0.5rem;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  border-radius: var(--radius-ht-sm);\n  cursor: default;\n  user-select: none;\n  transition: var(--ht-transition-fast);\n  min-height: var(--size-ht-9);\n  outline: none;\n}\n\n/* Grouped item indentation */\n.ht-select-item--grouped {\n  padding-left: 1.5rem;\n}\n\n/* Multi-line mode: allow items to grow in height */\n.ht-select-item--multiline {\n  align-items: flex-start; /* 顶部对齐，适应多行文本 */\n  min-height: auto; /* 移除固定最小高度 */\n}\n\n/* Text content wrapper */\n.ht-select-item__text {\n  flex: 1;\n  min-width: 0; /* Critical for text-overflow to work in flex */\n\n  /* 单行模式 (默认) */\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n/* Multi-line text mode */\n.ht-select-item--multiline .ht-select-item__text {\n  /* 启用多行显示 */\n  white-space: normal;\n  overflow: hidden;\n  word-wrap: break-word;\n  word-break: break-word;\n\n  /* 使用 -webkit-line-clamp 限制行数 */\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  /* -webkit-line-clamp 由内联样式动态设置 */\n}\n\n.ht-select-item:hover:not(.ht-select-item--disabled) {\n  background-color: var(--ht-cell-hover);\n}\n\n.ht-select-item--highlighted {\n  background-color: var(--ht-cell-hover);\n  /* Make highlighted state more visible */\n  outline: 2px solid var(--ht-primary);\n  outline-offset: -2px;\n}\n\n.ht-select-item--selected {\n  background-color: var(--ht-primary-subtle);\n  color: var(--ht-primary);\n  font-weight: 500;\n}\n\n.ht-select-item--disabled {\n  opacity: 0.5;\n  pointer-events: none;\n  cursor: not-allowed;\n}\n</style>\n","<script setup lang=\"ts\">\n/**\n * HtSelectItem - 单个选项\n *\n * 职责:\n * - 渲染选项内容\n * - 处理选择逻辑\n * - 显示选中状态\n * - ARIA 属性\n * - 注册选项文本到 context\n * - 检测是否在分组内，应用缩进样式\n */\nimport { computed, watch, ref, onMounted, onUnmounted, inject } from 'vue'\nimport { injectSelectContext, injectSelectProps, SELECT_GROUP_KEY } from './composables/useSelectContext'\n\n// 注入分组状态 (如果在 HtSelectGroup 内部则为 true)\nconst isInGroup = inject(SELECT_GROUP_KEY, false)\n\nconst props = defineProps<{\n  value: any\n  disabled?: boolean\n  textValue?: string\n  itemIndex?: number\n}>()\n\nconst context = injectSelectContext()\nconst selectProps = injectSelectProps()\nconst itemRef = ref<HTMLElement | null>(null)\n\n// Get text content from slot or textValue prop\nconst getTextValue = (): string => {\n  if (props.textValue) return props.textValue\n  if (itemRef.value) {\n    return itemRef.value.textContent?.trim() || String(props.value)\n  }\n  return String(props.value)\n}\n\n// Register option on mount and update\nonMounted(() => {\n  if (!itemRef.value) return\n  // Register option text\n  context.registerOption(props.value, getTextValue())\n})\n\n// Unregister option on unmount\nonUnmounted(() => {\n  context.unregisterOption(props.value)\n})\n\n// Calculate item index (reactive, based on enabled items only)\nconst itemIndex = computed(() => {\n  if (typeof props.itemIndex === 'number') {\n    return props.itemIndex\n  }\n\n  if (!itemRef.value) return -1\n\n  const content = itemRef.value.closest('.ht-select-content')\n  if (!content) return -1\n\n  // Only count enabled items (same logic as keyboard navigation)\n  const items = Array.from(\n    content.querySelectorAll('[data-ht-select-item=\"true\"]:not([aria-disabled=\"true\"])')\n  )\n  return items.indexOf(itemRef.value)\n})\n\nconst isSelected = computed(() => context.isSelected(props.value))\n\nconst isHighlighted = computed(() => {\n  return itemIndex.value >= 0 && context.highlightedIndex.value === itemIndex.value\n})\n\nconst handleClick = () => {\n  if (!props.disabled) {\n    context.select(props.value)\n  }\n}\n\n// Auto-scroll when highlighted\nwatch(isHighlighted, (highlighted) => {\n  if (highlighted && itemRef.value) {\n    itemRef.value.scrollIntoView({ block: 'nearest', behavior: 'smooth' })\n  }\n})\n</script>\n\n<template>\n  <div\n    ref=\"itemRef\"\n    data-ht-select-item=\"true\"\n    :id=\"itemIndex >= 0 ? `${context.ids.contentId}-opt-${itemIndex}` : undefined\"\n    role=\"option\"\n    :aria-selected=\"isSelected ? 'true' : 'false'\"\n    :aria-disabled=\"disabled ? 'true' : 'false'\"\n    :data-highlighted=\"isHighlighted ? 'true' : 'false'\"\n    class=\"ht-select-item\"\n    :class=\"{\n      'ht-select-item--selected': isSelected,\n      'ht-select-item--disabled': disabled,\n      'ht-select-item--highlighted': isHighlighted,\n      'ht-select-item--multiline': selectProps.showMultiLines && selectProps.showMultiLines > 1,\n      'ht-select-item--grouped': isInGroup,\n    }\"\n    @click=\"handleClick\"\n  >\n    <!-- Text content wrapper for ellipsis -->\n    <span\n      class=\"ht-select-item__text\"\n      :style=\"{\n        WebkitLineClamp: selectProps.showMultiLines && selectProps.showMultiLines > 1 ? selectProps.showMultiLines : undefined,\n      }\"\n    >\n      <slot />\n    </span>\n\n    <!-- Check icon for selected item -->\n    <svg\n      v-if=\"isSelected\"\n      class=\"w-4 h-4 ml-auto shrink-0\"\n      fill=\"currentColor\"\n      viewBox=\"0 0 20 20\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fill-rule=\"evenodd\"\n        d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n        clip-rule=\"evenodd\"\n      />\n    </svg>\n  </div>\n</template>\n\n<style scoped>\n.ht-select-item {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.375rem 0.5rem;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  border-radius: var(--radius-ht-sm);\n  cursor: default;\n  user-select: none;\n  transition: var(--ht-transition-fast);\n  min-height: var(--size-ht-9);\n  outline: none;\n}\n\n/* Grouped item indentation */\n.ht-select-item--grouped {\n  padding-left: 1.5rem;\n}\n\n/* Multi-line mode: allow items to grow in height */\n.ht-select-item--multiline {\n  align-items: flex-start; /* 顶部对齐，适应多行文本 */\n  min-height: auto; /* 移除固定最小高度 */\n}\n\n/* Text content wrapper */\n.ht-select-item__text {\n  flex: 1;\n  min-width: 0; /* Critical for text-overflow to work in flex */\n\n  /* 单行模式 (默认) */\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n/* Multi-line text mode */\n.ht-select-item--multiline .ht-select-item__text {\n  /* 启用多行显示 */\n  white-space: normal;\n  overflow: hidden;\n  word-wrap: break-word;\n  word-break: break-word;\n\n  /* 使用 -webkit-line-clamp 限制行数 */\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  /* -webkit-line-clamp 由内联样式动态设置 */\n}\n\n.ht-select-item:hover:not(.ht-select-item--disabled) {\n  background-color: var(--ht-cell-hover);\n}\n\n.ht-select-item--highlighted {\n  background-color: var(--ht-cell-hover);\n  /* Make highlighted state more visible */\n  outline: 2px solid var(--ht-primary);\n  outline-offset: -2px;\n}\n\n.ht-select-item--selected {\n  background-color: var(--ht-primary-subtle);\n  color: var(--ht-primary);\n  font-weight: 500;\n}\n\n.ht-select-item--disabled {\n  opacity: 0.5;\n  pointer-events: none;\n  cursor: not-allowed;\n}\n</style>\n","<script setup lang=\"ts\">\n/**\n * HtSelectGroup - 分组容器\n *\n * 职责:\n * - 包裹分组标签和分组选项\n * - 提供分组语义化结构\n * - 支持分组样式定制\n * - 提供分组状态给子选项 (用于缩进)\n */\nimport { provide } from 'vue'\nimport { SELECT_GROUP_KEY } from './composables/useSelectContext'\n\ndefineProps<{\n  /**\n   * 分组标识符 (用于 aria-labelledby)\n   */\n  id?: string\n}>()\n\n// 提供分组状态给子选项，用于应用缩进样式\nprovide(SELECT_GROUP_KEY, true)\n</script>\n\n<template>\n  <div\n    role=\"group\"\n    :aria-labelledby=\"id\"\n    class=\"ht-select-group\"\n  >\n    <slot />\n  </div>\n</template>\n\n<style scoped>\n.ht-select-group {\n  /* Group container with better spacing */\n  padding: 0;\n}\n\n/* Space between groups */\n.ht-select-group + .ht-select-group {\n  margin-top: 0.5rem;\n}\n\n/* Add bottom padding to last item in group for visual separation */\n.ht-select-group > :last-child {\n  margin-bottom: 0.25rem;\n}\n</style>\n","<script setup lang=\"ts\">\n/**\n * HtSelectGroup - 分组容器\n *\n * 职责:\n * - 包裹分组标签和分组选项\n * - 提供分组语义化结构\n * - 支持分组样式定制\n * - 提供分组状态给子选项 (用于缩进)\n */\nimport { provide } from 'vue'\nimport { SELECT_GROUP_KEY } from './composables/useSelectContext'\n\ndefineProps<{\n  /**\n   * 分组标识符 (用于 aria-labelledby)\n   */\n  id?: string\n}>()\n\n// 提供分组状态给子选项，用于应用缩进样式\nprovide(SELECT_GROUP_KEY, true)\n</script>\n\n<template>\n  <div\n    role=\"group\"\n    :aria-labelledby=\"id\"\n    class=\"ht-select-group\"\n  >\n    <slot />\n  </div>\n</template>\n\n<style scoped>\n.ht-select-group {\n  /* Group container with better spacing */\n  padding: 0;\n}\n\n/* Space between groups */\n.ht-select-group + .ht-select-group {\n  margin-top: 0.5rem;\n}\n\n/* Add bottom padding to last item in group for visual separation */\n.ht-select-group > :last-child {\n  margin-bottom: 0.25rem;\n}\n</style>\n","<script setup lang=\"ts\">\n/**\n * HtSelectLabel - 分组标签\n *\n * 职责:\n * - 显示分组名称\n * - 提供分组语义标识\n * - 与 HtSelectGroup 的 aria-labelledby 配合使用\n */\nimport { computed } from 'vue'\n\nconst props = withDefaults(defineProps<{\n  /**\n   * 标签 ID (用于 aria-labelledby 关联)\n   * 如果不提供，将自动生成\n   */\n  id?: string\n\n  /**\n   * 控制是否在滚动时保持吸附在顶部\n   */\n  sticky?: boolean\n}>(), {\n  sticky: false,\n})\n\n// 生成唯一 ID\nconst labelId = computed(() => {\n  return props.id || `ht-select-label-${Math.random().toString(36).substr(2, 9)}`\n})\n</script>\n\n<template>\n  <div\n    :id=\"labelId\"\n    :class=\"['ht-select-label', { 'ht-select-label--sticky': props.sticky }]\"\n    role=\"presentation\"\n  >\n    <slot />\n  </div>\n</template>\n\n<style scoped>\n.ht-select-label {\n  padding: 0.5rem 0.75rem 0.25rem;\n  font-size: 0.75rem;\n  line-height: 1rem;\n  font-weight: 600;\n  color: var(--ht-text-muted);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  user-select: none;\n}\n\n.ht-select-label--sticky {\n  position: sticky;\n  top: 0;\n  background-color: var(--ht-bg);\n  z-index: 1;\n  box-shadow: 0 1px 0 0 transparent;\n  transition: box-shadow 150ms ease;\n}\n\n.ht-select-label--sticky::after {\n  content: '';\n  position: absolute;\n  bottom: -1px;\n  left: 0;\n  right: 0;\n  height: 1px;\n  background: linear-gradient(\n    to bottom,\n    rgba(0, 0, 0, 0.1),\n    transparent\n  );\n  opacity: 0;\n  transition: opacity 150ms ease;\n}\n\n.ht-select-label:not(:first-child) {\n  margin-top: 0.5rem;\n}\n</style>\n","<script setup lang=\"ts\">\n/**\n * HtSelectLabel - 分组标签\n *\n * 职责:\n * - 显示分组名称\n * - 提供分组语义标识\n * - 与 HtSelectGroup 的 aria-labelledby 配合使用\n */\nimport { computed } from 'vue'\n\nconst props = withDefaults(defineProps<{\n  /**\n   * 标签 ID (用于 aria-labelledby 关联)\n   * 如果不提供，将自动生成\n   */\n  id?: string\n\n  /**\n   * 控制是否在滚动时保持吸附在顶部\n   */\n  sticky?: boolean\n}>(), {\n  sticky: false,\n})\n\n// 生成唯一 ID\nconst labelId = computed(() => {\n  return props.id || `ht-select-label-${Math.random().toString(36).substr(2, 9)}`\n})\n</script>\n\n<template>\n  <div\n    :id=\"labelId\"\n    :class=\"['ht-select-label', { 'ht-select-label--sticky': props.sticky }]\"\n    role=\"presentation\"\n  >\n    <slot />\n  </div>\n</template>\n\n<style scoped>\n.ht-select-label {\n  padding: 0.5rem 0.75rem 0.25rem;\n  font-size: 0.75rem;\n  line-height: 1rem;\n  font-weight: 600;\n  color: var(--ht-text-muted);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  user-select: none;\n}\n\n.ht-select-label--sticky {\n  position: sticky;\n  top: 0;\n  background-color: var(--ht-bg);\n  z-index: 1;\n  box-shadow: 0 1px 0 0 transparent;\n  transition: box-shadow 150ms ease;\n}\n\n.ht-select-label--sticky::after {\n  content: '';\n  position: absolute;\n  bottom: -1px;\n  left: 0;\n  right: 0;\n  height: 1px;\n  background: linear-gradient(\n    to bottom,\n    rgba(0, 0, 0, 0.1),\n    transparent\n  );\n  opacity: 0;\n  transition: opacity 150ms ease;\n}\n\n.ht-select-label:not(:first-child) {\n  margin-top: 0.5rem;\n}\n</style>\n","<script setup lang=\"ts\">\n/**\n * HtSelectSeparator - 分隔线\n *\n * 用于分隔选项组或逻辑区域\n */\n</script>\n\n<template>\n  <div class=\"ht-select-separator\" role=\"separator\" />\n</template>\n\n<style scoped>\n.ht-select-separator {\n  height: 1px;\n  background: linear-gradient(\n    to right,\n    transparent,\n    var(--ht-border) 10%,\n    var(--ht-border) 90%,\n    transparent\n  );\n  margin: 0.5rem 0;\n\n  /* Subtle fade-in animation */\n  animation: fadeIn 150ms ease-in;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n</style>\n","<script setup lang=\"ts\">\n/**\n * HtSelectSeparator - 分隔线\n *\n * 用于分隔选项组或逻辑区域\n */\n</script>\n\n<template>\n  <div class=\"ht-select-separator\" role=\"separator\" />\n</template>\n\n<style scoped>\n.ht-select-separator {\n  height: 1px;\n  background: linear-gradient(\n    to right,\n    transparent,\n    var(--ht-border) 10%,\n    var(--ht-border) 90%,\n    transparent\n  );\n  margin: 0.5rem 0;\n\n  /* Subtle fade-in animation */\n  animation: fadeIn 150ms ease-in;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n</style>\n","<script setup lang=\"ts\">\n/**\n * HtSelectOptionRender - 自定义选项渲染组件\n *\n * 职责:\n * - 渲染 optionRender 返回的自定义选项内容\n * - 支持 title、description、meta、badge 等丰富布局\n * - 统一管理选项渲染样式\n *\n * 设计目的:\n * - 消除 DRY 违反: 替代 HtSelect.vue 中重复的 62 行模板代码\n * - 提高可维护性: 自定义渲染逻辑集中在一个组件中\n * - 增强复用性: 可在分组和非分组模式中复用\n */\nimport type { OptionRenderData } from '../../../types/primitives/select'\n\ndefineProps<{\n  /**\n   * optionRender 函数返回的渲染数据\n   */\n  renderData: OptionRenderData\n\n  /**\n   * 获取徽章样式类名的函数\n   */\n  getBadgeClass: (badgeType?: string) => string\n}>()\n</script>\n\n<template>\n  <div class=\"ht-option-render\">\n    <div class=\"ht-option-render__content\">\n      <div v-if=\"renderData.title\" class=\"ht-option-render__title\">\n        {{ renderData.title }}\n      </div>\n      <div v-if=\"renderData.description\" class=\"ht-option-render__description\">\n        {{ renderData.description }}\n      </div>\n      <div v-if=\"renderData.meta?.length\" class=\"ht-option-render__meta\">\n        <span\n          v-for=\"(metaEntry, metaIndex) in renderData.meta\"\n          :key=\"metaIndex\"\n          class=\"ht-option-render__meta-item\"\n        >\n          <span class=\"ht-option-render__meta-label\">{{ metaEntry.label }}:</span>\n          <span class=\"ht-option-render__meta-value\">{{ metaEntry.value }}</span>\n        </span>\n      </div>\n    </div>\n    <div v-if=\"renderData.badge\" class=\"ht-option-render__badge\">\n      <span :class=\"['ht-option-badge', getBadgeClass(renderData.badgeType)]\">\n        {{ renderData.badge }}\n      </span>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.ht-option-render {\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: 1rem;\n}\n\n.ht-option-render__content {\n  flex: 1;\n  min-width: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 0.375rem;\n}\n\n.ht-option-render__title {\n  font-weight: 600;\n  font-size: 0.9375rem;\n  line-height: 1.3;\n  color: var(--ht-text);\n}\n\n.ht-option-render__description {\n  font-size: 0.75rem;\n  line-height: 1.4;\n  color: var(--ht-text-muted);\n  font-family: 'Courier New', monospace;\n  word-wrap: break-word;\n  word-break: break-word;\n  white-space: normal;\n}\n\n.ht-option-render__meta {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.5rem 1rem;\n  font-size: 0.75rem;\n  line-height: 1.4;\n}\n\n.ht-option-render__meta-item {\n  display: inline-flex;\n  gap: 0.25rem;\n  white-space: nowrap;\n  color: var(--ht-text-muted);\n}\n\n.ht-option-render__meta-label {\n  color: var(--ht-text-subtle);\n  font-weight: 500;\n}\n\n.ht-option-render__meta-value {\n  color: var(--ht-text-muted);\n}\n\n.ht-option-render__badge {\n  flex-shrink: 0;\n  display: flex;\n  align-items: flex-start;\n  padding-top: 0.125rem;\n}\n\n.ht-option-badge {\n  display: inline-block;\n  padding: 0.375rem 0.875rem;\n  border-radius: var(--radius-ht-md);\n  font-size: 0.8125rem;\n  font-weight: 500;\n  white-space: nowrap;\n  line-height: 1.2;\n}\n\n.ht-option-badge--primary {\n  background-color: var(--ht-primary);\n  color: white;\n}\n\n.ht-option-badge--success {\n  background-color: var(--ht-success);\n  color: white;\n}\n\n.ht-option-badge--warning {\n  background-color: var(--ht-warning);\n  color: var(--ht-text);\n}\n\n.ht-option-badge--info {\n  background-color: var(--ht-info);\n  color: white;\n}\n\n.ht-option-badge--default {\n  background-color: var(--ht-bg-subtle);\n  color: var(--ht-text-muted);\n  border: 1px solid var(--ht-border);\n}\n\n/* Hover Enhancement */\n:deep(.ht-option-custom:hover) .ht-option-render__title {\n  color: var(--ht-primary);\n}\n\n/* Selected Enhancement */\n:deep(.ht-select-item--selected) .ht-option-render__title {\n  color: var(--ht-primary);\n  font-weight: 700;\n}\n</style>\n","<script setup lang=\"ts\">\n/**\n * HtSelectOptionRender - 自定义选项渲染组件\n *\n * 职责:\n * - 渲染 optionRender 返回的自定义选项内容\n * - 支持 title、description、meta、badge 等丰富布局\n * - 统一管理选项渲染样式\n *\n * 设计目的:\n * - 消除 DRY 违反: 替代 HtSelect.vue 中重复的 62 行模板代码\n * - 提高可维护性: 自定义渲染逻辑集中在一个组件中\n * - 增强复用性: 可在分组和非分组模式中复用\n */\nimport type { OptionRenderData } from '../../../types/primitives/select'\n\ndefineProps<{\n  /**\n   * optionRender 函数返回的渲染数据\n   */\n  renderData: OptionRenderData\n\n  /**\n   * 获取徽章样式类名的函数\n   */\n  getBadgeClass: (badgeType?: string) => string\n}>()\n</script>\n\n<template>\n  <div class=\"ht-option-render\">\n    <div class=\"ht-option-render__content\">\n      <div v-if=\"renderData.title\" class=\"ht-option-render__title\">\n        {{ renderData.title }}\n      </div>\n      <div v-if=\"renderData.description\" class=\"ht-option-render__description\">\n        {{ renderData.description }}\n      </div>\n      <div v-if=\"renderData.meta?.length\" class=\"ht-option-render__meta\">\n        <span\n          v-for=\"(metaEntry, metaIndex) in renderData.meta\"\n          :key=\"metaIndex\"\n          class=\"ht-option-render__meta-item\"\n        >\n          <span class=\"ht-option-render__meta-label\">{{ metaEntry.label }}:</span>\n          <span class=\"ht-option-render__meta-value\">{{ metaEntry.value }}</span>\n        </span>\n      </div>\n    </div>\n    <div v-if=\"renderData.badge\" class=\"ht-option-render__badge\">\n      <span :class=\"['ht-option-badge', getBadgeClass(renderData.badgeType)]\">\n        {{ renderData.badge }}\n      </span>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.ht-option-render {\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: 1rem;\n}\n\n.ht-option-render__content {\n  flex: 1;\n  min-width: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 0.375rem;\n}\n\n.ht-option-render__title {\n  font-weight: 600;\n  font-size: 0.9375rem;\n  line-height: 1.3;\n  color: var(--ht-text);\n}\n\n.ht-option-render__description {\n  font-size: 0.75rem;\n  line-height: 1.4;\n  color: var(--ht-text-muted);\n  font-family: 'Courier New', monospace;\n  word-wrap: break-word;\n  word-break: break-word;\n  white-space: normal;\n}\n\n.ht-option-render__meta {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.5rem 1rem;\n  font-size: 0.75rem;\n  line-height: 1.4;\n}\n\n.ht-option-render__meta-item {\n  display: inline-flex;\n  gap: 0.25rem;\n  white-space: nowrap;\n  color: var(--ht-text-muted);\n}\n\n.ht-option-render__meta-label {\n  color: var(--ht-text-subtle);\n  font-weight: 500;\n}\n\n.ht-option-render__meta-value {\n  color: var(--ht-text-muted);\n}\n\n.ht-option-render__badge {\n  flex-shrink: 0;\n  display: flex;\n  align-items: flex-start;\n  padding-top: 0.125rem;\n}\n\n.ht-option-badge {\n  display: inline-block;\n  padding: 0.375rem 0.875rem;\n  border-radius: var(--radius-ht-md);\n  font-size: 0.8125rem;\n  font-weight: 500;\n  white-space: nowrap;\n  line-height: 1.2;\n}\n\n.ht-option-badge--primary {\n  background-color: var(--ht-primary);\n  color: white;\n}\n\n.ht-option-badge--success {\n  background-color: var(--ht-success);\n  color: white;\n}\n\n.ht-option-badge--warning {\n  background-color: var(--ht-warning);\n  color: var(--ht-text);\n}\n\n.ht-option-badge--info {\n  background-color: var(--ht-info);\n  color: white;\n}\n\n.ht-option-badge--default {\n  background-color: var(--ht-bg-subtle);\n  color: var(--ht-text-muted);\n  border: 1px solid var(--ht-border);\n}\n\n/* Hover Enhancement */\n:deep(.ht-option-custom:hover) .ht-option-render__title {\n  color: var(--ht-primary);\n}\n\n/* Selected Enhancement */\n:deep(.ht-select-item--selected) .ht-option-render__title {\n  color: var(--ht-primary);\n  font-weight: 700;\n}\n</style>\n","<script setup lang=\"ts\">\n/**\n * HtSelect - 下拉选择根组件\n *\n * 职责:\n * - Context Provider (状态管理)\n * - Props 接收和验证\n * - 事件触发\n * - Props 模式: 自动渲染选项 (Phase 2)\n * - 搜索过滤 (Phase 2.2)\n * - 自定义选项渲染 (Phase 2.2.21)\n * - 异步数据加载 (Phase 2 Async)\n *\n * Phase 1 MVP: 单选模式 + 键盘导航 + ARIA\n * Phase 2: Props 模式 + 自动分组 + 搜索 + 异步数据源\n * Phase 2.2.21: optionRender 自定义渲染\n */\nimport { computed, watch } from 'vue'\nimport type { HtSelectBaseProps, SelectOption, OptionRenderData, NavigableOption } from '../../../types/primitives/select'\nimport { provideSelectContext, provideSelectProps } from './composables/useSelectContext'\nimport { useAsyncSource } from './composables/useAsyncSource'\nimport HtSelectTrigger from './HtSelectTrigger.vue'\nimport HtSelectValue from './HtSelectValue.vue'\nimport HtSelectContent from './HtSelectContent.vue'\nimport HtSelectItem from './HtSelectItem.vue'\nimport HtSelectGroup from './HtSelectGroup.vue'\nimport HtSelectLabel from './HtSelectLabel.vue'\nimport HtSelectSeparator from './HtSelectSeparator.vue'\nimport HtSelectOptionRender from './HtSelectOptionRender.vue'\n\nconst props = withDefaults(defineProps<HtSelectBaseProps>(), {\n  disabled: false,\n  required: false,\n  size: 'md',\n  variant: 'outline',\n  state: 'default',\n  clearable: false,\n  searchable: false,\n  searchFields: 'auto',\n  groupBy: 'group',\n  groupLabelSticky: false,\n  placeholder: 'Select...',\n  emptyText: 'No options available',\n  emptySearchText: 'No results found',\n  defaultGroupName: 'Other',\n  valueField: 'value',\n  labelField: 'label',\n  showMultiLines: 1,\n})\n\nconst emit = defineEmits<{\n  'update:modelValue': [value: any]\n  'change': [value: any]\n  'loading-start': [query: string]\n  'loading-end': [options: SelectOption[], query: string]\n  'loading-error': [error: Error, query: string]\n}>()\n\n// Provide context and props for child components\nconst context = provideSelectContext(props, emit)\nprovideSelectProps(props)\n\n// ==========================================\n// 异步数据源模式检测 (Phase 2 Async)\n// ==========================================\n\nconst isAsyncMode = computed(() => !!props.source)\n\n// 创建类型兼容的 emit 包装用于 useAsyncSource\nconst asyncEmit = (event: string, ...args: any[]) => {\n  if (event === 'loading-start') {\n    emit('loading-start', args[0])\n  } else if (event === 'loading-end') {\n    emit('loading-end', args[0], args[1])\n  } else if (event === 'loading-error') {\n    emit('loading-error', args[0], args[1])\n  }\n}\n\n// 异步数据源 composable (仅在异步模式下启用)\nconst asyncSource = isAsyncMode.value\n  ? useAsyncSource(\n      {\n        source: props.source!,\n        debounce: props.debounce,\n        searchThreshold: props.searchThreshold,\n        cacheStrategy: props.cacheStrategy,\n        cache: props.cache,\n      },\n      context.inputValue,\n      asyncEmit\n    )\n  : null\n\n// Compute dynamic styles\nconst rootStyle = computed(() => ({\n  width: props.width,\n}))\n\n// Props 模式检测\nconst isPropsMode = computed(() => {\n  // 异步模式优先级高于 Props 模式\n  if (isAsyncMode.value) return true\n  return Array.isArray(props.options) && props.options.length > 0\n})\n\ninterface RenderedOption {\n  option: SelectOption\n  index: number\n  group?: string\n  renderData: OptionRenderData | null\n}\n\n// 标准化选项格式\nconst normalizedOptions = computed<SelectOption[]>(() => {\n  // 异步模式: 使用异步数据源返回的选项\n  if (isAsyncMode.value && asyncSource) {\n    // 初始化时使用 initialOptions\n    if (!context.inputValue.value && props.initialOptions) {\n      return props.initialOptions\n    }\n    // 搜索时使用异步返回的选项\n    return asyncSource.options.value\n  }\n\n  // Props 模式: 使用 props.options\n  if (!props.options) return []\n\n  return props.options.map(opt => {\n    // 简单类型 (string | number)\n    if (typeof opt === 'string' || typeof opt === 'number') {\n      return {\n        value: opt,\n        label: String(opt),\n        disabled: false,\n      }\n    }\n\n    // 对象类型 - 使用字段映射\n    const valueField = props.valueField || 'value'\n    const labelField = props.labelField || 'label'\n\n    // 禁用状态：优先使用 optionDisabled 函数，否则检查 disabled 字段\n    const disabled = props.optionDisabled\n      ? props.optionDisabled(opt)\n      : (opt.disabled || false)\n\n    return {\n      value: opt[valueField],\n      label: opt[labelField] || String(opt[valueField]),\n      disabled,\n      ...opt,  // 保留所有原始属性 (包括 group/自定义分组字段)\n    }\n  })\n})\n\n/**\n * 搜索匹配辅助函数\n * 检查选项是否匹配搜索查询\n * @param option - 选项对象\n * @param query - 搜索查询(小写)\n * @param searchFields - 要搜索的字段列表\n * @param renderDataGetter - 获取渲染数据的函数\n * @returns 是否匹配\n */\nfunction matchesSearch(\n  option: SelectOption,\n  query: string,\n  searchFields: Array<string>,\n  renderDataGetter?: (option: SelectOption) => OptionRenderData | null\n): boolean {\n  const shouldSearchField = (field: string) => searchFields.includes(field)\n\n  // 1. 搜索 label (基础字段)\n  if (shouldSearchField('label')) {\n    const label = option.label?.toLowerCase() || ''\n    if (label.includes(query)) return true\n  }\n\n  // 2-5. 搜索 optionRender 自定义字段\n  if (renderDataGetter) {\n    const renderData = renderDataGetter(option)\n    if (!renderData) return false\n\n    // 2. 搜索 title\n    if (shouldSearchField('title') && renderData.title?.toLowerCase().includes(query)) {\n      return true\n    }\n\n    // 3. 搜索 description\n    if (shouldSearchField('description') && renderData.description?.toLowerCase().includes(query)) {\n      return true\n    }\n\n    // 4. 搜索 meta (所有 label 和 value)\n    if (shouldSearchField('meta') && renderData.meta && Array.isArray(renderData.meta)) {\n      const metaMatches = renderData.meta.some(item => {\n        const metaLabel = String(item.label || '').toLowerCase()\n        const metaValue = String(item.value || '').toLowerCase()\n        return metaLabel.includes(query) || metaValue.includes(query)\n      })\n      if (metaMatches) return true\n    }\n\n    // 5. 搜索 badge\n    if (shouldSearchField('badge') && renderData.badge?.toLowerCase().includes(query)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n// 搜索过滤 (Phase 2.2.22 - 全文检索支持)\n// 支持智能搜索和自定义字段搜索\nconst filteredOptions = computed<SelectOption[]>(() => {\n  // 异步模式: 不进行本地过滤(异步源已处理)\n  if (isAsyncMode.value) {\n    return normalizedOptions.value\n  }\n\n  const query = context.inputValue.value.trim().toLowerCase()\n\n  if (!query) {\n    return normalizedOptions.value\n  }\n\n  // 确定搜索字段 (支持预设配置)\n  let searchFields: string[]\n\n  if (props.searchFields === 'auto') {\n    // 智能模式: 根据是否使用 optionRender 自动选择\n    searchFields = props.optionRender\n      ? ['label', 'title', 'description', 'meta', 'badge']\n      : ['label']\n  } else if (props.searchFields === 'basic') {\n    // 基础模式: 仅搜索 label (性能最佳)\n    searchFields = ['label']\n  } else if (props.searchFields === 'full') {\n    // 完整模式: 搜索所有字段\n    searchFields = ['label', 'title', 'description', 'meta', 'badge']\n  } else {\n    // 自定义模式: 使用用户指定的字段\n    searchFields = props.searchFields\n  }\n\n  // 获取渲染数据的函数(仅在需要时创建)\n  const renderDataGetter = props.optionRender\n    ? (option: SelectOption) => props.optionRender!(option, { index: 0 })\n    : undefined\n\n  return normalizedOptions.value.filter(option =>\n    matchesSearch(option, query, searchFields, renderDataGetter)\n  )\n})\n\nconst renderedOptions = computed<RenderedOption[]>(() => {\n  if (!isPropsMode.value) return []\n\n  let runningIndex = 0\n\n  return filteredOptions.value.map((option) => {\n    const rawGroup = props.groupBy ? option[props.groupBy] : undefined\n    const hasGroupValue = rawGroup !== undefined && rawGroup !== null && rawGroup !== ''\n    const currentIndex = runningIndex++\n\n    return {\n      option,\n      index: currentIndex,\n      group: hasGroupValue ? String(rawGroup) : undefined,\n      renderData: props.optionRender ? props.optionRender(option, { index: currentIndex }) : null,\n    }\n  })\n})\n\nconst groupedOptionBlocks = computed(() => {\n  if (!props.groupBy || !renderedOptions.value.length) {\n    return null\n  }\n\n  const hasGroupField = renderedOptions.value.some(item => item.group !== undefined)\n  if (!hasGroupField) {\n    return null\n  }\n\n  const groups = new Map<string, RenderedOption[]>()\n\n  renderedOptions.value.forEach(item => {\n    const groupName = item.group ?? props.defaultGroupName\n    if (!groups.has(groupName)) {\n      groups.set(groupName, [])\n    }\n    groups.get(groupName)!.push(item)\n  })\n\n  return Array.from(groups.entries()).map(([name, items]) => ({\n    name,\n    options: items,\n  }))\n})\n\nconst navigableOptions = computed<NavigableOption[]>(() => {\n  if (!isPropsMode.value) return []\n\n  return renderedOptions.value.map(item => ({\n    index: item.index,\n    value: item.option.value,\n    disabled: !!item.option.disabled,\n  }))\n})\n\nwatch(\n  () => (isPropsMode.value ? navigableOptions.value : []),\n  (options) => {\n    context.setNavigableOptions(options)\n  },\n  { immediate: true }\n)\n\n// 自动分组逻辑\nconst groupedOptions = computed(() => groupedOptionBlocks.value)\n\n// 徽章样式映射\nconst getBadgeClass = (badgeType?: string): string => {\n  const typeMap: Record<string, string> = {\n    primary: 'ht-option-badge--primary',\n    success: 'ht-option-badge--success',\n    warning: 'ht-option-badge--warning',\n    info: 'ht-option-badge--info',\n    default: 'ht-option-badge--default',\n  }\n  const key = badgeType || 'primary'\n  return (typeMap[key] !== undefined ? typeMap[key] : typeMap.primary) as string\n}\n\n// ==========================================\n// 搜索阈值检测 (Phase 2 Async)\n// ==========================================\n\n/**\n * 检查是否低于搜索阈值\n * 仅在异步模式且设置了 searchThreshold 时生效\n */\nconst isBelowSearchThreshold = computed(() => {\n  if (!isAsyncMode.value || !props.searchThreshold) return false\n  const inputLength = context.inputValue.value.trim().length\n  return inputLength > 0 && inputLength < props.searchThreshold\n})\n\n/**\n * 获取阈值提示文本\n * 支持 {n} 占位符替换为实际阈值数字\n */\nconst getThresholdHintText = computed(() => {\n  const threshold = props.searchThreshold || 0\n  const defaultHint = `Type ${threshold} or more characters to search...`\n  const hint = props.searchThresholdHint || defaultHint\n  return hint.replace('{n}', String(threshold))\n})\n</script>\n\n<template>\n  <div class=\"ht-select-root\" :style=\"rootStyle\">\n    <!-- Props 模式: 自动渲染 -->\n    <template v-if=\"isPropsMode\">\n      <HtSelectTrigger>\n        <HtSelectValue :placeholder=\"props.placeholder\" />\n      </HtSelectTrigger>\n\n      <HtSelectContent>\n        <!-- 无分组 -->\n        <template v-if=\"!groupedOptions\">\n          <HtSelectItem\n            v-for=\"item in renderedOptions\"\n            :key=\"String(item.option.value)\"\n            :value=\"item.option.value\"\n            :disabled=\"item.option.disabled\"\n            :text-value=\"item.option.label\"\n            :item-index=\"item.index\"\n            :class=\"{ 'ht-option-custom': !!props.optionRender }\"\n          >\n            <HtSelectOptionRender\n              v-if=\"item.renderData\"\n              :render-data=\"item.renderData\"\n              :get-badge-class=\"getBadgeClass\"\n            />\n            <template v-else>\n              {{ item.option.label }}\n            </template>\n          </HtSelectItem>\n\n          <!-- 空状态 -->\n          <div v-if=\"renderedOptions.length === 0\" class=\"ht-select-empty\">\n            <!-- 搜索阈值未达到 -->\n            <span v-if=\"isBelowSearchThreshold\" class=\"ht-select-threshold-hint\">\n              {{ getThresholdHintText }}\n            </span>\n            <!-- 异步加载中 -->\n            <span v-else-if=\"isAsyncMode && asyncSource?.loading.value\">\n              Loading...\n            </span>\n            <!-- 异步错误 -->\n            <span v-else-if=\"isAsyncMode && asyncSource?.error.value\" class=\"ht-select-error\">\n              {{ asyncSource.error.value.message }}\n            </span>\n            <!-- 正常空状态 -->\n            <span v-else>\n              {{ context.inputValue.value ? props.emptySearchText : props.emptyText }}\n            </span>\n          </div>\n        </template>\n\n        <!-- 分组模式 -->\n        <template v-else>\n          <template v-for=\"(group, groupIndex) in groupedOptions\" :key=\"group.name\">\n            <HtSelectGroup :id=\"`${context.ids.contentId}-group-${groupIndex}-label`\">\n              <HtSelectLabel\n                :id=\"`${context.ids.contentId}-group-${groupIndex}-label`\"\n                :sticky=\"props.groupLabelSticky\"\n              >\n                {{ group.name }}\n              </HtSelectLabel>\n              <HtSelectItem\n                v-for=\"item in group.options\"\n                :key=\"String(item.option.value)\"\n                :value=\"item.option.value\"\n                :disabled=\"item.option.disabled\"\n                :text-value=\"item.option.label\"\n                :item-index=\"item.index\"\n                :class=\"{ 'ht-option-custom': !!props.optionRender }\"\n              >\n                <HtSelectOptionRender\n                  v-if=\"item.renderData\"\n                  :render-data=\"item.renderData\"\n                  :get-badge-class=\"getBadgeClass\"\n                />\n                <template v-else>\n                  {{ item.option.label }}\n                </template>\n              </HtSelectItem>\n            </HtSelectGroup>\n            <HtSelectSeparator v-if=\"groupIndex < groupedOptions.length - 1\" />\n          </template>\n\n          <!-- 空状态 (分组模式) -->\n          <div v-if=\"!groupedOptions.length\" class=\"ht-select-empty\">\n            <!-- 搜索阈值未达到 -->\n            <span v-if=\"isBelowSearchThreshold\" class=\"ht-select-threshold-hint\">\n              {{ getThresholdHintText }}\n            </span>\n            <!-- 异步加载中 -->\n            <span v-else-if=\"isAsyncMode && asyncSource?.loading.value\">\n              Loading...\n            </span>\n            <!-- 异步错误 -->\n            <span v-else-if=\"isAsyncMode && asyncSource?.error.value\" class=\"ht-select-error\">\n              {{ asyncSource.error.value.message }}\n            </span>\n            <!-- 正常空状态 -->\n            <span v-else>\n              {{ context.inputValue.value ? props.emptySearchText : props.emptyText }}\n            </span>\n          </div>\n        </template>\n      </HtSelectContent>\n    </template>\n\n    <!-- Slots 模式: 完全自定义 -->\n    <template v-else>\n      <slot />\n    </template>\n  </div>\n</template>\n\n<style scoped>\n.ht-select-root {\n  position: relative;\n  display: inline-block;\n}\n\n.ht-select-empty {\n  padding: 0.75rem 0.5rem;\n  text-align: center;\n  color: var(--ht-text-muted);\n  font-size: 0.875rem;\n}\n\n.ht-select-threshold-hint {\n  color: var(--ht-info);\n  font-style: italic;\n}\n\n.ht-select-error {\n  color: var(--ht-error);\n}\n\n/* Custom Option Rendering Styles */\n.ht-option-custom {\n  padding: 0.75rem 0.5rem !important;\n  min-height: auto !important;\n  align-items: stretch !important;\n}\n</style>\n","<script setup lang=\"ts\">\n/**\n * HtSelect - 下拉选择根组件\n *\n * 职责:\n * - Context Provider (状态管理)\n * - Props 接收和验证\n * - 事件触发\n * - Props 模式: 自动渲染选项 (Phase 2)\n * - 搜索过滤 (Phase 2.2)\n * - 自定义选项渲染 (Phase 2.2.21)\n * - 异步数据加载 (Phase 2 Async)\n *\n * Phase 1 MVP: 单选模式 + 键盘导航 + ARIA\n * Phase 2: Props 模式 + 自动分组 + 搜索 + 异步数据源\n * Phase 2.2.21: optionRender 自定义渲染\n */\nimport { computed, watch } from 'vue'\nimport type { HtSelectBaseProps, SelectOption, OptionRenderData, NavigableOption } from '../../../types/primitives/select'\nimport { provideSelectContext, provideSelectProps } from './composables/useSelectContext'\nimport { useAsyncSource } from './composables/useAsyncSource'\nimport HtSelectTrigger from './HtSelectTrigger.vue'\nimport HtSelectValue from './HtSelectValue.vue'\nimport HtSelectContent from './HtSelectContent.vue'\nimport HtSelectItem from './HtSelectItem.vue'\nimport HtSelectGroup from './HtSelectGroup.vue'\nimport HtSelectLabel from './HtSelectLabel.vue'\nimport HtSelectSeparator from './HtSelectSeparator.vue'\nimport HtSelectOptionRender from './HtSelectOptionRender.vue'\n\nconst props = withDefaults(defineProps<HtSelectBaseProps>(), {\n  disabled: false,\n  required: false,\n  size: 'md',\n  variant: 'outline',\n  state: 'default',\n  clearable: false,\n  searchable: false,\n  searchFields: 'auto',\n  groupBy: 'group',\n  groupLabelSticky: false,\n  placeholder: 'Select...',\n  emptyText: 'No options available',\n  emptySearchText: 'No results found',\n  defaultGroupName: 'Other',\n  valueField: 'value',\n  labelField: 'label',\n  showMultiLines: 1,\n})\n\nconst emit = defineEmits<{\n  'update:modelValue': [value: any]\n  'change': [value: any]\n  'loading-start': [query: string]\n  'loading-end': [options: SelectOption[], query: string]\n  'loading-error': [error: Error, query: string]\n}>()\n\n// Provide context and props for child components\nconst context = provideSelectContext(props, emit)\nprovideSelectProps(props)\n\n// ==========================================\n// 异步数据源模式检测 (Phase 2 Async)\n// ==========================================\n\nconst isAsyncMode = computed(() => !!props.source)\n\n// 创建类型兼容的 emit 包装用于 useAsyncSource\nconst asyncEmit = (event: string, ...args: any[]) => {\n  if (event === 'loading-start') {\n    emit('loading-start', args[0])\n  } else if (event === 'loading-end') {\n    emit('loading-end', args[0], args[1])\n  } else if (event === 'loading-error') {\n    emit('loading-error', args[0], args[1])\n  }\n}\n\n// 异步数据源 composable (仅在异步模式下启用)\nconst asyncSource = isAsyncMode.value\n  ? useAsyncSource(\n      {\n        source: props.source!,\n        debounce: props.debounce,\n        searchThreshold: props.searchThreshold,\n        cacheStrategy: props.cacheStrategy,\n        cache: props.cache,\n      },\n      context.inputValue,\n      asyncEmit\n    )\n  : null\n\n// Compute dynamic styles\nconst rootStyle = computed(() => ({\n  width: props.width,\n}))\n\n// Props 模式检测\nconst isPropsMode = computed(() => {\n  // 异步模式优先级高于 Props 模式\n  if (isAsyncMode.value) return true\n  return Array.isArray(props.options) && props.options.length > 0\n})\n\ninterface RenderedOption {\n  option: SelectOption\n  index: number\n  group?: string\n  renderData: OptionRenderData | null\n}\n\n// 标准化选项格式\nconst normalizedOptions = computed<SelectOption[]>(() => {\n  // 异步模式: 使用异步数据源返回的选项\n  if (isAsyncMode.value && asyncSource) {\n    // 初始化时使用 initialOptions\n    if (!context.inputValue.value && props.initialOptions) {\n      return props.initialOptions\n    }\n    // 搜索时使用异步返回的选项\n    return asyncSource.options.value\n  }\n\n  // Props 模式: 使用 props.options\n  if (!props.options) return []\n\n  return props.options.map(opt => {\n    // 简单类型 (string | number)\n    if (typeof opt === 'string' || typeof opt === 'number') {\n      return {\n        value: opt,\n        label: String(opt),\n        disabled: false,\n      }\n    }\n\n    // 对象类型 - 使用字段映射\n    const valueField = props.valueField || 'value'\n    const labelField = props.labelField || 'label'\n\n    // 禁用状态：优先使用 optionDisabled 函数，否则检查 disabled 字段\n    const disabled = props.optionDisabled\n      ? props.optionDisabled(opt)\n      : (opt.disabled || false)\n\n    return {\n      value: opt[valueField],\n      label: opt[labelField] || String(opt[valueField]),\n      disabled,\n      ...opt,  // 保留所有原始属性 (包括 group/自定义分组字段)\n    }\n  })\n})\n\n/**\n * 搜索匹配辅助函数\n * 检查选项是否匹配搜索查询\n * @param option - 选项对象\n * @param query - 搜索查询(小写)\n * @param searchFields - 要搜索的字段列表\n * @param renderDataGetter - 获取渲染数据的函数\n * @returns 是否匹配\n */\nfunction matchesSearch(\n  option: SelectOption,\n  query: string,\n  searchFields: Array<string>,\n  renderDataGetter?: (option: SelectOption) => OptionRenderData | null\n): boolean {\n  const shouldSearchField = (field: string) => searchFields.includes(field)\n\n  // 1. 搜索 label (基础字段)\n  if (shouldSearchField('label')) {\n    const label = option.label?.toLowerCase() || ''\n    if (label.includes(query)) return true\n  }\n\n  // 2-5. 搜索 optionRender 自定义字段\n  if (renderDataGetter) {\n    const renderData = renderDataGetter(option)\n    if (!renderData) return false\n\n    // 2. 搜索 title\n    if (shouldSearchField('title') && renderData.title?.toLowerCase().includes(query)) {\n      return true\n    }\n\n    // 3. 搜索 description\n    if (shouldSearchField('description') && renderData.description?.toLowerCase().includes(query)) {\n      return true\n    }\n\n    // 4. 搜索 meta (所有 label 和 value)\n    if (shouldSearchField('meta') && renderData.meta && Array.isArray(renderData.meta)) {\n      const metaMatches = renderData.meta.some(item => {\n        const metaLabel = String(item.label || '').toLowerCase()\n        const metaValue = String(item.value || '').toLowerCase()\n        return metaLabel.includes(query) || metaValue.includes(query)\n      })\n      if (metaMatches) return true\n    }\n\n    // 5. 搜索 badge\n    if (shouldSearchField('badge') && renderData.badge?.toLowerCase().includes(query)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n// 搜索过滤 (Phase 2.2.22 - 全文检索支持)\n// 支持智能搜索和自定义字段搜索\nconst filteredOptions = computed<SelectOption[]>(() => {\n  // 异步模式: 不进行本地过滤(异步源已处理)\n  if (isAsyncMode.value) {\n    return normalizedOptions.value\n  }\n\n  const query = context.inputValue.value.trim().toLowerCase()\n\n  if (!query) {\n    return normalizedOptions.value\n  }\n\n  // 确定搜索字段 (支持预设配置)\n  let searchFields: string[]\n\n  if (props.searchFields === 'auto') {\n    // 智能模式: 根据是否使用 optionRender 自动选择\n    searchFields = props.optionRender\n      ? ['label', 'title', 'description', 'meta', 'badge']\n      : ['label']\n  } else if (props.searchFields === 'basic') {\n    // 基础模式: 仅搜索 label (性能最佳)\n    searchFields = ['label']\n  } else if (props.searchFields === 'full') {\n    // 完整模式: 搜索所有字段\n    searchFields = ['label', 'title', 'description', 'meta', 'badge']\n  } else {\n    // 自定义模式: 使用用户指定的字段\n    searchFields = props.searchFields\n  }\n\n  // 获取渲染数据的函数(仅在需要时创建)\n  const renderDataGetter = props.optionRender\n    ? (option: SelectOption) => props.optionRender!(option, { index: 0 })\n    : undefined\n\n  return normalizedOptions.value.filter(option =>\n    matchesSearch(option, query, searchFields, renderDataGetter)\n  )\n})\n\nconst renderedOptions = computed<RenderedOption[]>(() => {\n  if (!isPropsMode.value) return []\n\n  let runningIndex = 0\n\n  return filteredOptions.value.map((option) => {\n    const rawGroup = props.groupBy ? option[props.groupBy] : undefined\n    const hasGroupValue = rawGroup !== undefined && rawGroup !== null && rawGroup !== ''\n    const currentIndex = runningIndex++\n\n    return {\n      option,\n      index: currentIndex,\n      group: hasGroupValue ? String(rawGroup) : undefined,\n      renderData: props.optionRender ? props.optionRender(option, { index: currentIndex }) : null,\n    }\n  })\n})\n\nconst groupedOptionBlocks = computed(() => {\n  if (!props.groupBy || !renderedOptions.value.length) {\n    return null\n  }\n\n  const hasGroupField = renderedOptions.value.some(item => item.group !== undefined)\n  if (!hasGroupField) {\n    return null\n  }\n\n  const groups = new Map<string, RenderedOption[]>()\n\n  renderedOptions.value.forEach(item => {\n    const groupName = item.group ?? props.defaultGroupName\n    if (!groups.has(groupName)) {\n      groups.set(groupName, [])\n    }\n    groups.get(groupName)!.push(item)\n  })\n\n  return Array.from(groups.entries()).map(([name, items]) => ({\n    name,\n    options: items,\n  }))\n})\n\nconst navigableOptions = computed<NavigableOption[]>(() => {\n  if (!isPropsMode.value) return []\n\n  return renderedOptions.value.map(item => ({\n    index: item.index,\n    value: item.option.value,\n    disabled: !!item.option.disabled,\n  }))\n})\n\nwatch(\n  () => (isPropsMode.value ? navigableOptions.value : []),\n  (options) => {\n    context.setNavigableOptions(options)\n  },\n  { immediate: true }\n)\n\n// 自动分组逻辑\nconst groupedOptions = computed(() => groupedOptionBlocks.value)\n\n// 徽章样式映射\nconst getBadgeClass = (badgeType?: string): string => {\n  const typeMap: Record<string, string> = {\n    primary: 'ht-option-badge--primary',\n    success: 'ht-option-badge--success',\n    warning: 'ht-option-badge--warning',\n    info: 'ht-option-badge--info',\n    default: 'ht-option-badge--default',\n  }\n  const key = badgeType || 'primary'\n  return (typeMap[key] !== undefined ? typeMap[key] : typeMap.primary) as string\n}\n\n// ==========================================\n// 搜索阈值检测 (Phase 2 Async)\n// ==========================================\n\n/**\n * 检查是否低于搜索阈值\n * 仅在异步模式且设置了 searchThreshold 时生效\n */\nconst isBelowSearchThreshold = computed(() => {\n  if (!isAsyncMode.value || !props.searchThreshold) return false\n  const inputLength = context.inputValue.value.trim().length\n  return inputLength > 0 && inputLength < props.searchThreshold\n})\n\n/**\n * 获取阈值提示文本\n * 支持 {n} 占位符替换为实际阈值数字\n */\nconst getThresholdHintText = computed(() => {\n  const threshold = props.searchThreshold || 0\n  const defaultHint = `Type ${threshold} or more characters to search...`\n  const hint = props.searchThresholdHint || defaultHint\n  return hint.replace('{n}', String(threshold))\n})\n</script>\n\n<template>\n  <div class=\"ht-select-root\" :style=\"rootStyle\">\n    <!-- Props 模式: 自动渲染 -->\n    <template v-if=\"isPropsMode\">\n      <HtSelectTrigger>\n        <HtSelectValue :placeholder=\"props.placeholder\" />\n      </HtSelectTrigger>\n\n      <HtSelectContent>\n        <!-- 无分组 -->\n        <template v-if=\"!groupedOptions\">\n          <HtSelectItem\n            v-for=\"item in renderedOptions\"\n            :key=\"String(item.option.value)\"\n            :value=\"item.option.value\"\n            :disabled=\"item.option.disabled\"\n            :text-value=\"item.option.label\"\n            :item-index=\"item.index\"\n            :class=\"{ 'ht-option-custom': !!props.optionRender }\"\n          >\n            <HtSelectOptionRender\n              v-if=\"item.renderData\"\n              :render-data=\"item.renderData\"\n              :get-badge-class=\"getBadgeClass\"\n            />\n            <template v-else>\n              {{ item.option.label }}\n            </template>\n          </HtSelectItem>\n\n          <!-- 空状态 -->\n          <div v-if=\"renderedOptions.length === 0\" class=\"ht-select-empty\">\n            <!-- 搜索阈值未达到 -->\n            <span v-if=\"isBelowSearchThreshold\" class=\"ht-select-threshold-hint\">\n              {{ getThresholdHintText }}\n            </span>\n            <!-- 异步加载中 -->\n            <span v-else-if=\"isAsyncMode && asyncSource?.loading.value\">\n              Loading...\n            </span>\n            <!-- 异步错误 -->\n            <span v-else-if=\"isAsyncMode && asyncSource?.error.value\" class=\"ht-select-error\">\n              {{ asyncSource.error.value.message }}\n            </span>\n            <!-- 正常空状态 -->\n            <span v-else>\n              {{ context.inputValue.value ? props.emptySearchText : props.emptyText }}\n            </span>\n          </div>\n        </template>\n\n        <!-- 分组模式 -->\n        <template v-else>\n          <template v-for=\"(group, groupIndex) in groupedOptions\" :key=\"group.name\">\n            <HtSelectGroup :id=\"`${context.ids.contentId}-group-${groupIndex}-label`\">\n              <HtSelectLabel\n                :id=\"`${context.ids.contentId}-group-${groupIndex}-label`\"\n                :sticky=\"props.groupLabelSticky\"\n              >\n                {{ group.name }}\n              </HtSelectLabel>\n              <HtSelectItem\n                v-for=\"item in group.options\"\n                :key=\"String(item.option.value)\"\n                :value=\"item.option.value\"\n                :disabled=\"item.option.disabled\"\n                :text-value=\"item.option.label\"\n                :item-index=\"item.index\"\n                :class=\"{ 'ht-option-custom': !!props.optionRender }\"\n              >\n                <HtSelectOptionRender\n                  v-if=\"item.renderData\"\n                  :render-data=\"item.renderData\"\n                  :get-badge-class=\"getBadgeClass\"\n                />\n                <template v-else>\n                  {{ item.option.label }}\n                </template>\n              </HtSelectItem>\n            </HtSelectGroup>\n            <HtSelectSeparator v-if=\"groupIndex < groupedOptions.length - 1\" />\n          </template>\n\n          <!-- 空状态 (分组模式) -->\n          <div v-if=\"!groupedOptions.length\" class=\"ht-select-empty\">\n            <!-- 搜索阈值未达到 -->\n            <span v-if=\"isBelowSearchThreshold\" class=\"ht-select-threshold-hint\">\n              {{ getThresholdHintText }}\n            </span>\n            <!-- 异步加载中 -->\n            <span v-else-if=\"isAsyncMode && asyncSource?.loading.value\">\n              Loading...\n            </span>\n            <!-- 异步错误 -->\n            <span v-else-if=\"isAsyncMode && asyncSource?.error.value\" class=\"ht-select-error\">\n              {{ asyncSource.error.value.message }}\n            </span>\n            <!-- 正常空状态 -->\n            <span v-else>\n              {{ context.inputValue.value ? props.emptySearchText : props.emptyText }}\n            </span>\n          </div>\n        </template>\n      </HtSelectContent>\n    </template>\n\n    <!-- Slots 模式: 完全自定义 -->\n    <template v-else>\n      <slot />\n    </template>\n  </div>\n</template>\n\n<style scoped>\n.ht-select-root {\n  position: relative;\n  display: inline-block;\n}\n\n.ht-select-empty {\n  padding: 0.75rem 0.5rem;\n  text-align: center;\n  color: var(--ht-text-muted);\n  font-size: 0.875rem;\n}\n\n.ht-select-threshold-hint {\n  color: var(--ht-info);\n  font-style: italic;\n}\n\n.ht-select-error {\n  color: var(--ht-error);\n}\n\n/* Custom Option Rendering Styles */\n.ht-option-custom {\n  padding: 0.75rem 0.5rem !important;\n  min-height: auto !important;\n  align-items: stretch !important;\n}\n</style>\n","<template>\n  <HtCheckbox\n    :model-value=\"isSelected\"\n    :disabled=\"isDisabled\"\n    :title=\"disabledReason\"\n    size=\"sm\"\n    variant=\"default\"\n    data-ht-functional=\"checkbox\"\n    @update:model-value=\"handleChange\"\n    @click.stop\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport type { RowData, CheckboxColumnOptions, ColumnDef } from '../../types'\nimport { HtCheckbox } from '../primitives'\n\ninterface Props {\n  /** Row data */\n  rowData: RowData\n  /** Zero-based row index */\n  rowIndex: number\n  /** Whether the row is currently selected */\n  isSelected: boolean\n  /** Column definition */\n  column: ColumnDef\n  /** Column configuration options */\n  options?: CheckboxColumnOptions\n  /** Whether the row is filtered */\n  isFiltered?: boolean\n  /** Whether the row is grouped */\n  isGrouped?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  options: () => ({}),\n  isFiltered: false,\n  isGrouped: false,\n})\n\nconst emit = defineEmits<{\n  'toggle-selection': [rowData: RowData, rowIndex: number]\n}>()\n\nconst selectabilityResult = computed(() => {\n  // Use condition from column definition (top-level)\n  if (props.column.condition) {\n    const isSelectable = props.column.condition(props.rowData)\n    return {\n      disabled: !isSelectable,\n      reason: isSelectable ? undefined : 'Row does not meet selection criteria',\n    }\n  }\n\n  return { disabled: false }\n})\n\nconst isDisabled = computed(() => selectabilityResult.value.disabled)\nconst disabledReason = computed(() => selectabilityResult.value.reason)\n\nfunction handleChange(_checked: boolean | 'indeterminate') {\n  if (!isDisabled.value) {\n    emit('toggle-selection', props.rowData, props.rowIndex)\n  }\n}\n</script>\n","<template>\n  <HtCheckbox\n    :model-value=\"isSelected\"\n    :disabled=\"isDisabled\"\n    :title=\"disabledReason\"\n    size=\"sm\"\n    variant=\"default\"\n    data-ht-functional=\"checkbox\"\n    @update:model-value=\"handleChange\"\n    @click.stop\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport type { RowData, CheckboxColumnOptions, ColumnDef } from '../../types'\nimport { HtCheckbox } from '../primitives'\n\ninterface Props {\n  /** Row data */\n  rowData: RowData\n  /** Zero-based row index */\n  rowIndex: number\n  /** Whether the row is currently selected */\n  isSelected: boolean\n  /** Column definition */\n  column: ColumnDef\n  /** Column configuration options */\n  options?: CheckboxColumnOptions\n  /** Whether the row is filtered */\n  isFiltered?: boolean\n  /** Whether the row is grouped */\n  isGrouped?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  options: () => ({}),\n  isFiltered: false,\n  isGrouped: false,\n})\n\nconst emit = defineEmits<{\n  'toggle-selection': [rowData: RowData, rowIndex: number]\n}>()\n\nconst selectabilityResult = computed(() => {\n  // Use condition from column definition (top-level)\n  if (props.column.condition) {\n    const isSelectable = props.column.condition(props.rowData)\n    return {\n      disabled: !isSelectable,\n      reason: isSelectable ? undefined : 'Row does not meet selection criteria',\n    }\n  }\n\n  return { disabled: false }\n})\n\nconst isDisabled = computed(() => selectabilityResult.value.disabled)\nconst disabledReason = computed(() => selectabilityResult.value.reason)\n\nfunction handleChange(_checked: boolean | 'indeterminate') {\n  if (!isDisabled.value) {\n    emit('toggle-selection', props.rowData, props.rowIndex)\n  }\n}\n</script>\n","<template>\n  <HtCheckbox\n    :model-value=\"isAllSelected\"\n    :indeterminate=\"isIndeterminate\"\n    :title=\"headerTitle\"\n    class=\"ht-checkbox-header\"\n    size=\"sm\"\n    variant=\"default\"\n    data-ht-functional=\"checkbox-header\"\n    @update:model-value=\"handleSelectAll\"\n    @click.stop\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport type { CheckboxColumnOptions } from '../../types'\nimport { HtCheckbox } from '../primitives'\n\ninterface Props {\n  /** Total number of selectable rows */\n  totalSelectableRows: number\n  /** Number of currently selected rows */\n  selectedCount: number\n  /** Column configuration options */\n  options?: CheckboxColumnOptions\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  options: () => ({}),\n})\n\nconst emit = defineEmits<{\n  'select-all': []\n  'clear-selection': []\n}>()\n\nconst isAllSelected = computed(() => {\n  return props.totalSelectableRows > 0 && props.selectedCount === props.totalSelectableRows\n})\n\nconst isIndeterminate = computed(() => {\n  const showIndeterminate = props.options?.showIndeterminate !== false\n  return showIndeterminate && props.selectedCount > 0 && props.selectedCount < props.totalSelectableRows\n})\n\nconst headerTitle = computed(() => {\n  if (isAllSelected.value) {\n    return `Deselect all (${props.selectedCount} selected)`\n  } else if (isIndeterminate.value) {\n    return `Select all (${props.selectedCount}/${props.totalSelectableRows} selected)`\n  } else {\n    return `Select all (${props.totalSelectableRows} rows)`\n  }\n})\n\nfunction handleSelectAll(_checked: boolean | 'indeterminate') {\n  if (isAllSelected.value) {\n    emit('clear-selection')\n  } else {\n    emit('select-all')\n  }\n}\n</script>\n\n<script lang=\"ts\">\nexport default {\n  name: 'HtCheckboxHeader',\n}\n</script>\n","<template>\n  <HtCheckbox\n    :model-value=\"isAllSelected\"\n    :indeterminate=\"isIndeterminate\"\n    :title=\"headerTitle\"\n    class=\"ht-checkbox-header\"\n    size=\"sm\"\n    variant=\"default\"\n    data-ht-functional=\"checkbox-header\"\n    @update:model-value=\"handleSelectAll\"\n    @click.stop\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport type { CheckboxColumnOptions } from '../../types'\nimport { HtCheckbox } from '../primitives'\n\ninterface Props {\n  /** Total number of selectable rows */\n  totalSelectableRows: number\n  /** Number of currently selected rows */\n  selectedCount: number\n  /** Column configuration options */\n  options?: CheckboxColumnOptions\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  options: () => ({}),\n})\n\nconst emit = defineEmits<{\n  'select-all': []\n  'clear-selection': []\n}>()\n\nconst isAllSelected = computed(() => {\n  return props.totalSelectableRows > 0 && props.selectedCount === props.totalSelectableRows\n})\n\nconst isIndeterminate = computed(() => {\n  const showIndeterminate = props.options?.showIndeterminate !== false\n  return showIndeterminate && props.selectedCount > 0 && props.selectedCount < props.totalSelectableRows\n})\n\nconst headerTitle = computed(() => {\n  if (isAllSelected.value) {\n    return `Deselect all (${props.selectedCount} selected)`\n  } else if (isIndeterminate.value) {\n    return `Select all (${props.selectedCount}/${props.totalSelectableRows} selected)`\n  } else {\n    return `Select all (${props.totalSelectableRows} rows)`\n  }\n})\n\nfunction handleSelectAll(_checked: boolean | 'indeterminate') {\n  if (isAllSelected.value) {\n    emit('clear-selection')\n  } else {\n    emit('select-all')\n  }\n}\n</script>\n\n<script lang=\"ts\">\nexport default {\n  name: 'HtCheckboxHeader',\n}\n</script>\n","<template>\n  <HtRadio\n    :model-value=\"isSelected ? props.rowData : undefined\"\n    :value=\"props.rowData\"\n    :disabled=\"isDisabled\"\n    :name=\"radioGroupName\"\n    :title=\"cellTitle\"\n    size=\"sm\"\n    variant=\"default\"\n    data-ht-functional=\"radio\"\n    @update:model-value=\"handleToggle\"\n    @click.stop\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, inject } from 'vue'\nimport type { RowData, RadioColumnOptions, ColumnDef } from '../../types'\nimport { GRID_INSTANCE_ID_KEY } from '../../utils/injection-keys'\nimport { HtRadio } from '../primitives'\n\ninterface Props {\n  /** Row data object */\n  rowData: RowData\n  /** Row index in the data array */\n  rowIndex: number\n  /** Whether this row is selected */\n  isSelected: boolean\n  /** Column definition */\n  column: ColumnDef\n  /** Column configuration options */\n  options?: RadioColumnOptions\n  /** Whether the row is filtered */\n  isFiltered?: boolean\n  /** Whether the row is grouped */\n  isGrouped?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  options: () => ({}),\n  isFiltered: false,\n  isGrouped: false,\n})\n\nconst emit = defineEmits<{\n  'toggle-selection': [rowData: RowData, rowIndex: number]\n}>()\n\n// Grid instance id ensures radio groups don't collide across grids\nconst gridInstanceId = inject<string>(GRID_INSTANCE_ID_KEY, 'ht-grid')\n\n// Radio group name for grouping radio buttons\nconst radioGroupName = computed(() => {\n  if (props.options?.radioGroupName) {\n    return props.options.radioGroupName\n  }\n\n  const columnIdentifier = props.column?.id || props.column?.field || 'radio'\n  return `${gridInstanceId}--${columnIdentifier}`\n})\n\nconst selectabilityResult = computed(() => {\n  // Use condition from column definition (top-level)\n  if (props.column.condition) {\n    const isSelectable = props.column.condition(props.rowData)\n    return {\n      disabled: !isSelectable,\n      reason: isSelectable ? undefined : 'Row does not meet selection criteria',\n    }\n  }\n\n  return { disabled: false }\n})\n\nconst isDisabled = computed(() => selectabilityResult.value.disabled)\nconst disabledReason = computed(() => selectabilityResult.value.reason)\n\nconst cellTitle = computed(() => {\n  if (isDisabled.value) {\n    return disabledReason.value || 'Cannot select this row'\n  }\n  return props.isSelected ? 'Selected row' : 'Select this row'\n})\n\nfunction handleToggle(_value: any) {\n  if (!isDisabled.value) {\n    emit('toggle-selection', props.rowData, props.rowIndex)\n  }\n}\n</script>\n\n<script lang=\"ts\">\nexport default {\n  name: 'HtRadioCell',\n}\n</script>\n","<template>\n  <HtRadio\n    :model-value=\"isSelected ? props.rowData : undefined\"\n    :value=\"props.rowData\"\n    :disabled=\"isDisabled\"\n    :name=\"radioGroupName\"\n    :title=\"cellTitle\"\n    size=\"sm\"\n    variant=\"default\"\n    data-ht-functional=\"radio\"\n    @update:model-value=\"handleToggle\"\n    @click.stop\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, inject } from 'vue'\nimport type { RowData, RadioColumnOptions, ColumnDef } from '../../types'\nimport { GRID_INSTANCE_ID_KEY } from '../../utils/injection-keys'\nimport { HtRadio } from '../primitives'\n\ninterface Props {\n  /** Row data object */\n  rowData: RowData\n  /** Row index in the data array */\n  rowIndex: number\n  /** Whether this row is selected */\n  isSelected: boolean\n  /** Column definition */\n  column: ColumnDef\n  /** Column configuration options */\n  options?: RadioColumnOptions\n  /** Whether the row is filtered */\n  isFiltered?: boolean\n  /** Whether the row is grouped */\n  isGrouped?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  options: () => ({}),\n  isFiltered: false,\n  isGrouped: false,\n})\n\nconst emit = defineEmits<{\n  'toggle-selection': [rowData: RowData, rowIndex: number]\n}>()\n\n// Grid instance id ensures radio groups don't collide across grids\nconst gridInstanceId = inject<string>(GRID_INSTANCE_ID_KEY, 'ht-grid')\n\n// Radio group name for grouping radio buttons\nconst radioGroupName = computed(() => {\n  if (props.options?.radioGroupName) {\n    return props.options.radioGroupName\n  }\n\n  const columnIdentifier = props.column?.id || props.column?.field || 'radio'\n  return `${gridInstanceId}--${columnIdentifier}`\n})\n\nconst selectabilityResult = computed(() => {\n  // Use condition from column definition (top-level)\n  if (props.column.condition) {\n    const isSelectable = props.column.condition(props.rowData)\n    return {\n      disabled: !isSelectable,\n      reason: isSelectable ? undefined : 'Row does not meet selection criteria',\n    }\n  }\n\n  return { disabled: false }\n})\n\nconst isDisabled = computed(() => selectabilityResult.value.disabled)\nconst disabledReason = computed(() => selectabilityResult.value.reason)\n\nconst cellTitle = computed(() => {\n  if (isDisabled.value) {\n    return disabledReason.value || 'Cannot select this row'\n  }\n  return props.isSelected ? 'Selected row' : 'Select this row'\n})\n\nfunction handleToggle(_value: any) {\n  if (!isDisabled.value) {\n    emit('toggle-selection', props.rowData, props.rowIndex)\n  }\n}\n</script>\n\n<script lang=\"ts\">\nexport default {\n  name: 'HtRadioCell',\n}\n</script>\n","<template>\n  <div\n    class=\"ht-radio-header\"\n    data-ht-functional=\"radio-header\"\n  >\n    <span class=\"ht-radio-header-label\" :title=\"headerTitle\">\n      {{ headerLabel }}\n    </span>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport type { RadioColumnOptions } from '../../types'\n\ninterface Props {\n  /** Total number of selectable rows */\n  totalSelectableRows: number\n  /** Number of currently selected rows (should be 0 or 1) */\n  selectedCount: number\n  /** Column configuration options */\n  options?: RadioColumnOptions\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  options: () => ({}),\n})\n\nconst headerLabel = computed(() => {\n  return props.options?.headerLabel || ''\n})\n\nconst headerTitle = computed(() => {\n  if (props.selectedCount === 1) {\n    return '1 row selected'\n  }\n  return `${props.totalSelectableRows} rows available`\n})\n</script>\n\n<script lang=\"ts\">\nexport default {\n  name: 'HtRadioHeader',\n}\n</script>\n\n<style scoped>\n.ht-radio-header {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 100%;\n  padding: 0 0.5rem;\n}\n\n.ht-radio-header-label {\n  font-size: 0.75rem;\n  color: var(--ht-header-text, #6b7280);\n  font-weight: 500;\n}\n</style>\n","<template>\n  <div\n    class=\"ht-radio-header\"\n    data-ht-functional=\"radio-header\"\n  >\n    <span class=\"ht-radio-header-label\" :title=\"headerTitle\">\n      {{ headerLabel }}\n    </span>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport type { RadioColumnOptions } from '../../types'\n\ninterface Props {\n  /** Total number of selectable rows */\n  totalSelectableRows: number\n  /** Number of currently selected rows (should be 0 or 1) */\n  selectedCount: number\n  /** Column configuration options */\n  options?: RadioColumnOptions\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  options: () => ({}),\n})\n\nconst headerLabel = computed(() => {\n  return props.options?.headerLabel || ''\n})\n\nconst headerTitle = computed(() => {\n  if (props.selectedCount === 1) {\n    return '1 row selected'\n  }\n  return `${props.totalSelectableRows} rows available`\n})\n</script>\n\n<script lang=\"ts\">\nexport default {\n  name: 'HtRadioHeader',\n}\n</script>\n\n<style scoped>\n.ht-radio-header {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 100%;\n  padding: 0 0.5rem;\n}\n\n.ht-radio-header-label {\n  font-size: 0.75rem;\n  color: var(--ht-header-text, #6b7280);\n  font-weight: 500;\n}\n</style>\n","<template>\n  <span\n    class=\"ht-seq-cell\"\n    data-ht-functional=\"seq\"\n  >\n    {{ displayNumber }}\n  </span>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport type { SeqColumnOptions } from '../../types/functional-columns'\n\ninterface Props {\n  /** Zero-based row index in the current view */\n  rowIndex: number\n  /** Column configuration options */\n  options?: SeqColumnOptions\n  /** Pagination offset (if applicable) */\n  paginationOffset?: number\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  options: () => ({}),\n  paginationOffset: 0,\n})\n\nconst baseNumber = computed(() => props.options?.baseNumber ?? 1)\n\nconst displayNumber = computed(() => {\n  const actualIndex = props.rowIndex + props.paginationOffset\n  const number = actualIndex + baseNumber.value\n\n  // Use custom formatter if provided\n  if (props.options?.formatter) {\n    return props.options.formatter(actualIndex, baseNumber.value)\n  }\n\n  return number\n})\n</script>\n\n<style scoped>\n.ht-seq-cell {\n  font-variant-numeric: tabular-nums;\n  color: var(--ht-fg-muted, rgb(107 114 128));\n  font-size: 0.875rem;\n  user-select: none;\n}\n</style>\n","<template>\n  <span\n    class=\"ht-seq-cell\"\n    data-ht-functional=\"seq\"\n  >\n    {{ displayNumber }}\n  </span>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport type { SeqColumnOptions } from '../../types/functional-columns'\n\ninterface Props {\n  /** Zero-based row index in the current view */\n  rowIndex: number\n  /** Column configuration options */\n  options?: SeqColumnOptions\n  /** Pagination offset (if applicable) */\n  paginationOffset?: number\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  options: () => ({}),\n  paginationOffset: 0,\n})\n\nconst baseNumber = computed(() => props.options?.baseNumber ?? 1)\n\nconst displayNumber = computed(() => {\n  const actualIndex = props.rowIndex + props.paginationOffset\n  const number = actualIndex + baseNumber.value\n\n  // Use custom formatter if provided\n  if (props.options?.formatter) {\n    return props.options.formatter(actualIndex, baseNumber.value)\n  }\n\n  return number\n})\n</script>\n\n<style scoped>\n.ht-seq-cell {\n  font-variant-numeric: tabular-nums;\n  color: var(--ht-fg-muted, rgb(107 114 128));\n  font-size: 0.875rem;\n  user-select: none;\n}\n</style>\n","<template>\n  <div\n    class=\"ht-actions-cell\"\n    data-ht-functional=\"actions\"\n    @click.stop\n    @dblclick.stop\n    @contextmenu.stop\n    @mousedown.stop\n    @mouseup.stop\n    @pointerdown.stop\n    @touchstart.stop\n    @touchend.stop\n  >\n    <slot\n      name=\"actions\"\n      :row-data=\"rowData\"\n      :row-index=\"rowIndex\"\n    >\n      <!-- Default buttons if slot not provided and options.buttons exist -->\n      <template v-if=\"hasDefaultButtons\">\n        <HtButton\n          v-for=\"(button, index) in visibleButtons\"\n          :key=\"index\"\n          variant=\"secondary\"\n          size=\"sm\"\n          class=\"gap-1\"\n          :disabled=\"isButtonDisabled(button)\"\n          @click=\"handleButtonClick(button)\"\n        >\n          <span v-if=\"button.icon\" class=\"ht-action-icon\" v-html=\"button.icon\" />\n          <span class=\"ht-action-label\">{{ button.label }}</span>\n        </HtButton>\n      </template>\n    </slot>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport type { RowData, ActionsColumnOptions } from '../../types'\nimport HtButton from '../primitives/HtButton.vue'\n\ninterface Props {\n  /** Row data */\n  rowData: RowData\n  /** Zero-based row index */\n  rowIndex: number\n  /** Column configuration options */\n  options?: ActionsColumnOptions\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  options: () => ({}),\n})\n\nconst hasDefaultButtons = computed(() => {\n  return props.options?.buttons && props.options.buttons.length > 0\n})\n\nconst visibleButtons = computed(() => {\n  if (!props.options?.buttons) return []\n\n  return props.options.buttons.filter(button => {\n    // Check if button should be visible\n    if (button.visible) {\n      return button.visible(props.rowData)\n    }\n    return true\n  })\n})\n\nfunction isButtonDisabled(button: NonNullable<ActionsColumnOptions['buttons']>[number]): boolean {\n  if (button.disabled) {\n    return button.disabled(props.rowData)\n  }\n  return false\n}\n\nfunction handleButtonClick(button: NonNullable<ActionsColumnOptions['buttons']>[number]) {\n  if (!isButtonDisabled(button)) {\n    button.onClick(props.rowData)\n  }\n}\n</script>\n\n<style scoped>\n.ht-actions-cell {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.ht-action-icon {\n  display: inline-flex;\n  width: 1rem;\n  height: 1rem;\n}\n\n.ht-action-label {\n  white-space: nowrap;\n}\n</style>\n","<template>\n  <div\n    class=\"ht-actions-cell\"\n    data-ht-functional=\"actions\"\n    @click.stop\n    @dblclick.stop\n    @contextmenu.stop\n    @mousedown.stop\n    @mouseup.stop\n    @pointerdown.stop\n    @touchstart.stop\n    @touchend.stop\n  >\n    <slot\n      name=\"actions\"\n      :row-data=\"rowData\"\n      :row-index=\"rowIndex\"\n    >\n      <!-- Default buttons if slot not provided and options.buttons exist -->\n      <template v-if=\"hasDefaultButtons\">\n        <HtButton\n          v-for=\"(button, index) in visibleButtons\"\n          :key=\"index\"\n          variant=\"secondary\"\n          size=\"sm\"\n          class=\"gap-1\"\n          :disabled=\"isButtonDisabled(button)\"\n          @click=\"handleButtonClick(button)\"\n        >\n          <span v-if=\"button.icon\" class=\"ht-action-icon\" v-html=\"button.icon\" />\n          <span class=\"ht-action-label\">{{ button.label }}</span>\n        </HtButton>\n      </template>\n    </slot>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport type { RowData, ActionsColumnOptions } from '../../types'\nimport HtButton from '../primitives/HtButton.vue'\n\ninterface Props {\n  /** Row data */\n  rowData: RowData\n  /** Zero-based row index */\n  rowIndex: number\n  /** Column configuration options */\n  options?: ActionsColumnOptions\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  options: () => ({}),\n})\n\nconst hasDefaultButtons = computed(() => {\n  return props.options?.buttons && props.options.buttons.length > 0\n})\n\nconst visibleButtons = computed(() => {\n  if (!props.options?.buttons) return []\n\n  return props.options.buttons.filter(button => {\n    // Check if button should be visible\n    if (button.visible) {\n      return button.visible(props.rowData)\n    }\n    return true\n  })\n})\n\nfunction isButtonDisabled(button: NonNullable<ActionsColumnOptions['buttons']>[number]): boolean {\n  if (button.disabled) {\n    return button.disabled(props.rowData)\n  }\n  return false\n}\n\nfunction handleButtonClick(button: NonNullable<ActionsColumnOptions['buttons']>[number]) {\n  if (!isButtonDisabled(button)) {\n    button.onClick(props.rowData)\n  }\n}\n</script>\n\n<style scoped>\n.ht-actions-cell {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.ht-action-icon {\n  display: inline-flex;\n  width: 1rem;\n  height: 1rem;\n}\n\n.ht-action-label {\n  white-space: nowrap;\n}\n</style>\n","<template>\n  <div\n    class=\"ht-drag-cell\"\n    data-ht-functional=\"drag\"\n    :class=\"{ 'ht-drag-disabled': isDisabled, 'ht-drag-active': isDragging }\"\n  >\n    <button\n      class=\"ht-drag-handle\"\n      :disabled=\"isDisabled\"\n      :title=\"dragTitle\"\n      :draggable=\"!isDisabled\"\n      :aria-disabled=\"isDisabled ? 'true' : 'false'\"\n      :aria-grabbed=\"isDragging ? 'true' : 'false'\"\n      :aria-label=\"dragAriaLabel\"\n      aria-roledescription=\"Drag handle\"\n      @dragstart=\"handleDragStart\"\n      @dragend=\"handleDragEnd\"\n      @click.stop\n    >\n      <svg\n        class=\"ht-drag-icon\"\n        viewBox=\"0 0 16 16\"\n        fill=\"currentColor\"\n      >\n        <path\n          d=\"M5 3.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zM5 8a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zM5 12.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\"\n        />\n        <path\n          d=\"M14 3.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zM14 8a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zM14 12.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\"\n        />\n      </svg>\n    </button>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref, inject, onMounted, onUnmounted } from 'vue'\nimport type { RowData, DragColumnOptions, DragContext, GridAPI } from '../../types'\nimport { GRID_API_KEY } from '../../utils/injection-keys'\n\ninterface Props {\n  /** Row data object */\n  rowData: RowData\n  /** Row index in the data array */\n  rowIndex: number\n  /** Column configuration options */\n  options?: DragColumnOptions\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  options: () => ({}),\n})\n\nconst emit = defineEmits<{\n  'drag-start': [rowData: RowData, rowIndex: number, event: DragEvent]\n  'drag-end': [rowData: RowData, rowIndex: number, event: DragEvent]\n}>()\n\nconst isDragging = ref(false)\n\n// Inject drag state setter and GridAPI\nconst setDraggingRowId = inject<(id: string | number | null) => void>('setDraggingRowId', () => {})\nconst gridAPI = inject<GridAPI | null>(GRID_API_KEY, null)\n\nconst dragContext = computed<DragContext>(() => ({\n  rowIndex: props.rowIndex,\n}))\n\n// Reactive sort state trigger\nconst sortStateVersion = ref(0)\n\n// Check if sorting is active\nconst hasSorting = computed(() => {\n  // Access sortStateVersion to create reactive dependency\n  void sortStateVersion.value\n\n  if (!gridAPI) return false\n\n  // getSortConfig returns either SortConfig or MultiSortConfig\n  const sortConfig = gridAPI.getSortConfig?.()\n  if (!sortConfig) {\n    return false\n  }\n\n  // Check if it's MultiSortConfig format\n  if ('fields' in sortConfig) {\n    return sortConfig.fields.length > 0\n  }\n\n  // Check if it's SortConfig format (single sort)\n  if ('field' in sortConfig && sortConfig.field) {\n    return true\n  }\n  return false\n})\n\n// Listen for sort changes\nonMounted(() => {\n  if (gridAPI?.on) {\n    const handleSortChange = () => {\n      sortStateVersion.value++\n    }\n\n    gridAPI.on('data-refresh-requested', handleSortChange)\n\n    // Cleanup\n    onUnmounted(() => {\n      gridAPI.off?.('data-refresh-requested', handleSortChange)\n    })\n  }\n})\n\nconst draggabilityResult = computed(() => {\n  // If sorting is active, disable dragging\n  if (hasSorting.value) {\n    return {\n      disabled: true,\n      reason: 'Table is sorted. Clear sorting to enable row dragging'\n    }\n  }\n\n  if (props.options?.isRowDraggable) {\n    const result = props.options.isRowDraggable(props.rowData, dragContext.value)\n    if (typeof result === 'boolean') {\n      return { disabled: !result }\n    }\n    return result\n  }\n\n  return { disabled: false }\n})\n\nconst isDisabled = computed(() => draggabilityResult.value.disabled)\nconst dragTitle = computed(() => {\n  if (isDisabled.value) {\n    return draggabilityResult.value.reason || 'Cannot drag this row'\n  }\n  return 'Drag to reorder'\n})\n\nconst dragAriaLabel = computed(() => {\n  if (isDisabled.value) {\n    return draggabilityResult.value.reason\n      ? `Drag disabled: ${draggabilityResult.value.reason}`\n      : 'Drag disabled'\n  }\n  return 'Drag handle: drag to reorder row'\n})\n\nfunction createDefaultDragPreview(rowData: RowData, rowIndex: number): HTMLElement {\n  const preview = document.createElement('div')\n  preview.className = 'ht-drag-preview'\n\n  // Style the preview element - position it visibly but off-screen initially\n  preview.style.cssText = `\n    position: fixed;\n    top: 0;\n    left: 0;\n    padding: 8px 16px;\n    background: var(--ht-bg, white);\n    border: 2px solid var(--ht-primary, rgb(59 130 246));\n    border-radius: 6px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n    font-size: 14px;\n    color: var(--ht-text, #374151);\n    white-space: nowrap;\n    z-index: 9999;\n    pointer-events: none;\n    opacity: 0;\n    transform: translate(-9999px, -9999px);\n  `\n\n  // Generate preview content\n  const content = props.options?.dragPreviewContent\n    ? props.options.dragPreviewContent(rowData)\n    : `Row ${rowIndex + 1}`\n\n  preview.textContent = content\n\n  // Append to body temporarily\n  document.body.appendChild(preview)\n\n  return preview\n}\n\nfunction handleDragStart(event: DragEvent) {\n  if (isDisabled.value) {\n    // Prevent drag if disabled\n    event.preventDefault()\n\n    // Show toast notification if sorting is active\n    if (hasSorting.value && gridAPI?.emit) {\n      gridAPI.emit('user-notification', {\n        type: 'warn',\n        message: 'Table is sorted. Clear sorting to enable row dragging',\n        details: 'Click the sort indicator in the column header to clear sorting'\n      })\n    }\n    return\n  }\n  \n  isDragging.value = true\n\n  // Notify grid of dragging row\n  const rowId = (props.rowData as any)?.id ?? props.rowIndex\n  setDraggingRowId(rowId)\n\n  // Set drag data\n  if (event.dataTransfer) {\n    event.dataTransfer.effectAllowed = 'move'\n    event.dataTransfer.setData('application/json', JSON.stringify({\n      rowData: props.rowData,\n      rowIndex: props.rowIndex,\n    }))\n\n    // Create drag image (custom or default)\n    let dragImage: HTMLElement | null = null\n\n    if (props.options?.dragImageElement) {\n      dragImage = props.options.dragImageElement(props.rowData)\n    } else {\n      // Use default drag preview\n      dragImage = createDefaultDragPreview(props.rowData, props.rowIndex)\n    }\n\n    if (dragImage) {\n      // Make element visible before setting as drag image\n      if (dragImage.style.opacity === '0') {\n        dragImage.style.opacity = '1'\n        dragImage.style.transform = 'translate(0, 0)'\n      }\n\n      event.dataTransfer.setDragImage(dragImage, 10, 10)\n\n      // Clean up preview after drag starts\n      requestAnimationFrame(() => {\n        if (dragImage && dragImage.parentNode === document.body) {\n          document.body.removeChild(dragImage)\n        }\n      })\n    }\n  }\n\n  emit('drag-start', props.rowData, props.rowIndex, event)\n}\n\nfunction handleDragEnd(event: DragEvent) {\n  isDragging.value = false\n  setDraggingRowId(null)\n  emit('drag-end', props.rowData, props.rowIndex, event)\n}\n</script>\n\n<script lang=\"ts\">\nexport default {\n  name: 'HtDragCell',\n}\n</script>\n\n<style scoped>\n.ht-drag-handle {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 1.5rem;\n  height: 1.5rem;\n  padding: 0;\n  border: none;\n  background: transparent;\n  cursor: grab;\n  color: var(--ht-text-secondary, #9ca3af);\n  transition: color 0.2s ease, background-color 0.2s ease;\n  border-radius: 0.25rem;\n}\n\n.ht-drag-handle:focus-visible {\n  outline: none;\n  box-shadow: 0 0 0 1px var(--ht-primary);\n}\n\n.ht-drag-handle:hover {\n  background: var(--ht-row-hover, rgba(0, 0, 0, 0.05));\n  color: var(--ht-text, #374151);\n}\n\n.ht-drag-handle:active {\n  cursor: grabbing;\n}\n\n.ht-drag-icon {\n  width: 1rem;\n  height: 1rem;\n}\n\n.ht-drag-disabled .ht-drag-handle {\n  cursor: not-allowed;\n  opacity: 0.4;\n}\n\n.ht-drag-disabled .ht-drag-handle:hover {\n  background: transparent;\n  color: var(--ht-text-secondary, #9ca3af);\n}\n\n.ht-drag-active .ht-drag-handle {\n  cursor: grabbing;\n  color: var(--ht-primary, rgb(59 130 246));\n}\n</style>\n","<template>\n  <div\n    class=\"ht-drag-cell\"\n    data-ht-functional=\"drag\"\n    :class=\"{ 'ht-drag-disabled': isDisabled, 'ht-drag-active': isDragging }\"\n  >\n    <button\n      class=\"ht-drag-handle\"\n      :disabled=\"isDisabled\"\n      :title=\"dragTitle\"\n      :draggable=\"!isDisabled\"\n      :aria-disabled=\"isDisabled ? 'true' : 'false'\"\n      :aria-grabbed=\"isDragging ? 'true' : 'false'\"\n      :aria-label=\"dragAriaLabel\"\n      aria-roledescription=\"Drag handle\"\n      @dragstart=\"handleDragStart\"\n      @dragend=\"handleDragEnd\"\n      @click.stop\n    >\n      <svg\n        class=\"ht-drag-icon\"\n        viewBox=\"0 0 16 16\"\n        fill=\"currentColor\"\n      >\n        <path\n          d=\"M5 3.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zM5 8a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zM5 12.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\"\n        />\n        <path\n          d=\"M14 3.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zM14 8a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zM14 12.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\"\n        />\n      </svg>\n    </button>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref, inject, onMounted, onUnmounted } from 'vue'\nimport type { RowData, DragColumnOptions, DragContext, GridAPI } from '../../types'\nimport { GRID_API_KEY } from '../../utils/injection-keys'\n\ninterface Props {\n  /** Row data object */\n  rowData: RowData\n  /** Row index in the data array */\n  rowIndex: number\n  /** Column configuration options */\n  options?: DragColumnOptions\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  options: () => ({}),\n})\n\nconst emit = defineEmits<{\n  'drag-start': [rowData: RowData, rowIndex: number, event: DragEvent]\n  'drag-end': [rowData: RowData, rowIndex: number, event: DragEvent]\n}>()\n\nconst isDragging = ref(false)\n\n// Inject drag state setter and GridAPI\nconst setDraggingRowId = inject<(id: string | number | null) => void>('setDraggingRowId', () => {})\nconst gridAPI = inject<GridAPI | null>(GRID_API_KEY, null)\n\nconst dragContext = computed<DragContext>(() => ({\n  rowIndex: props.rowIndex,\n}))\n\n// Reactive sort state trigger\nconst sortStateVersion = ref(0)\n\n// Check if sorting is active\nconst hasSorting = computed(() => {\n  // Access sortStateVersion to create reactive dependency\n  void sortStateVersion.value\n\n  if (!gridAPI) return false\n\n  // getSortConfig returns either SortConfig or MultiSortConfig\n  const sortConfig = gridAPI.getSortConfig?.()\n  if (!sortConfig) {\n    return false\n  }\n\n  // Check if it's MultiSortConfig format\n  if ('fields' in sortConfig) {\n    return sortConfig.fields.length > 0\n  }\n\n  // Check if it's SortConfig format (single sort)\n  if ('field' in sortConfig && sortConfig.field) {\n    return true\n  }\n  return false\n})\n\n// Listen for sort changes\nonMounted(() => {\n  if (gridAPI?.on) {\n    const handleSortChange = () => {\n      sortStateVersion.value++\n    }\n\n    gridAPI.on('data-refresh-requested', handleSortChange)\n\n    // Cleanup\n    onUnmounted(() => {\n      gridAPI.off?.('data-refresh-requested', handleSortChange)\n    })\n  }\n})\n\nconst draggabilityResult = computed(() => {\n  // If sorting is active, disable dragging\n  if (hasSorting.value) {\n    return {\n      disabled: true,\n      reason: 'Table is sorted. Clear sorting to enable row dragging'\n    }\n  }\n\n  if (props.options?.isRowDraggable) {\n    const result = props.options.isRowDraggable(props.rowData, dragContext.value)\n    if (typeof result === 'boolean') {\n      return { disabled: !result }\n    }\n    return result\n  }\n\n  return { disabled: false }\n})\n\nconst isDisabled = computed(() => draggabilityResult.value.disabled)\nconst dragTitle = computed(() => {\n  if (isDisabled.value) {\n    return draggabilityResult.value.reason || 'Cannot drag this row'\n  }\n  return 'Drag to reorder'\n})\n\nconst dragAriaLabel = computed(() => {\n  if (isDisabled.value) {\n    return draggabilityResult.value.reason\n      ? `Drag disabled: ${draggabilityResult.value.reason}`\n      : 'Drag disabled'\n  }\n  return 'Drag handle: drag to reorder row'\n})\n\nfunction createDefaultDragPreview(rowData: RowData, rowIndex: number): HTMLElement {\n  const preview = document.createElement('div')\n  preview.className = 'ht-drag-preview'\n\n  // Style the preview element - position it visibly but off-screen initially\n  preview.style.cssText = `\n    position: fixed;\n    top: 0;\n    left: 0;\n    padding: 8px 16px;\n    background: var(--ht-bg, white);\n    border: 2px solid var(--ht-primary, rgb(59 130 246));\n    border-radius: 6px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n    font-size: 14px;\n    color: var(--ht-text, #374151);\n    white-space: nowrap;\n    z-index: 9999;\n    pointer-events: none;\n    opacity: 0;\n    transform: translate(-9999px, -9999px);\n  `\n\n  // Generate preview content\n  const content = props.options?.dragPreviewContent\n    ? props.options.dragPreviewContent(rowData)\n    : `Row ${rowIndex + 1}`\n\n  preview.textContent = content\n\n  // Append to body temporarily\n  document.body.appendChild(preview)\n\n  return preview\n}\n\nfunction handleDragStart(event: DragEvent) {\n  if (isDisabled.value) {\n    // Prevent drag if disabled\n    event.preventDefault()\n\n    // Show toast notification if sorting is active\n    if (hasSorting.value && gridAPI?.emit) {\n      gridAPI.emit('user-notification', {\n        type: 'warn',\n        message: 'Table is sorted. Clear sorting to enable row dragging',\n        details: 'Click the sort indicator in the column header to clear sorting'\n      })\n    }\n    return\n  }\n  \n  isDragging.value = true\n\n  // Notify grid of dragging row\n  const rowId = (props.rowData as any)?.id ?? props.rowIndex\n  setDraggingRowId(rowId)\n\n  // Set drag data\n  if (event.dataTransfer) {\n    event.dataTransfer.effectAllowed = 'move'\n    event.dataTransfer.setData('application/json', JSON.stringify({\n      rowData: props.rowData,\n      rowIndex: props.rowIndex,\n    }))\n\n    // Create drag image (custom or default)\n    let dragImage: HTMLElement | null = null\n\n    if (props.options?.dragImageElement) {\n      dragImage = props.options.dragImageElement(props.rowData)\n    } else {\n      // Use default drag preview\n      dragImage = createDefaultDragPreview(props.rowData, props.rowIndex)\n    }\n\n    if (dragImage) {\n      // Make element visible before setting as drag image\n      if (dragImage.style.opacity === '0') {\n        dragImage.style.opacity = '1'\n        dragImage.style.transform = 'translate(0, 0)'\n      }\n\n      event.dataTransfer.setDragImage(dragImage, 10, 10)\n\n      // Clean up preview after drag starts\n      requestAnimationFrame(() => {\n        if (dragImage && dragImage.parentNode === document.body) {\n          document.body.removeChild(dragImage)\n        }\n      })\n    }\n  }\n\n  emit('drag-start', props.rowData, props.rowIndex, event)\n}\n\nfunction handleDragEnd(event: DragEvent) {\n  isDragging.value = false\n  setDraggingRowId(null)\n  emit('drag-end', props.rowData, props.rowIndex, event)\n}\n</script>\n\n<script lang=\"ts\">\nexport default {\n  name: 'HtDragCell',\n}\n</script>\n\n<style scoped>\n.ht-drag-handle {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 1.5rem;\n  height: 1.5rem;\n  padding: 0;\n  border: none;\n  background: transparent;\n  cursor: grab;\n  color: var(--ht-text-secondary, #9ca3af);\n  transition: color 0.2s ease, background-color 0.2s ease;\n  border-radius: 0.25rem;\n}\n\n.ht-drag-handle:focus-visible {\n  outline: none;\n  box-shadow: 0 0 0 1px var(--ht-primary);\n}\n\n.ht-drag-handle:hover {\n  background: var(--ht-row-hover, rgba(0, 0, 0, 0.05));\n  color: var(--ht-text, #374151);\n}\n\n.ht-drag-handle:active {\n  cursor: grabbing;\n}\n\n.ht-drag-icon {\n  width: 1rem;\n  height: 1rem;\n}\n\n.ht-drag-disabled .ht-drag-handle {\n  cursor: not-allowed;\n  opacity: 0.4;\n}\n\n.ht-drag-disabled .ht-drag-handle:hover {\n  background: transparent;\n  color: var(--ht-text-secondary, #9ca3af);\n}\n\n.ht-drag-active .ht-drag-handle {\n  cursor: grabbing;\n  color: var(--ht-primary, rgb(59 130 246));\n}\n</style>\n","import { computed, ref, watch, type Ref } from 'vue'\nimport type { ColumnDef, DragPosition, ColumnDragContext } from '../../../../types'\nimport { isColumnDropBlocked, getColumnPinnedLocation } from '../../../../utils/column-reorder'\nimport { isFunctionalColumn } from '../../../../utils/functional-columns'\n\ninterface ColumnDragEmit {\n  (event: 'column-drag-start', payload: ColumnDragContext): void\n  (event: 'column-drop', payload: { columnId: string; position: DragPosition }): void\n  (event: 'column-drag-end'): void\n}\n\ninterface UseColumnDragOptions {\n  columnRef: Ref<ColumnDef>\n  dragContextRef: Ref<ColumnDragContext | null | undefined>\n  emit: ColumnDragEmit\n}\n\nexport function useColumnDrag({ columnRef, dragContextRef, emit }: UseColumnDragOptions) {\n  const pinnedSide = computed(() => getColumnPinnedLocation(columnRef.value))\n\n  const isDragSource = ref(false)\n  const dragOverPosition = ref<DragPosition | null>(null)\n  const isDropBlocked = ref(false)\n\n  const isColumnDraggable = computed(() => {\n    const column = columnRef.value as ColumnDef & {\n      reorderable?: boolean\n      draggable?: boolean\n    }\n\n    // Functional columns (checkbox, radio, seq, drag, actions) are not draggable\n    if (isFunctionalColumn(column)) {\n      return false\n    }\n\n    if (column.reorderable === false || column.draggable === false) {\n      return false\n    }\n\n    return true\n  })\n\n  watch(dragContextRef, context => {\n    if (!context) {\n      isDropBlocked.value = false\n      dragOverPosition.value = null\n    }\n  })\n\n  const resetVisualState = () => {\n    dragOverPosition.value = null\n    isDropBlocked.value = false\n  }\n\n  const handleColumnDragStart = (event: DragEvent) => {\n    if (!isColumnDraggable.value) {\n      event.preventDefault()\n      return\n    }\n\n    isDragSource.value = true\n    dragOverPosition.value = null\n\n    if (event.dataTransfer) {\n      event.dataTransfer.effectAllowed = 'move'\n      event.dataTransfer.setData('text/plain', columnRef.value.id)\n      event.dataTransfer.setData('application/happy-table-column', columnRef.value.id)\n    }\n\n    emit('column-drag-start', { columnId: columnRef.value.id, pinned: pinnedSide.value })\n  }\n\n  const handleColumnDragEnd = () => {\n    isDragSource.value = false\n    resetVisualState()\n    emit('column-drag-end')\n  }\n\n  const evaluateDragPosition = (event: DragEvent): DragPosition => {\n    const target = event.currentTarget as HTMLElement\n    const rect = target.getBoundingClientRect()\n    const offsetX = event.clientX - rect.left\n    return offsetX <= rect.width / 2 ? 'before' : 'after'\n  }\n\n  const handleColumnDragOver = (event: DragEvent) => {\n    if (!isColumnDraggable.value || isDragSource.value) return\n\n    const dropBlocked = isColumnDropBlocked(dragContextRef.value, columnRef.value)\n    if (dropBlocked) {\n      isDropBlocked.value = true\n      dragOverPosition.value = null\n      if (event.dataTransfer) {\n        event.dataTransfer.dropEffect = 'none'\n      }\n      return\n    }\n\n    isDropBlocked.value = false\n    event.preventDefault()\n\n    if (event.dataTransfer) {\n      event.dataTransfer.dropEffect = 'move'\n    }\n\n    const position = evaluateDragPosition(event)\n    if (dragOverPosition.value !== position) {\n      dragOverPosition.value = position\n    }\n  }\n\n  const handleColumnDragLeave = () => {\n    if (dragOverPosition.value !== null) {\n      dragOverPosition.value = null\n    }\n\n    if (isDropBlocked.value) {\n      isDropBlocked.value = false\n    }\n  }\n\n  const handleColumnDrop = (event: DragEvent) => {\n    if (!isColumnDraggable.value) return\n\n    const dropBlocked = isColumnDropBlocked(dragContextRef.value, columnRef.value)\n    if (dropBlocked) {\n      isDropBlocked.value = true\n      dragOverPosition.value = null\n      if (event.dataTransfer) {\n        event.dataTransfer.dropEffect = 'none'\n      }\n      return\n    }\n\n    event.preventDefault()\n\n    if (event.dataTransfer) {\n      event.dataTransfer.dropEffect = 'move'\n    }\n\n    const position = isDragSource.value ? 'after' : evaluateDragPosition(event)\n    resetVisualState()\n    emit('column-drop', { columnId: columnRef.value.id, position })\n  }\n\n  return {\n    pinnedSide,\n    isColumnDraggable,\n    isDragSource,\n    dragOverPosition,\n    isDropBlocked,\n    handleColumnDragStart,\n    handleColumnDragEnd,\n    handleColumnDragOver,\n    handleColumnDragLeave,\n    handleColumnDrop,\n  }\n}\n","import { computed, ref, onBeforeUnmount, type Ref } from 'vue'\nimport type { ColumnDef, GridAPI } from '../../../../types'\n\ninterface UseColumnResizeOptions {\n  columnRef: Ref<ColumnDef>\n  gridAPI: GridAPI\n  getCurrentWidth: () => number\n}\n\nexport function useColumnResize({ columnRef, gridAPI, getCurrentWidth }: UseColumnResizeOptions) {\n  const isColumnResizable = computed(() => columnRef.value.resizable !== false)\n  const isResizeActive = ref(false)\n\n  const handleResizeEndVisuals = () => {\n    if (!isResizeActive.value) return\n\n    isResizeActive.value = false\n\n    if (typeof document !== 'undefined') {\n      document.body.classList.remove('ht-grid-resizing')\n    }\n\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('mouseup', handleResizeEndVisuals)\n      window.removeEventListener('blur', handleResizeEndVisuals)\n    }\n  }\n\n  const handleResize = (event: MouseEvent) => {\n    if (!isColumnResizable.value || event.button !== 0) return\n\n    const isDoubleClick = event.detail > 1\n\n    event.preventDefault()\n    event.stopPropagation()\n\n    if (isDoubleClick) {\n      return\n    }\n\n    if (!isResizeActive.value) {\n      isResizeActive.value = true\n      if (typeof document !== 'undefined') {\n        document.body.classList.add('ht-grid-resizing')\n      }\n      if (typeof window !== 'undefined') {\n        window.addEventListener('mouseup', handleResizeEndVisuals)\n        window.addEventListener('blur', handleResizeEndVisuals)\n      }\n    }\n\n    gridAPI?.emit('column-resize-start', {\n      columnId: columnRef.value.id,\n      startX: event.clientX,\n      currentWidth: getCurrentWidth(),\n    })\n  }\n\n  const handleResizeDoubleClick = (event: MouseEvent) => {\n    if (!isColumnResizable.value) return\n\n    event.preventDefault()\n    event.stopPropagation()\n\n    const extendedApi = gridAPI as GridAPI & { autoSizeColumn?: (columnId: string) => boolean }\n    if (typeof extendedApi.autoSizeColumn === 'function') {\n      extendedApi.autoSizeColumn(columnRef.value.id)\n    }\n  }\n\n  onBeforeUnmount(() => {\n    handleResizeEndVisuals()\n  })\n\n  return {\n    isColumnResizable,\n    isResizeActive,\n    handleResize,\n    handleResizeDoubleClick,\n    handleResizeEndVisuals,\n  }\n}\n","<!--\n  SortIndicator.vue - Enhanced Sort Indicator Component\n\n  Responsibilities:\n  1. Display sort direction and priority for multi-field sorting\n  2. Handle sort priority reordering via drag-and-drop\n  3. Show visual feedback for sort states\n  4. Accessibility compliance for sort indicators\n\n  Vue 3 Pattern: Composable-based state management with event delegation\n-->\n\n<script setup lang=\"ts\">\nimport { computed, ref, onMounted, onUnmounted } from 'vue'\nimport type { ColumnDef, GridAPI, SortField } from '../../../types'\nimport { createLogger } from '../../../utils/logger'\nimport { formatShortcut } from '../../../utils/platform'\n\n// Props\nconst props = defineProps<{\n  column: ColumnDef\n  gridAPI: GridAPI\n  compact?: boolean // Compact display mode\n}>()\n\n// Emits\nconst emit = defineEmits<{\n  'sort-priority-change': [field: string, newPriority: number]\n  'sort-indicator-focus': [field: string]\n}>()\n\n// Logger\nconst logger = createLogger('SortIndicator')\n\n// Optimized reactive sort state tracking - only for current column\nconst currentColumnSortState = ref<{\n  direction: 'asc' | 'desc'\n  priority: number\n  isMultiSort: boolean\n  totalFields: number\n} | null>(null)\n\n// First-time user hint state\nconst HINT_STORAGE_KEY = 'ht-sort-hint-shown'\nconst showHint = ref(false)\nconst hasShownHint = ref(false)\n\n// Check if hint has been shown before\nconst checkHintStatus = () => {\n  if (typeof window !== 'undefined' && window.localStorage) {\n    hasShownHint.value = localStorage.getItem(HINT_STORAGE_KEY) === 'true'\n  }\n}\n\n// Mark hint as shown\nconst markHintShown = () => {\n  if (typeof window !== 'undefined' && window.localStorage) {\n    localStorage.setItem(HINT_STORAGE_KEY, 'true')\n    hasShownHint.value = true\n    showHint.value = false\n  }\n}\n\n// Event listener for sort changes\nlet unsubscribe: (() => void) | null = null\n\n// Helper function to extract current column sort state\nconst updateCurrentColumnSortState = () => {\n  const multiSortConfig = props.gridAPI?.getMultiSortConfig?.()\n  const fallbackSortConfig = props.gridAPI?.getSortConfig?.()\n\n  // Check multi-sort config first\n  if (multiSortConfig && 'fields' in multiSortConfig) {\n    const field = multiSortConfig.fields.find((f: SortField) => f.field === props.column.field)\n    if (field) {\n      currentColumnSortState.value = {\n        direction: field.direction,\n        priority: field.priority,\n        isMultiSort: multiSortConfig.fields.length > 1,\n        totalFields: multiSortConfig.fields.length,\n      }\n      return\n    }\n  }\n\n  // Fallback to single sort config\n  if (fallbackSortConfig) {\n    if ('field' in fallbackSortConfig && 'direction' in fallbackSortConfig) {\n      if (fallbackSortConfig.field === props.column.field) {\n        currentColumnSortState.value = {\n          direction: fallbackSortConfig.direction,\n          priority: 0,\n          isMultiSort: false,\n          totalFields: 1,\n        }\n        return\n      }\n    } else if ('fields' in fallbackSortConfig) {\n      const field = fallbackSortConfig.fields.find((f: SortField) => f.field === props.column.field)\n      if (field) {\n        currentColumnSortState.value = {\n          direction: field.direction,\n          priority: field.priority,\n          isMultiSort: fallbackSortConfig.fields.length > 1,\n          totalFields: fallbackSortConfig.fields.length,\n        }\n        return\n      }\n    }\n  }\n\n  // No sort state for this column\n  currentColumnSortState.value = null\n}\n\nonMounted(() => {\n  // Check hint status\n  checkHintStatus()\n\n  if (props.gridAPI?.on) {\n    // Initial state\n    updateCurrentColumnSortState()\n\n    // Listen for multi-sort changes only\n    unsubscribe = props.gridAPI.on('multi-sort-change', () => {\n      updateCurrentColumnSortState()\n    })\n  }\n})\n\nonUnmounted(() => {\n  unsubscribe?.()\n})\n\n// Optimized computed property - uses pre-computed state\nconst sortState = computed(() => currentColumnSortState.value)\n\n// Note: sortIconClass removed - using inline classes in dual arrow design for better readability\n\n// Note: Replaced dot-based indicator with modern priority badge\n\nconst containerClass = computed(() => {\n  const state = sortState.value\n  return [\n    'ht-sort-indicator',\n    'inline-flex items-center',\n    'transition-all duration-200',\n    'group', // Add group class for nested hover effects\n    {\n      'gap-1': !props.compact && !state?.isMultiSort, // Simple gap for single sort\n      'gap-0.5': props.compact || state?.isMultiSort, // Reduced gap for multi-sort or compact\n      'ml-1': !props.compact && !state?.isMultiSort,\n      'ml-0.5': props.compact || state?.isMultiSort,\n      'cursor-grab': state?.isMultiSort && state.priority > 0,\n      'active:cursor-grabbing': state?.isMultiSort && state.priority > 0,\n    },\n  ].filter(Boolean)\n})\n\n// Event handlers\nconst handleSortClick = (event: MouseEvent | KeyboardEvent) => {\n  if (!props.column.sortable || !props.gridAPI) return\n\n  event.preventDefault()\n  event.stopPropagation()\n\n  // Hide hint after first click\n  if (showHint.value) {\n    markHintShown()\n  }\n\n  const isCtrlClick = event.ctrlKey || event.metaKey\n  const sortByColumn = props.gridAPI?.sortByColumn\n  const addSortField = props.gridAPI?.addSortField\n\n  if (isCtrlClick && addSortField) {\n    // Add as secondary sort field\n    addSortField(props.column.field)\n  } else if (isCtrlClick && !addSortField) {\n    // User tried to use multi-sort but it's not enabled\n    logger.warn('Multi-column sorting is not enabled. Current basic sorting plugin only supports single column sorting.')\n    logger.info('Tip: To enable multi-column sorting, use pluginPresets.enhanced or createSortingPlugin({ enableMultiSort: true })')\n\n    // Emit event for UI notification\n    props.gridAPI?.emit?.('multi-sort-disabled-warning', {\n      attempted: true,\n      message: 'Multi-column sorting is not enabled. Please use enhanced plugin to enable this feature.',\n    })\n  } else if (sortByColumn) {\n    // Primary sort (replaces existing)\n    sortByColumn(props.column.field)\n  }\n\n  // Immediately refresh local state so icon updates without waiting for async events\n  updateCurrentColumnSortState()\n}\n\nconst handleIconHover = () => {\n  if (!hasShownHint.value && !showHint.value) {\n    showHint.value = true\n  }\n}\n\nconst handlePriorityClick = (event: MouseEvent) => {\n  if (!sortState.value?.isMultiSort) return\n\n  event.preventDefault()\n  event.stopPropagation()\n\n  // Cycle through priorities or show priority menu\n  const currentPriority = sortState.value.priority\n  const maxPriority = (sortState.value.totalFields || 1) - 1\n  const newPriority = currentPriority >= maxPriority ? 0 : currentPriority + 1\n\n  emit('sort-priority-change', props.column.field, newPriority)\n}\n\n// Handle focus events to ensure visibility\nconst handleSortIconFocus = () => {\n  emit('sort-indicator-focus', props.column.field)\n}\n\n// Drag and drop for priority reordering\nconst handleDragStart = (event: DragEvent) => {\n  event.stopPropagation()\n  if (!sortState.value?.isMultiSort) return\n\n  event.dataTransfer?.setData(\n    'text/plain',\n    JSON.stringify({\n      field: props.column.field,\n      priority: sortState.value.priority,\n    })\n  )\n}\n\nconst handleDragOver = (event: DragEvent) => {\n  event.stopPropagation()\n  if (!sortState.value?.isMultiSort) return\n  event.preventDefault()\n}\n\nconst handleDrop = (event: DragEvent) => {\n  event.stopPropagation()\n  if (!sortState.value?.isMultiSort) return\n\n  event.preventDefault()\n\n  try {\n    const dragData = JSON.parse(event.dataTransfer?.getData('text/plain') || '{}')\n    if (dragData.field && dragData.field !== props.column.field) {\n      emit('sort-priority-change', dragData.field, sortState.value.priority)\n    }\n  } catch (error) {\n    logger.warn('Invalid drag data:', error)\n  }\n}\n</script>\n\n<template>\n\n  <div\n    v-if=\"column.sortable\"\n    :class=\"containerClass\"\n    :draggable=\"sortState?.isMultiSort\"\n    :title=\"\n      sortState\n        ? `Sorted ${sortState.direction === 'asc' ? 'ascending' : 'descending'}${sortState.isMultiSort ? ` (priority ${sortState.priority + 1})` : ''}. Click again to ${sortState.direction === 'asc' ? 'sort descending' : 'clear sorting'}. ${sortState.isMultiSort ? 'Drag to reorder priority. ' : ''}${formatShortcut('click')} to add secondary sort.`\n        : `Click to sort ascending. Three-state cycle: none → asc → desc → none. ${formatShortcut('click')} to add secondary sort.`\n    \"\n    class=\"relative\"\n    @dragstart.stop=\"handleDragStart\"\n    @dragover.stop=\"handleDragOver\"\n    @drop.stop=\"handleDrop\"\n  >\n    <!-- Priority Badge - Left Side -->\n    <div\n      v-if=\"sortState?.isMultiSort\"\n      class=\"ht-priority-badge relative flex items-center justify-center\"\n      :title=\"`Sort priority ${sortState.priority + 1} of ${sortState.totalFields}. Click to reorder.`\"\n      @click.stop=\"handlePriorityClick\"\n    >\n      <div\n        class=\"min-w-[10px] h-2.5 px-0.5 rounded-full font-semibold flex items-center justify-center transition-all duration-200 cursor-pointer hover:scale-110\"\n        :class=\"{\n          'bg-[var(--ht-primary)] text-[var(--ht-text-inverse)] shadow-sm text-[9px]': sortState.priority === 0,\n          'bg-[var(--ht-primary-hover)] text-[var(--ht-text-inverse)] shadow-sm text-[9px]': sortState.priority === 1,\n          'bg-[var(--ht-primary-active)] text-[var(--ht-text-inverse)] shadow-sm text-[9px]': sortState.priority === 2,\n          'bg-[var(--ht-primary-subtle)] text-[var(--ht-text)] shadow-sm text-[8px]': sortState.priority > 2\n        }\"\n      >\n        {{ sortState.priority + 1 }}\n      </div>\n    </div>\n\n    <!-- Professional Lucide Sort Icons - Right Side -->\n    <div\n      class=\"ht-sort-icon flex items-center justify-center flex-shrink-0 cursor-pointer transition-all duration-200 hover:scale-105 focus:outline-none focus-visible:ring-1 focus-visible:ring-[var(--ht-primary)] rounded relative\"\n      :class=\"{\n        'w-4 h-4': !props.compact && !sortState?.isMultiSort,\n        'w-3.5 h-3.5': props.compact || sortState?.isMultiSort\n      }\"\n      tabindex=\"0\"\n      role=\"button\"\n      :aria-label=\"sortState\n        ? `Sorted ${sortState.direction === 'asc' ? 'ascending' : 'descending'}. Press Enter to ${sortState.direction === 'asc' ? 'sort descending' : 'clear sorting'}`\n        : `Not sorted. Press Enter to sort ascending`\"\n      @click=\"handleSortClick\"\n      @keydown.enter.prevent=\"handleSortClick\"\n      @keydown.space.prevent=\"handleSortClick\"\n      @mouseenter=\"handleIconHover\"\n      @focus=\"handleSortIconFocus\"\n    >\n      <!-- First-time user hint tooltip -->\n      <Transition name=\"hint-fade\">\n        <div\n          v-if=\"showHint && !sortState\"\n          class=\"ht-sort-hint absolute bottom-full left-1/2 -translate-x-1/2 mb-2 px-2 py-1 bg-[var(--ht-primary)] text-[var(--ht-text-inverse)] text-xs rounded shadow-lg whitespace-nowrap z-50 pointer-events-none\"\n        >\n          Click to sort\n          <div class=\"absolute top-full left-1/2 -translate-x-1/2 -mt-1 border-4 border-transparent border-t-[var(--ht-primary)]\"></div>\n        </div>\n      </Transition>\n      <!-- Unsorted State -->\n      <svg\n        v-if=\"!sortState\"\n        class=\"text-[var(--ht-text-muted)] opacity-60 transition-all duration-200 hover:text-[var(--ht-text)] hover:opacity-80\"\n        :class=\"{\n          'w-4 h-4': !props.compact,\n          'w-3.5 h-3.5': props.compact\n        }\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        viewBox=\"0 0 24 24\"\n        aria-hidden=\"true\"\n      >\n        <path d=\"m3 8 4-4 4 4\"></path>\n        <path d=\"m11 16-4 4-4-4\"></path>\n        <path d=\"M7 4v16\"></path>\n        <path d=\"M15 8h6\"></path>\n        <path d=\"M15 16h6\"></path>\n        <path d=\"M13 12h8\"></path>\n      </svg>\n\n      <!-- Ascending Sort -->\n      <svg\n        v-else-if=\"sortState.direction === 'asc'\"\n        class=\"transition-all duration-200 drop-shadow-sm\"\n        :class=\"{\n          'w-4 h-4': !props.compact && !sortState.isMultiSort,\n          'w-3.5 h-3.5': props.compact || sortState.isMultiSort,\n          'text-[var(--ht-primary)]': !sortState.isMultiSort || sortState.priority === 0,\n          'text-[var(--ht-primary-hover)]': sortState.isMultiSort && sortState.priority === 1,\n          'text-[var(--ht-primary-active)]': sortState.isMultiSort && sortState.priority > 1\n        }\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        viewBox=\"0 0 24 24\"\n        aria-hidden=\"true\"\n      >\n        <path d=\"m3 8 4-4 4 4\"></path>\n        <path d=\"M7 4v16\"></path>\n        <path d=\"M11 12h4\"></path>\n        <path d=\"M11 16h7\"></path>\n        <path d=\"M11 20h10\"></path>\n      </svg>\n\n      <!-- Descending Sort -->\n      <svg\n        v-else-if=\"sortState.direction === 'desc'\"\n        class=\"transition-all duration-200 drop-shadow-sm\"\n        :class=\"{\n          'w-4 h-4': !props.compact && !sortState.isMultiSort,\n          'w-3.5 h-3.5': props.compact || sortState.isMultiSort,\n          'text-[var(--ht-primary)]': !sortState.isMultiSort || sortState.priority === 0,\n          'text-[var(--ht-primary-hover)]': sortState.isMultiSort && sortState.priority === 1,\n          'text-[var(--ht-primary-active)]': sortState.isMultiSort && sortState.priority > 1\n        }\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        viewBox=\"0 0 24 24\"\n        aria-hidden=\"true\"\n      >\n        <path d=\"m3 16 4 4 4-4\"></path>\n        <path d=\"M7 20V4\"></path>\n        <path d=\"M11 4h10\"></path>\n        <path d=\"M11 8h7\"></path>\n        <path d=\"M11 12h4\"></path>\n      </svg>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.ht-sort-indicator {\n  contain: layout style;\n}\n\n.ht-sort-indicator:focus-visible {\n  outline: 2px solid var(--ht-primary);\n  outline-offset: 2px;\n  border-radius: 4px;\n}\n\n/* Modern Lucide sort icon styling */\n.ht-sort-icon {\n  contain: layout style;\n}\n\n.ht-sort-icon svg {\n  transition: all 0.2s ease;\n}\n\n/* Enhanced hover effects for sort icons */\n.ht-sort-indicator:hover .ht-sort-icon {\n  background-color: oklch(from var(--ht-primary) l c h / 0.05);\n  border-radius: 3px;\n}\n\n.ht-sort-indicator:hover .ht-sort-icon svg {\n  opacity: 1 !important;\n  transform: scale(1.08);\n  filter: drop-shadow(0 1px 2px oklch(from var(--ht-primary) l c h / 0.3));\n}\n\n/* Modern priority badge styling */\n.ht-priority-badge {\n  contain: layout style;\n  z-index: 1;\n}\n\n.ht-priority-badge > div {\n  contain: layout style;\n  transform-origin: center;\n  font-variant-numeric: tabular-nums;\n  line-height: 1;\n}\n\n/* Hover effects for priority badge */\n.ht-sort-indicator:hover .ht-priority-badge > div {\n  transform: scale(1.15);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n/* Drag feedback - more subtle */\n.ht-sort-indicator[draggable='true']:active {\n  transform: scale(1.02);\n}\n\n.ht-sort-indicator[draggable='true']:hover {\n  cursor: grab;\n}\n\n.ht-sort-indicator[draggable='true']:active {\n  cursor: grabbing;\n}\n\n/* First-time user hint animation */\n.hint-fade-enter-active,\n.hint-fade-leave-active {\n  transition: opacity 0.3s ease, transform 0.3s ease;\n}\n\n.hint-fade-enter-from,\n.hint-fade-leave-to {\n  opacity: 0;\n  transform: translate(-50%, -4px);\n}\n\n.ht-sort-hint {\n  animation: hint-bounce 2s ease-in-out infinite;\n}\n\n@keyframes hint-bounce {\n  0%, 100% {\n    transform: translate(-50%, 0);\n  }\n  50% {\n    transform: translate(-50%, -2px);\n  }\n}\n\n/* Accessibility improvements */\n@media (prefers-reduced-motion: reduce) {\n  .ht-sort-indicator {\n    transition: none !important;\n    transform: none !important;\n  }\n\n  .ht-sort-hint {\n    animation: none !important;\n  }\n\n  .hint-fade-enter-active,\n  .hint-fade-leave-active {\n    transition: none !important;\n  }\n}\n\n/* High contrast mode support */\n@media (prefers-contrast: high) {\n  .ht-sort-hint {\n    border: 2px solid white;\n  }\n}\n</style>\n","<!--\n  SortIndicator.vue - Enhanced Sort Indicator Component\n\n  Responsibilities:\n  1. Display sort direction and priority for multi-field sorting\n  2. Handle sort priority reordering via drag-and-drop\n  3. Show visual feedback for sort states\n  4. Accessibility compliance for sort indicators\n\n  Vue 3 Pattern: Composable-based state management with event delegation\n-->\n\n<script setup lang=\"ts\">\nimport { computed, ref, onMounted, onUnmounted } from 'vue'\nimport type { ColumnDef, GridAPI, SortField } from '../../../types'\nimport { createLogger } from '../../../utils/logger'\nimport { formatShortcut } from '../../../utils/platform'\n\n// Props\nconst props = defineProps<{\n  column: ColumnDef\n  gridAPI: GridAPI\n  compact?: boolean // Compact display mode\n}>()\n\n// Emits\nconst emit = defineEmits<{\n  'sort-priority-change': [field: string, newPriority: number]\n  'sort-indicator-focus': [field: string]\n}>()\n\n// Logger\nconst logger = createLogger('SortIndicator')\n\n// Optimized reactive sort state tracking - only for current column\nconst currentColumnSortState = ref<{\n  direction: 'asc' | 'desc'\n  priority: number\n  isMultiSort: boolean\n  totalFields: number\n} | null>(null)\n\n// First-time user hint state\nconst HINT_STORAGE_KEY = 'ht-sort-hint-shown'\nconst showHint = ref(false)\nconst hasShownHint = ref(false)\n\n// Check if hint has been shown before\nconst checkHintStatus = () => {\n  if (typeof window !== 'undefined' && window.localStorage) {\n    hasShownHint.value = localStorage.getItem(HINT_STORAGE_KEY) === 'true'\n  }\n}\n\n// Mark hint as shown\nconst markHintShown = () => {\n  if (typeof window !== 'undefined' && window.localStorage) {\n    localStorage.setItem(HINT_STORAGE_KEY, 'true')\n    hasShownHint.value = true\n    showHint.value = false\n  }\n}\n\n// Event listener for sort changes\nlet unsubscribe: (() => void) | null = null\n\n// Helper function to extract current column sort state\nconst updateCurrentColumnSortState = () => {\n  const multiSortConfig = props.gridAPI?.getMultiSortConfig?.()\n  const fallbackSortConfig = props.gridAPI?.getSortConfig?.()\n\n  // Check multi-sort config first\n  if (multiSortConfig && 'fields' in multiSortConfig) {\n    const field = multiSortConfig.fields.find((f: SortField) => f.field === props.column.field)\n    if (field) {\n      currentColumnSortState.value = {\n        direction: field.direction,\n        priority: field.priority,\n        isMultiSort: multiSortConfig.fields.length > 1,\n        totalFields: multiSortConfig.fields.length,\n      }\n      return\n    }\n  }\n\n  // Fallback to single sort config\n  if (fallbackSortConfig) {\n    if ('field' in fallbackSortConfig && 'direction' in fallbackSortConfig) {\n      if (fallbackSortConfig.field === props.column.field) {\n        currentColumnSortState.value = {\n          direction: fallbackSortConfig.direction,\n          priority: 0,\n          isMultiSort: false,\n          totalFields: 1,\n        }\n        return\n      }\n    } else if ('fields' in fallbackSortConfig) {\n      const field = fallbackSortConfig.fields.find((f: SortField) => f.field === props.column.field)\n      if (field) {\n        currentColumnSortState.value = {\n          direction: field.direction,\n          priority: field.priority,\n          isMultiSort: fallbackSortConfig.fields.length > 1,\n          totalFields: fallbackSortConfig.fields.length,\n        }\n        return\n      }\n    }\n  }\n\n  // No sort state for this column\n  currentColumnSortState.value = null\n}\n\nonMounted(() => {\n  // Check hint status\n  checkHintStatus()\n\n  if (props.gridAPI?.on) {\n    // Initial state\n    updateCurrentColumnSortState()\n\n    // Listen for multi-sort changes only\n    unsubscribe = props.gridAPI.on('multi-sort-change', () => {\n      updateCurrentColumnSortState()\n    })\n  }\n})\n\nonUnmounted(() => {\n  unsubscribe?.()\n})\n\n// Optimized computed property - uses pre-computed state\nconst sortState = computed(() => currentColumnSortState.value)\n\n// Note: sortIconClass removed - using inline classes in dual arrow design for better readability\n\n// Note: Replaced dot-based indicator with modern priority badge\n\nconst containerClass = computed(() => {\n  const state = sortState.value\n  return [\n    'ht-sort-indicator',\n    'inline-flex items-center',\n    'transition-all duration-200',\n    'group', // Add group class for nested hover effects\n    {\n      'gap-1': !props.compact && !state?.isMultiSort, // Simple gap for single sort\n      'gap-0.5': props.compact || state?.isMultiSort, // Reduced gap for multi-sort or compact\n      'ml-1': !props.compact && !state?.isMultiSort,\n      'ml-0.5': props.compact || state?.isMultiSort,\n      'cursor-grab': state?.isMultiSort && state.priority > 0,\n      'active:cursor-grabbing': state?.isMultiSort && state.priority > 0,\n    },\n  ].filter(Boolean)\n})\n\n// Event handlers\nconst handleSortClick = (event: MouseEvent | KeyboardEvent) => {\n  if (!props.column.sortable || !props.gridAPI) return\n\n  event.preventDefault()\n  event.stopPropagation()\n\n  // Hide hint after first click\n  if (showHint.value) {\n    markHintShown()\n  }\n\n  const isCtrlClick = event.ctrlKey || event.metaKey\n  const sortByColumn = props.gridAPI?.sortByColumn\n  const addSortField = props.gridAPI?.addSortField\n\n  if (isCtrlClick && addSortField) {\n    // Add as secondary sort field\n    addSortField(props.column.field)\n  } else if (isCtrlClick && !addSortField) {\n    // User tried to use multi-sort but it's not enabled\n    logger.warn('Multi-column sorting is not enabled. Current basic sorting plugin only supports single column sorting.')\n    logger.info('Tip: To enable multi-column sorting, use pluginPresets.enhanced or createSortingPlugin({ enableMultiSort: true })')\n\n    // Emit event for UI notification\n    props.gridAPI?.emit?.('multi-sort-disabled-warning', {\n      attempted: true,\n      message: 'Multi-column sorting is not enabled. Please use enhanced plugin to enable this feature.',\n    })\n  } else if (sortByColumn) {\n    // Primary sort (replaces existing)\n    sortByColumn(props.column.field)\n  }\n\n  // Immediately refresh local state so icon updates without waiting for async events\n  updateCurrentColumnSortState()\n}\n\nconst handleIconHover = () => {\n  if (!hasShownHint.value && !showHint.value) {\n    showHint.value = true\n  }\n}\n\nconst handlePriorityClick = (event: MouseEvent) => {\n  if (!sortState.value?.isMultiSort) return\n\n  event.preventDefault()\n  event.stopPropagation()\n\n  // Cycle through priorities or show priority menu\n  const currentPriority = sortState.value.priority\n  const maxPriority = (sortState.value.totalFields || 1) - 1\n  const newPriority = currentPriority >= maxPriority ? 0 : currentPriority + 1\n\n  emit('sort-priority-change', props.column.field, newPriority)\n}\n\n// Handle focus events to ensure visibility\nconst handleSortIconFocus = () => {\n  emit('sort-indicator-focus', props.column.field)\n}\n\n// Drag and drop for priority reordering\nconst handleDragStart = (event: DragEvent) => {\n  event.stopPropagation()\n  if (!sortState.value?.isMultiSort) return\n\n  event.dataTransfer?.setData(\n    'text/plain',\n    JSON.stringify({\n      field: props.column.field,\n      priority: sortState.value.priority,\n    })\n  )\n}\n\nconst handleDragOver = (event: DragEvent) => {\n  event.stopPropagation()\n  if (!sortState.value?.isMultiSort) return\n  event.preventDefault()\n}\n\nconst handleDrop = (event: DragEvent) => {\n  event.stopPropagation()\n  if (!sortState.value?.isMultiSort) return\n\n  event.preventDefault()\n\n  try {\n    const dragData = JSON.parse(event.dataTransfer?.getData('text/plain') || '{}')\n    if (dragData.field && dragData.field !== props.column.field) {\n      emit('sort-priority-change', dragData.field, sortState.value.priority)\n    }\n  } catch (error) {\n    logger.warn('Invalid drag data:', error)\n  }\n}\n</script>\n\n<template>\n\n  <div\n    v-if=\"column.sortable\"\n    :class=\"containerClass\"\n    :draggable=\"sortState?.isMultiSort\"\n    :title=\"\n      sortState\n        ? `Sorted ${sortState.direction === 'asc' ? 'ascending' : 'descending'}${sortState.isMultiSort ? ` (priority ${sortState.priority + 1})` : ''}. Click again to ${sortState.direction === 'asc' ? 'sort descending' : 'clear sorting'}. ${sortState.isMultiSort ? 'Drag to reorder priority. ' : ''}${formatShortcut('click')} to add secondary sort.`\n        : `Click to sort ascending. Three-state cycle: none → asc → desc → none. ${formatShortcut('click')} to add secondary sort.`\n    \"\n    class=\"relative\"\n    @dragstart.stop=\"handleDragStart\"\n    @dragover.stop=\"handleDragOver\"\n    @drop.stop=\"handleDrop\"\n  >\n    <!-- Priority Badge - Left Side -->\n    <div\n      v-if=\"sortState?.isMultiSort\"\n      class=\"ht-priority-badge relative flex items-center justify-center\"\n      :title=\"`Sort priority ${sortState.priority + 1} of ${sortState.totalFields}. Click to reorder.`\"\n      @click.stop=\"handlePriorityClick\"\n    >\n      <div\n        class=\"min-w-[10px] h-2.5 px-0.5 rounded-full font-semibold flex items-center justify-center transition-all duration-200 cursor-pointer hover:scale-110\"\n        :class=\"{\n          'bg-[var(--ht-primary)] text-[var(--ht-text-inverse)] shadow-sm text-[9px]': sortState.priority === 0,\n          'bg-[var(--ht-primary-hover)] text-[var(--ht-text-inverse)] shadow-sm text-[9px]': sortState.priority === 1,\n          'bg-[var(--ht-primary-active)] text-[var(--ht-text-inverse)] shadow-sm text-[9px]': sortState.priority === 2,\n          'bg-[var(--ht-primary-subtle)] text-[var(--ht-text)] shadow-sm text-[8px]': sortState.priority > 2\n        }\"\n      >\n        {{ sortState.priority + 1 }}\n      </div>\n    </div>\n\n    <!-- Professional Lucide Sort Icons - Right Side -->\n    <div\n      class=\"ht-sort-icon flex items-center justify-center flex-shrink-0 cursor-pointer transition-all duration-200 hover:scale-105 focus:outline-none focus-visible:ring-1 focus-visible:ring-[var(--ht-primary)] rounded relative\"\n      :class=\"{\n        'w-4 h-4': !props.compact && !sortState?.isMultiSort,\n        'w-3.5 h-3.5': props.compact || sortState?.isMultiSort\n      }\"\n      tabindex=\"0\"\n      role=\"button\"\n      :aria-label=\"sortState\n        ? `Sorted ${sortState.direction === 'asc' ? 'ascending' : 'descending'}. Press Enter to ${sortState.direction === 'asc' ? 'sort descending' : 'clear sorting'}`\n        : `Not sorted. Press Enter to sort ascending`\"\n      @click=\"handleSortClick\"\n      @keydown.enter.prevent=\"handleSortClick\"\n      @keydown.space.prevent=\"handleSortClick\"\n      @mouseenter=\"handleIconHover\"\n      @focus=\"handleSortIconFocus\"\n    >\n      <!-- First-time user hint tooltip -->\n      <Transition name=\"hint-fade\">\n        <div\n          v-if=\"showHint && !sortState\"\n          class=\"ht-sort-hint absolute bottom-full left-1/2 -translate-x-1/2 mb-2 px-2 py-1 bg-[var(--ht-primary)] text-[var(--ht-text-inverse)] text-xs rounded shadow-lg whitespace-nowrap z-50 pointer-events-none\"\n        >\n          Click to sort\n          <div class=\"absolute top-full left-1/2 -translate-x-1/2 -mt-1 border-4 border-transparent border-t-[var(--ht-primary)]\"></div>\n        </div>\n      </Transition>\n      <!-- Unsorted State -->\n      <svg\n        v-if=\"!sortState\"\n        class=\"text-[var(--ht-text-muted)] opacity-60 transition-all duration-200 hover:text-[var(--ht-text)] hover:opacity-80\"\n        :class=\"{\n          'w-4 h-4': !props.compact,\n          'w-3.5 h-3.5': props.compact\n        }\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        viewBox=\"0 0 24 24\"\n        aria-hidden=\"true\"\n      >\n        <path d=\"m3 8 4-4 4 4\"></path>\n        <path d=\"m11 16-4 4-4-4\"></path>\n        <path d=\"M7 4v16\"></path>\n        <path d=\"M15 8h6\"></path>\n        <path d=\"M15 16h6\"></path>\n        <path d=\"M13 12h8\"></path>\n      </svg>\n\n      <!-- Ascending Sort -->\n      <svg\n        v-else-if=\"sortState.direction === 'asc'\"\n        class=\"transition-all duration-200 drop-shadow-sm\"\n        :class=\"{\n          'w-4 h-4': !props.compact && !sortState.isMultiSort,\n          'w-3.5 h-3.5': props.compact || sortState.isMultiSort,\n          'text-[var(--ht-primary)]': !sortState.isMultiSort || sortState.priority === 0,\n          'text-[var(--ht-primary-hover)]': sortState.isMultiSort && sortState.priority === 1,\n          'text-[var(--ht-primary-active)]': sortState.isMultiSort && sortState.priority > 1\n        }\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        viewBox=\"0 0 24 24\"\n        aria-hidden=\"true\"\n      >\n        <path d=\"m3 8 4-4 4 4\"></path>\n        <path d=\"M7 4v16\"></path>\n        <path d=\"M11 12h4\"></path>\n        <path d=\"M11 16h7\"></path>\n        <path d=\"M11 20h10\"></path>\n      </svg>\n\n      <!-- Descending Sort -->\n      <svg\n        v-else-if=\"sortState.direction === 'desc'\"\n        class=\"transition-all duration-200 drop-shadow-sm\"\n        :class=\"{\n          'w-4 h-4': !props.compact && !sortState.isMultiSort,\n          'w-3.5 h-3.5': props.compact || sortState.isMultiSort,\n          'text-[var(--ht-primary)]': !sortState.isMultiSort || sortState.priority === 0,\n          'text-[var(--ht-primary-hover)]': sortState.isMultiSort && sortState.priority === 1,\n          'text-[var(--ht-primary-active)]': sortState.isMultiSort && sortState.priority > 1\n        }\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        viewBox=\"0 0 24 24\"\n        aria-hidden=\"true\"\n      >\n        <path d=\"m3 16 4 4 4-4\"></path>\n        <path d=\"M7 20V4\"></path>\n        <path d=\"M11 4h10\"></path>\n        <path d=\"M11 8h7\"></path>\n        <path d=\"M11 12h4\"></path>\n      </svg>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.ht-sort-indicator {\n  contain: layout style;\n}\n\n.ht-sort-indicator:focus-visible {\n  outline: 2px solid var(--ht-primary);\n  outline-offset: 2px;\n  border-radius: 4px;\n}\n\n/* Modern Lucide sort icon styling */\n.ht-sort-icon {\n  contain: layout style;\n}\n\n.ht-sort-icon svg {\n  transition: all 0.2s ease;\n}\n\n/* Enhanced hover effects for sort icons */\n.ht-sort-indicator:hover .ht-sort-icon {\n  background-color: oklch(from var(--ht-primary) l c h / 0.05);\n  border-radius: 3px;\n}\n\n.ht-sort-indicator:hover .ht-sort-icon svg {\n  opacity: 1 !important;\n  transform: scale(1.08);\n  filter: drop-shadow(0 1px 2px oklch(from var(--ht-primary) l c h / 0.3));\n}\n\n/* Modern priority badge styling */\n.ht-priority-badge {\n  contain: layout style;\n  z-index: 1;\n}\n\n.ht-priority-badge > div {\n  contain: layout style;\n  transform-origin: center;\n  font-variant-numeric: tabular-nums;\n  line-height: 1;\n}\n\n/* Hover effects for priority badge */\n.ht-sort-indicator:hover .ht-priority-badge > div {\n  transform: scale(1.15);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n/* Drag feedback - more subtle */\n.ht-sort-indicator[draggable='true']:active {\n  transform: scale(1.02);\n}\n\n.ht-sort-indicator[draggable='true']:hover {\n  cursor: grab;\n}\n\n.ht-sort-indicator[draggable='true']:active {\n  cursor: grabbing;\n}\n\n/* First-time user hint animation */\n.hint-fade-enter-active,\n.hint-fade-leave-active {\n  transition: opacity 0.3s ease, transform 0.3s ease;\n}\n\n.hint-fade-enter-from,\n.hint-fade-leave-to {\n  opacity: 0;\n  transform: translate(-50%, -4px);\n}\n\n.ht-sort-hint {\n  animation: hint-bounce 2s ease-in-out infinite;\n}\n\n@keyframes hint-bounce {\n  0%, 100% {\n    transform: translate(-50%, 0);\n  }\n  50% {\n    transform: translate(-50%, -2px);\n  }\n}\n\n/* Accessibility improvements */\n@media (prefers-reduced-motion: reduce) {\n  .ht-sort-indicator {\n    transition: none !important;\n    transform: none !important;\n  }\n\n  .ht-sort-hint {\n    animation: none !important;\n  }\n\n  .hint-fade-enter-active,\n  .hint-fade-leave-active {\n    transition: none !important;\n  }\n}\n\n/* High contrast mode support */\n@media (prefers-contrast: high) {\n  .ht-sort-hint {\n    border: 2px solid white;\n  }\n}\n</style>\n","<!--\n  FilterPopover.vue - Filter-specific popover with standardized structure\n\n  Responsibilities:\n  - Provide two-layer structure: Title / Content\n  - Wrap BasePopover for filter-specific scenarios\n  - Standardize filter UI layout (without action buttons)\n\n  Design:\n  - Composes BasePopover (not modifies it)\n  - Maintains BasePopover's flexibility for other use cases\n  - Follows Single Responsibility Principle\n  - Action buttons handled by child components (ValueFilterEditor, CustomFilterEditor)\n-->\n\n<script setup lang=\"ts\">\nimport BasePopover, { type PopoverPosition } from './BasePopover.vue'\n\nwithDefaults(defineProps<{\n  open: boolean\n  anchor: HTMLElement | null\n  title: string\n  position?: PopoverPosition\n}>(), {\n  position: () => ({ placement: 'bottom', align: 'center', offset: 4, autoFlip: true }),\n})\n\nconst emit = defineEmits<{\n  'update:open': [value: boolean]\n  'opened': []\n  'closed': []\n}>()\n</script>\n\n<template>\n  <BasePopover\n    :open=\"open\"\n    :anchor=\"anchor\"\n    :position=\"position\"\n    :aria-label=\"title\"\n    @update:open=\"emit('update:open', $event)\"\n    @opened=\"emit('opened')\"\n    @closed=\"emit('closed')\"\n  >\n    <div class=\"min-w-[300px] max-w-[540px] rounded-lg border border-[var(--ht-border)] bg-[var(--ht-bg)] shadow-[var(--shadow-ht-xl)] backdrop-blur-sm\">\n      <!-- Title Layer -->\n      <div class=\"border-b border-[var(--ht-border-subtle)] px-4 py-3\">\n        <div class=\"text-sm font-semibold text-[var(--ht-text)]\">\n          <slot name=\"title\">{{ title }}</slot>\n        </div>\n      </div>\n\n      <!-- Content Layer (child components handle their own actions) -->\n      <div class=\"p-4\">\n        <slot />\n      </div>\n    </div>\n  </BasePopover>\n</template>\n\n<style scoped>\n/* No custom styles needed - all handled by Tailwind utilities */\n</style>\n","<!--\n  FilterPopover.vue - Filter-specific popover with standardized structure\n\n  Responsibilities:\n  - Provide two-layer structure: Title / Content\n  - Wrap BasePopover for filter-specific scenarios\n  - Standardize filter UI layout (without action buttons)\n\n  Design:\n  - Composes BasePopover (not modifies it)\n  - Maintains BasePopover's flexibility for other use cases\n  - Follows Single Responsibility Principle\n  - Action buttons handled by child components (ValueFilterEditor, CustomFilterEditor)\n-->\n\n<script setup lang=\"ts\">\nimport BasePopover, { type PopoverPosition } from './BasePopover.vue'\n\nwithDefaults(defineProps<{\n  open: boolean\n  anchor: HTMLElement | null\n  title: string\n  position?: PopoverPosition\n}>(), {\n  position: () => ({ placement: 'bottom', align: 'center', offset: 4, autoFlip: true }),\n})\n\nconst emit = defineEmits<{\n  'update:open': [value: boolean]\n  'opened': []\n  'closed': []\n}>()\n</script>\n\n<template>\n  <BasePopover\n    :open=\"open\"\n    :anchor=\"anchor\"\n    :position=\"position\"\n    :aria-label=\"title\"\n    @update:open=\"emit('update:open', $event)\"\n    @opened=\"emit('opened')\"\n    @closed=\"emit('closed')\"\n  >\n    <div class=\"min-w-[300px] max-w-[540px] rounded-lg border border-[var(--ht-border)] bg-[var(--ht-bg)] shadow-[var(--shadow-ht-xl)] backdrop-blur-sm\">\n      <!-- Title Layer -->\n      <div class=\"border-b border-[var(--ht-border-subtle)] px-4 py-3\">\n        <div class=\"text-sm font-semibold text-[var(--ht-text)]\">\n          <slot name=\"title\">{{ title }}</slot>\n        </div>\n      </div>\n\n      <!-- Content Layer (child components handle their own actions) -->\n      <div class=\"p-4\">\n        <slot />\n      </div>\n    </div>\n  </BasePopover>\n</template>\n\n<style scoped>\n/* No custom styles needed - all handled by Tailwind utilities */\n</style>\n","<!--\n  ValueFilterEditor.vue - Excel-style checkbox list filter\n\n  Responsibilities:\n  - Display value counts with search\n  - Virtual scrolling for large datasets\n  - Lazy pagination (100 items at a time)\n  - Null value handling\n-->\n\n<script setup lang=\"ts\">\nimport { computed, ref, watch, onMounted } from 'vue'\nimport { useVirtualizer } from '../../../utils/virtualization'\n\ninterface ValueFilterProps {\n  field: string\n  allData: Record<string, unknown>[]\n  currentFilter?: { operator: 'in' | 'notIn'; value: unknown[] } | null\n}\n\nconst props = defineProps<ValueFilterProps>()\n\n// Search and selection state\nconst search = ref('')\n// Tri-state selection model:\n// - mode 'all': visually all checked, maintain excludedValues for per-item uncheck\n// - mode 'subset': only items in selectedValues are checked\nconst mode = ref<'all' | 'subset'>('all')\nconst selectedValues = ref<Set<unknown>>(new Set())\nconst excludedValues = ref<Set<unknown>>(new Set())\nconst includeNull = ref(true)\n\n// Expose state to parent component\ndefineExpose({\n  // Return best operator+values per current tri-state selection.\n  // - null => no filter (equivalent to all selected)\n  getValueFilter: () => {\n    const domain = nonNullAll.value.map(([k]) => k)\n    const q = search.value.trim().toLowerCase()\n    // Mode: all\n    if (mode.value === 'all') {\n      // If search is active, apply filter to match only visible domain\n      if (q.length > 0) {\n        const list: unknown[] = [...domain]\n        // Include null only if user wants and it matches the search\n        const nullMatches = '(null)'.toLowerCase().includes(q)\n        if (includeNull.value && nullMatches) list.push(null)\n        return { operator: 'in', value: list }\n      }\n      const excludes = Array.from(excludedValues.value)\n      const nullExcluded = !includeNull.value\n      if (excludes.length === 0 && !nullExcluded) return null\n      const list: unknown[] = [...excludes]\n      if (nullExcluded) list.push(null)\n      return { operator: 'notIn', value: list }\n    }\n    // Mode: subset\n    const includes = Array.from(selectedValues.value)\n    const nullIncluded = includeNull.value\n    if (includes.length === domain.length && nullIncluded) return null\n    // Optimize: prefer notIn if more than half selected\n    if (includes.length > domain.length / 2) {\n      const excludeSet = new Set(domain)\n      includes.forEach(v => excludeSet.delete(v))\n      const list: unknown[] = Array.from(excludeSet)\n      if (!nullIncluded) list.push(null)\n      return { operator: 'notIn', value: list }\n    }\n    const list: unknown[] = [...includes]\n    if (nullIncluded) list.push(null)\n    return { operator: 'in', value: list }\n  },\n  remeasure: () => {\n    if (scrollEl.value) {\n      virtualizer.setContainerSize({ height: scrollEl.value.clientHeight, width: scrollEl.value.clientWidth })\n    }\n  }\n})\n\n// Cache value counts across opens keyed by data array identity and field\nconst countsCache: WeakMap<object, Map<string, Array<[unknown, number]>>> = new WeakMap()\n\nconst valueCounts = computed(() => {\n  const dataRef = props.allData as unknown as object\n  let fieldMap = countsCache.get(dataRef)\n  if (!fieldMap) {\n    fieldMap = new Map<string, Array<[unknown, number]>>()\n    countsCache.set(dataRef, fieldMap)\n  }\n  const cached = fieldMap.get(props.field)\n  if (cached) return cached\n\n  const map = new Map<unknown, number>()\n  for (const row of props.allData) {\n    const v = row[props.field]\n    const key = v === null || v === undefined ? '__NULL__' : v\n    map.set(key, (map.get(key) || 0) + 1)\n  }\n  const arr = Array.from(map.entries())\n  fieldMap.set(props.field, arr)\n  return arr\n})\n\nconst filteredCounts = computed(() => {\n  const q = search.value.trim().toLowerCase()\n  let arr = valueCounts.value\n  if (q) {\n    arr = arr.filter(([k]) => (k === '__NULL__' ? '(null)' : String(k)).toLowerCase().includes(q))\n  }\n  return arr.sort((a, b) => b[1] - a[1])\n})\n\n// Pagination\nconst pageSize = 100\nconst loadedCount = ref(pageSize)\nconst nonNullAll = computed(() => filteredCounts.value.filter(([k]) => k !== '__NULL__'))\nconst nonNullPaged = computed(() => nonNullAll.value.slice(0, loadedCount.value))\n\n// Virtual scrolling\nconst scrollEl = ref<HTMLElement | null>(null)\nconst valueRowHeight = 32\nconst virtualizer = useVirtualizer({\n  count: computed(() => nonNullPaged.value.length),\n  getItemSize: () => valueRowHeight,\n  overscan: 6,\n})\n\nonMounted(() => {\n  virtualizer.scrollElement.value = scrollEl.value\n  if (scrollEl.value) {\n    virtualizer.setContainerSize({ height: scrollEl.value.clientHeight, width: scrollEl.value.clientWidth })\n  }\n})\n\n// Auto-load when near end (debounced to avoid rapid repeated increments)\nlet loadMoreTimer: number | null = null\nlet rafDebounceCount = 0\nconst RAF_DEBOUNCE_FRAMES = 4 // ~60ms at 60fps\n\nwatch(\n  () => virtualizer.endIndex.value,\n  (end) => {\n    if (end >= loadedCount.value - 5 && loadedCount.value < nonNullAll.value.length) {\n      if (loadMoreTimer) return\n\n      rafDebounceCount = 0\n      const scheduleLoad = () => {\n        loadMoreTimer = requestAnimationFrame(() => {\n          rafDebounceCount++\n          if (rafDebounceCount < RAF_DEBOUNCE_FRAMES) {\n            scheduleLoad()\n          } else {\n            loadedCount.value = Math.min(nonNullAll.value.length, loadedCount.value + pageSize)\n            loadMoreTimer = null\n            rafDebounceCount = 0\n          }\n        })\n      }\n      scheduleLoad()\n    }\n  }\n)\n\n// Reset pagination on search\nwatch([valueCounts, search], () => {\n  loadedCount.value = pageSize\n  if (scrollEl.value) {\n    scrollEl.value.scrollTop = 0\n    virtualizer.updateScrollPosition(0)\n  }\n})\n\n// Sync from current filter\nwatch(\n  () => props.currentFilter,\n  (filter) => {\n    if (filter && Array.isArray(filter.value)) {\n      if (filter.operator === 'notIn') {\n        // notIn: switch to 'all' mode with excluded values\n        mode.value = 'all'\n        const excludedSet = new Set(filter.value.filter(v => v !== null && v !== undefined))\n        excludedValues.value = excludedSet\n        selectedValues.value = new Set()\n        includeNull.value = !filter.value.some(v => v === null || v === undefined)\n      } else {\n        // in: switch to subset mode with explicit includes\n        mode.value = 'subset'\n        includeNull.value = filter.value.some(v => v === null || v === undefined)\n        selectedValues.value = new Set(filter.value.filter(v => v !== null && v !== undefined))\n        excludedValues.value = new Set()\n      }\n    } else {\n      // Default: all selected visually\n      mode.value = 'all'\n      includeNull.value = true\n      selectedValues.value = new Set()\n      excludedValues.value = new Set()\n    }\n  },\n  { immediate: true }\n)\n\nfunction toggleValue(val: unknown, checked: boolean) {\n  if (mode.value === 'all') {\n    const ex = new Set(excludedValues.value)\n    if (checked) ex.delete(val)\n    else ex.add(val)\n    excludedValues.value = ex\n    return\n  }\n  const next = new Set(selectedValues.value)\n  if (checked) next.add(val)\n  else next.delete(val)\n  selectedValues.value = next\n}\n\nfunction selectAllVisible() {\n  // Switch to 'all' visual mode (no explicit includes)\n  mode.value = 'all'\n  excludedValues.value = new Set()\n  includeNull.value = true\n}\n\nfunction clearAll() {\n  // Switch to subset with empty includes\n  mode.value = 'subset'\n  selectedValues.value = new Set()\n  excludedValues.value = new Set()\n  includeNull.value = false\n}\n\nfunction isChecked(val: unknown): boolean {\n  if (mode.value === 'all') {\n    return !excludedValues.value.has(val)\n  }\n  return selectedValues.value.has(val)\n}\n</script>\n\n<template>\n  <div class=\"space-y-3\">\n    <!-- Search and actions -->\n    <div class=\"flex items-center gap-2\">\n      <input\n        v-model=\"search\"\n        type=\"text\"\n        placeholder=\"Search values\"\n        class=\"h-8 flex-1 rounded-md border border-[var(--ht-border)] bg-[var(--ht-bg)] px-3 text-sm text-[var(--ht-text)] placeholder:text-[var(--ht-text-subtle)] transition-colors focus:border-[var(--ht-primary)] focus:outline-none focus:ring-2 focus:ring-[var(--ht-primary)]/20\"\n      />\n      <button\n        class=\"h-8 px-3 text-xs font-medium text-[var(--ht-text-muted)] hover:text-[var(--ht-primary)] hover:bg-[var(--ht-bg-subtle)] rounded-md transition-colors\"\n        @click=\"clearAll\"\n      >\n        Clear\n      </button>\n      <button\n        class=\"h-8 px-3 text-xs font-medium text-[var(--ht-primary)] hover:text-[var(--ht-primary-hover)] hover:bg-[var(--ht-primary-subtle)] rounded-md transition-colors\"\n        @click=\"selectAllVisible\"\n      >\n        Select All\n      </button>\n    </div>\n\n    <!-- Value list with virtual scrolling -->\n    <div ref=\"scrollEl\" class=\"relative overflow-auto rounded-md border border-[var(--ht-border)] bg-[var(--ht-bg-subtle)]\" style=\"max-height: 16rem; height: 16rem;\">\n      <!-- Null checkbox (shown only when search empty or matches '(null)') -->\n      <label\n        v-if=\"!search || '(null)'.toLowerCase().includes(search.trim().toLowerCase())\"\n        class=\"flex items-center gap-3 px-3 py-2.5 text-sm bg-[var(--ht-bg)] border-b border-[var(--ht-border-subtle)] hover:bg-[var(--ht-bg-subtle)] cursor-pointer transition-colors group\"\n      >\n        <input\n          v-model=\"includeNull\"\n          type=\"checkbox\"\n          class=\"w-4 h-4 rounded border-[var(--ht-border-strong)] text-[var(--ht-primary)] focus:ring-2 focus:ring-[var(--ht-primary)]/30 cursor-pointer\"\n        />\n        <span class=\"font-medium text-[var(--ht-text-muted)] group-hover:text-[var(--ht-text)]\">(null)</span>\n        <span class=\"ml-auto text-xs text-[var(--ht-text-subtle)] tabular-nums\">{{ valueCounts.find(([k]) => k === '__NULL__')?.[1] ?? 0 }}</span>\n      </label>\n\n      <!-- Virtual list -->\n      <div :style=\"{ height: virtualizer.totalSize.value + 'px', position: 'relative' }\">\n        <div\n          v-for=\"item in virtualizer.virtualItems.value\"\n          :key=\"item.index\"\n          :style=\"{ position: 'absolute', top: item.start + 'px', height: item.size + 'px', left: 0, right: 0 }\"\n        >\n          <label class=\"flex items-center gap-3 px-3 py-2 text-sm hover:bg-[var(--ht-cell-hover)] cursor-pointer transition-colors group\">\n            <input\n              type=\"checkbox\"\n              class=\"w-4 h-4 rounded border-[var(--ht-border-strong)] text-[var(--ht-primary)] focus:ring-2 focus:ring-[var(--ht-primary)]/30 cursor-pointer\"\n              :checked=\"isChecked(nonNullPaged[item.index]?.[0])\"\n              @change=\"(e: Event) => toggleValue(nonNullPaged[item.index]?.[0], (e.target as HTMLInputElement)?.checked)\"\n            />\n            <span class=\"truncate flex-1 text-[var(--ht-text)] group-hover:text-[var(--ht-text)]\" :title=\"String(nonNullPaged[item.index]?.[0] ?? '')\">{{ String(nonNullPaged[item.index]?.[0] ?? '') }}</span>\n            <span class=\"text-xs text-[var(--ht-text-subtle)] tabular-nums\">{{ nonNullPaged[item.index]?.[1] ?? 0 }}</span>\n          </label>\n        </div>\n      </div>\n    </div>\n\n    <!-- Pagination info -->\n    <div class=\"flex items-center justify-between text-xs text-[var(--ht-text-muted)] pt-1 border-t border-[var(--ht-border-subtle)]\">\n      <span class=\"tabular-nums\">Showing {{ Math.min(loadedCount, nonNullAll.length) }} of {{ nonNullAll.length }}</span>\n    </div>\n  </div>\n</template>\n","<!--\n  ValueFilterEditor.vue - Excel-style checkbox list filter\n\n  Responsibilities:\n  - Display value counts with search\n  - Virtual scrolling for large datasets\n  - Lazy pagination (100 items at a time)\n  - Null value handling\n-->\n\n<script setup lang=\"ts\">\nimport { computed, ref, watch, onMounted } from 'vue'\nimport { useVirtualizer } from '../../../utils/virtualization'\n\ninterface ValueFilterProps {\n  field: string\n  allData: Record<string, unknown>[]\n  currentFilter?: { operator: 'in' | 'notIn'; value: unknown[] } | null\n}\n\nconst props = defineProps<ValueFilterProps>()\n\n// Search and selection state\nconst search = ref('')\n// Tri-state selection model:\n// - mode 'all': visually all checked, maintain excludedValues for per-item uncheck\n// - mode 'subset': only items in selectedValues are checked\nconst mode = ref<'all' | 'subset'>('all')\nconst selectedValues = ref<Set<unknown>>(new Set())\nconst excludedValues = ref<Set<unknown>>(new Set())\nconst includeNull = ref(true)\n\n// Expose state to parent component\ndefineExpose({\n  // Return best operator+values per current tri-state selection.\n  // - null => no filter (equivalent to all selected)\n  getValueFilter: () => {\n    const domain = nonNullAll.value.map(([k]) => k)\n    const q = search.value.trim().toLowerCase()\n    // Mode: all\n    if (mode.value === 'all') {\n      // If search is active, apply filter to match only visible domain\n      if (q.length > 0) {\n        const list: unknown[] = [...domain]\n        // Include null only if user wants and it matches the search\n        const nullMatches = '(null)'.toLowerCase().includes(q)\n        if (includeNull.value && nullMatches) list.push(null)\n        return { operator: 'in', value: list }\n      }\n      const excludes = Array.from(excludedValues.value)\n      const nullExcluded = !includeNull.value\n      if (excludes.length === 0 && !nullExcluded) return null\n      const list: unknown[] = [...excludes]\n      if (nullExcluded) list.push(null)\n      return { operator: 'notIn', value: list }\n    }\n    // Mode: subset\n    const includes = Array.from(selectedValues.value)\n    const nullIncluded = includeNull.value\n    if (includes.length === domain.length && nullIncluded) return null\n    // Optimize: prefer notIn if more than half selected\n    if (includes.length > domain.length / 2) {\n      const excludeSet = new Set(domain)\n      includes.forEach(v => excludeSet.delete(v))\n      const list: unknown[] = Array.from(excludeSet)\n      if (!nullIncluded) list.push(null)\n      return { operator: 'notIn', value: list }\n    }\n    const list: unknown[] = [...includes]\n    if (nullIncluded) list.push(null)\n    return { operator: 'in', value: list }\n  },\n  remeasure: () => {\n    if (scrollEl.value) {\n      virtualizer.setContainerSize({ height: scrollEl.value.clientHeight, width: scrollEl.value.clientWidth })\n    }\n  }\n})\n\n// Cache value counts across opens keyed by data array identity and field\nconst countsCache: WeakMap<object, Map<string, Array<[unknown, number]>>> = new WeakMap()\n\nconst valueCounts = computed(() => {\n  const dataRef = props.allData as unknown as object\n  let fieldMap = countsCache.get(dataRef)\n  if (!fieldMap) {\n    fieldMap = new Map<string, Array<[unknown, number]>>()\n    countsCache.set(dataRef, fieldMap)\n  }\n  const cached = fieldMap.get(props.field)\n  if (cached) return cached\n\n  const map = new Map<unknown, number>()\n  for (const row of props.allData) {\n    const v = row[props.field]\n    const key = v === null || v === undefined ? '__NULL__' : v\n    map.set(key, (map.get(key) || 0) + 1)\n  }\n  const arr = Array.from(map.entries())\n  fieldMap.set(props.field, arr)\n  return arr\n})\n\nconst filteredCounts = computed(() => {\n  const q = search.value.trim().toLowerCase()\n  let arr = valueCounts.value\n  if (q) {\n    arr = arr.filter(([k]) => (k === '__NULL__' ? '(null)' : String(k)).toLowerCase().includes(q))\n  }\n  return arr.sort((a, b) => b[1] - a[1])\n})\n\n// Pagination\nconst pageSize = 100\nconst loadedCount = ref(pageSize)\nconst nonNullAll = computed(() => filteredCounts.value.filter(([k]) => k !== '__NULL__'))\nconst nonNullPaged = computed(() => nonNullAll.value.slice(0, loadedCount.value))\n\n// Virtual scrolling\nconst scrollEl = ref<HTMLElement | null>(null)\nconst valueRowHeight = 32\nconst virtualizer = useVirtualizer({\n  count: computed(() => nonNullPaged.value.length),\n  getItemSize: () => valueRowHeight,\n  overscan: 6,\n})\n\nonMounted(() => {\n  virtualizer.scrollElement.value = scrollEl.value\n  if (scrollEl.value) {\n    virtualizer.setContainerSize({ height: scrollEl.value.clientHeight, width: scrollEl.value.clientWidth })\n  }\n})\n\n// Auto-load when near end (debounced to avoid rapid repeated increments)\nlet loadMoreTimer: number | null = null\nlet rafDebounceCount = 0\nconst RAF_DEBOUNCE_FRAMES = 4 // ~60ms at 60fps\n\nwatch(\n  () => virtualizer.endIndex.value,\n  (end) => {\n    if (end >= loadedCount.value - 5 && loadedCount.value < nonNullAll.value.length) {\n      if (loadMoreTimer) return\n\n      rafDebounceCount = 0\n      const scheduleLoad = () => {\n        loadMoreTimer = requestAnimationFrame(() => {\n          rafDebounceCount++\n          if (rafDebounceCount < RAF_DEBOUNCE_FRAMES) {\n            scheduleLoad()\n          } else {\n            loadedCount.value = Math.min(nonNullAll.value.length, loadedCount.value + pageSize)\n            loadMoreTimer = null\n            rafDebounceCount = 0\n          }\n        })\n      }\n      scheduleLoad()\n    }\n  }\n)\n\n// Reset pagination on search\nwatch([valueCounts, search], () => {\n  loadedCount.value = pageSize\n  if (scrollEl.value) {\n    scrollEl.value.scrollTop = 0\n    virtualizer.updateScrollPosition(0)\n  }\n})\n\n// Sync from current filter\nwatch(\n  () => props.currentFilter,\n  (filter) => {\n    if (filter && Array.isArray(filter.value)) {\n      if (filter.operator === 'notIn') {\n        // notIn: switch to 'all' mode with excluded values\n        mode.value = 'all'\n        const excludedSet = new Set(filter.value.filter(v => v !== null && v !== undefined))\n        excludedValues.value = excludedSet\n        selectedValues.value = new Set()\n        includeNull.value = !filter.value.some(v => v === null || v === undefined)\n      } else {\n        // in: switch to subset mode with explicit includes\n        mode.value = 'subset'\n        includeNull.value = filter.value.some(v => v === null || v === undefined)\n        selectedValues.value = new Set(filter.value.filter(v => v !== null && v !== undefined))\n        excludedValues.value = new Set()\n      }\n    } else {\n      // Default: all selected visually\n      mode.value = 'all'\n      includeNull.value = true\n      selectedValues.value = new Set()\n      excludedValues.value = new Set()\n    }\n  },\n  { immediate: true }\n)\n\nfunction toggleValue(val: unknown, checked: boolean) {\n  if (mode.value === 'all') {\n    const ex = new Set(excludedValues.value)\n    if (checked) ex.delete(val)\n    else ex.add(val)\n    excludedValues.value = ex\n    return\n  }\n  const next = new Set(selectedValues.value)\n  if (checked) next.add(val)\n  else next.delete(val)\n  selectedValues.value = next\n}\n\nfunction selectAllVisible() {\n  // Switch to 'all' visual mode (no explicit includes)\n  mode.value = 'all'\n  excludedValues.value = new Set()\n  includeNull.value = true\n}\n\nfunction clearAll() {\n  // Switch to subset with empty includes\n  mode.value = 'subset'\n  selectedValues.value = new Set()\n  excludedValues.value = new Set()\n  includeNull.value = false\n}\n\nfunction isChecked(val: unknown): boolean {\n  if (mode.value === 'all') {\n    return !excludedValues.value.has(val)\n  }\n  return selectedValues.value.has(val)\n}\n</script>\n\n<template>\n  <div class=\"space-y-3\">\n    <!-- Search and actions -->\n    <div class=\"flex items-center gap-2\">\n      <input\n        v-model=\"search\"\n        type=\"text\"\n        placeholder=\"Search values\"\n        class=\"h-8 flex-1 rounded-md border border-[var(--ht-border)] bg-[var(--ht-bg)] px-3 text-sm text-[var(--ht-text)] placeholder:text-[var(--ht-text-subtle)] transition-colors focus:border-[var(--ht-primary)] focus:outline-none focus:ring-2 focus:ring-[var(--ht-primary)]/20\"\n      />\n      <button\n        class=\"h-8 px-3 text-xs font-medium text-[var(--ht-text-muted)] hover:text-[var(--ht-primary)] hover:bg-[var(--ht-bg-subtle)] rounded-md transition-colors\"\n        @click=\"clearAll\"\n      >\n        Clear\n      </button>\n      <button\n        class=\"h-8 px-3 text-xs font-medium text-[var(--ht-primary)] hover:text-[var(--ht-primary-hover)] hover:bg-[var(--ht-primary-subtle)] rounded-md transition-colors\"\n        @click=\"selectAllVisible\"\n      >\n        Select All\n      </button>\n    </div>\n\n    <!-- Value list with virtual scrolling -->\n    <div ref=\"scrollEl\" class=\"relative overflow-auto rounded-md border border-[var(--ht-border)] bg-[var(--ht-bg-subtle)]\" style=\"max-height: 16rem; height: 16rem;\">\n      <!-- Null checkbox (shown only when search empty or matches '(null)') -->\n      <label\n        v-if=\"!search || '(null)'.toLowerCase().includes(search.trim().toLowerCase())\"\n        class=\"flex items-center gap-3 px-3 py-2.5 text-sm bg-[var(--ht-bg)] border-b border-[var(--ht-border-subtle)] hover:bg-[var(--ht-bg-subtle)] cursor-pointer transition-colors group\"\n      >\n        <input\n          v-model=\"includeNull\"\n          type=\"checkbox\"\n          class=\"w-4 h-4 rounded border-[var(--ht-border-strong)] text-[var(--ht-primary)] focus:ring-2 focus:ring-[var(--ht-primary)]/30 cursor-pointer\"\n        />\n        <span class=\"font-medium text-[var(--ht-text-muted)] group-hover:text-[var(--ht-text)]\">(null)</span>\n        <span class=\"ml-auto text-xs text-[var(--ht-text-subtle)] tabular-nums\">{{ valueCounts.find(([k]) => k === '__NULL__')?.[1] ?? 0 }}</span>\n      </label>\n\n      <!-- Virtual list -->\n      <div :style=\"{ height: virtualizer.totalSize.value + 'px', position: 'relative' }\">\n        <div\n          v-for=\"item in virtualizer.virtualItems.value\"\n          :key=\"item.index\"\n          :style=\"{ position: 'absolute', top: item.start + 'px', height: item.size + 'px', left: 0, right: 0 }\"\n        >\n          <label class=\"flex items-center gap-3 px-3 py-2 text-sm hover:bg-[var(--ht-cell-hover)] cursor-pointer transition-colors group\">\n            <input\n              type=\"checkbox\"\n              class=\"w-4 h-4 rounded border-[var(--ht-border-strong)] text-[var(--ht-primary)] focus:ring-2 focus:ring-[var(--ht-primary)]/30 cursor-pointer\"\n              :checked=\"isChecked(nonNullPaged[item.index]?.[0])\"\n              @change=\"(e: Event) => toggleValue(nonNullPaged[item.index]?.[0], (e.target as HTMLInputElement)?.checked)\"\n            />\n            <span class=\"truncate flex-1 text-[var(--ht-text)] group-hover:text-[var(--ht-text)]\" :title=\"String(nonNullPaged[item.index]?.[0] ?? '')\">{{ String(nonNullPaged[item.index]?.[0] ?? '') }}</span>\n            <span class=\"text-xs text-[var(--ht-text-subtle)] tabular-nums\">{{ nonNullPaged[item.index]?.[1] ?? 0 }}</span>\n          </label>\n        </div>\n      </div>\n    </div>\n\n    <!-- Pagination info -->\n    <div class=\"flex items-center justify-between text-xs text-[var(--ht-text-muted)] pt-1 border-t border-[var(--ht-border-subtle)]\">\n      <span class=\"tabular-nums\">Showing {{ Math.min(loadedCount, nonNullAll.length) }} of {{ nonNullAll.length }}</span>\n    </div>\n  </div>\n</template>\n","<!--\n  CustomFilterEditor.vue - Operator-based filter editor\n\n  Responsibilities:\n  - Display operator selector based on data type\n  - Render appropriate input (text/number/date/enum)\n  - Handle date presets for quick selection\n  - Validate input before applying\n-->\n\n<script setup lang=\"ts\">\nimport { computed, ref, watch } from 'vue'\nimport type { FilterConfig } from '../../../types'\n\nconst props = defineProps<{\n  field: string\n  dataType: 'text' | 'number' | 'date' | 'datetime' | 'time' | 'interval' | 'boolean' | 'enum' | string\n  currentFilter?: FilterConfig | null\n  enumOptions?: Array<{ label: string; value: unknown }>\n}>()\n\n// Editor state\nconst operator = ref<FilterConfig['operator'] | ''>('')\nconst value = ref<unknown>('')\nconst rangeMin = ref<unknown>('')\nconst rangeMax = ref<unknown>('')\nconst enumSelections = ref<Set<unknown>>(new Set())\nconst validationError = ref('')\n\n// Expose state to parent component\ndefineExpose({\n  getFilterConfig: () => {\n    validationError.value = ''\n\n    const selectedOperator = operator.value\n    if (!selectedOperator) {\n      return null\n    }\n\n    let v: unknown = value.value\n\n    // Type coercion and validation\n    if (inputType.value === 'number') {\n      const nv = Number(v)\n      if (!Number.isFinite(nv)) {\n        validationError.value = 'Invalid number input'\n        return null\n      }\n      v = nv\n    }\n\n    if (inputType.value === 'boolean') {\n      v = v === true || v === 'true'\n    }\n\n    if (inputType.value === 'datetime-local' && selectedOperator === 'equals' && typeof v === 'string' && v) {\n      const d = new Date(v)\n      if (!isNaN(d.getTime())) v = d.toISOString()\n    }\n\n    // Between operator\n    if (selectedOperator === 'between') {\n      let minV: unknown = rangeMin.value\n      let maxV: unknown = rangeMax.value\n\n      if (inputType.value === 'number') {\n        const nmin = Number(minV)\n        const nmax = Number(maxV)\n        if (!Number.isFinite(nmin) || !Number.isFinite(nmax)) {\n          validationError.value = 'Invalid range input'\n          return null\n        }\n        minV = nmin\n        maxV = nmax\n      }\n\n      if (inputType.value === 'datetime-local' || inputType.value === 'date') {\n        const dmin = new Date(minV as string)\n        const dmax = new Date(maxV as string)\n        if (isNaN(dmin.getTime()) || isNaN(dmax.getTime())) {\n          validationError.value = 'Invalid range input'\n          return null\n        }\n        if (inputType.value === 'datetime-local') {\n          minV = dmin.toISOString()\n          maxV = dmax.toISOString()\n        }\n      }\n\n      v = [minV, maxV]\n    }\n\n    // Enum handling\n    if (inputType.value === 'enum') {\n      if (selectedOperator === 'in') {\n        const selected = Array.from(enumSelections.value)\n        if (selected.length === 0) {\n          validationError.value = 'Select at least one option'\n          return null\n        }\n        v = selected\n      } else {\n        enumSelections.value = new Set()\n      }\n    }\n\n    return { operator: selectedOperator, value: v }\n  },\n  hasValidationError: () => validationError.value\n})\n\n// Operator options by type\nconst operatorOptions = computed<{ label: string; value: FilterConfig['operator'] }[]>(() => {\n  const type = props.dataType\n  if (type === 'date' || type === 'datetime' || type === 'time' || type === 'interval') {\n    return [\n      { label: 'Equals', value: 'equals' },\n      { label: 'On or after', value: 'gte' },\n      { label: 'On or before', value: 'lte' },\n      { label: 'Between', value: 'between' },\n    ]\n  }\n  if (type === 'enum') {\n    return [\n      { label: 'Equals', value: 'equals' },\n      { label: 'Not equals', value: 'notEquals' },\n      { label: 'Includes any', value: 'in' },\n    ]\n  }\n  if (type === 'number' || type === 'currency' || type === 'percentage') {\n    return [\n      { label: 'Equals', value: 'equals' },\n      { label: 'Not equals', value: 'notEquals' },\n      { label: 'Greater than', value: 'gt' },\n      { label: 'Less than', value: 'lt' },\n      { label: 'Greater or equal', value: 'gte' },\n      { label: 'Less or equal', value: 'lte' },\n      { label: 'Between', value: 'between' },\n    ]\n  }\n  if (type === 'boolean') {\n    return [\n      { label: 'Equals', value: 'equals' },\n      { label: 'Not equals', value: 'notEquals' },\n    ]\n  }\n  // Text fallback\n  return [\n    { label: 'Contains', value: 'contains' },\n    { label: 'Equals', value: 'equals' },\n    { label: 'Not equals', value: 'notEquals' },\n    { label: 'Starts with', value: 'startsWith' },\n    { label: 'Ends with', value: 'endsWith' },\n    { label: 'Is empty', value: 'isEmpty' },\n    { label: 'Is not empty', value: 'notEmpty' },\n  ]\n})\n\nconst inputType = computed(() => {\n  if (props.dataType === 'number' || props.dataType === 'currency' || props.dataType === 'percentage') return 'number'\n  if (props.dataType === 'boolean') return 'boolean'\n  if (props.dataType === 'date') return 'date'\n  if (props.dataType === 'datetime') return 'datetime-local'\n  if (props.dataType === 'time') return 'time'\n  if (props.dataType === 'interval') return 'text'\n  if (props.dataType === 'enum') return 'enum'\n  return 'text'\n})\n\n// Sync from current filter\nwatch(\n  () => props.currentFilter,\n  (filter) => {\n    if (!filter) {\n      operator.value = ''\n      value.value = inputType.value === 'boolean' ? true : ''\n      rangeMin.value = ''\n      rangeMax.value = ''\n      enumSelections.value = new Set()\n      return\n    }\n\n    operator.value = filter.operator\n\n    if ((filter.operator === 'in' || filter.operator === 'oneOf') && Array.isArray(filter.value)) {\n      enumSelections.value = new Set(filter.value)\n      value.value = ''\n      rangeMin.value = ''\n      rangeMax.value = ''\n    } else if (filter.operator === 'between' && Array.isArray(filter.value)) {\n      const [min, max] = filter.value\n      rangeMin.value = formatForInput(min)\n      rangeMax.value = formatForInput(max)\n      value.value = ''\n      enumSelections.value = new Set()\n    } else {\n      rangeMin.value = ''\n      rangeMax.value = ''\n      enumSelections.value = new Set()\n      value.value = formatForInput(filter.value)\n    }\n  },\n  { immediate: true }\n)\n\nwatch(operator, newOperator => {\n  validationError.value = ''\n  if (!newOperator) {\n    if (inputType.value === 'enum') {\n      enumSelections.value = new Set()\n    }\n    return\n  }\n  if (inputType.value === 'enum') {\n    if (newOperator === 'in') {\n      value.value = ''\n    } else {\n      enumSelections.value = new Set()\n      if ((newOperator === 'equals' || newOperator === 'notEquals') && (value.value === '' || value.value === undefined)) {\n        const firstOption = props.enumOptions?.[0]\n        if (firstOption) value.value = firstOption.value\n      }\n    }\n  }\n})\n\nfunction formatForInput(raw: unknown): unknown {\n  if (raw === null || raw === undefined) return ''\n  if (inputType.value === 'datetime-local') {\n    const d = raw instanceof Date ? raw : new Date(raw as string)\n    if (!isNaN(d.getTime())) return d.toISOString().slice(0, 16)\n  }\n  if (inputType.value === 'date') {\n    const d = raw instanceof Date ? raw : new Date(raw as string)\n    if (!isNaN(d.getTime())) return d.toISOString().slice(0, 10)\n    if (typeof raw === 'string') return raw.slice(0, 10)\n  }\n  return raw\n}\n\n// Date presets\nfunction applyDatePreset(kind: 'today' | 'yesterday' | 'last7' | 'last30' | 'thisMonth') {\n  const now = new Date()\n  let a: Date, b: Date\n\n  switch (kind) {\n    case 'today':\n      a = new Date(now.setHours(0, 0, 0, 0))\n      b = new Date(now.setHours(23, 59, 59, 999))\n      break\n    case 'yesterday': {\n      const y = new Date(now)\n      y.setDate(y.getDate() - 1)\n      a = new Date(y.setHours(0, 0, 0, 0))\n      b = new Date(y.setHours(23, 59, 59, 999))\n      break\n    }\n    case 'last7': {\n      const start = new Date(now)\n      start.setDate(start.getDate() - 6)\n      a = new Date(start.setHours(0, 0, 0, 0))\n      b = new Date(now.setHours(23, 59, 59, 999))\n      break\n    }\n    case 'last30': {\n      const start = new Date(now)\n      start.setDate(start.getDate() - 29)\n      a = new Date(start.setHours(0, 0, 0, 0))\n      b = new Date(now.setHours(23, 59, 59, 999))\n      break\n    }\n    case 'thisMonth': {\n      a = new Date(now.getFullYear(), now.getMonth(), 1, 0, 0, 0, 0)\n      b = new Date(now.setHours(23, 59, 59, 999))\n      break\n    }\n    default:\n      return\n  }\n\n  operator.value = 'between'\n  if (inputType.value === 'datetime-local') {\n    rangeMin.value = a.toISOString().slice(0, 19)\n    rangeMax.value = b.toISOString().slice(0, 19)\n  } else {\n    rangeMin.value = a.toISOString().slice(0, 10)\n    rangeMax.value = b.toISOString().slice(0, 10)\n  }\n}\n\nfunction handleEnumToggle(optionValue: unknown, checked: boolean) {\n  const next = new Set(enumSelections.value)\n  if (checked) {\n    next.add(optionValue)\n  } else {\n    next.delete(optionValue)\n  }\n  enumSelections.value = next\n  if (next.size > 0) {\n    validationError.value = ''\n  }\n}\n</script>\n\n<template>\n  <div class=\"space-y-3\">\n    <!-- Date presets -->\n    <div v-if=\"inputType === 'date' || inputType === 'datetime-local'\" class=\"flex flex-wrap gap-2\">\n      <button\n        class=\"px-3 py-1.5 text-xs font-medium text-[var(--ht-text)] rounded-md border border-[var(--ht-border)] bg-[var(--ht-bg)] hover:bg-[var(--ht-bg-subtle)] hover:border-[var(--ht-border-strong)] transition-colors\"\n        @click=\"applyDatePreset('today')\"\n      >\n        Today\n      </button>\n      <button\n        class=\"px-3 py-1.5 text-xs font-medium text-[var(--ht-text)] rounded-md border border-[var(--ht-border)] bg-[var(--ht-bg)] hover:bg-[var(--ht-bg-subtle)] hover:border-[var(--ht-border-strong)] transition-colors\"\n        @click=\"applyDatePreset('yesterday')\"\n      >\n        Yesterday\n      </button>\n      <button\n        class=\"px-3 py-1.5 text-xs font-medium text-[var(--ht-text)] rounded-md border border-[var(--ht-border)] bg-[var(--ht-bg)] hover:bg-[var(--ht-bg-subtle)] hover:border-[var(--ht-border-strong)] transition-colors\"\n        @click=\"applyDatePreset('last7')\"\n      >\n        Last 7 days\n      </button>\n      <button\n        class=\"px-3 py-1.5 text-xs font-medium text-[var(--ht-text)] rounded-md border border-[var(--ht-border)] bg-[var(--ht-bg)] hover:bg-[var(--ht-bg-subtle)] hover:border-[var(--ht-border-strong)] transition-colors\"\n        @click=\"applyDatePreset('last30')\"\n      >\n        Last 30 days\n      </button>\n      <button\n        class=\"px-3 py-1.5 text-xs font-medium text-[var(--ht-text)] rounded-md border border-[var(--ht-border)] bg-[var(--ht-bg)] hover:bg-[var(--ht-bg-subtle)] hover:border-[var(--ht-border-strong)] transition-colors\"\n        @click=\"applyDatePreset('thisMonth')\"\n      >\n        This month\n      </button>\n    </div>\n\n    <!-- Operator and value input -->\n    <div v-if=\"inputType !== 'boolean' && inputType !== 'enum'\" class=\"flex gap-2 items-center min-w-0\">\n      <select\n        v-model=\"operator\"\n        class=\"h-9 min-w-[140px] shrink-0 rounded-md border border-[var(--ht-border)] bg-[var(--ht-bg)] px-3 text-sm text-[var(--ht-text)] transition-colors focus:border-[var(--ht-primary)] focus:outline-none focus:ring-2 focus:ring-[var(--ht-primary)]/20\"\n      >\n        <option disabled value=\"\">Select condition…</option>\n        <option v-for=\"opt in operatorOptions\" :key=\"opt.value\" :value=\"opt.value\">{{ opt.label }}</option>\n      </select>\n\n      <!-- Single input -->\n      <input\n        v-if=\"operator !== 'between'\"\n        v-model=\"value\"\n        :type=\"inputType\"\n        :style=\"(inputType === 'date' || inputType === 'datetime-local' || inputType === 'time') ? 'color-scheme: light dark;' : undefined\"\n        class=\"h-9 flex-1 min-w-0 rounded-md border border-[var(--ht-border)] bg-[var(--ht-bg)] px-3 text-sm text-[var(--ht-text)] placeholder:text-[var(--ht-text-subtle)] transition-colors focus:border-[var(--ht-primary)] focus:outline-none focus:ring-2 focus:ring-[var(--ht-primary)]/20\"\n        :placeholder=\"inputType === 'text' ? 'Enter value' : ''\"\n      />\n\n      <!-- Range inputs -->\n      <template v-else>\n        <input\n          v-model=\"rangeMin\"\n          :type=\"inputType\"\n          placeholder=\"Min\"\n          :style=\"(inputType === 'date' || inputType === 'datetime-local' || inputType === 'time') ? 'color-scheme: light dark;' : undefined\"\n          :class=\"[\n            'h-9 shrink-0 rounded-md border border-[var(--ht-border)] bg-[var(--ht-bg)] px-3 text-sm text-[var(--ht-text)] placeholder:text-[var(--ht-text-subtle)] transition-colors focus:border-[var(--ht-primary)] focus:outline-none focus:ring-2 focus:ring-[var(--ht-primary)]/20',\n            inputType === 'datetime-local' ? 'w-[160px]' : inputType === 'time' ? 'w-[90px]' : 'w-[110px]'\n          ]\"\n        />\n        <span class=\"text-[var(--ht-text-muted)] text-sm shrink-0\">to</span>\n        <input\n          v-model=\"rangeMax\"\n          :type=\"inputType\"\n          placeholder=\"Max\"\n          :style=\"(inputType === 'date' || inputType === 'datetime-local' || inputType === 'time') ? 'color-scheme: light dark;' : undefined\"\n          :class=\"[\n            'h-9 shrink-0 rounded-md border border-[var(--ht-border)] bg-[var(--ht-bg)] px-3 text-sm text-[var(--ht-text)] placeholder:text-[var(--ht-text-subtle)] transition-colors focus:border-[var(--ht-primary)] focus:outline-none focus:ring-2 focus:ring-[var(--ht-primary)]/20',\n            inputType === 'datetime-local' ? 'w-[160px]' : inputType === 'time' ? 'w-[90px]' : 'w-[110px]'\n          ]\"\n        />\n      </template>\n    </div>\n\n    <!-- Boolean select -->\n    <select\n      v-else-if=\"inputType === 'boolean'\"\n      v-model=\"value\"\n      class=\"h-9 flex-1 rounded-md border border-[var(--ht-border)] bg-[var(--ht-bg)] px-3 text-sm text-[var(--ht-text)] transition-colors focus:border-[var(--ht-primary)] focus:outline-none focus:ring-2 focus:ring-[var(--ht-primary)]/20\"\n    >\n      <option :value=\"true\">True</option>\n      <option :value=\"false\">False</option>\n    </select>\n\n    <!-- Enum select -->\n    <template v-else-if=\"inputType === 'enum'\">\n      <select\n        v-if=\"operator === 'equals'\"\n        v-model=\"value\"\n        class=\"h-9 flex-1 rounded-md border border-[var(--ht-border)] bg-[var(--ht-bg)] px-3 text-sm text-[var(--ht-text)] transition-colors focus:border-[var(--ht-primary)] focus:outline-none focus:ring-2 focus:ring-[var(--ht-primary)]/20\"\n      >\n        <option v-for=\"opt in enumOptions\" :key=\"String(opt.value)\" :value=\"opt.value\">{{ opt.label }}</option>\n      </select>\n      <div v-else class=\"max-h-48 overflow-auto rounded-md border border-[var(--ht-border)] bg-[var(--ht-bg-subtle)] p-2 space-y-1\">\n        <label\n          v-for=\"opt in enumOptions\"\n          :key=\"String(opt.value)\"\n          class=\"flex items-center gap-3 px-2 py-2 text-sm rounded hover:bg-[var(--ht-cell-hover)] cursor-pointer transition-colors group\"\n        >\n          <input\n            type=\"checkbox\"\n            class=\"w-4 h-4 rounded border-[var(--ht-border-strong)] text-[var(--ht-primary)] focus:ring-2 focus:ring-[var(--ht-primary)]/30 cursor-pointer\"\n            :checked=\"enumSelections.has(opt.value)\"\n            @change=\"(e: Event) => handleEnumToggle(opt.value, (e.target as HTMLInputElement).checked)\"\n          />\n          <span class=\"truncate text-[var(--ht-text)] group-hover:text-[var(--ht-text)]\">{{ opt.label }}</span>\n        </label>\n      </div>\n    </template>\n\n    <!-- Validation error -->\n    <div v-if=\"validationError\" class=\"flex items-start gap-2 rounded-md bg-[var(--ht-danger-bg)] border border-[var(--ht-danger-border)] px-3 py-2 text-xs text-[var(--ht-danger)]\">\n      <svg class=\"w-4 h-4 shrink-0 mt-0.5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n        <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n      </svg>\n      <span>{{ validationError }}</span>\n    </div>\n  </div>\n</template>\n","<!--\n  CustomFilterEditor.vue - Operator-based filter editor\n\n  Responsibilities:\n  - Display operator selector based on data type\n  - Render appropriate input (text/number/date/enum)\n  - Handle date presets for quick selection\n  - Validate input before applying\n-->\n\n<script setup lang=\"ts\">\nimport { computed, ref, watch } from 'vue'\nimport type { FilterConfig } from '../../../types'\n\nconst props = defineProps<{\n  field: string\n  dataType: 'text' | 'number' | 'date' | 'datetime' | 'time' | 'interval' | 'boolean' | 'enum' | string\n  currentFilter?: FilterConfig | null\n  enumOptions?: Array<{ label: string; value: unknown }>\n}>()\n\n// Editor state\nconst operator = ref<FilterConfig['operator'] | ''>('')\nconst value = ref<unknown>('')\nconst rangeMin = ref<unknown>('')\nconst rangeMax = ref<unknown>('')\nconst enumSelections = ref<Set<unknown>>(new Set())\nconst validationError = ref('')\n\n// Expose state to parent component\ndefineExpose({\n  getFilterConfig: () => {\n    validationError.value = ''\n\n    const selectedOperator = operator.value\n    if (!selectedOperator) {\n      return null\n    }\n\n    let v: unknown = value.value\n\n    // Type coercion and validation\n    if (inputType.value === 'number') {\n      const nv = Number(v)\n      if (!Number.isFinite(nv)) {\n        validationError.value = 'Invalid number input'\n        return null\n      }\n      v = nv\n    }\n\n    if (inputType.value === 'boolean') {\n      v = v === true || v === 'true'\n    }\n\n    if (inputType.value === 'datetime-local' && selectedOperator === 'equals' && typeof v === 'string' && v) {\n      const d = new Date(v)\n      if (!isNaN(d.getTime())) v = d.toISOString()\n    }\n\n    // Between operator\n    if (selectedOperator === 'between') {\n      let minV: unknown = rangeMin.value\n      let maxV: unknown = rangeMax.value\n\n      if (inputType.value === 'number') {\n        const nmin = Number(minV)\n        const nmax = Number(maxV)\n        if (!Number.isFinite(nmin) || !Number.isFinite(nmax)) {\n          validationError.value = 'Invalid range input'\n          return null\n        }\n        minV = nmin\n        maxV = nmax\n      }\n\n      if (inputType.value === 'datetime-local' || inputType.value === 'date') {\n        const dmin = new Date(minV as string)\n        const dmax = new Date(maxV as string)\n        if (isNaN(dmin.getTime()) || isNaN(dmax.getTime())) {\n          validationError.value = 'Invalid range input'\n          return null\n        }\n        if (inputType.value === 'datetime-local') {\n          minV = dmin.toISOString()\n          maxV = dmax.toISOString()\n        }\n      }\n\n      v = [minV, maxV]\n    }\n\n    // Enum handling\n    if (inputType.value === 'enum') {\n      if (selectedOperator === 'in') {\n        const selected = Array.from(enumSelections.value)\n        if (selected.length === 0) {\n          validationError.value = 'Select at least one option'\n          return null\n        }\n        v = selected\n      } else {\n        enumSelections.value = new Set()\n      }\n    }\n\n    return { operator: selectedOperator, value: v }\n  },\n  hasValidationError: () => validationError.value\n})\n\n// Operator options by type\nconst operatorOptions = computed<{ label: string; value: FilterConfig['operator'] }[]>(() => {\n  const type = props.dataType\n  if (type === 'date' || type === 'datetime' || type === 'time' || type === 'interval') {\n    return [\n      { label: 'Equals', value: 'equals' },\n      { label: 'On or after', value: 'gte' },\n      { label: 'On or before', value: 'lte' },\n      { label: 'Between', value: 'between' },\n    ]\n  }\n  if (type === 'enum') {\n    return [\n      { label: 'Equals', value: 'equals' },\n      { label: 'Not equals', value: 'notEquals' },\n      { label: 'Includes any', value: 'in' },\n    ]\n  }\n  if (type === 'number' || type === 'currency' || type === 'percentage') {\n    return [\n      { label: 'Equals', value: 'equals' },\n      { label: 'Not equals', value: 'notEquals' },\n      { label: 'Greater than', value: 'gt' },\n      { label: 'Less than', value: 'lt' },\n      { label: 'Greater or equal', value: 'gte' },\n      { label: 'Less or equal', value: 'lte' },\n      { label: 'Between', value: 'between' },\n    ]\n  }\n  if (type === 'boolean') {\n    return [\n      { label: 'Equals', value: 'equals' },\n      { label: 'Not equals', value: 'notEquals' },\n    ]\n  }\n  // Text fallback\n  return [\n    { label: 'Contains', value: 'contains' },\n    { label: 'Equals', value: 'equals' },\n    { label: 'Not equals', value: 'notEquals' },\n    { label: 'Starts with', value: 'startsWith' },\n    { label: 'Ends with', value: 'endsWith' },\n    { label: 'Is empty', value: 'isEmpty' },\n    { label: 'Is not empty', value: 'notEmpty' },\n  ]\n})\n\nconst inputType = computed(() => {\n  if (props.dataType === 'number' || props.dataType === 'currency' || props.dataType === 'percentage') return 'number'\n  if (props.dataType === 'boolean') return 'boolean'\n  if (props.dataType === 'date') return 'date'\n  if (props.dataType === 'datetime') return 'datetime-local'\n  if (props.dataType === 'time') return 'time'\n  if (props.dataType === 'interval') return 'text'\n  if (props.dataType === 'enum') return 'enum'\n  return 'text'\n})\n\n// Sync from current filter\nwatch(\n  () => props.currentFilter,\n  (filter) => {\n    if (!filter) {\n      operator.value = ''\n      value.value = inputType.value === 'boolean' ? true : ''\n      rangeMin.value = ''\n      rangeMax.value = ''\n      enumSelections.value = new Set()\n      return\n    }\n\n    operator.value = filter.operator\n\n    if ((filter.operator === 'in' || filter.operator === 'oneOf') && Array.isArray(filter.value)) {\n      enumSelections.value = new Set(filter.value)\n      value.value = ''\n      rangeMin.value = ''\n      rangeMax.value = ''\n    } else if (filter.operator === 'between' && Array.isArray(filter.value)) {\n      const [min, max] = filter.value\n      rangeMin.value = formatForInput(min)\n      rangeMax.value = formatForInput(max)\n      value.value = ''\n      enumSelections.value = new Set()\n    } else {\n      rangeMin.value = ''\n      rangeMax.value = ''\n      enumSelections.value = new Set()\n      value.value = formatForInput(filter.value)\n    }\n  },\n  { immediate: true }\n)\n\nwatch(operator, newOperator => {\n  validationError.value = ''\n  if (!newOperator) {\n    if (inputType.value === 'enum') {\n      enumSelections.value = new Set()\n    }\n    return\n  }\n  if (inputType.value === 'enum') {\n    if (newOperator === 'in') {\n      value.value = ''\n    } else {\n      enumSelections.value = new Set()\n      if ((newOperator === 'equals' || newOperator === 'notEquals') && (value.value === '' || value.value === undefined)) {\n        const firstOption = props.enumOptions?.[0]\n        if (firstOption) value.value = firstOption.value\n      }\n    }\n  }\n})\n\nfunction formatForInput(raw: unknown): unknown {\n  if (raw === null || raw === undefined) return ''\n  if (inputType.value === 'datetime-local') {\n    const d = raw instanceof Date ? raw : new Date(raw as string)\n    if (!isNaN(d.getTime())) return d.toISOString().slice(0, 16)\n  }\n  if (inputType.value === 'date') {\n    const d = raw instanceof Date ? raw : new Date(raw as string)\n    if (!isNaN(d.getTime())) return d.toISOString().slice(0, 10)\n    if (typeof raw === 'string') return raw.slice(0, 10)\n  }\n  return raw\n}\n\n// Date presets\nfunction applyDatePreset(kind: 'today' | 'yesterday' | 'last7' | 'last30' | 'thisMonth') {\n  const now = new Date()\n  let a: Date, b: Date\n\n  switch (kind) {\n    case 'today':\n      a = new Date(now.setHours(0, 0, 0, 0))\n      b = new Date(now.setHours(23, 59, 59, 999))\n      break\n    case 'yesterday': {\n      const y = new Date(now)\n      y.setDate(y.getDate() - 1)\n      a = new Date(y.setHours(0, 0, 0, 0))\n      b = new Date(y.setHours(23, 59, 59, 999))\n      break\n    }\n    case 'last7': {\n      const start = new Date(now)\n      start.setDate(start.getDate() - 6)\n      a = new Date(start.setHours(0, 0, 0, 0))\n      b = new Date(now.setHours(23, 59, 59, 999))\n      break\n    }\n    case 'last30': {\n      const start = new Date(now)\n      start.setDate(start.getDate() - 29)\n      a = new Date(start.setHours(0, 0, 0, 0))\n      b = new Date(now.setHours(23, 59, 59, 999))\n      break\n    }\n    case 'thisMonth': {\n      a = new Date(now.getFullYear(), now.getMonth(), 1, 0, 0, 0, 0)\n      b = new Date(now.setHours(23, 59, 59, 999))\n      break\n    }\n    default:\n      return\n  }\n\n  operator.value = 'between'\n  if (inputType.value === 'datetime-local') {\n    rangeMin.value = a.toISOString().slice(0, 19)\n    rangeMax.value = b.toISOString().slice(0, 19)\n  } else {\n    rangeMin.value = a.toISOString().slice(0, 10)\n    rangeMax.value = b.toISOString().slice(0, 10)\n  }\n}\n\nfunction handleEnumToggle(optionValue: unknown, checked: boolean) {\n  const next = new Set(enumSelections.value)\n  if (checked) {\n    next.add(optionValue)\n  } else {\n    next.delete(optionValue)\n  }\n  enumSelections.value = next\n  if (next.size > 0) {\n    validationError.value = ''\n  }\n}\n</script>\n\n<template>\n  <div class=\"space-y-3\">\n    <!-- Date presets -->\n    <div v-if=\"inputType === 'date' || inputType === 'datetime-local'\" class=\"flex flex-wrap gap-2\">\n      <button\n        class=\"px-3 py-1.5 text-xs font-medium text-[var(--ht-text)] rounded-md border border-[var(--ht-border)] bg-[var(--ht-bg)] hover:bg-[var(--ht-bg-subtle)] hover:border-[var(--ht-border-strong)] transition-colors\"\n        @click=\"applyDatePreset('today')\"\n      >\n        Today\n      </button>\n      <button\n        class=\"px-3 py-1.5 text-xs font-medium text-[var(--ht-text)] rounded-md border border-[var(--ht-border)] bg-[var(--ht-bg)] hover:bg-[var(--ht-bg-subtle)] hover:border-[var(--ht-border-strong)] transition-colors\"\n        @click=\"applyDatePreset('yesterday')\"\n      >\n        Yesterday\n      </button>\n      <button\n        class=\"px-3 py-1.5 text-xs font-medium text-[var(--ht-text)] rounded-md border border-[var(--ht-border)] bg-[var(--ht-bg)] hover:bg-[var(--ht-bg-subtle)] hover:border-[var(--ht-border-strong)] transition-colors\"\n        @click=\"applyDatePreset('last7')\"\n      >\n        Last 7 days\n      </button>\n      <button\n        class=\"px-3 py-1.5 text-xs font-medium text-[var(--ht-text)] rounded-md border border-[var(--ht-border)] bg-[var(--ht-bg)] hover:bg-[var(--ht-bg-subtle)] hover:border-[var(--ht-border-strong)] transition-colors\"\n        @click=\"applyDatePreset('last30')\"\n      >\n        Last 30 days\n      </button>\n      <button\n        class=\"px-3 py-1.5 text-xs font-medium text-[var(--ht-text)] rounded-md border border-[var(--ht-border)] bg-[var(--ht-bg)] hover:bg-[var(--ht-bg-subtle)] hover:border-[var(--ht-border-strong)] transition-colors\"\n        @click=\"applyDatePreset('thisMonth')\"\n      >\n        This month\n      </button>\n    </div>\n\n    <!-- Operator and value input -->\n    <div v-if=\"inputType !== 'boolean' && inputType !== 'enum'\" class=\"flex gap-2 items-center min-w-0\">\n      <select\n        v-model=\"operator\"\n        class=\"h-9 min-w-[140px] shrink-0 rounded-md border border-[var(--ht-border)] bg-[var(--ht-bg)] px-3 text-sm text-[var(--ht-text)] transition-colors focus:border-[var(--ht-primary)] focus:outline-none focus:ring-2 focus:ring-[var(--ht-primary)]/20\"\n      >\n        <option disabled value=\"\">Select condition…</option>\n        <option v-for=\"opt in operatorOptions\" :key=\"opt.value\" :value=\"opt.value\">{{ opt.label }}</option>\n      </select>\n\n      <!-- Single input -->\n      <input\n        v-if=\"operator !== 'between'\"\n        v-model=\"value\"\n        :type=\"inputType\"\n        :style=\"(inputType === 'date' || inputType === 'datetime-local' || inputType === 'time') ? 'color-scheme: light dark;' : undefined\"\n        class=\"h-9 flex-1 min-w-0 rounded-md border border-[var(--ht-border)] bg-[var(--ht-bg)] px-3 text-sm text-[var(--ht-text)] placeholder:text-[var(--ht-text-subtle)] transition-colors focus:border-[var(--ht-primary)] focus:outline-none focus:ring-2 focus:ring-[var(--ht-primary)]/20\"\n        :placeholder=\"inputType === 'text' ? 'Enter value' : ''\"\n      />\n\n      <!-- Range inputs -->\n      <template v-else>\n        <input\n          v-model=\"rangeMin\"\n          :type=\"inputType\"\n          placeholder=\"Min\"\n          :style=\"(inputType === 'date' || inputType === 'datetime-local' || inputType === 'time') ? 'color-scheme: light dark;' : undefined\"\n          :class=\"[\n            'h-9 shrink-0 rounded-md border border-[var(--ht-border)] bg-[var(--ht-bg)] px-3 text-sm text-[var(--ht-text)] placeholder:text-[var(--ht-text-subtle)] transition-colors focus:border-[var(--ht-primary)] focus:outline-none focus:ring-2 focus:ring-[var(--ht-primary)]/20',\n            inputType === 'datetime-local' ? 'w-[160px]' : inputType === 'time' ? 'w-[90px]' : 'w-[110px]'\n          ]\"\n        />\n        <span class=\"text-[var(--ht-text-muted)] text-sm shrink-0\">to</span>\n        <input\n          v-model=\"rangeMax\"\n          :type=\"inputType\"\n          placeholder=\"Max\"\n          :style=\"(inputType === 'date' || inputType === 'datetime-local' || inputType === 'time') ? 'color-scheme: light dark;' : undefined\"\n          :class=\"[\n            'h-9 shrink-0 rounded-md border border-[var(--ht-border)] bg-[var(--ht-bg)] px-3 text-sm text-[var(--ht-text)] placeholder:text-[var(--ht-text-subtle)] transition-colors focus:border-[var(--ht-primary)] focus:outline-none focus:ring-2 focus:ring-[var(--ht-primary)]/20',\n            inputType === 'datetime-local' ? 'w-[160px]' : inputType === 'time' ? 'w-[90px]' : 'w-[110px]'\n          ]\"\n        />\n      </template>\n    </div>\n\n    <!-- Boolean select -->\n    <select\n      v-else-if=\"inputType === 'boolean'\"\n      v-model=\"value\"\n      class=\"h-9 flex-1 rounded-md border border-[var(--ht-border)] bg-[var(--ht-bg)] px-3 text-sm text-[var(--ht-text)] transition-colors focus:border-[var(--ht-primary)] focus:outline-none focus:ring-2 focus:ring-[var(--ht-primary)]/20\"\n    >\n      <option :value=\"true\">True</option>\n      <option :value=\"false\">False</option>\n    </select>\n\n    <!-- Enum select -->\n    <template v-else-if=\"inputType === 'enum'\">\n      <select\n        v-if=\"operator === 'equals'\"\n        v-model=\"value\"\n        class=\"h-9 flex-1 rounded-md border border-[var(--ht-border)] bg-[var(--ht-bg)] px-3 text-sm text-[var(--ht-text)] transition-colors focus:border-[var(--ht-primary)] focus:outline-none focus:ring-2 focus:ring-[var(--ht-primary)]/20\"\n      >\n        <option v-for=\"opt in enumOptions\" :key=\"String(opt.value)\" :value=\"opt.value\">{{ opt.label }}</option>\n      </select>\n      <div v-else class=\"max-h-48 overflow-auto rounded-md border border-[var(--ht-border)] bg-[var(--ht-bg-subtle)] p-2 space-y-1\">\n        <label\n          v-for=\"opt in enumOptions\"\n          :key=\"String(opt.value)\"\n          class=\"flex items-center gap-3 px-2 py-2 text-sm rounded hover:bg-[var(--ht-cell-hover)] cursor-pointer transition-colors group\"\n        >\n          <input\n            type=\"checkbox\"\n            class=\"w-4 h-4 rounded border-[var(--ht-border-strong)] text-[var(--ht-primary)] focus:ring-2 focus:ring-[var(--ht-primary)]/30 cursor-pointer\"\n            :checked=\"enumSelections.has(opt.value)\"\n            @change=\"(e: Event) => handleEnumToggle(opt.value, (e.target as HTMLInputElement).checked)\"\n          />\n          <span class=\"truncate text-[var(--ht-text)] group-hover:text-[var(--ht-text)]\">{{ opt.label }}</span>\n        </label>\n      </div>\n    </template>\n\n    <!-- Validation error -->\n    <div v-if=\"validationError\" class=\"flex items-start gap-2 rounded-md bg-[var(--ht-danger-bg)] border border-[var(--ht-danger-border)] px-3 py-2 text-xs text-[var(--ht-danger)]\">\n      <svg class=\"w-4 h-4 shrink-0 mt-0.5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n        <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n      </svg>\n      <span>{{ validationError }}</span>\n    </div>\n  </div>\n</template>\n","<!--\n  FilterIndicator.vue - Excel-style Unified Filter UI\n\n  Design Philosophy (First Principles):\n  1. Single continuous interface (no tab switching)\n  2. Type-aware adaptive layout (date vs text vs enum)\n  3. Progressive disclosure (collapsible sections)\n  4. Zero cognitive overhead (all options visible)\n  5. Visual error feedback (UX)\n-->\n\n<script setup lang=\"ts\">\nimport { computed, ref, watch, nextTick } from 'vue'\nimport type { ColumnDef, GridAPI, FilterConfig, CellValue } from '../../../types'\nimport FilterPopover from '../../shared/FilterPopover.vue'\nimport ValueFilterEditor from '../../shared/filters/ValueFilterEditor.vue'\nimport CustomFilterEditor from '../../shared/filters/CustomFilterEditor.vue'\n\nconst props = defineProps<{\n  column: ColumnDef\n  gridAPI: GridAPI\n}>()\n\nconst emit = defineEmits<{\n  'filter-open': [field: string]\n  'filter-apply': [configs: FilterConfig[]]\n  'filter-clear': [field: string]\n}>()\n\n// UI state\nconst isOpen = ref(false)\nconst triggerRef = ref<HTMLElement | null>(null)\n\n// Refs to child components\nconst valueFilterRef = ref<InstanceType<typeof ValueFilterEditor> | null>(null)\nconst customFilterRef = ref<InstanceType<typeof CustomFilterEditor> | null>(null)\n\nconst remeasureValueFilter = () => {\n  valueFilterRef.value?.remeasure?.()\n}\n\n// Layout strategy: Always render Custom (top) then Values (bottom)\nconst isCustomExpanded = ref(false)\nconst defaultCustomExpanded = computed(() => {\n  const t = props.column.dataType || 'text'\n  return (\n    t === 'date' ||\n    t === 'datetime' ||\n    t === 'time' ||\n    t === 'interval' ||\n    t === 'number' ||\n    t === 'currency' ||\n    t === 'percentage' ||\n    t === 'json' ||\n    t === 'multiline'\n  )\n})\n\nconst showValueList = computed(() => {\n  const type = props.column.dataType\n  return !(type === 'date' || type === 'datetime' || type === 'json' || type === 'multiline')\n})\n\nconst columnFilters = computed<FilterConfig[]>(() => {\n  try {\n    const filters = (props.gridAPI.getState().config?.filters || []) as FilterConfig[]\n    return filters.filter(f => f.field === props.column.field)\n  } catch {\n    return []\n  }\n})\n\nconst valueFilterConfig = computed<FilterConfig | null>(() =>\n  columnFilters.value.find(f => f.operator === 'in' || f.operator === 'notIn') || null\n)\n\nconst customFilterConfig = computed<FilterConfig | null>(() =>\n  columnFilters.value.find(f => !['in', 'oneOf', 'notIn'].includes(f.operator)) || null\n)\n\nconst valueFilterState = computed<{ operator: 'in' | 'notIn'; value: unknown[] } | null>(() => {\n  const filter = valueFilterConfig.value\n  if (!filter) return null\n  const values = Array.isArray(filter.value) ? filter.value : []\n  return { operator: filter.operator as 'in' | 'notIn', value: values }\n})\n\nconst isActive = computed(() => columnFilters.value.length > 0)\n\nwatch(\n  columnFilters,\n  () => {\n    if (customFilterConfig.value) {\n      isCustomExpanded.value = true\n    } else if (!isOpen.value) {\n      isCustomExpanded.value = false\n    }\n  },\n  { immediate: true }\n)\n\nwatch(\n  () => props.column,\n  () => {\n    if (!customFilterConfig.value && !isOpen.value) {\n      isCustomExpanded.value = false\n    }\n  }\n)\n\n// Lazy data loading (only when popover is open)\nconst allData = computed(() => {\n  if (!isOpen.value) return []\n  return props.gridAPI.getData() || []\n})\n\n// Domain size heuristic for text: if unique non-null values > 50, prefer custom\nconst valueDomainSize = computed(() => {\n  if (!isOpen.value) return 0\n  try {\n    const data = allData.value\n    const field = props.column.field\n    const set = new Set<unknown>()\n    for (let i = 0; i < data.length; i++) {\n      const v = (data[i] as Record<string, unknown>)[field]\n      if (v !== null && v !== undefined) {\n        set.add(v)\n        if (set.size > 50) break\n      }\n    }\n    return set.size\n  } catch {\n    return 0\n  }\n})\n\n// Enum options\nconst enumOptions = computed<{ label: string; value: unknown }[]>(() => {\n  if (props.column.dataType !== 'enum') return []\n  const opts = props.column.options\n  if (Array.isArray(opts) && opts.length > 0) {\n    return opts.map(o =>\n      typeof o === 'object' && o !== null && 'value' in o\n        ? {\n            label: String((o as Record<string, unknown>).label ?? (o as Record<string, unknown>).value),\n            value: (o as Record<string, unknown>).value,\n          }\n        : { label: String(o), value: o }\n    )\n  }\n  // Derive from data\n  try {\n    const data = props.gridAPI.getData() || []\n    const set = new Set<unknown>()\n    for (let i = 0; i < data.length && set.size < 100; i++) {\n      const v = (data[i] as Record<string, unknown>)[props.column.field]\n      if (v !== undefined && v !== null) set.add(v)\n    }\n    return Array.from(set)\n      .sort((a, b) => String(a).localeCompare(String(b)))\n      .map(v => ({ label: String(v), value: v }))\n  } catch {\n    return []\n  }\n})\n\nfunction open() {\n  emit('filter-open', props.column.field)\n  isOpen.value = true\n  if (customFilterConfig.value) {\n    isCustomExpanded.value = true\n  } else {\n    isCustomExpanded.value = defaultCustomExpanded.value\n  }\n  // After open, apply domain heuristic for text\n  nextTick(() => {\n    const t = props.column.dataType || 'text'\n    if (t === 'text' && valueDomainSize.value > 50) {\n      isCustomExpanded.value = true\n    }\n  })\n}\n\nfunction close() {\n  isOpen.value = false\n}\n\n// Unified apply function - reads state from child components\nfunction applyFilter() {\n  const cfg = props.gridAPI.getState().config\n  const prev = (cfg?.filters || []) as FilterConfig[]\n  const rest = prev.filter(f => f.field !== props.column.field)\n\n  const nextFilters: FilterConfig[] = []\n\n  if (showValueList.value) {\n    const vf = valueFilterRef.value?.getValueFilter?.()\n    if (vf && Array.isArray(vf.value)) {\n      const normalized = vf.value.filter(v => v !== undefined) as CellValue[]\n      if (normalized.length > 0) {\n        nextFilters.push({\n          field: props.column.field,\n          operator: vf.operator as FilterConfig['operator'],\n          value: normalized,\n        })\n      }\n    }\n  }\n\n  const customConfig = customFilterRef.value?.getFilterConfig?.()\n  if (customConfig) {\n    nextFilters.push({\n      field: props.column.field,\n      operator: customConfig.operator,\n      value: customConfig.value as CellValue | CellValue[] | [CellValue, CellValue],\n    })\n  }\n\n  const updatedFilters = nextFilters.length > 0 ? [...rest, ...nextFilters] : rest\n\n  props.gridAPI.updateConfig({ filters: updatedFilters })\n\n  if (nextFilters.length > 0) {\n    emit('filter-apply', nextFilters)\n  } else {\n    emit('filter-clear', props.column.field)\n  }\n  close()\n}\n\nfunction clearFilter() {\n  const cfg = props.gridAPI.getState().config\n  const prev = (cfg?.filters || []) as FilterConfig[]\n  const rest = prev.filter(f => f.field !== props.column.field)\n  props.gridAPI.updateConfig({ filters: rest })\n  emit('filter-clear', props.column.field)\n  close()\n}\n\n// Listen to programmatic open requests from FilterBar\nif (props.gridAPI.on) {\n  props.gridAPI.on('column-open-filter', payload => {\n    if (payload && payload.field === props.column.field) {\n      open()\n    }\n  })\n}\n</script>\n\n<template>\n  <div ref=\"triggerRef\" class=\"relative inline-flex items-center ml-1 select-none\" @click.stop>\n    <!-- Trigger Button -->\n    <button\n      :class=\"[\n        'inline-flex h-5 w-5 items-center justify-center rounded cursor-pointer transition-all duration-200 hover:scale-105 focus:outline-none focus:ring-1 focus:ring-[var(--ht-primary)]',\n        isActive ? 'text-[var(--ht-primary)] bg-[var(--ht-primary-subtle)]/70 shadow-sm' : 'text-[var(--ht-text-muted)] hover:text-[var(--ht-text)] hover:bg-[var(--ht-primary-subtle)]/60',\n      ]\"\n      :aria-label=\"`Filter ${column.title}`\"\n      :aria-pressed=\"isActive ? 'true' : 'false'\"\n      :title=\"isActive ? 'Clear filter' : 'Set filter'\"\n      @click.stop=\"isOpen ? close() : open()\"\n    >\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"h-3.5 w-3.5 transition-transform duration-200\">\n        <path d=\"M4 4h16l-6 8v5l-4 2v-7L4 4Z\" />\n      </svg>\n    </button>\n\n    <!-- Popover Content -->\n    <FilterPopover\n      :open=\"isOpen\"\n      :anchor=\"triggerRef\"\n      :title=\"`Filter: ${column.title}`\"\n      @update:open=\"isOpen = $event\"\n      @opened=\"remeasureValueFilter\"\n    >\n      <!-- Simplified unified interface: Custom (top) + Values (bottom) -->\n      <div class=\"space-y-3\">\n        <!-- Custom Filter Section (Collapsible) -->\n        <div class=\"space-y-2\">\n          <button\n            class=\"flex w-full items-center justify-between text-xs font-semibold text-[var(--ht-text)] hover:text-[var(--ht-primary)] transition-colors\"\n            @click=\"isCustomExpanded = !isCustomExpanded\"\n          >\n            <span>Custom Conditions</span>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              stroke-width=\"2\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              class=\"h-4 w-4 transition-transform duration-200\"\n              :class=\"{ 'rotate-180': isCustomExpanded }\"\n            >\n              <path d=\"m6 9 6 6 6-6\" />\n            </svg>\n          </button>\n\n          <div v-show=\"isCustomExpanded\" class=\"overflow-hidden transition-all duration-200\">\n            <CustomFilterEditor\n              ref=\"customFilterRef\"\n              :field=\"column.field\"\n              :data-type=\"column.dataType || 'text'\"\n              :current-filter=\"customFilterConfig || null\"\n              :enum-options=\"enumOptions\"\n            />\n          </div>\n        </div>\n\n        <!-- Separator and Value Filter Section -->\n        <div v-if=\"showValueList\" class=\"border-t border-[var(--ht-border)]\" />\n        <div v-if=\"showValueList\" class=\"space-y-2\">\n          <div class=\"text-xs font-semibold text-[var(--ht-text)]\">Filter by Values</div>\n          <ValueFilterEditor\n            ref=\"valueFilterRef\"\n            :field=\"column.field\"\n            :all-data=\"allData\"\n            :current-filter=\"valueFilterState\"\n          />\n        </div>\n\n        <!-- Unified Action Buttons (always visible at bottom) -->\n        <div class=\"flex items-center justify-end gap-2 pt-3 border-t border-[var(--ht-border)]\">\n          <button\n            class=\"h-8 rounded border border-[var(--ht-border)] px-2 text-xs text-[var(--ht-text)] hover:bg-[var(--ht-bg-subtle)] transition-colors\"\n            @click=\"close\"\n          >\n            Cancel\n          </button>\n          <button\n            class=\"h-8 rounded bg-[var(--ht-primary)] px-3 text-xs text-white hover:opacity-90 transition-colors\"\n            @click=\"applyFilter\"\n          >\n            Apply\n          </button>\n        </div>\n\n        <!-- Clear Filter Button (separate, always visible when active) -->\n        <div v-if=\"isActive\" class=\"border-t border-[var(--ht-border)] pt-2\">\n          <button\n            class=\"w-full h-8 rounded border border-[var(--ht-border)] text-xs text-[var(--ht-text)] hover:bg-[var(--ht-bg-subtle)] transition-colors\"\n            @click=\"clearFilter\"\n          >\n            Clear Filter\n          </button>\n        </div>\n      </div>\n    </FilterPopover>\n  </div>\n</template>\n","<!--\n  FilterIndicator.vue - Excel-style Unified Filter UI\n\n  Design Philosophy (First Principles):\n  1. Single continuous interface (no tab switching)\n  2. Type-aware adaptive layout (date vs text vs enum)\n  3. Progressive disclosure (collapsible sections)\n  4. Zero cognitive overhead (all options visible)\n  5. Visual error feedback (UX)\n-->\n\n<script setup lang=\"ts\">\nimport { computed, ref, watch, nextTick } from 'vue'\nimport type { ColumnDef, GridAPI, FilterConfig, CellValue } from '../../../types'\nimport FilterPopover from '../../shared/FilterPopover.vue'\nimport ValueFilterEditor from '../../shared/filters/ValueFilterEditor.vue'\nimport CustomFilterEditor from '../../shared/filters/CustomFilterEditor.vue'\n\nconst props = defineProps<{\n  column: ColumnDef\n  gridAPI: GridAPI\n}>()\n\nconst emit = defineEmits<{\n  'filter-open': [field: string]\n  'filter-apply': [configs: FilterConfig[]]\n  'filter-clear': [field: string]\n}>()\n\n// UI state\nconst isOpen = ref(false)\nconst triggerRef = ref<HTMLElement | null>(null)\n\n// Refs to child components\nconst valueFilterRef = ref<InstanceType<typeof ValueFilterEditor> | null>(null)\nconst customFilterRef = ref<InstanceType<typeof CustomFilterEditor> | null>(null)\n\nconst remeasureValueFilter = () => {\n  valueFilterRef.value?.remeasure?.()\n}\n\n// Layout strategy: Always render Custom (top) then Values (bottom)\nconst isCustomExpanded = ref(false)\nconst defaultCustomExpanded = computed(() => {\n  const t = props.column.dataType || 'text'\n  return (\n    t === 'date' ||\n    t === 'datetime' ||\n    t === 'time' ||\n    t === 'interval' ||\n    t === 'number' ||\n    t === 'currency' ||\n    t === 'percentage' ||\n    t === 'json' ||\n    t === 'multiline'\n  )\n})\n\nconst showValueList = computed(() => {\n  const type = props.column.dataType\n  return !(type === 'date' || type === 'datetime' || type === 'json' || type === 'multiline')\n})\n\nconst columnFilters = computed<FilterConfig[]>(() => {\n  try {\n    const filters = (props.gridAPI.getState().config?.filters || []) as FilterConfig[]\n    return filters.filter(f => f.field === props.column.field)\n  } catch {\n    return []\n  }\n})\n\nconst valueFilterConfig = computed<FilterConfig | null>(() =>\n  columnFilters.value.find(f => f.operator === 'in' || f.operator === 'notIn') || null\n)\n\nconst customFilterConfig = computed<FilterConfig | null>(() =>\n  columnFilters.value.find(f => !['in', 'oneOf', 'notIn'].includes(f.operator)) || null\n)\n\nconst valueFilterState = computed<{ operator: 'in' | 'notIn'; value: unknown[] } | null>(() => {\n  const filter = valueFilterConfig.value\n  if (!filter) return null\n  const values = Array.isArray(filter.value) ? filter.value : []\n  return { operator: filter.operator as 'in' | 'notIn', value: values }\n})\n\nconst isActive = computed(() => columnFilters.value.length > 0)\n\nwatch(\n  columnFilters,\n  () => {\n    if (customFilterConfig.value) {\n      isCustomExpanded.value = true\n    } else if (!isOpen.value) {\n      isCustomExpanded.value = false\n    }\n  },\n  { immediate: true }\n)\n\nwatch(\n  () => props.column,\n  () => {\n    if (!customFilterConfig.value && !isOpen.value) {\n      isCustomExpanded.value = false\n    }\n  }\n)\n\n// Lazy data loading (only when popover is open)\nconst allData = computed(() => {\n  if (!isOpen.value) return []\n  return props.gridAPI.getData() || []\n})\n\n// Domain size heuristic for text: if unique non-null values > 50, prefer custom\nconst valueDomainSize = computed(() => {\n  if (!isOpen.value) return 0\n  try {\n    const data = allData.value\n    const field = props.column.field\n    const set = new Set<unknown>()\n    for (let i = 0; i < data.length; i++) {\n      const v = (data[i] as Record<string, unknown>)[field]\n      if (v !== null && v !== undefined) {\n        set.add(v)\n        if (set.size > 50) break\n      }\n    }\n    return set.size\n  } catch {\n    return 0\n  }\n})\n\n// Enum options\nconst enumOptions = computed<{ label: string; value: unknown }[]>(() => {\n  if (props.column.dataType !== 'enum') return []\n  const opts = props.column.options\n  if (Array.isArray(opts) && opts.length > 0) {\n    return opts.map(o =>\n      typeof o === 'object' && o !== null && 'value' in o\n        ? {\n            label: String((o as Record<string, unknown>).label ?? (o as Record<string, unknown>).value),\n            value: (o as Record<string, unknown>).value,\n          }\n        : { label: String(o), value: o }\n    )\n  }\n  // Derive from data\n  try {\n    const data = props.gridAPI.getData() || []\n    const set = new Set<unknown>()\n    for (let i = 0; i < data.length && set.size < 100; i++) {\n      const v = (data[i] as Record<string, unknown>)[props.column.field]\n      if (v !== undefined && v !== null) set.add(v)\n    }\n    return Array.from(set)\n      .sort((a, b) => String(a).localeCompare(String(b)))\n      .map(v => ({ label: String(v), value: v }))\n  } catch {\n    return []\n  }\n})\n\nfunction open() {\n  emit('filter-open', props.column.field)\n  isOpen.value = true\n  if (customFilterConfig.value) {\n    isCustomExpanded.value = true\n  } else {\n    isCustomExpanded.value = defaultCustomExpanded.value\n  }\n  // After open, apply domain heuristic for text\n  nextTick(() => {\n    const t = props.column.dataType || 'text'\n    if (t === 'text' && valueDomainSize.value > 50) {\n      isCustomExpanded.value = true\n    }\n  })\n}\n\nfunction close() {\n  isOpen.value = false\n}\n\n// Unified apply function - reads state from child components\nfunction applyFilter() {\n  const cfg = props.gridAPI.getState().config\n  const prev = (cfg?.filters || []) as FilterConfig[]\n  const rest = prev.filter(f => f.field !== props.column.field)\n\n  const nextFilters: FilterConfig[] = []\n\n  if (showValueList.value) {\n    const vf = valueFilterRef.value?.getValueFilter?.()\n    if (vf && Array.isArray(vf.value)) {\n      const normalized = vf.value.filter(v => v !== undefined) as CellValue[]\n      if (normalized.length > 0) {\n        nextFilters.push({\n          field: props.column.field,\n          operator: vf.operator as FilterConfig['operator'],\n          value: normalized,\n        })\n      }\n    }\n  }\n\n  const customConfig = customFilterRef.value?.getFilterConfig?.()\n  if (customConfig) {\n    nextFilters.push({\n      field: props.column.field,\n      operator: customConfig.operator,\n      value: customConfig.value as CellValue | CellValue[] | [CellValue, CellValue],\n    })\n  }\n\n  const updatedFilters = nextFilters.length > 0 ? [...rest, ...nextFilters] : rest\n\n  props.gridAPI.updateConfig({ filters: updatedFilters })\n\n  if (nextFilters.length > 0) {\n    emit('filter-apply', nextFilters)\n  } else {\n    emit('filter-clear', props.column.field)\n  }\n  close()\n}\n\nfunction clearFilter() {\n  const cfg = props.gridAPI.getState().config\n  const prev = (cfg?.filters || []) as FilterConfig[]\n  const rest = prev.filter(f => f.field !== props.column.field)\n  props.gridAPI.updateConfig({ filters: rest })\n  emit('filter-clear', props.column.field)\n  close()\n}\n\n// Listen to programmatic open requests from FilterBar\nif (props.gridAPI.on) {\n  props.gridAPI.on('column-open-filter', payload => {\n    if (payload && payload.field === props.column.field) {\n      open()\n    }\n  })\n}\n</script>\n\n<template>\n  <div ref=\"triggerRef\" class=\"relative inline-flex items-center ml-1 select-none\" @click.stop>\n    <!-- Trigger Button -->\n    <button\n      :class=\"[\n        'inline-flex h-5 w-5 items-center justify-center rounded cursor-pointer transition-all duration-200 hover:scale-105 focus:outline-none focus:ring-1 focus:ring-[var(--ht-primary)]',\n        isActive ? 'text-[var(--ht-primary)] bg-[var(--ht-primary-subtle)]/70 shadow-sm' : 'text-[var(--ht-text-muted)] hover:text-[var(--ht-text)] hover:bg-[var(--ht-primary-subtle)]/60',\n      ]\"\n      :aria-label=\"`Filter ${column.title}`\"\n      :aria-pressed=\"isActive ? 'true' : 'false'\"\n      :title=\"isActive ? 'Clear filter' : 'Set filter'\"\n      @click.stop=\"isOpen ? close() : open()\"\n    >\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"h-3.5 w-3.5 transition-transform duration-200\">\n        <path d=\"M4 4h16l-6 8v5l-4 2v-7L4 4Z\" />\n      </svg>\n    </button>\n\n    <!-- Popover Content -->\n    <FilterPopover\n      :open=\"isOpen\"\n      :anchor=\"triggerRef\"\n      :title=\"`Filter: ${column.title}`\"\n      @update:open=\"isOpen = $event\"\n      @opened=\"remeasureValueFilter\"\n    >\n      <!-- Simplified unified interface: Custom (top) + Values (bottom) -->\n      <div class=\"space-y-3\">\n        <!-- Custom Filter Section (Collapsible) -->\n        <div class=\"space-y-2\">\n          <button\n            class=\"flex w-full items-center justify-between text-xs font-semibold text-[var(--ht-text)] hover:text-[var(--ht-primary)] transition-colors\"\n            @click=\"isCustomExpanded = !isCustomExpanded\"\n          >\n            <span>Custom Conditions</span>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              stroke-width=\"2\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              class=\"h-4 w-4 transition-transform duration-200\"\n              :class=\"{ 'rotate-180': isCustomExpanded }\"\n            >\n              <path d=\"m6 9 6 6 6-6\" />\n            </svg>\n          </button>\n\n          <div v-show=\"isCustomExpanded\" class=\"overflow-hidden transition-all duration-200\">\n            <CustomFilterEditor\n              ref=\"customFilterRef\"\n              :field=\"column.field\"\n              :data-type=\"column.dataType || 'text'\"\n              :current-filter=\"customFilterConfig || null\"\n              :enum-options=\"enumOptions\"\n            />\n          </div>\n        </div>\n\n        <!-- Separator and Value Filter Section -->\n        <div v-if=\"showValueList\" class=\"border-t border-[var(--ht-border)]\" />\n        <div v-if=\"showValueList\" class=\"space-y-2\">\n          <div class=\"text-xs font-semibold text-[var(--ht-text)]\">Filter by Values</div>\n          <ValueFilterEditor\n            ref=\"valueFilterRef\"\n            :field=\"column.field\"\n            :all-data=\"allData\"\n            :current-filter=\"valueFilterState\"\n          />\n        </div>\n\n        <!-- Unified Action Buttons (always visible at bottom) -->\n        <div class=\"flex items-center justify-end gap-2 pt-3 border-t border-[var(--ht-border)]\">\n          <button\n            class=\"h-8 rounded border border-[var(--ht-border)] px-2 text-xs text-[var(--ht-text)] hover:bg-[var(--ht-bg-subtle)] transition-colors\"\n            @click=\"close\"\n          >\n            Cancel\n          </button>\n          <button\n            class=\"h-8 rounded bg-[var(--ht-primary)] px-3 text-xs text-white hover:opacity-90 transition-colors\"\n            @click=\"applyFilter\"\n          >\n            Apply\n          </button>\n        </div>\n\n        <!-- Clear Filter Button (separate, always visible when active) -->\n        <div v-if=\"isActive\" class=\"border-t border-[var(--ht-border)] pt-2\">\n          <button\n            class=\"w-full h-8 rounded border border-[var(--ht-border)] text-xs text-[var(--ht-text)] hover:bg-[var(--ht-bg-subtle)] transition-colors\"\n            @click=\"clearFilter\"\n          >\n            Clear Filter\n          </button>\n        </div>\n      </div>\n    </FilterPopover>\n  </div>\n</template>\n","<!--\n  HeaderCell.vue - Individual Header Cell Component\n\n  Responsibilities:\n  1. Render column header with sorting indicators\n  2. Handle column resizing interactions\n  3. Accessibility compliance\n  4. Visual feedback for user interactions\n\n  Interaction Model:\n  - Only the sort icon is clickable (prevents accidental sorting)\n  - Header cell text selection does not trigger sorting\n  - Provides precise control and better UX\n\n  Vue 3 Pattern: Event delegation to child components\n-->\n\n<script setup lang=\"ts\">\nimport { computed, toRef } from 'vue'\nimport type { InternalColumnDef, GridAPI, DragPosition, ColumnDragContext } from '../../../types'\nimport { isFunctionalColumn } from '../../../utils/functional-columns'\nimport { CheckboxHeader, RadioHeader } from '../../functional'\nimport { useColumnDrag } from './composables/useColumnDrag'\nimport { useColumnResize } from './composables/useColumnResize'\nimport SortIndicator from './SortIndicator.vue'\nimport FilterIndicator from './FilterIndicator.vue'\n\n// Props\nconst props = defineProps<{\n  column: InternalColumnDef\n  width: number\n  gridAPI: GridAPI\n  dragContext?: ColumnDragContext | null\n  borderClasses?: string\n  selectedRows?: (string | number)[]\n  totalRows?: number\n}>()\n\n// Emits\nconst emit = defineEmits<{\n  'sort-indicator-focus': [field: string]\n  'column-drag-start': [payload: ColumnDragContext]\n  'column-drop': [payload: { columnId: string; position: DragPosition }]\n  'column-drag-end': []\n  'select-all': []\n  'clear-selection': []\n}>()\n\n// Computed\nconst cellStyle = computed(() => ({\n  width: `${props.width}px`,\n  minWidth: `${props.column.minWidth || 50}px`,\n  maxWidth: `${props.column.maxWidth || 400}px`,\n}))\n\nconst columnRef = toRef(props, 'column')\nconst dragContextRef = toRef(props, 'dragContext')\n\nconst {\n  pinnedSide,\n  isColumnDraggable,\n  isDragSource,\n  dragOverPosition,\n  isDropBlocked,\n  handleColumnDragStart,\n  handleColumnDragEnd,\n  handleColumnDragOver,\n  handleColumnDragLeave,\n  handleColumnDrop,\n} = useColumnDrag({\n  columnRef,\n  dragContextRef,\n  emit,\n})\n\nconst {\n  isColumnResizable,\n  isResizeActive,\n  handleResize,\n  handleResizeDoubleClick,\n} = useColumnResize({\n  columnRef,\n  gridAPI: props.gridAPI,\n  getCurrentWidth: () => props.width,\n})\n\nconst isRightPinned = computed(() => pinnedSide.value === 'right')\n\nconst cellClasses = computed(() =>\n  [\n    'ht-header-cell',\n    props.borderClasses || '', // Use dynamic border classes\n    'px-3 py-2',\n    'flex items-center justify-between',\n    'bg-[var(--ht-header-bg)]',\n    'text-[var(--ht-header-text)]',\n    'font-medium text-sm',\n    'select-none',\n    isColumnResizable.value ? 'is-resizable' : 'is-fixed-width',\n    isResizeActive.value ? 'is-resizing' : null,\n    {\n      'is-dragging': isDragSource.value,\n      'drag-over-before': !isDragSource.value && dragOverPosition.value === 'before',\n      'drag-over-after': !isDragSource.value && dragOverPosition.value === 'after',\n      'is-draggable': isColumnDraggable.value,\n      'drop-forbidden': !isDragSource.value && isDropBlocked.value,\n      // Add separator classes for pinned columns\n      'is-last-pinned': props.column.isLastPinned,\n      'is-first-pinned-right': props.column.isFirstRightPinned,\n    },\n  ].filter(Boolean)\n)\n\n// Remove old sort icon logic - now handled by SortIndicator component\n\n// Computed: Check if column is sortable\nconst isSortable = computed(() => {\n  return props.column.sortable !== undefined && props.column.sortable !== false\n})\n\n// Event handlers (sorting handled by SortIndicator component only)\n\n// Sort indicator event handlers\nconst handleSortPriorityChange = (field: string, newPriority: number) => {\n  const changeSortPriority = props.gridAPI?.changeSortPriority\n  if (changeSortPriority) {\n    changeSortPriority(field, newPriority)\n  }\n}\n\nconst handleSortFieldRemove = (field: string) => {\n  const removeSortField = props.gridAPI?.removeSortField\n  if (removeSortField) {\n    removeSortField(field)\n  }\n}\n\nconst handleSortIndicatorFocus = (field: string) => {\n  emit('sort-indicator-focus', field)\n}\n\n// Functional column detection\nconst isFunctional = computed(() => isFunctionalColumn(props.column))\nconst functionalType = computed(() => isFunctional.value ? (props.column as any).type : null)\n\n// Event handlers for functional columns\nconst handleSelectAll = () => {\n  emit('select-all')\n}\n\nconst handleClearSelection = () => {\n  emit('clear-selection')\n}\n</script>\n\n<template>\n  <div\n    :class=\"cellClasses\"\n    :style=\"cellStyle\"\n    role=\"columnheader\"\n    :data-resizable=\"isColumnResizable ? 'true' : 'false'\"\n    :data-pinned=\"pinnedSide\"\n    :aria-sort=\"isSortable ? 'none' : undefined\"\n    :aria-label=\"`Column ${column.title}${isSortable ? ', sortable' : ''}`\"\n    :draggable=\"isColumnDraggable\"\n    @dragstart=\"handleColumnDragStart\"\n    @dragend=\"handleColumnDragEnd\"\n    @dragover=\"handleColumnDragOver\"\n    @dragleave=\"handleColumnDragLeave\"\n    @drop=\"handleColumnDrop\"\n  >\n    <!-- Functional Column Headers -->\n    <CheckboxHeader\n      v-if=\"isFunctional && functionalType === 'checkbox'\"\n      :options=\"(column as any).functionalOptions\"\n      :selected-count=\"selectedRows?.length || 0\"\n      :total-selectable-rows=\"totalRows || 0\"\n      @select-all=\"handleSelectAll\"\n      @clear-selection=\"handleClearSelection\"\n    />\n\n    <RadioHeader\n      v-else-if=\"isFunctional && functionalType === 'radio'\"\n      :options=\"(column as any).functionalOptions\"\n      :selected-count=\"selectedRows?.length || 0\"\n      :total-selectable-rows=\"totalRows || 0\"\n    />\n\n    <!-- Column Title with responsive alignment -->\n    <div\n      v-else\n      class=\"flex items-center min-w-0 flex-1 group\"\n      :class=\"{\n        'justify-start': !column.dataType || column.dataType === 'text',\n        'justify-end': column.dataType === 'number',\n        'justify-center': column.dataType === 'boolean'\n      }\"\n    >\n      <!-- For right-aligned content (numbers), sort indicator comes first -->\n      <SortIndicator\n        v-if=\"column.dataType === 'number'\"\n        :column=\"column\"\n        :grid-a-p-i=\"gridAPI\"\n        class=\"order-1\"\n        @sort-priority-change=\"handleSortPriorityChange\"\n        @sort-field-remove=\"handleSortFieldRemove\"\n        @sort-indicator-focus=\"handleSortIndicatorFocus\"\n        @dragstart.stop\n      />\n\n      <span\n        class=\"truncate\"\n        :class=\"{\n          'order-1': !column.dataType || column.dataType === 'text' || column.dataType === 'boolean' || column.dataType === 'date',\n          'order-2': column.dataType === 'number'\n        }\"\n      >\n        {{ column.title }}\n      </span>\n\n      <!-- For left-aligned and center-aligned content, sort indicator comes after -->\n      <SortIndicator\n        v-if=\"!column.dataType || column.dataType === 'text' || column.dataType === 'boolean' || column.dataType === 'date'\"\n        :column=\"column\"\n        :grid-a-p-i=\"gridAPI\"\n        class=\"order-2\"\n        @sort-priority-change=\"handleSortPriorityChange\"\n        @sort-field-remove=\"handleSortFieldRemove\"\n        @sort-indicator-focus=\"handleSortIndicatorFocus\"\n        @dragstart.stop\n      />\n\n      <!-- Filter indicator (if filterable) -->\n      <FilterIndicator\n        v-if=\"column.filterable !== false\"\n        :column=\"column\"\n        :grid-a-p-i=\"gridAPI\"\n        class=\"order-3\"\n        @filter-open=\"() => {}\"\n      />\n    </div>\n\n    <!-- Resize Handle -->\n    <div\n      v-if=\"isColumnResizable\"\n      :class=\"[\n        'ht-resize-handle w-1 h-full cursor-col-resize bg-transparent hover:bg-[var(--ht-primary)] opacity-0 hover:opacity-100 transition-all',\n        isRightPinned ? 'left-handle mr-2' : 'right-handle ml-2'\n      ]\"\n      @mousedown=\"handleResize\"\n      @dblclick=\"handleResizeDoubleClick\"\n      @dragstart.prevent\n      @click.stop\n    />\n  </div>\n</template>\n\n<style scoped>\n.ht-header-cell {\n  contain: layout style;\n  position: relative;\n}\n\n.ht-header-cell:focus-visible {\n  outline: 2px solid var(--ht-primary);\n  outline-offset: -2px;\n}\n\n.ht-resize-handle {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  z-index: 1;\n}\n\n.ht-resize-handle.right-handle {\n  right: 0;\n  left: auto;\n}\n\n.ht-resize-handle.left-handle {\n  left: 0;\n  right: auto;\n}\n\n.ht-resize-handle:hover {\n  background: var(--ht-primary);\n}\n\n.ht-header-cell.is-resizing {\n  cursor: col-resize;\n  user-select: none;\n}\n\n.ht-header-cell.is-resizing .ht-resize-handle {\n  opacity: 1;\n}\n\n.ht-header-cell.is-draggable {\n  cursor: grab;\n}\n\n.ht-header-cell.is-draggable:active {\n  cursor: grabbing;\n}\n\n.ht-header-cell.is-dragging {\n  opacity: 0.85;\n  cursor: grabbing;\n}\n\n.ht-header-cell.drop-forbidden {\n  cursor: not-allowed;\n}\n\n.ht-header-cell.drop-forbidden::before {\n  content: '';\n  position: absolute;\n  inset: 2px;\n  border: 2px dashed var(--ht-danger);\n  border-radius: 6px;\n  background: var(--ht-danger-bg);\n  opacity: 0.65;\n  pointer-events: none;\n  z-index: 6;\n}\n\n.ht-header-cell.drag-over-before::before,\n.ht-header-cell.drag-over-after::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  width: 3px;\n  background: var(--ht-primary);\n  z-index: 5;\n  border-radius: 999px;\n}\n\n.ht-header-cell.drag-over-before::before {\n  left: 0;\n}\n\n.ht-header-cell.drag-over-after::before {\n  right: 0;\n}\n\n:global(body.ht-grid-resizing) {\n  cursor: col-resize !important;\n  user-select: none !important;\n}\n\n.ht-header-cell::after {\n  content: '';\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  width: 1px;\n  background: var(--ht-border);\n  opacity: 0.35;\n  transition: opacity 0.15s ease, background-color 0.15s ease;\n  pointer-events: none;\n}\n\n.ht-header-cell[data-resizable='true']::after {\n  opacity: 0.55;\n}\n\n.ht-header-cell[data-resizable='true']:hover::after,\n.ht-header-cell.is-resizing::after {\n  background: var(--ht-primary);\n  opacity: 0.9;\n}\n\n.ht-header-cell[data-resizable='false']::after {\n  opacity: 0.18;\n}\n\n.ht-header-cell[data-pinned='right']::after {\n  left: 0;\n  right: auto;\n}\n\n.ht-header-cell[data-resizable='false'] .ht-resize-handle {\n  display: none;\n}\n\n.ht-header-cell[data-resizable='false'] .group {\n  opacity: 0.75;\n}\n</style>\n","<!--\n  HeaderCell.vue - Individual Header Cell Component\n\n  Responsibilities:\n  1. Render column header with sorting indicators\n  2. Handle column resizing interactions\n  3. Accessibility compliance\n  4. Visual feedback for user interactions\n\n  Interaction Model:\n  - Only the sort icon is clickable (prevents accidental sorting)\n  - Header cell text selection does not trigger sorting\n  - Provides precise control and better UX\n\n  Vue 3 Pattern: Event delegation to child components\n-->\n\n<script setup lang=\"ts\">\nimport { computed, toRef } from 'vue'\nimport type { InternalColumnDef, GridAPI, DragPosition, ColumnDragContext } from '../../../types'\nimport { isFunctionalColumn } from '../../../utils/functional-columns'\nimport { CheckboxHeader, RadioHeader } from '../../functional'\nimport { useColumnDrag } from './composables/useColumnDrag'\nimport { useColumnResize } from './composables/useColumnResize'\nimport SortIndicator from './SortIndicator.vue'\nimport FilterIndicator from './FilterIndicator.vue'\n\n// Props\nconst props = defineProps<{\n  column: InternalColumnDef\n  width: number\n  gridAPI: GridAPI\n  dragContext?: ColumnDragContext | null\n  borderClasses?: string\n  selectedRows?: (string | number)[]\n  totalRows?: number\n}>()\n\n// Emits\nconst emit = defineEmits<{\n  'sort-indicator-focus': [field: string]\n  'column-drag-start': [payload: ColumnDragContext]\n  'column-drop': [payload: { columnId: string; position: DragPosition }]\n  'column-drag-end': []\n  'select-all': []\n  'clear-selection': []\n}>()\n\n// Computed\nconst cellStyle = computed(() => ({\n  width: `${props.width}px`,\n  minWidth: `${props.column.minWidth || 50}px`,\n  maxWidth: `${props.column.maxWidth || 400}px`,\n}))\n\nconst columnRef = toRef(props, 'column')\nconst dragContextRef = toRef(props, 'dragContext')\n\nconst {\n  pinnedSide,\n  isColumnDraggable,\n  isDragSource,\n  dragOverPosition,\n  isDropBlocked,\n  handleColumnDragStart,\n  handleColumnDragEnd,\n  handleColumnDragOver,\n  handleColumnDragLeave,\n  handleColumnDrop,\n} = useColumnDrag({\n  columnRef,\n  dragContextRef,\n  emit,\n})\n\nconst {\n  isColumnResizable,\n  isResizeActive,\n  handleResize,\n  handleResizeDoubleClick,\n} = useColumnResize({\n  columnRef,\n  gridAPI: props.gridAPI,\n  getCurrentWidth: () => props.width,\n})\n\nconst isRightPinned = computed(() => pinnedSide.value === 'right')\n\nconst cellClasses = computed(() =>\n  [\n    'ht-header-cell',\n    props.borderClasses || '', // Use dynamic border classes\n    'px-3 py-2',\n    'flex items-center justify-between',\n    'bg-[var(--ht-header-bg)]',\n    'text-[var(--ht-header-text)]',\n    'font-medium text-sm',\n    'select-none',\n    isColumnResizable.value ? 'is-resizable' : 'is-fixed-width',\n    isResizeActive.value ? 'is-resizing' : null,\n    {\n      'is-dragging': isDragSource.value,\n      'drag-over-before': !isDragSource.value && dragOverPosition.value === 'before',\n      'drag-over-after': !isDragSource.value && dragOverPosition.value === 'after',\n      'is-draggable': isColumnDraggable.value,\n      'drop-forbidden': !isDragSource.value && isDropBlocked.value,\n      // Add separator classes for pinned columns\n      'is-last-pinned': props.column.isLastPinned,\n      'is-first-pinned-right': props.column.isFirstRightPinned,\n    },\n  ].filter(Boolean)\n)\n\n// Remove old sort icon logic - now handled by SortIndicator component\n\n// Computed: Check if column is sortable\nconst isSortable = computed(() => {\n  return props.column.sortable !== undefined && props.column.sortable !== false\n})\n\n// Event handlers (sorting handled by SortIndicator component only)\n\n// Sort indicator event handlers\nconst handleSortPriorityChange = (field: string, newPriority: number) => {\n  const changeSortPriority = props.gridAPI?.changeSortPriority\n  if (changeSortPriority) {\n    changeSortPriority(field, newPriority)\n  }\n}\n\nconst handleSortFieldRemove = (field: string) => {\n  const removeSortField = props.gridAPI?.removeSortField\n  if (removeSortField) {\n    removeSortField(field)\n  }\n}\n\nconst handleSortIndicatorFocus = (field: string) => {\n  emit('sort-indicator-focus', field)\n}\n\n// Functional column detection\nconst isFunctional = computed(() => isFunctionalColumn(props.column))\nconst functionalType = computed(() => isFunctional.value ? (props.column as any).type : null)\n\n// Event handlers for functional columns\nconst handleSelectAll = () => {\n  emit('select-all')\n}\n\nconst handleClearSelection = () => {\n  emit('clear-selection')\n}\n</script>\n\n<template>\n  <div\n    :class=\"cellClasses\"\n    :style=\"cellStyle\"\n    role=\"columnheader\"\n    :data-resizable=\"isColumnResizable ? 'true' : 'false'\"\n    :data-pinned=\"pinnedSide\"\n    :aria-sort=\"isSortable ? 'none' : undefined\"\n    :aria-label=\"`Column ${column.title}${isSortable ? ', sortable' : ''}`\"\n    :draggable=\"isColumnDraggable\"\n    @dragstart=\"handleColumnDragStart\"\n    @dragend=\"handleColumnDragEnd\"\n    @dragover=\"handleColumnDragOver\"\n    @dragleave=\"handleColumnDragLeave\"\n    @drop=\"handleColumnDrop\"\n  >\n    <!-- Functional Column Headers -->\n    <CheckboxHeader\n      v-if=\"isFunctional && functionalType === 'checkbox'\"\n      :options=\"(column as any).functionalOptions\"\n      :selected-count=\"selectedRows?.length || 0\"\n      :total-selectable-rows=\"totalRows || 0\"\n      @select-all=\"handleSelectAll\"\n      @clear-selection=\"handleClearSelection\"\n    />\n\n    <RadioHeader\n      v-else-if=\"isFunctional && functionalType === 'radio'\"\n      :options=\"(column as any).functionalOptions\"\n      :selected-count=\"selectedRows?.length || 0\"\n      :total-selectable-rows=\"totalRows || 0\"\n    />\n\n    <!-- Column Title with responsive alignment -->\n    <div\n      v-else\n      class=\"flex items-center min-w-0 flex-1 group\"\n      :class=\"{\n        'justify-start': !column.dataType || column.dataType === 'text',\n        'justify-end': column.dataType === 'number',\n        'justify-center': column.dataType === 'boolean'\n      }\"\n    >\n      <!-- For right-aligned content (numbers), sort indicator comes first -->\n      <SortIndicator\n        v-if=\"column.dataType === 'number'\"\n        :column=\"column\"\n        :grid-a-p-i=\"gridAPI\"\n        class=\"order-1\"\n        @sort-priority-change=\"handleSortPriorityChange\"\n        @sort-field-remove=\"handleSortFieldRemove\"\n        @sort-indicator-focus=\"handleSortIndicatorFocus\"\n        @dragstart.stop\n      />\n\n      <span\n        class=\"truncate\"\n        :class=\"{\n          'order-1': !column.dataType || column.dataType === 'text' || column.dataType === 'boolean' || column.dataType === 'date',\n          'order-2': column.dataType === 'number'\n        }\"\n      >\n        {{ column.title }}\n      </span>\n\n      <!-- For left-aligned and center-aligned content, sort indicator comes after -->\n      <SortIndicator\n        v-if=\"!column.dataType || column.dataType === 'text' || column.dataType === 'boolean' || column.dataType === 'date'\"\n        :column=\"column\"\n        :grid-a-p-i=\"gridAPI\"\n        class=\"order-2\"\n        @sort-priority-change=\"handleSortPriorityChange\"\n        @sort-field-remove=\"handleSortFieldRemove\"\n        @sort-indicator-focus=\"handleSortIndicatorFocus\"\n        @dragstart.stop\n      />\n\n      <!-- Filter indicator (if filterable) -->\n      <FilterIndicator\n        v-if=\"column.filterable !== false\"\n        :column=\"column\"\n        :grid-a-p-i=\"gridAPI\"\n        class=\"order-3\"\n        @filter-open=\"() => {}\"\n      />\n    </div>\n\n    <!-- Resize Handle -->\n    <div\n      v-if=\"isColumnResizable\"\n      :class=\"[\n        'ht-resize-handle w-1 h-full cursor-col-resize bg-transparent hover:bg-[var(--ht-primary)] opacity-0 hover:opacity-100 transition-all',\n        isRightPinned ? 'left-handle mr-2' : 'right-handle ml-2'\n      ]\"\n      @mousedown=\"handleResize\"\n      @dblclick=\"handleResizeDoubleClick\"\n      @dragstart.prevent\n      @click.stop\n    />\n  </div>\n</template>\n\n<style scoped>\n.ht-header-cell {\n  contain: layout style;\n  position: relative;\n}\n\n.ht-header-cell:focus-visible {\n  outline: 2px solid var(--ht-primary);\n  outline-offset: -2px;\n}\n\n.ht-resize-handle {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  z-index: 1;\n}\n\n.ht-resize-handle.right-handle {\n  right: 0;\n  left: auto;\n}\n\n.ht-resize-handle.left-handle {\n  left: 0;\n  right: auto;\n}\n\n.ht-resize-handle:hover {\n  background: var(--ht-primary);\n}\n\n.ht-header-cell.is-resizing {\n  cursor: col-resize;\n  user-select: none;\n}\n\n.ht-header-cell.is-resizing .ht-resize-handle {\n  opacity: 1;\n}\n\n.ht-header-cell.is-draggable {\n  cursor: grab;\n}\n\n.ht-header-cell.is-draggable:active {\n  cursor: grabbing;\n}\n\n.ht-header-cell.is-dragging {\n  opacity: 0.85;\n  cursor: grabbing;\n}\n\n.ht-header-cell.drop-forbidden {\n  cursor: not-allowed;\n}\n\n.ht-header-cell.drop-forbidden::before {\n  content: '';\n  position: absolute;\n  inset: 2px;\n  border: 2px dashed var(--ht-danger);\n  border-radius: 6px;\n  background: var(--ht-danger-bg);\n  opacity: 0.65;\n  pointer-events: none;\n  z-index: 6;\n}\n\n.ht-header-cell.drag-over-before::before,\n.ht-header-cell.drag-over-after::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  width: 3px;\n  background: var(--ht-primary);\n  z-index: 5;\n  border-radius: 999px;\n}\n\n.ht-header-cell.drag-over-before::before {\n  left: 0;\n}\n\n.ht-header-cell.drag-over-after::before {\n  right: 0;\n}\n\n:global(body.ht-grid-resizing) {\n  cursor: col-resize !important;\n  user-select: none !important;\n}\n\n.ht-header-cell::after {\n  content: '';\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  width: 1px;\n  background: var(--ht-border);\n  opacity: 0.35;\n  transition: opacity 0.15s ease, background-color 0.15s ease;\n  pointer-events: none;\n}\n\n.ht-header-cell[data-resizable='true']::after {\n  opacity: 0.55;\n}\n\n.ht-header-cell[data-resizable='true']:hover::after,\n.ht-header-cell.is-resizing::after {\n  background: var(--ht-primary);\n  opacity: 0.9;\n}\n\n.ht-header-cell[data-resizable='false']::after {\n  opacity: 0.18;\n}\n\n.ht-header-cell[data-pinned='right']::after {\n  left: 0;\n  right: auto;\n}\n\n.ht-header-cell[data-resizable='false'] .ht-resize-handle {\n  display: none;\n}\n\n.ht-header-cell[data-resizable='false'] .group {\n  opacity: 0.75;\n}\n</style>\n","<!--\n  GridHeader.vue - Table Header Component\n\n  Responsibilities:\n  1. Render column headers with sorting indicators\n  2. Handle column resize interactions\n  3. Synchronize horizontal scroll with body\n  4. Support three-pane layout (frozen columns)\n\n  Performance: Sticky positioning, minimal re-renders\n-->\n\n<script setup lang=\"ts\">\nimport { computed, ref, defineExpose, watch, nextTick } from 'vue'\nimport HeaderCell from './HeaderCell.vue'\nimport type { ColumnDef, PaneConfig, GridAPI, DragPosition, ColumnDragContext } from '../../../types'\nimport { isColumnDropBlocked, getColumnPinnedLocation } from '../../../utils/column-reorder'\nimport { createLogger } from '../../../utils/logger'\n\nconst logger = createLogger({ module: 'GridHeader' })\n\n// Props\nconst props = defineProps<{\n  columns: ColumnDef[]\n  paneConfig: PaneConfig\n  scrollLeft: number\n  height: number\n  isContentOverflowing: boolean\n  gridAPI: GridAPI\n  headerCellBorderClasses?: string\n  selectedRows: (string | number)[]\n  totalRows: number\n}>()\n\n// Emits\nconst emit = defineEmits<{\n  'header-scroll': [scrollLeft: number]\n  'sort-indicator-focus': [field: string]\n  'select-all': []\n  'clear-selection': []\n}>()\n\n// Refs\nconst centerPane = ref<HTMLElement>()\nconst centerScrollArea = ref<HTMLElement>()\n\n// 用于防止循环同步的标志\nlet isSyncing = false\n\nconst draggedColumn = ref<ColumnDragContext | null>(null)\n\nconst columnOrderApi = computed(() => {\n  return props.gridAPI as GridAPI & {\n    moveColumn?: (columnId: string, targetIndex: number) => boolean\n    setColumnOrder?: (order: string[]) => boolean\n  }\n})\n\n// Computed\nconst headerStyle = computed(() => ({\n  height: `${props.height}px`,\n  position: 'sticky' as const,\n  top: 0,\n  // Raise z-index above body panes (which use z-10)\n  zIndex: 40,\n  background: 'var(--ht-header-bg)',\n}))\n\nconst centerPaneStyle = computed(() => ({\n  width: `${props.paneConfig.center.width}px`,\n}))\n\n// Watch prop changes to sync scroll position (from Body to Header)\nwatch(\n  () => props.scrollLeft,\n  (newScrollLeft) => {\n    if (isSyncing) return\n    if (!centerScrollArea.value) return\n    if (centerScrollArea.value.scrollLeft === newScrollLeft) return\n\n    isSyncing = true\n    centerScrollArea.value.scrollLeft = newScrollLeft\n    nextTick(() => {\n      isSyncing = false\n    })\n  }\n)\n\n// Handle header scroll events (from Header to Body)\nconst handleHeaderScroll = (event: Event) => {\n  if (isSyncing) return\n\n  const target = event.target as HTMLElement\n  const scrollLeft = target.scrollLeft\n\n  isSyncing = true\n  emit('header-scroll', scrollLeft)\n  nextTick(() => {\n    isSyncing = false\n  })\n}\n\n// Handle sort indicator focus events\nconst handleSortIndicatorFocus = (field: string) => {\n  emit('sort-indicator-focus', field)\n}\n\nconst resetDragState = () => {\n  draggedColumn.value = null\n}\n\nconst handleColumnDragStart = (payload: ColumnDragContext) => {\n  draggedColumn.value = payload\n}\n\n/**\n * Validate if the column drop operation is allowed\n * @returns Validation result with columns and order if valid, null otherwise\n */\nconst validateColumnDrop = (\n  sourceId: string,\n  targetColumnId: string\n): { columns: ColumnDef[]; targetColumn: ColumnDef; order: string[] } | null => {\n  const columns = props.gridAPI.getState().columns || []\n  const targetColumn = columns.find(column => column.id === targetColumnId)\n\n  if (!targetColumn) {\n    return null\n  }\n\n  if (isColumnDropBlocked(draggedColumn.value, targetColumn)) {\n    return null\n  }\n\n  const order = columns.map(column => column.id)\n  if (!order.includes(sourceId)) {\n    return null\n  }\n\n  return { columns, targetColumn, order }\n}\n\n/**\n * Calculate the insertion index for a dropped column within the same pinned section\n * @returns The index where the column should be inserted\n */\nconst calculateInsertionIndex = (\n  filteredOrder: string[],\n  targetColumnId: string,\n  targetColumn: ColumnDef,\n  position: DragPosition,\n  columns: ColumnDef[]\n): number => {\n  if (!filteredOrder.includes(targetColumnId)) {\n    return filteredOrder.length\n  }\n\n  const baseIndex = filteredOrder.findIndex(id => id === targetColumnId)\n  const targetPinned = getColumnPinnedLocation(targetColumn)\n  \n  // Get all columns in the same pinned section\n  const samePinnedColumns = filteredOrder\n    .map(id => columns.find(column => column.id === id))\n    .filter((column): column is ColumnDef => Boolean(column))\n    .filter(column => getColumnPinnedLocation(column) === targetPinned)\n    .map(column => column.id)\n\n  const relativeIndex = samePinnedColumns.findIndex(id => id === targetColumnId)\n  \n  if (relativeIndex !== -1) {\n    const mappedIndex = filteredOrder.findIndex(id => id === samePinnedColumns[relativeIndex])\n    return position === 'before' ? mappedIndex : mappedIndex + 1\n  }\n  \n  return position === 'before' ? baseIndex : baseIndex + 1\n}\n\n/**\n * Execute the column move operation using available API methods\n */\nconst executeColumnMove = (sourceId: string, insertionIndex: number, filteredOrder: string[]) => {\n  const moveColumn = columnOrderApi.value.moveColumn\n\n  if (typeof moveColumn === 'function') {\n    moveColumn(sourceId, insertionIndex)\n  } else if (typeof columnOrderApi.value.setColumnOrder === 'function') {\n    const newOrder = [...filteredOrder]\n    newOrder.splice(insertionIndex, 0, sourceId)\n    columnOrderApi.value.setColumnOrder(newOrder)\n  }\n}\n\n/**\n * Handle column drop event - orchestrates the entire drop operation\n */\nconst handleColumnDrop = (payload: { columnId: string; position: DragPosition }) => {\n  const sourceId = draggedColumn.value?.columnId\n  \n  // Early exit if no valid source\n  if (!sourceId || payload.columnId === sourceId) {\n    resetDragState()\n    return\n  }\n\n  // Validate the drop operation\n  const validationResult = validateColumnDrop(sourceId, payload.columnId)\n  if (!validationResult) {\n    resetDragState()\n    return\n  }\n\n  const { columns, targetColumn, order } = validationResult\n\n  // Calculate where to insert the column\n  const filteredOrder = order.filter(id => id !== sourceId)\n  const insertionIndex = calculateInsertionIndex(\n    filteredOrder,\n    payload.columnId,\n    targetColumn,\n    payload.position,\n    columns\n  )\n\n  // Execute the move\n  executeColumnMove(sourceId, insertionIndex, filteredOrder)\n\n  resetDragState()\n}\n\nconst handleColumnDragEnd = () => {\n  resetDragState()\n}\n\n// Programmatic open: scroll the center pane to make the column visible, then re-emit open event\nif (typeof props.gridAPI.on === 'function') {\n  props.gridAPI.on('column-open-filter', payload => {\n    try {\n      const field = payload?.field\n      if (!field) return\n      if (payload?.__skipHeader) return\n      const columns = props.gridAPI.getState().columns || []\n      const col = columns.find((c: any) => c.field === field || c.id === field)\n      if (!col) return\n      const pinned = getColumnPinnedLocation(col)\n      if (pinned === 'center') {\n        const targetIndex = (props.paneConfig.center.columns || []).findIndex(\n          (c: any) => c.field === field || c.id === field\n        )\n        if (targetIndex >= 0 && centerScrollArea.value) {\n          // Compute target left by summing widths of previous center columns\n          const centerCols = props.paneConfig.center.columns as any[]\n          let targetLeft = 0\n          for (let i = 0; i < targetIndex; i++) {\n            const w = Number(centerCols[i]?.width) || 150\n            targetLeft += w\n          }\n          const cellWidth = Number(centerCols[targetIndex]?.width) || 150\n          const el = centerScrollArea.value\n          const viewLeft = el.scrollLeft\n          const viewRight = viewLeft + el.clientWidth\n          let newLeft = viewLeft\n          if (targetLeft < viewLeft) newLeft = targetLeft\n          else if (targetLeft + cellWidth > viewRight) newLeft = Math.max(0, targetLeft - (el.clientWidth - cellWidth))\n          if (newLeft !== viewLeft) {\n            try {\n              el.scrollTo({ left: newLeft, behavior: 'smooth' })\n            } catch {\n              el.scrollLeft = newLeft\n            }\n          }\n          // Re-emit after scroll to ensure popover opens in-view\n          // Wait ~11 frames (~180ms at 60fps) for smooth scroll animation\n          let frameCount = 0\n          const waitForScroll = () => {\n            frameCount++\n            if (frameCount < 11) {\n              requestAnimationFrame(waitForScroll)\n            } else {\n              props.gridAPI.emit('column-open-filter', { field, __skipHeader: true })\n            }\n          }\n          requestAnimationFrame(waitForScroll)\n          return\n        }\n      }\n      // For pinned columns or if not found in center, directly re-emit to open\n      requestAnimationFrame(() => props.gridAPI.emit('column-open-filter', { field, __skipHeader: true }))\n    } catch (err) {\n      logger.warn('Failed to handle column-open-filter event', err)\n    }\n  })\n}\n\nconst handleSelectAll = () => {\n  emit('select-all')\n}\n\nconst handleClearSelection = () => {\n  emit('clear-selection')\n}\n\n// Expose methods to parent - 不再需要焦点相关的方法\ndefineExpose({\n  // 保留为空对象以防止破坏现有的 ref 调用\n})\n</script>\n\n<template>\n  <div class=\"ht-header flex\" :style=\"headerStyle\" role=\"rowgroup\">\n    <!-- Left Frozen Pane -->\n    <div\n      v-if=\"paneConfig.left.columns.length > 0\"\n      class=\"ht-pane-left flex-shrink-0 flex bg-[var(--ht-header-bg)] relative z-10\"\n      :style=\"{ width: `${paneConfig.left.width}px` }\"\n    >\n      <HeaderCell\n        v-for=\"column in paneConfig.left.columns\"\n        :key=\"column.id\"\n        :column=\"column\"\n        :width=\"column.width || 150\"\n        :grid-a-p-i=\"gridAPI\"\n        :drag-context=\"draggedColumn\"\n        :border-classes=\"headerCellBorderClasses\"\n        :selected-rows=\"selectedRows\"\n        :total-rows=\"totalRows\"\n        @column-drag-start=\"handleColumnDragStart\"\n        @column-drop=\"handleColumnDrop\"\n        @column-drag-end=\"handleColumnDragEnd\"\n        @select-all=\"handleSelectAll\"\n        @clear-selection=\"handleClearSelection\"\n      />\n    </div>\n\n    <!-- Center Scrollable Pane -->\n    <div\n      ref=\"centerScrollArea\"\n      class=\"ht-pane-center overflow-x-auto overflow-y-visible relative ht-hide-scrollbar\"\n      :class=\"{ 'flex-1': isContentOverflowing }\"\n      @scroll=\"handleHeaderScroll\"\n    >\n      <div ref=\"centerPane\" class=\"flex\" :style=\"centerPaneStyle\">\n        <HeaderCell\n          v-for=\"column in paneConfig.center.columns\"\n          :key=\"column.id\"\n          :column=\"column\"\n          :width=\"column.width || 150\"\n          :grid-a-p-i=\"gridAPI\"\n          :drag-context=\"draggedColumn\"\n          :border-classes=\"headerCellBorderClasses\"\n          :selected-rows=\"selectedRows\"\n          :total-rows=\"totalRows\"\n          @sort-indicator-focus=\"handleSortIndicatorFocus\"\n          @column-drag-start=\"handleColumnDragStart\"\n          @column-drop=\"handleColumnDrop\"\n          @column-drag-end=\"handleColumnDragEnd\"\n          @select-all=\"handleSelectAll\"\n          @clear-selection=\"handleClearSelection\"\n        />\n      </div>\n    </div>\n\n    <!-- Right Frozen Pane -->\n    <div\n      v-if=\"paneConfig.right.columns.length > 0\"\n      class=\"ht-pane-right flex-shrink-0 flex bg-[var(--ht-header-bg)] relative z-10\"\n      :style=\"{ width: `${paneConfig.right.width}px` }\"\n    >\n      <HeaderCell\n        v-for=\"column in paneConfig.right.columns\"\n        :key=\"column.id\"\n        :column=\"column\"\n        :width=\"column.width || 150\"\n        :grid-a-p-i=\"gridAPI\"\n        :drag-context=\"draggedColumn\"\n        :border-classes=\"headerCellBorderClasses\"\n        :selected-rows=\"selectedRows\"\n        :total-rows=\"totalRows\"\n        @column-drag-start=\"handleColumnDragStart\"\n        @column-drop=\"handleColumnDrop\"\n        @column-drag-end=\"handleColumnDragEnd\"\n        @select-all=\"handleSelectAll\"\n        @clear-selection=\"handleClearSelection\"\n      />\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.ht-header {\n  /* Remove paint containment to allow header popovers to overflow below header */\n  contain: layout style;\n  position: relative;\n}\n\n/* Single bottom 2px gradient highlight to separate header from body */\n.ht-header::after {\n  content: '';\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  height: var(--ht-pane-edge-width);\n  background: linear-gradient(to bottom, var(--ht-pane-edge-highlight), transparent);\n  z-index: var(--z-ht-header);\n  pointer-events: none;\n}\n\n/* Shadow for pinned panes is now defined in pinned-columns.css */\n\n/* 隐藏标题行的滚动条，但保持滚动功能 */\n.ht-hide-scrollbar {\n  scrollbar-width: none; /* Firefox */\n  -ms-overflow-style: none; /* IE 10+ */\n}\n\n.ht-hide-scrollbar::-webkit-scrollbar {\n  display: none; /* Chrome, Safari, Edge */\n}\n</style>\n","<!--\n  GridHeader.vue - Table Header Component\n\n  Responsibilities:\n  1. Render column headers with sorting indicators\n  2. Handle column resize interactions\n  3. Synchronize horizontal scroll with body\n  4. Support three-pane layout (frozen columns)\n\n  Performance: Sticky positioning, minimal re-renders\n-->\n\n<script setup lang=\"ts\">\nimport { computed, ref, defineExpose, watch, nextTick } from 'vue'\nimport HeaderCell from './HeaderCell.vue'\nimport type { ColumnDef, PaneConfig, GridAPI, DragPosition, ColumnDragContext } from '../../../types'\nimport { isColumnDropBlocked, getColumnPinnedLocation } from '../../../utils/column-reorder'\nimport { createLogger } from '../../../utils/logger'\n\nconst logger = createLogger({ module: 'GridHeader' })\n\n// Props\nconst props = defineProps<{\n  columns: ColumnDef[]\n  paneConfig: PaneConfig\n  scrollLeft: number\n  height: number\n  isContentOverflowing: boolean\n  gridAPI: GridAPI\n  headerCellBorderClasses?: string\n  selectedRows: (string | number)[]\n  totalRows: number\n}>()\n\n// Emits\nconst emit = defineEmits<{\n  'header-scroll': [scrollLeft: number]\n  'sort-indicator-focus': [field: string]\n  'select-all': []\n  'clear-selection': []\n}>()\n\n// Refs\nconst centerPane = ref<HTMLElement>()\nconst centerScrollArea = ref<HTMLElement>()\n\n// 用于防止循环同步的标志\nlet isSyncing = false\n\nconst draggedColumn = ref<ColumnDragContext | null>(null)\n\nconst columnOrderApi = computed(() => {\n  return props.gridAPI as GridAPI & {\n    moveColumn?: (columnId: string, targetIndex: number) => boolean\n    setColumnOrder?: (order: string[]) => boolean\n  }\n})\n\n// Computed\nconst headerStyle = computed(() => ({\n  height: `${props.height}px`,\n  position: 'sticky' as const,\n  top: 0,\n  // Raise z-index above body panes (which use z-10)\n  zIndex: 40,\n  background: 'var(--ht-header-bg)',\n}))\n\nconst centerPaneStyle = computed(() => ({\n  width: `${props.paneConfig.center.width}px`,\n}))\n\n// Watch prop changes to sync scroll position (from Body to Header)\nwatch(\n  () => props.scrollLeft,\n  (newScrollLeft) => {\n    if (isSyncing) return\n    if (!centerScrollArea.value) return\n    if (centerScrollArea.value.scrollLeft === newScrollLeft) return\n\n    isSyncing = true\n    centerScrollArea.value.scrollLeft = newScrollLeft\n    nextTick(() => {\n      isSyncing = false\n    })\n  }\n)\n\n// Handle header scroll events (from Header to Body)\nconst handleHeaderScroll = (event: Event) => {\n  if (isSyncing) return\n\n  const target = event.target as HTMLElement\n  const scrollLeft = target.scrollLeft\n\n  isSyncing = true\n  emit('header-scroll', scrollLeft)\n  nextTick(() => {\n    isSyncing = false\n  })\n}\n\n// Handle sort indicator focus events\nconst handleSortIndicatorFocus = (field: string) => {\n  emit('sort-indicator-focus', field)\n}\n\nconst resetDragState = () => {\n  draggedColumn.value = null\n}\n\nconst handleColumnDragStart = (payload: ColumnDragContext) => {\n  draggedColumn.value = payload\n}\n\n/**\n * Validate if the column drop operation is allowed\n * @returns Validation result with columns and order if valid, null otherwise\n */\nconst validateColumnDrop = (\n  sourceId: string,\n  targetColumnId: string\n): { columns: ColumnDef[]; targetColumn: ColumnDef; order: string[] } | null => {\n  const columns = props.gridAPI.getState().columns || []\n  const targetColumn = columns.find(column => column.id === targetColumnId)\n\n  if (!targetColumn) {\n    return null\n  }\n\n  if (isColumnDropBlocked(draggedColumn.value, targetColumn)) {\n    return null\n  }\n\n  const order = columns.map(column => column.id)\n  if (!order.includes(sourceId)) {\n    return null\n  }\n\n  return { columns, targetColumn, order }\n}\n\n/**\n * Calculate the insertion index for a dropped column within the same pinned section\n * @returns The index where the column should be inserted\n */\nconst calculateInsertionIndex = (\n  filteredOrder: string[],\n  targetColumnId: string,\n  targetColumn: ColumnDef,\n  position: DragPosition,\n  columns: ColumnDef[]\n): number => {\n  if (!filteredOrder.includes(targetColumnId)) {\n    return filteredOrder.length\n  }\n\n  const baseIndex = filteredOrder.findIndex(id => id === targetColumnId)\n  const targetPinned = getColumnPinnedLocation(targetColumn)\n  \n  // Get all columns in the same pinned section\n  const samePinnedColumns = filteredOrder\n    .map(id => columns.find(column => column.id === id))\n    .filter((column): column is ColumnDef => Boolean(column))\n    .filter(column => getColumnPinnedLocation(column) === targetPinned)\n    .map(column => column.id)\n\n  const relativeIndex = samePinnedColumns.findIndex(id => id === targetColumnId)\n  \n  if (relativeIndex !== -1) {\n    const mappedIndex = filteredOrder.findIndex(id => id === samePinnedColumns[relativeIndex])\n    return position === 'before' ? mappedIndex : mappedIndex + 1\n  }\n  \n  return position === 'before' ? baseIndex : baseIndex + 1\n}\n\n/**\n * Execute the column move operation using available API methods\n */\nconst executeColumnMove = (sourceId: string, insertionIndex: number, filteredOrder: string[]) => {\n  const moveColumn = columnOrderApi.value.moveColumn\n\n  if (typeof moveColumn === 'function') {\n    moveColumn(sourceId, insertionIndex)\n  } else if (typeof columnOrderApi.value.setColumnOrder === 'function') {\n    const newOrder = [...filteredOrder]\n    newOrder.splice(insertionIndex, 0, sourceId)\n    columnOrderApi.value.setColumnOrder(newOrder)\n  }\n}\n\n/**\n * Handle column drop event - orchestrates the entire drop operation\n */\nconst handleColumnDrop = (payload: { columnId: string; position: DragPosition }) => {\n  const sourceId = draggedColumn.value?.columnId\n  \n  // Early exit if no valid source\n  if (!sourceId || payload.columnId === sourceId) {\n    resetDragState()\n    return\n  }\n\n  // Validate the drop operation\n  const validationResult = validateColumnDrop(sourceId, payload.columnId)\n  if (!validationResult) {\n    resetDragState()\n    return\n  }\n\n  const { columns, targetColumn, order } = validationResult\n\n  // Calculate where to insert the column\n  const filteredOrder = order.filter(id => id !== sourceId)\n  const insertionIndex = calculateInsertionIndex(\n    filteredOrder,\n    payload.columnId,\n    targetColumn,\n    payload.position,\n    columns\n  )\n\n  // Execute the move\n  executeColumnMove(sourceId, insertionIndex, filteredOrder)\n\n  resetDragState()\n}\n\nconst handleColumnDragEnd = () => {\n  resetDragState()\n}\n\n// Programmatic open: scroll the center pane to make the column visible, then re-emit open event\nif (typeof props.gridAPI.on === 'function') {\n  props.gridAPI.on('column-open-filter', payload => {\n    try {\n      const field = payload?.field\n      if (!field) return\n      if (payload?.__skipHeader) return\n      const columns = props.gridAPI.getState().columns || []\n      const col = columns.find((c: any) => c.field === field || c.id === field)\n      if (!col) return\n      const pinned = getColumnPinnedLocation(col)\n      if (pinned === 'center') {\n        const targetIndex = (props.paneConfig.center.columns || []).findIndex(\n          (c: any) => c.field === field || c.id === field\n        )\n        if (targetIndex >= 0 && centerScrollArea.value) {\n          // Compute target left by summing widths of previous center columns\n          const centerCols = props.paneConfig.center.columns as any[]\n          let targetLeft = 0\n          for (let i = 0; i < targetIndex; i++) {\n            const w = Number(centerCols[i]?.width) || 150\n            targetLeft += w\n          }\n          const cellWidth = Number(centerCols[targetIndex]?.width) || 150\n          const el = centerScrollArea.value\n          const viewLeft = el.scrollLeft\n          const viewRight = viewLeft + el.clientWidth\n          let newLeft = viewLeft\n          if (targetLeft < viewLeft) newLeft = targetLeft\n          else if (targetLeft + cellWidth > viewRight) newLeft = Math.max(0, targetLeft - (el.clientWidth - cellWidth))\n          if (newLeft !== viewLeft) {\n            try {\n              el.scrollTo({ left: newLeft, behavior: 'smooth' })\n            } catch {\n              el.scrollLeft = newLeft\n            }\n          }\n          // Re-emit after scroll to ensure popover opens in-view\n          // Wait ~11 frames (~180ms at 60fps) for smooth scroll animation\n          let frameCount = 0\n          const waitForScroll = () => {\n            frameCount++\n            if (frameCount < 11) {\n              requestAnimationFrame(waitForScroll)\n            } else {\n              props.gridAPI.emit('column-open-filter', { field, __skipHeader: true })\n            }\n          }\n          requestAnimationFrame(waitForScroll)\n          return\n        }\n      }\n      // For pinned columns or if not found in center, directly re-emit to open\n      requestAnimationFrame(() => props.gridAPI.emit('column-open-filter', { field, __skipHeader: true }))\n    } catch (err) {\n      logger.warn('Failed to handle column-open-filter event', err)\n    }\n  })\n}\n\nconst handleSelectAll = () => {\n  emit('select-all')\n}\n\nconst handleClearSelection = () => {\n  emit('clear-selection')\n}\n\n// Expose methods to parent - 不再需要焦点相关的方法\ndefineExpose({\n  // 保留为空对象以防止破坏现有的 ref 调用\n})\n</script>\n\n<template>\n  <div class=\"ht-header flex\" :style=\"headerStyle\" role=\"rowgroup\">\n    <!-- Left Frozen Pane -->\n    <div\n      v-if=\"paneConfig.left.columns.length > 0\"\n      class=\"ht-pane-left flex-shrink-0 flex bg-[var(--ht-header-bg)] relative z-10\"\n      :style=\"{ width: `${paneConfig.left.width}px` }\"\n    >\n      <HeaderCell\n        v-for=\"column in paneConfig.left.columns\"\n        :key=\"column.id\"\n        :column=\"column\"\n        :width=\"column.width || 150\"\n        :grid-a-p-i=\"gridAPI\"\n        :drag-context=\"draggedColumn\"\n        :border-classes=\"headerCellBorderClasses\"\n        :selected-rows=\"selectedRows\"\n        :total-rows=\"totalRows\"\n        @column-drag-start=\"handleColumnDragStart\"\n        @column-drop=\"handleColumnDrop\"\n        @column-drag-end=\"handleColumnDragEnd\"\n        @select-all=\"handleSelectAll\"\n        @clear-selection=\"handleClearSelection\"\n      />\n    </div>\n\n    <!-- Center Scrollable Pane -->\n    <div\n      ref=\"centerScrollArea\"\n      class=\"ht-pane-center overflow-x-auto overflow-y-visible relative ht-hide-scrollbar\"\n      :class=\"{ 'flex-1': isContentOverflowing }\"\n      @scroll=\"handleHeaderScroll\"\n    >\n      <div ref=\"centerPane\" class=\"flex\" :style=\"centerPaneStyle\">\n        <HeaderCell\n          v-for=\"column in paneConfig.center.columns\"\n          :key=\"column.id\"\n          :column=\"column\"\n          :width=\"column.width || 150\"\n          :grid-a-p-i=\"gridAPI\"\n          :drag-context=\"draggedColumn\"\n          :border-classes=\"headerCellBorderClasses\"\n          :selected-rows=\"selectedRows\"\n          :total-rows=\"totalRows\"\n          @sort-indicator-focus=\"handleSortIndicatorFocus\"\n          @column-drag-start=\"handleColumnDragStart\"\n          @column-drop=\"handleColumnDrop\"\n          @column-drag-end=\"handleColumnDragEnd\"\n          @select-all=\"handleSelectAll\"\n          @clear-selection=\"handleClearSelection\"\n        />\n      </div>\n    </div>\n\n    <!-- Right Frozen Pane -->\n    <div\n      v-if=\"paneConfig.right.columns.length > 0\"\n      class=\"ht-pane-right flex-shrink-0 flex bg-[var(--ht-header-bg)] relative z-10\"\n      :style=\"{ width: `${paneConfig.right.width}px` }\"\n    >\n      <HeaderCell\n        v-for=\"column in paneConfig.right.columns\"\n        :key=\"column.id\"\n        :column=\"column\"\n        :width=\"column.width || 150\"\n        :grid-a-p-i=\"gridAPI\"\n        :drag-context=\"draggedColumn\"\n        :border-classes=\"headerCellBorderClasses\"\n        :selected-rows=\"selectedRows\"\n        :total-rows=\"totalRows\"\n        @column-drag-start=\"handleColumnDragStart\"\n        @column-drop=\"handleColumnDrop\"\n        @column-drag-end=\"handleColumnDragEnd\"\n        @select-all=\"handleSelectAll\"\n        @clear-selection=\"handleClearSelection\"\n      />\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.ht-header {\n  /* Remove paint containment to allow header popovers to overflow below header */\n  contain: layout style;\n  position: relative;\n}\n\n/* Single bottom 2px gradient highlight to separate header from body */\n.ht-header::after {\n  content: '';\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  height: var(--ht-pane-edge-width);\n  background: linear-gradient(to bottom, var(--ht-pane-edge-highlight), transparent);\n  z-index: var(--z-ht-header);\n  pointer-events: none;\n}\n\n/* Shadow for pinned panes is now defined in pinned-columns.css */\n\n/* 隐藏标题行的滚动条，但保持滚动功能 */\n.ht-hide-scrollbar {\n  scrollbar-width: none; /* Firefox */\n  -ms-overflow-style: none; /* IE 10+ */\n}\n\n.ht-hide-scrollbar::-webkit-scrollbar {\n  display: none; /* Chrome, Safari, Edge */\n}\n</style>\n","<script setup lang=\"ts\">\n/**\n * TextCell - Default Text Cell Renderer\n *\n * Purpose: Renders plain text content in table cells (default renderer)\n * Design: Minimal styling, left-aligned, single-line with ellipsis overflow\n */\n\nexport interface TextCellProps {\n  // Core\n  value: string | number | null | undefined\n\n  // Display\n  align?: 'left' | 'center' | 'right'\n  truncate?: boolean\n}\n\nconst props = withDefaults(defineProps<TextCellProps>(), {\n  align: 'left',\n  truncate: true,\n})\n\n// Alignment classes\nconst alignClasses: Record<string, string> = {\n  left: 'text-left',\n  center: 'text-center',\n  right: 'text-right',\n}\n\n// Handle null/undefined values\nconst displayValue = props.value ?? ''\n</script>\n\n<template>\n  <span\n    :class=\"[\n      'inline-block w-full',\n      alignClasses[align],\n      truncate ? 'truncate' : '',\n    ]\"\n    :title=\"truncate ? String(displayValue) : undefined\"\n  >\n    {{ displayValue }}\n  </span>\n</template>\n","<script setup lang=\"ts\">\n/**\n * TextCell - Default Text Cell Renderer\n *\n * Purpose: Renders plain text content in table cells (default renderer)\n * Design: Minimal styling, left-aligned, single-line with ellipsis overflow\n */\n\nexport interface TextCellProps {\n  // Core\n  value: string | number | null | undefined\n\n  // Display\n  align?: 'left' | 'center' | 'right'\n  truncate?: boolean\n}\n\nconst props = withDefaults(defineProps<TextCellProps>(), {\n  align: 'left',\n  truncate: true,\n})\n\n// Alignment classes\nconst alignClasses: Record<string, string> = {\n  left: 'text-left',\n  center: 'text-center',\n  right: 'text-right',\n}\n\n// Handle null/undefined values\nconst displayValue = props.value ?? ''\n</script>\n\n<template>\n  <span\n    :class=\"[\n      'inline-block w-full',\n      alignClasses[align],\n      truncate ? 'truncate' : '',\n    ]\"\n    :title=\"truncate ? String(displayValue) : undefined\"\n  >\n    {{ displayValue }}\n  </span>\n</template>\n","<script setup lang=\"ts\">\n/**\n * NumberCell - Number Cell Renderer\n *\n * Purpose: Renders numeric values with proper formatting and alignment\n * Design: Right-aligned by default, supports locale formatting, handles null/NaN\n */\n\nexport interface NumberCellProps {\n  // Core\n  value: number | string | null | undefined\n\n  // Formatting\n  decimals?: number\n  locale?: string\n  useGrouping?: boolean // Thousands separator\n\n  // Display\n  align?: 'left' | 'center' | 'right'\n  prefix?: string // Currency symbol, etc.\n  suffix?: string // Unit, percentage, etc.\n}\n\nconst props = withDefaults(defineProps<NumberCellProps>(), {\n  align: 'right',\n  locale: 'en-US',\n  useGrouping: true,\n})\n\n// Parse and format number\nconst formattedValue = (() => {\n  // Handle null/undefined\n  if (props.value === null || props.value === undefined) {\n    return ''\n  }\n\n  // Parse to number\n  const num = typeof props.value === 'string' ? parseFloat(props.value) : props.value\n\n  // Handle NaN\n  if (isNaN(num)) {\n    return String(props.value)\n  }\n\n  // Format with Intl.NumberFormat\n  const formatter = new Intl.NumberFormat(props.locale, {\n    minimumFractionDigits: props.decimals,\n    maximumFractionDigits: props.decimals,\n    useGrouping: props.useGrouping,\n  })\n\n  const formatted = formatter.format(num)\n\n  // Add prefix/suffix\n  return `${props.prefix || ''}${formatted}${props.suffix || ''}`\n})()\n\n// Alignment classes\nconst alignClasses: Record<string, string> = {\n  left: 'text-left',\n  center: 'text-center',\n  right: 'text-right',\n}\n</script>\n\n<template>\n  <span\n    :class=\"[\n      'inline-block w-full tabular-nums',\n      alignClasses[align],\n    ]\"\n    :title=\"String(value)\"\n  >\n    {{ formattedValue }}\n  </span>\n</template>\n","<script setup lang=\"ts\">\n/**\n * NumberCell - Number Cell Renderer\n *\n * Purpose: Renders numeric values with proper formatting and alignment\n * Design: Right-aligned by default, supports locale formatting, handles null/NaN\n */\n\nexport interface NumberCellProps {\n  // Core\n  value: number | string | null | undefined\n\n  // Formatting\n  decimals?: number\n  locale?: string\n  useGrouping?: boolean // Thousands separator\n\n  // Display\n  align?: 'left' | 'center' | 'right'\n  prefix?: string // Currency symbol, etc.\n  suffix?: string // Unit, percentage, etc.\n}\n\nconst props = withDefaults(defineProps<NumberCellProps>(), {\n  align: 'right',\n  locale: 'en-US',\n  useGrouping: true,\n})\n\n// Parse and format number\nconst formattedValue = (() => {\n  // Handle null/undefined\n  if (props.value === null || props.value === undefined) {\n    return ''\n  }\n\n  // Parse to number\n  const num = typeof props.value === 'string' ? parseFloat(props.value) : props.value\n\n  // Handle NaN\n  if (isNaN(num)) {\n    return String(props.value)\n  }\n\n  // Format with Intl.NumberFormat\n  const formatter = new Intl.NumberFormat(props.locale, {\n    minimumFractionDigits: props.decimals,\n    maximumFractionDigits: props.decimals,\n    useGrouping: props.useGrouping,\n  })\n\n  const formatted = formatter.format(num)\n\n  // Add prefix/suffix\n  return `${props.prefix || ''}${formatted}${props.suffix || ''}`\n})()\n\n// Alignment classes\nconst alignClasses: Record<string, string> = {\n  left: 'text-left',\n  center: 'text-center',\n  right: 'text-right',\n}\n</script>\n\n<template>\n  <span\n    :class=\"[\n      'inline-block w-full tabular-nums',\n      alignClasses[align],\n    ]\"\n    :title=\"String(value)\"\n  >\n    {{ formattedValue }}\n  </span>\n</template>\n","<script setup lang=\"ts\">\n/**\n * DateCell - Date Cell Renderer\n *\n * Purpose: Renders date/datetime values with proper formatting\n * Design: Supports multiple formats, locale-aware, handles invalid dates\n */\n\nexport interface DateCellProps {\n  // Core\n  value: Date | string | number | null | undefined\n\n  // Formatting\n  format?: 'date' | 'datetime' | 'time' | 'relative' | 'custom'\n  customFormat?: Intl.DateTimeFormatOptions\n  locale?: string\n\n  // Display\n  align?: 'left' | 'center' | 'right'\n}\n\nconst props = withDefaults(defineProps<DateCellProps>(), {\n  format: 'date',\n  locale: 'en-US',\n  align: 'left',\n})\n\n// Parse date\nconst parseDate = (value: Date | string | number | null | undefined): Date | null => {\n  if (!value) return null\n\n  if (value instanceof Date) {\n    return isNaN(value.getTime()) ? null : value\n  }\n\n  const parsed = new Date(value)\n  return isNaN(parsed.getTime()) ? null : parsed\n}\n\n// Format presets\nconst formatPresets: Record<string, Intl.DateTimeFormatOptions> = {\n  date: { year: 'numeric', month: 'short', day: 'numeric' },\n  datetime: {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n  },\n  time: { hour: '2-digit', minute: '2-digit', second: '2-digit' },\n}\n\n// Relative time formatting (e.g., \"2 hours ago\")\nconst formatRelative = (date: Date): string => {\n  const now = new Date()\n  const diffMs = now.getTime() - date.getTime()\n  const diffSecs = Math.floor(diffMs / 1000)\n  const diffMins = Math.floor(diffSecs / 60)\n  const diffHours = Math.floor(diffMins / 60)\n  const diffDays = Math.floor(diffHours / 24)\n\n  if (diffSecs < 60) return `${diffSecs}s ago`\n  if (diffMins < 60) return `${diffMins}m ago`\n  if (diffHours < 24) return `${diffHours}h ago`\n  if (diffDays < 30) return `${diffDays}d ago`\n\n  return date.toLocaleDateString(props.locale)\n}\n\n// Format date value\nconst formattedValue = (() => {\n  const date = parseDate(props.value)\n\n  if (!date) {\n    return ''\n  }\n\n  if (props.format === 'relative') {\n    return formatRelative(date)\n  }\n\n  const formatOptions = props.format === 'custom'\n    ? props.customFormat\n    : formatPresets[props.format]\n\n  return new Intl.DateTimeFormat(props.locale, formatOptions).format(date)\n})()\n\n// Alignment classes\nconst alignClasses: Record<string, string> = {\n  left: 'text-left',\n  center: 'text-center',\n  right: 'text-right',\n}\n</script>\n\n<template>\n  <span\n    :class=\"[\n      'inline-block w-full',\n      alignClasses[align],\n    ]\"\n    :title=\"value ? new Date(value).toISOString() : undefined\"\n  >\n    {{ formattedValue }}\n  </span>\n</template>\n","<script setup lang=\"ts\">\n/**\n * DateCell - Date Cell Renderer\n *\n * Purpose: Renders date/datetime values with proper formatting\n * Design: Supports multiple formats, locale-aware, handles invalid dates\n */\n\nexport interface DateCellProps {\n  // Core\n  value: Date | string | number | null | undefined\n\n  // Formatting\n  format?: 'date' | 'datetime' | 'time' | 'relative' | 'custom'\n  customFormat?: Intl.DateTimeFormatOptions\n  locale?: string\n\n  // Display\n  align?: 'left' | 'center' | 'right'\n}\n\nconst props = withDefaults(defineProps<DateCellProps>(), {\n  format: 'date',\n  locale: 'en-US',\n  align: 'left',\n})\n\n// Parse date\nconst parseDate = (value: Date | string | number | null | undefined): Date | null => {\n  if (!value) return null\n\n  if (value instanceof Date) {\n    return isNaN(value.getTime()) ? null : value\n  }\n\n  const parsed = new Date(value)\n  return isNaN(parsed.getTime()) ? null : parsed\n}\n\n// Format presets\nconst formatPresets: Record<string, Intl.DateTimeFormatOptions> = {\n  date: { year: 'numeric', month: 'short', day: 'numeric' },\n  datetime: {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n  },\n  time: { hour: '2-digit', minute: '2-digit', second: '2-digit' },\n}\n\n// Relative time formatting (e.g., \"2 hours ago\")\nconst formatRelative = (date: Date): string => {\n  const now = new Date()\n  const diffMs = now.getTime() - date.getTime()\n  const diffSecs = Math.floor(diffMs / 1000)\n  const diffMins = Math.floor(diffSecs / 60)\n  const diffHours = Math.floor(diffMins / 60)\n  const diffDays = Math.floor(diffHours / 24)\n\n  if (diffSecs < 60) return `${diffSecs}s ago`\n  if (diffMins < 60) return `${diffMins}m ago`\n  if (diffHours < 24) return `${diffHours}h ago`\n  if (diffDays < 30) return `${diffDays}d ago`\n\n  return date.toLocaleDateString(props.locale)\n}\n\n// Format date value\nconst formattedValue = (() => {\n  const date = parseDate(props.value)\n\n  if (!date) {\n    return ''\n  }\n\n  if (props.format === 'relative') {\n    return formatRelative(date)\n  }\n\n  const formatOptions = props.format === 'custom'\n    ? props.customFormat\n    : formatPresets[props.format]\n\n  return new Intl.DateTimeFormat(props.locale, formatOptions).format(date)\n})()\n\n// Alignment classes\nconst alignClasses: Record<string, string> = {\n  left: 'text-left',\n  center: 'text-center',\n  right: 'text-right',\n}\n</script>\n\n<template>\n  <span\n    :class=\"[\n      'inline-block w-full',\n      alignClasses[align],\n    ]\"\n    :title=\"value ? new Date(value).toISOString() : undefined\"\n  >\n    {{ formattedValue }}\n  </span>\n</template>\n","<script setup lang=\"ts\">\n/**\n * BooleanCell - Boolean Cell Renderer\n *\n * Purpose: Renders boolean values with visual checkmark/cross icons\n * Design: Text + icon combination, semantic colors (success/danger)\n */\n\nexport interface BooleanCellProps {\n  // Core\n  value: boolean | null | undefined\n\n  // Display\n  showText?: boolean // Show \"Yes\"/\"No\" text\n  showIcon?: boolean // Show checkmark/cross icon\n  align?: 'left' | 'center' | 'right'\n\n  // Customization\n  trueText?: string\n  falseText?: string\n  nullText?: string\n}\n\nconst props = withDefaults(defineProps<BooleanCellProps>(), {\n  showText: true,\n  showIcon: true,\n  align: 'center',\n  trueText: 'Yes',\n  falseText: 'No',\n  nullText: '',\n})\n\n// Display text\nconst displayText = (() => {\n  if (props.value === null || props.value === undefined) {\n    return props.nullText\n  }\n  return props.value ? props.trueText : props.falseText\n})()\n\n// Alignment classes\nconst alignClasses: Record<string, string> = {\n  left: 'justify-start',\n  center: 'justify-center',\n  right: 'justify-end',\n}\n</script>\n\n<template>\n  <div\n    :class=\"[\n      'inline-flex items-center gap-2 w-full',\n      alignClasses[align],\n    ]\"\n  >\n    <!-- Text content -->\n    <span v-if=\"showText\" class=\"truncate\">\n      {{ displayText }}\n    </span>\n\n    <!-- Icon indicator -->\n    <div v-if=\"showIcon && value !== null && value !== undefined\" class=\"flex-shrink-0\">\n      <!-- Checkmark icon (true) -->\n      <svg v-if=\"value\" class=\"w-4 h-4 text-[var(--ht-success)]\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n\n      <!-- Cross icon (false) -->\n      <svg v-else class=\"w-4 h-4 text-[var(--ht-danger)]\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n  </div>\n</template>\n","<script setup lang=\"ts\">\n/**\n * BooleanCell - Boolean Cell Renderer\n *\n * Purpose: Renders boolean values with visual checkmark/cross icons\n * Design: Text + icon combination, semantic colors (success/danger)\n */\n\nexport interface BooleanCellProps {\n  // Core\n  value: boolean | null | undefined\n\n  // Display\n  showText?: boolean // Show \"Yes\"/\"No\" text\n  showIcon?: boolean // Show checkmark/cross icon\n  align?: 'left' | 'center' | 'right'\n\n  // Customization\n  trueText?: string\n  falseText?: string\n  nullText?: string\n}\n\nconst props = withDefaults(defineProps<BooleanCellProps>(), {\n  showText: true,\n  showIcon: true,\n  align: 'center',\n  trueText: 'Yes',\n  falseText: 'No',\n  nullText: '',\n})\n\n// Display text\nconst displayText = (() => {\n  if (props.value === null || props.value === undefined) {\n    return props.nullText\n  }\n  return props.value ? props.trueText : props.falseText\n})()\n\n// Alignment classes\nconst alignClasses: Record<string, string> = {\n  left: 'justify-start',\n  center: 'justify-center',\n  right: 'justify-end',\n}\n</script>\n\n<template>\n  <div\n    :class=\"[\n      'inline-flex items-center gap-2 w-full',\n      alignClasses[align],\n    ]\"\n  >\n    <!-- Text content -->\n    <span v-if=\"showText\" class=\"truncate\">\n      {{ displayText }}\n    </span>\n\n    <!-- Icon indicator -->\n    <div v-if=\"showIcon && value !== null && value !== undefined\" class=\"flex-shrink-0\">\n      <!-- Checkmark icon (true) -->\n      <svg v-if=\"value\" class=\"w-4 h-4 text-[var(--ht-success)]\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n\n      <!-- Cross icon (false) -->\n      <svg v-else class=\"w-4 h-4 text-[var(--ht-danger)]\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n  </div>\n</template>\n","<!--\n  BodyCell.vue - Individual Cell Component\n\n  Responsibilities:\n  1. Render cell content with formatting\n  2. Handle cell-level interactions\n  3. Focus and edit state management\n  4. Accessibility compliance\n\n  Vue 3 Pattern: Minimal reactive overhead\n-->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport type { RowData, InternalColumnDef, CellValue } from '../../../types'\nimport { isFunctionalColumn } from '../../../utils/functional-columns'\nimport { SeqCell, ActionsCell, CheckboxCell, RadioCell, DragCell } from '../../functional'\nimport { TextCell, NumberCell, DateCell, BooleanCell } from '../cells'\n\n// Props\nconst props = defineProps<{\n  row: RowData\n  column: InternalColumnDef\n  value: CellValue\n  focused: boolean\n  rowSelected: boolean\n  rowIndex: number\n  columnIndex: number\n  borderClasses?: string\n}>()\n\n// Emits\ninterface SelectionTogglePayload {\n  rowData: RowData\n  rowIndex: number\n  column: InternalColumnDef\n  selectionType: 'checkbox' | 'radio'\n}\n\nconst emit = defineEmits<{\n  'cell-click': [column: InternalColumnDef, value: CellValue, event: MouseEvent]\n  'cell-double-click': [column: InternalColumnDef, value: CellValue, event: MouseEvent]\n  'cell-right-click': [column: InternalColumnDef, value: CellValue, event: MouseEvent]\n  'toggle-selection': [payload: SelectionTogglePayload]\n  'row-drag-start': [payload: { row: RowData; rowIndex: number; event: DragEvent }]\n}>()\n\n// Computed\nconst cellStyle = computed(() => ({\n  width: `${props.column.width || 150}px`,\n  minWidth: `${props.column.minWidth || 50}px`,\n  maxWidth: `${props.column.maxWidth || 400}px`,\n}))\n\nconst cellClasses = computed(() =>\n  [\n    'ht-body-cell',\n    'px-3 py-1',\n    props.borderClasses || '', // Use dynamic border classes\n    'flex items-center',\n    'text-[var(--ht-text)]',\n    'text-sm',\n    'truncate',\n    'relative',\n    {\n      'bg-[var(--ht-cell-focused)]': props.focused,\n      'ring-2 ring-[var(--ht-primary)] ring-inset': props.focused,\n      'cursor-text': props.column.dataType === 'text',\n      'cursor-pointer': !props.column.dataType || props.column.dataType !== 'text',\n      'ht-cell-interactive': props.column.dataType === 'custom' || props.column.formatter,\n      // Add separator classes for pinned columns\n      'is-last-pinned': props.column.isLastPinned,\n      'is-first-pinned-right': props.column.isFirstRightPinned,\n    },\n  ].filter(Boolean)\n)\n\n// Content formatting (only for custom formatters and TextCell fallback)\nconst formattedValue = computed(() => {\n  // Custom formatter takes precedence\n  if (props.column.formatter) {\n    return props.column.formatter(props.value, props.row)\n  }\n\n  // Fallback for TextCell (type-specific cells handle their own formatting)\n  return props.value ?? ''\n})\n\n// Event handlers\nconst handleClick = (event: MouseEvent) => {\n  emit('cell-click', props.column, props.value, event)\n}\n\nconst handleDoubleClick = (event: MouseEvent) => {\n  emit('cell-double-click', props.column, props.value, event)\n}\n\nconst handleContextMenu = (event: MouseEvent) => {\n  event.preventDefault()\n  emit('cell-right-click', props.column, props.value, event)\n}\n\nconst handleKeyDown = (event: KeyboardEvent) => {\n  if (props.focused) {\n    switch (event.key) {\n      case 'Enter':\n        event.preventDefault()\n        // Enter edit mode or trigger action\n        break\n      case 'F2':\n        event.preventDefault()\n        // Enter edit mode\n        break\n      case 'Escape':\n        event.preventDefault()\n        // Exit edit mode\n        break\n    }\n  }\n}\n\n// Accessibility\nconst cellRole = 'gridcell'\n\nconst ariaLabel = computed(() => {\n  return `${props.column.title}: ${formattedValue.value}`\n})\n\n// Functional column detection\nconst isFunctional = computed(() => isFunctionalColumn(props.column))\nconst functionalType = computed(() => isFunctional.value ? (props.column as any).type : null)\n\n// Event handlers for functional columns\nconst handleToggleSelection = () => {\n  if (!functionalType.value || (functionalType.value !== 'checkbox' && functionalType.value !== 'radio')) {\n    return\n  }\n\n  emit('toggle-selection', {\n    rowData: props.row,\n    rowIndex: props.rowIndex,\n    column: props.column,\n    selectionType: functionalType.value,\n  })\n}\n\nconst handleDragStart = (rowData: RowData, rowIndex: number, event: DragEvent) => {\n  // Bubble up to row/grid body\n  emit('row-drag-start', { row: rowData, rowIndex, event })\n}\n\nconst handleDragEnd = (_rowData: RowData, _rowIndex: number, _event: DragEvent) => {\n  // No-op here; final drop is handled by BodyRow @drop to provide destination index\n}\n</script>\n\n<template>\n  <div\n    :class=\"cellClasses\"\n    :style=\"cellStyle\"\n    :role=\"cellRole\"\n    :aria-label=\"ariaLabel\"\n    :tabindex=\"focused ? 0 : -1\"\n    :data-cell-id=\"`${row.id || row.index}-${column.id}`\"\n    :data-row-id=\"row.id || row.index\"\n    :data-column-id=\"column.id\"\n    :data-row-index=\"rowIndex\"\n    :data-column-index=\"columnIndex\"\n    @click=\"handleClick\"\n    @dblclick=\"handleDoubleClick\"\n    @contextmenu=\"handleContextMenu\"\n    @keydown=\"handleKeyDown\"\n  >\n    <!-- Functional Columns -->\n    <SeqCell\n      v-if=\"isFunctional && functionalType === 'seq'\"\n      :row-index=\"rowIndex\"\n      :options=\"(column as any).functionalOptions\"\n      :pagination-offset=\"0\"\n    />\n\n    <CheckboxCell\n      v-else-if=\"isFunctional && functionalType === 'checkbox'\"\n      :row-data=\"row\"\n      :row-index=\"rowIndex\"\n      :is-selected=\"rowSelected\"\n      :column=\"column\"\n      :options=\"(column as any).functionalOptions\"\n      @toggle-selection=\"handleToggleSelection\"\n    />\n\n    <RadioCell\n      v-else-if=\"isFunctional && functionalType === 'radio'\"\n      :row-data=\"row\"\n      :row-index=\"rowIndex\"\n      :is-selected=\"rowSelected\"\n      :column=\"column\"\n      :options=\"(column as any).functionalOptions\"\n      @toggle-selection=\"handleToggleSelection\"\n    />\n\n    <DragCell\n      v-else-if=\"isFunctional && functionalType === 'drag'\"\n      :row-data=\"row\"\n      :row-index=\"rowIndex\"\n      :options=\"(column as any).functionalOptions\"\n      @drag-start=\"handleDragStart\"\n      @drag-end=\"handleDragEnd\"\n    />\n\n    <ActionsCell\n      v-else-if=\"isFunctional && functionalType === 'actions'\"\n      :row-data=\"row\"\n      :row-index=\"rowIndex\"\n      :options=\"(column as any).functionalOptions\"\n    >\n      <!-- Slot for custom actions -->\n      <template v-if=\"column.cellSlot\" #default=\"slotProps\">\n        <slot :name=\"column.cellSlot\" v-bind=\"slotProps\" />\n      </template>\n    </ActionsCell>\n\n    <!-- Custom Cell Renderer -->\n    <component\n      :is=\"column.cellRenderer\"\n      v-else-if=\"column.cellRenderer\"\n      :value=\"value\"\n      :row=\"row\"\n      :column=\"column\"\n      class=\"w-full\"\n    />\n\n    <!-- Type-specific Cell Renderers -->\n    <BooleanCell\n      v-else-if=\"column.dataType === 'boolean'\"\n      :value=\"value as boolean\"\n    />\n\n    <NumberCell\n      v-else-if=\"column.dataType === 'number'\"\n      :value=\"value as number\"\n    />\n\n    <DateCell\n      v-else-if=\"column.dataType === 'date'\"\n      :value=\"value as Date | string | number\"\n    />\n\n    <!-- Default Text Cell -->\n    <TextCell\n      v-else\n      :value=\"String(formattedValue)\"\n    />\n\n    <!-- Focus Indicator -->\n    <div\n      v-if=\"focused\"\n      class=\"absolute inset-0 pointer-events-none ring-2 ring-[var(--ht-primary)] ring-inset\"\n      aria-hidden=\"true\"\n    />\n  </div>\n</template>\n\n<style scoped>\n.ht-body-cell {\n  contain: layout style;\n}\n\n.ht-body-cell:focus {\n  outline: none;\n}\n\n.ht-body-cell:focus-visible {\n  outline: 2px solid var(--ht-primary);\n  outline-offset: -2px;\n}\n\n/* Interactive cell styling */\n.ht-cell-interactive:hover {\n  background: var(--ht-cell-hover);\n}\n\n/* Text selection */\n.ht-body-cell {\n  user-select: text;\n}\n</style>\n","<!--\n  BodyCell.vue - Individual Cell Component\n\n  Responsibilities:\n  1. Render cell content with formatting\n  2. Handle cell-level interactions\n  3. Focus and edit state management\n  4. Accessibility compliance\n\n  Vue 3 Pattern: Minimal reactive overhead\n-->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport type { RowData, InternalColumnDef, CellValue } from '../../../types'\nimport { isFunctionalColumn } from '../../../utils/functional-columns'\nimport { SeqCell, ActionsCell, CheckboxCell, RadioCell, DragCell } from '../../functional'\nimport { TextCell, NumberCell, DateCell, BooleanCell } from '../cells'\n\n// Props\nconst props = defineProps<{\n  row: RowData\n  column: InternalColumnDef\n  value: CellValue\n  focused: boolean\n  rowSelected: boolean\n  rowIndex: number\n  columnIndex: number\n  borderClasses?: string\n}>()\n\n// Emits\ninterface SelectionTogglePayload {\n  rowData: RowData\n  rowIndex: number\n  column: InternalColumnDef\n  selectionType: 'checkbox' | 'radio'\n}\n\nconst emit = defineEmits<{\n  'cell-click': [column: InternalColumnDef, value: CellValue, event: MouseEvent]\n  'cell-double-click': [column: InternalColumnDef, value: CellValue, event: MouseEvent]\n  'cell-right-click': [column: InternalColumnDef, value: CellValue, event: MouseEvent]\n  'toggle-selection': [payload: SelectionTogglePayload]\n  'row-drag-start': [payload: { row: RowData; rowIndex: number; event: DragEvent }]\n}>()\n\n// Computed\nconst cellStyle = computed(() => ({\n  width: `${props.column.width || 150}px`,\n  minWidth: `${props.column.minWidth || 50}px`,\n  maxWidth: `${props.column.maxWidth || 400}px`,\n}))\n\nconst cellClasses = computed(() =>\n  [\n    'ht-body-cell',\n    'px-3 py-1',\n    props.borderClasses || '', // Use dynamic border classes\n    'flex items-center',\n    'text-[var(--ht-text)]',\n    'text-sm',\n    'truncate',\n    'relative',\n    {\n      'bg-[var(--ht-cell-focused)]': props.focused,\n      'ring-2 ring-[var(--ht-primary)] ring-inset': props.focused,\n      'cursor-text': props.column.dataType === 'text',\n      'cursor-pointer': !props.column.dataType || props.column.dataType !== 'text',\n      'ht-cell-interactive': props.column.dataType === 'custom' || props.column.formatter,\n      // Add separator classes for pinned columns\n      'is-last-pinned': props.column.isLastPinned,\n      'is-first-pinned-right': props.column.isFirstRightPinned,\n    },\n  ].filter(Boolean)\n)\n\n// Content formatting (only for custom formatters and TextCell fallback)\nconst formattedValue = computed(() => {\n  // Custom formatter takes precedence\n  if (props.column.formatter) {\n    return props.column.formatter(props.value, props.row)\n  }\n\n  // Fallback for TextCell (type-specific cells handle their own formatting)\n  return props.value ?? ''\n})\n\n// Event handlers\nconst handleClick = (event: MouseEvent) => {\n  emit('cell-click', props.column, props.value, event)\n}\n\nconst handleDoubleClick = (event: MouseEvent) => {\n  emit('cell-double-click', props.column, props.value, event)\n}\n\nconst handleContextMenu = (event: MouseEvent) => {\n  event.preventDefault()\n  emit('cell-right-click', props.column, props.value, event)\n}\n\nconst handleKeyDown = (event: KeyboardEvent) => {\n  if (props.focused) {\n    switch (event.key) {\n      case 'Enter':\n        event.preventDefault()\n        // Enter edit mode or trigger action\n        break\n      case 'F2':\n        event.preventDefault()\n        // Enter edit mode\n        break\n      case 'Escape':\n        event.preventDefault()\n        // Exit edit mode\n        break\n    }\n  }\n}\n\n// Accessibility\nconst cellRole = 'gridcell'\n\nconst ariaLabel = computed(() => {\n  return `${props.column.title}: ${formattedValue.value}`\n})\n\n// Functional column detection\nconst isFunctional = computed(() => isFunctionalColumn(props.column))\nconst functionalType = computed(() => isFunctional.value ? (props.column as any).type : null)\n\n// Event handlers for functional columns\nconst handleToggleSelection = () => {\n  if (!functionalType.value || (functionalType.value !== 'checkbox' && functionalType.value !== 'radio')) {\n    return\n  }\n\n  emit('toggle-selection', {\n    rowData: props.row,\n    rowIndex: props.rowIndex,\n    column: props.column,\n    selectionType: functionalType.value,\n  })\n}\n\nconst handleDragStart = (rowData: RowData, rowIndex: number, event: DragEvent) => {\n  // Bubble up to row/grid body\n  emit('row-drag-start', { row: rowData, rowIndex, event })\n}\n\nconst handleDragEnd = (_rowData: RowData, _rowIndex: number, _event: DragEvent) => {\n  // No-op here; final drop is handled by BodyRow @drop to provide destination index\n}\n</script>\n\n<template>\n  <div\n    :class=\"cellClasses\"\n    :style=\"cellStyle\"\n    :role=\"cellRole\"\n    :aria-label=\"ariaLabel\"\n    :tabindex=\"focused ? 0 : -1\"\n    :data-cell-id=\"`${row.id || row.index}-${column.id}`\"\n    :data-row-id=\"row.id || row.index\"\n    :data-column-id=\"column.id\"\n    :data-row-index=\"rowIndex\"\n    :data-column-index=\"columnIndex\"\n    @click=\"handleClick\"\n    @dblclick=\"handleDoubleClick\"\n    @contextmenu=\"handleContextMenu\"\n    @keydown=\"handleKeyDown\"\n  >\n    <!-- Functional Columns -->\n    <SeqCell\n      v-if=\"isFunctional && functionalType === 'seq'\"\n      :row-index=\"rowIndex\"\n      :options=\"(column as any).functionalOptions\"\n      :pagination-offset=\"0\"\n    />\n\n    <CheckboxCell\n      v-else-if=\"isFunctional && functionalType === 'checkbox'\"\n      :row-data=\"row\"\n      :row-index=\"rowIndex\"\n      :is-selected=\"rowSelected\"\n      :column=\"column\"\n      :options=\"(column as any).functionalOptions\"\n      @toggle-selection=\"handleToggleSelection\"\n    />\n\n    <RadioCell\n      v-else-if=\"isFunctional && functionalType === 'radio'\"\n      :row-data=\"row\"\n      :row-index=\"rowIndex\"\n      :is-selected=\"rowSelected\"\n      :column=\"column\"\n      :options=\"(column as any).functionalOptions\"\n      @toggle-selection=\"handleToggleSelection\"\n    />\n\n    <DragCell\n      v-else-if=\"isFunctional && functionalType === 'drag'\"\n      :row-data=\"row\"\n      :row-index=\"rowIndex\"\n      :options=\"(column as any).functionalOptions\"\n      @drag-start=\"handleDragStart\"\n      @drag-end=\"handleDragEnd\"\n    />\n\n    <ActionsCell\n      v-else-if=\"isFunctional && functionalType === 'actions'\"\n      :row-data=\"row\"\n      :row-index=\"rowIndex\"\n      :options=\"(column as any).functionalOptions\"\n    >\n      <!-- Slot for custom actions -->\n      <template v-if=\"column.cellSlot\" #default=\"slotProps\">\n        <slot :name=\"column.cellSlot\" v-bind=\"slotProps\" />\n      </template>\n    </ActionsCell>\n\n    <!-- Custom Cell Renderer -->\n    <component\n      :is=\"column.cellRenderer\"\n      v-else-if=\"column.cellRenderer\"\n      :value=\"value\"\n      :row=\"row\"\n      :column=\"column\"\n      class=\"w-full\"\n    />\n\n    <!-- Type-specific Cell Renderers -->\n    <BooleanCell\n      v-else-if=\"column.dataType === 'boolean'\"\n      :value=\"value as boolean\"\n    />\n\n    <NumberCell\n      v-else-if=\"column.dataType === 'number'\"\n      :value=\"value as number\"\n    />\n\n    <DateCell\n      v-else-if=\"column.dataType === 'date'\"\n      :value=\"value as Date | string | number\"\n    />\n\n    <!-- Default Text Cell -->\n    <TextCell\n      v-else\n      :value=\"String(formattedValue)\"\n    />\n\n    <!-- Focus Indicator -->\n    <div\n      v-if=\"focused\"\n      class=\"absolute inset-0 pointer-events-none ring-2 ring-[var(--ht-primary)] ring-inset\"\n      aria-hidden=\"true\"\n    />\n  </div>\n</template>\n\n<style scoped>\n.ht-body-cell {\n  contain: layout style;\n}\n\n.ht-body-cell:focus {\n  outline: none;\n}\n\n.ht-body-cell:focus-visible {\n  outline: 2px solid var(--ht-primary);\n  outline-offset: -2px;\n}\n\n/* Interactive cell styling */\n.ht-cell-interactive:hover {\n  background: var(--ht-cell-hover);\n}\n\n/* Text selection */\n.ht-body-cell {\n  user-select: text;\n}\n</style>\n","<!--\n  BodyRow.vue - Individual Row Component\n\n  Responsibilities:\n  1. Render single row with virtual positioning\n  2. Handle row-level interactions\n  3. Cell rendering delegation\n  4. Selection and focus states\n\n  Performance: Optimized for virtual scrolling\n-->\n\n<script setup lang=\"ts\">\nimport { computed, inject, ref, type Ref } from 'vue'\nimport BodyCell from './BodyCell.vue'\nimport type { RowData, ColumnDef, VirtualItem, CellValue } from '../../../types'\nimport type { DragResult } from '../../../types/functional-columns'\n\n// P2-1 Optimization: Static class names extracted to constant\n// Performance gain: ~10% row rendering, reduces array allocation on every render\n// Expected: ~0.1ms saved per row, significant for 100+ visible rows\nconst getStaticRowClasses = () => [\n  'ht-virtual-item',\n  'ht-body-row',\n  'hover:bg-[var(--ht-row-hover)]',\n  'cursor-pointer',\n] as const\n\n// Props\nconst props = defineProps<{\n  row: RowData\n  columns: ColumnDef[]\n  rowIndex: number\n  virtualItem: VirtualItem\n  rowHeight: number\n  focusedCell: { rowId: string | number; columnId: string } | null\n  selected: boolean\n  hoveredRowKey: string | number | null\n  rowBorderClasses?: string\n  cellBorderClasses?: string\n  stripeEnabled?: boolean\n}>()\n\n// Emits\ninterface FunctionalSelectionPayload {\n  rowData: RowData\n  rowIndex: number\n  column: ColumnDef\n  selectionType: 'checkbox' | 'radio'\n}\n\ninterface FunctionalSelectionEventPayload extends FunctionalSelectionPayload {\n  rowId: string | number\n  columnIndex: number\n}\n\nconst emit = defineEmits<{\n  'row-click': [row: RowData, index: number]\n  'cell-click': [row: RowData, column: ColumnDef, value: CellValue]\n  'cell-double-click': [row: RowData, column: ColumnDef, value: CellValue]\n  'cell-right-click': [row: RowData, column: ColumnDef, value: CellValue]\n  'row-hover': [rowKey: string | number]\n  'row-leave': [rowKey: string | number]\n  'toggle-selection': [payload: FunctionalSelectionEventPayload]\n  'row-drag-start': [payload: { row: RowData; rowIndex: number; event: DragEvent }]\n  'row-drag-over': [event: DragEvent]\n  'row-drag-end': [payload: { result: DragResult; sourceId?: string | number; targetId?: string | number }]\n}>()\n\n// Computed\nconst rowStyle = computed(() => {\n  return {\n    transform: `translateY(${props.virtualItem.start}px)`,\n    minHeight: `${props.rowHeight}px`, // Use minHeight instead of height to allow expansion\n    position: 'absolute' as const,\n    top: 0,\n    left: 0,\n    right: 0,\n    display: 'flex',\n    flexDirection: 'column' as const,\n  }\n})\n\n// Event handlers\nconst handleRowClick = (event: MouseEvent) => {\n  // Don't trigger row click if clicking on a cell that handles its own events\n  if ((event.target as HTMLElement).closest('.ht-cell-interactive')) {\n    return\n  }\n\n  emit('row-click', props.row, props.rowIndex)\n}\n\nconst handleCellClick = (column: ColumnDef, value: CellValue, event: MouseEvent) => {\n  // Stop propagation to prevent row click\n  event.stopPropagation()\n  emit('cell-click', props.row, column, value)\n  // 同时触发行点击语义，便于上层统一监听 row-click\n  emit('row-click', props.row, props.rowIndex)\n}\n\nconst handleCellDoubleClick = (column: ColumnDef, value: CellValue, event: MouseEvent) => {\n  event.stopPropagation()\n  emit('cell-double-click', props.row, column, value)\n}\n\nconst handleCellRightClick = (column: ColumnDef, value: CellValue, event: MouseEvent) => {\n  event.stopPropagation()\n  emit('cell-right-click', props.row, column, value)\n}\n\n// P2-2 Optimization: Convert isCellFocused to computed\n// Performance gain: ~40% in 50-column scenarios (50 function calls → 1 computed)\n// Previous: O(n) function calls per render cycle\n// Current: O(1) computed lookup, calculated once per row\nconst focusedColumnId = computed(() => {\n  if (!props.focusedCell || props.focusedCell.rowId !== props.row?.id) return null\n  return props.focusedCell.columnId\n})\n\n// Utility function for template (optional, could inline in template)\nconst isCellFocused = (columnId: string): boolean => {\n  return focusedColumnId.value === columnId\n}\n\nconst resolvedRow = computed(() => props.row as Record<string, unknown> | undefined)\n\nconst rowIdentity = computed<string | number>(() => {\n  const source = resolvedRow.value\n\n  if (source && source.id !== null) {\n    return source.id as string | number\n  }\n\n  if (source && (source as { rowId?: string | number }).rowId !== null) {\n    return (source as { rowId: string | number }).rowId\n  }\n\n  if (props.virtualItem?.index !== null) {\n    return props.virtualItem.index\n  }\n\n  return props.rowIndex\n})\n\nconst isRowHovered = computed(() => {\n  return props.hoveredRowKey !== null && props.hoveredRowKey === rowIdentity.value\n})\n\n// Inject drag state\nconst draggingRowId = inject<Ref<string | number | null>>('draggingRowId', ref(null))\n\n// Inject drop target state (shared across all panes)\nconst dropTargetRowId = inject<Ref<string | number | null>>('dropTargetRowId', ref(null))\nconst dropTargetPosition = inject<Ref<'top' | 'bottom' | null>>('dropTargetPosition', ref(null))\nconst setDropTarget = inject<(rowId: string | number | null, position: 'top' | 'bottom' | null) => void>(\n  'setDropTarget',\n  () => {}\n)\n\nconst isDraggingSource = computed(() => {\n  return draggingRowId.value !== null && draggingRowId.value === rowIdentity.value\n})\n\n// Check if this row is the drop target\nconst isDropTarget = computed(() => {\n  return dropTargetRowId.value !== null && dropTargetRowId.value === rowIdentity.value\n})\n\n// Get drop position for this row\nconst dropPosition = computed(() => {\n  return isDropTarget.value ? dropTargetPosition.value : null\n})\n\n// P2-1 Optimization: Computed only handles dynamic classes now\n// Static classes spread from constant, dynamic classes computed conditionally\nconst rowClasses = computed(() => [\n  ...getStaticRowClasses(),\n  {\n    'bg-[var(--ht-row-selected)]': props.selected,\n    'bg-[var(--ht-row-odd)]': props.stripeEnabled && !props.selected && props.rowIndex % 2 === 1,\n    'bg-[var(--ht-row-even)]': props.stripeEnabled && !props.selected && props.rowIndex % 2 === 0,\n    'ht-row-hover-state': isRowHovered.value && !props.selected,\n    'ht-row-hover-selected': isRowHovered.value && props.selected,\n    'ht-row-dragging': isDraggingSource.value,\n    'ht-row-drop-target': isDropTarget.value && !isDraggingSource.value,\n  },\n])\n\nconst handleMouseEnter = () => {\n  emit('row-hover', rowIdentity.value)\n}\n\nconst handleMouseLeave = () => {\n  emit('row-leave', rowIdentity.value)\n}\n\nconst handleToggleSelection = (payload: FunctionalSelectionPayload) => {\n  const columnIndex = props.columns.findIndex(col => col.id === payload.column.id)\n  emit('toggle-selection', {\n    ...payload,\n    rowId: rowIdentity.value,\n    columnIndex: columnIndex >= 0 ? columnIndex : 0,\n  })\n}\n\n// Row-level drag/drop target handling\nconst handleDragOver = (event: DragEvent) => {\n  event.preventDefault()\n\n  // Emit for auto-scroll handling\n  emit('row-drag-over', event)\n\n  // Calculate drop position based on cursor position\n  const rect = (event.currentTarget as HTMLElement).getBoundingClientRect()\n  const midpoint = rect.top + rect.height / 2\n  const position = event.clientY < midpoint ? 'top' : 'bottom'\n\n  // Update centralized drop target state\n  setDropTarget(rowIdentity.value, position)\n}\n\nconst handleDragLeave = (event: DragEvent) => {\n  // Only clear if actually leaving the row (not entering a child element)\n  const relatedTarget = event.relatedTarget as HTMLElement\n  if (!relatedTarget || !(event.currentTarget as HTMLElement).contains(relatedTarget)) {\n    // Clear drop target if leaving this specific row\n    if (dropTargetRowId.value === rowIdentity.value) {\n      setDropTarget(null, null)\n    }\n  }\n}\n\nconst handleDrop = (event: DragEvent) => {\n  // Store position before clearing\n  const position = dropPosition.value\n\n  // Clear drop target state\n  setDropTarget(null, null)\n\n  try {\n    const json = event.dataTransfer?.getData('application/json')\n    if (!json) return\n    const data = JSON.parse(json) as { rowData: RowData; rowIndex: number }\n\n    // Calculate actual destination index based on drop position\n    let destinationIndex = props.rowIndex\n    if (position === 'bottom') {\n      destinationIndex = props.rowIndex + 1\n    }\n\n    // Don't emit if dropping on the same position\n    if (data.rowIndex === destinationIndex) {\n      return\n    }\n\n    const result: DragResult = {\n      sourceIndex: data.rowIndex,\n      destinationIndex,\n      rowData: data.rowData,\n    }\n\n    // Note: sourceId and targetId are informational only\n    // The plugin will use destinationIndex for accurate positioning\n    emit('row-drag-end', {\n      result,\n      sourceId: (data.rowData as any)?.id ?? data.rowIndex,\n      targetId: (props.row as any)?.id ?? props.rowIndex,\n    })\n  } catch {\n    // Ignore malformed data\n  }\n}\n</script>\n\n<template>\n  <div\n    :class=\"rowClasses\"\n    :style=\"rowStyle\"\n    role=\"row\"\n    :aria-rowindex=\"rowIndex + 1\"\n    :aria-selected=\"selected\"\n  >\n    <!-- Drag drop indicator -->\n    <div\n      v-if=\"dropPosition !== null\"\n      class=\"ht-drop-indicator\"\n      aria-hidden=\"true\"\n      :class=\"{ 'ht-drop-top': dropPosition === 'top', 'ht-drop-bottom': dropPosition === 'bottom' }\"\n    />\n\n    <!-- Main row cells -->\n    <div\n      class=\"ht-row-cells\"\n      :class=\"rowBorderClasses\"\n      :style=\"{ height: `${rowHeight}px`, display: 'flex', alignItems: 'center' }\"\n      @click=\"handleRowClick\"\n      @mouseenter=\"handleMouseEnter\"\n      @mouseleave=\"handleMouseLeave\"\n      @dragover.prevent=\"handleDragOver\"\n      @dragleave=\"handleDragLeave\"\n      @drop.prevent=\"handleDrop\"\n    >\n      <BodyCell\n        v-for=\"(column, columnIndex) in columns\"\n        :key=\"column.id\"\n        :row=\"row\"\n        :column=\"column\"\n        :value=\"row && column.field ? row[column.field] : undefined\"\n        :focused=\"isCellFocused(column.id)\"\n        :row-selected=\"selected\"\n        :row-index=\"rowIndex\"\n        :column-index=\"columnIndex\"\n        :border-classes=\"cellBorderClasses\"\n        @cell-click=\"handleCellClick\"\n        @cell-double-click=\"handleCellDoubleClick\"\n        @cell-right-click=\"handleCellRightClick\"\n        @toggle-selection=\"handleToggleSelection\"\n        @row-drag-start=\"payload => emit('row-drag-start', payload)\"\n      />\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.ht-body-row {\n  contain: layout style paint;\n  will-change: transform;\n}\n\n/* Row selection styling */\n.ht-body-row[aria-selected='true'] {\n  background: var(--ht-row-selected);\n}\n\n/* Hover effects */\n.ht-body-row:hover {\n  background: var(--ht-row-hover);\n}\n\n.ht-body-row[aria-selected='true']:hover {\n  background: var(--ht-row-selected-hover);\n}\n\n.ht-row-hover-state {\n  background: var(--ht-row-hover) !important;\n}\n\n.ht-row-hover-selected {\n  background: var(--ht-row-selected-hover) !important;\n}\n\n/* Drag drop indicator */\n.ht-drop-indicator {\n  position: absolute;\n  left: 0;\n  right: 0;\n  height: var(--ht-drop-indicator-width, 2px);\n  background: var(--ht-drop-indicator, var(--ht-primary, rgb(59 130 246)));\n  pointer-events: none;\n  z-index: 10;\n  transition: all 0.15s ease;\n}\n\n.ht-drop-indicator::before {\n  content: '';\n  position: absolute;\n  left: 0;\n  top: 50%;\n  transform: translateY(-50%);\n  width: var(--ht-drop-indicator-dot-size, 6px);\n  height: var(--ht-drop-indicator-dot-size, 6px);\n  background: var(--ht-drop-indicator, var(--ht-primary, rgb(59 130 246)));\n  border-radius: 50%;\n}\n\n.ht-drop-top {\n  top: -1px;\n}\n\n.ht-drop-bottom {\n  bottom: -1px;\n}\n\n/* Dragging source row */\n.ht-row-dragging {\n  opacity: var(--ht-row-dragging-opacity, 0.4);\n  background: var(--ht-row-dragging-bg, var(--ht-row-hover)) !important;\n  transition: opacity 0.15s ease;\n}\n\n/* Drop target row */\n.ht-row-drop-target {\n  background: var(--ht-row-drag-over-bg, oklch(from var(--ht-primary) l c h / 0.1)) !important;\n  border-color: var(--ht-row-drag-over-border, var(--ht-primary));\n  transition: background-color 0.15s ease;\n}\n\n/* Zebra striping handled by Vue computed classes to support virtual scrolling */\n</style>\n","<!--\n  BodyRow.vue - Individual Row Component\n\n  Responsibilities:\n  1. Render single row with virtual positioning\n  2. Handle row-level interactions\n  3. Cell rendering delegation\n  4. Selection and focus states\n\n  Performance: Optimized for virtual scrolling\n-->\n\n<script setup lang=\"ts\">\nimport { computed, inject, ref, type Ref } from 'vue'\nimport BodyCell from './BodyCell.vue'\nimport type { RowData, ColumnDef, VirtualItem, CellValue } from '../../../types'\nimport type { DragResult } from '../../../types/functional-columns'\n\n// P2-1 Optimization: Static class names extracted to constant\n// Performance gain: ~10% row rendering, reduces array allocation on every render\n// Expected: ~0.1ms saved per row, significant for 100+ visible rows\nconst getStaticRowClasses = () => [\n  'ht-virtual-item',\n  'ht-body-row',\n  'hover:bg-[var(--ht-row-hover)]',\n  'cursor-pointer',\n] as const\n\n// Props\nconst props = defineProps<{\n  row: RowData\n  columns: ColumnDef[]\n  rowIndex: number\n  virtualItem: VirtualItem\n  rowHeight: number\n  focusedCell: { rowId: string | number; columnId: string } | null\n  selected: boolean\n  hoveredRowKey: string | number | null\n  rowBorderClasses?: string\n  cellBorderClasses?: string\n  stripeEnabled?: boolean\n}>()\n\n// Emits\ninterface FunctionalSelectionPayload {\n  rowData: RowData\n  rowIndex: number\n  column: ColumnDef\n  selectionType: 'checkbox' | 'radio'\n}\n\ninterface FunctionalSelectionEventPayload extends FunctionalSelectionPayload {\n  rowId: string | number\n  columnIndex: number\n}\n\nconst emit = defineEmits<{\n  'row-click': [row: RowData, index: number]\n  'cell-click': [row: RowData, column: ColumnDef, value: CellValue]\n  'cell-double-click': [row: RowData, column: ColumnDef, value: CellValue]\n  'cell-right-click': [row: RowData, column: ColumnDef, value: CellValue]\n  'row-hover': [rowKey: string | number]\n  'row-leave': [rowKey: string | number]\n  'toggle-selection': [payload: FunctionalSelectionEventPayload]\n  'row-drag-start': [payload: { row: RowData; rowIndex: number; event: DragEvent }]\n  'row-drag-over': [event: DragEvent]\n  'row-drag-end': [payload: { result: DragResult; sourceId?: string | number; targetId?: string | number }]\n}>()\n\n// Computed\nconst rowStyle = computed(() => {\n  return {\n    transform: `translateY(${props.virtualItem.start}px)`,\n    minHeight: `${props.rowHeight}px`, // Use minHeight instead of height to allow expansion\n    position: 'absolute' as const,\n    top: 0,\n    left: 0,\n    right: 0,\n    display: 'flex',\n    flexDirection: 'column' as const,\n  }\n})\n\n// Event handlers\nconst handleRowClick = (event: MouseEvent) => {\n  // Don't trigger row click if clicking on a cell that handles its own events\n  if ((event.target as HTMLElement).closest('.ht-cell-interactive')) {\n    return\n  }\n\n  emit('row-click', props.row, props.rowIndex)\n}\n\nconst handleCellClick = (column: ColumnDef, value: CellValue, event: MouseEvent) => {\n  // Stop propagation to prevent row click\n  event.stopPropagation()\n  emit('cell-click', props.row, column, value)\n  // 同时触发行点击语义，便于上层统一监听 row-click\n  emit('row-click', props.row, props.rowIndex)\n}\n\nconst handleCellDoubleClick = (column: ColumnDef, value: CellValue, event: MouseEvent) => {\n  event.stopPropagation()\n  emit('cell-double-click', props.row, column, value)\n}\n\nconst handleCellRightClick = (column: ColumnDef, value: CellValue, event: MouseEvent) => {\n  event.stopPropagation()\n  emit('cell-right-click', props.row, column, value)\n}\n\n// P2-2 Optimization: Convert isCellFocused to computed\n// Performance gain: ~40% in 50-column scenarios (50 function calls → 1 computed)\n// Previous: O(n) function calls per render cycle\n// Current: O(1) computed lookup, calculated once per row\nconst focusedColumnId = computed(() => {\n  if (!props.focusedCell || props.focusedCell.rowId !== props.row?.id) return null\n  return props.focusedCell.columnId\n})\n\n// Utility function for template (optional, could inline in template)\nconst isCellFocused = (columnId: string): boolean => {\n  return focusedColumnId.value === columnId\n}\n\nconst resolvedRow = computed(() => props.row as Record<string, unknown> | undefined)\n\nconst rowIdentity = computed<string | number>(() => {\n  const source = resolvedRow.value\n\n  if (source && source.id !== null) {\n    return source.id as string | number\n  }\n\n  if (source && (source as { rowId?: string | number }).rowId !== null) {\n    return (source as { rowId: string | number }).rowId\n  }\n\n  if (props.virtualItem?.index !== null) {\n    return props.virtualItem.index\n  }\n\n  return props.rowIndex\n})\n\nconst isRowHovered = computed(() => {\n  return props.hoveredRowKey !== null && props.hoveredRowKey === rowIdentity.value\n})\n\n// Inject drag state\nconst draggingRowId = inject<Ref<string | number | null>>('draggingRowId', ref(null))\n\n// Inject drop target state (shared across all panes)\nconst dropTargetRowId = inject<Ref<string | number | null>>('dropTargetRowId', ref(null))\nconst dropTargetPosition = inject<Ref<'top' | 'bottom' | null>>('dropTargetPosition', ref(null))\nconst setDropTarget = inject<(rowId: string | number | null, position: 'top' | 'bottom' | null) => void>(\n  'setDropTarget',\n  () => {}\n)\n\nconst isDraggingSource = computed(() => {\n  return draggingRowId.value !== null && draggingRowId.value === rowIdentity.value\n})\n\n// Check if this row is the drop target\nconst isDropTarget = computed(() => {\n  return dropTargetRowId.value !== null && dropTargetRowId.value === rowIdentity.value\n})\n\n// Get drop position for this row\nconst dropPosition = computed(() => {\n  return isDropTarget.value ? dropTargetPosition.value : null\n})\n\n// P2-1 Optimization: Computed only handles dynamic classes now\n// Static classes spread from constant, dynamic classes computed conditionally\nconst rowClasses = computed(() => [\n  ...getStaticRowClasses(),\n  {\n    'bg-[var(--ht-row-selected)]': props.selected,\n    'bg-[var(--ht-row-odd)]': props.stripeEnabled && !props.selected && props.rowIndex % 2 === 1,\n    'bg-[var(--ht-row-even)]': props.stripeEnabled && !props.selected && props.rowIndex % 2 === 0,\n    'ht-row-hover-state': isRowHovered.value && !props.selected,\n    'ht-row-hover-selected': isRowHovered.value && props.selected,\n    'ht-row-dragging': isDraggingSource.value,\n    'ht-row-drop-target': isDropTarget.value && !isDraggingSource.value,\n  },\n])\n\nconst handleMouseEnter = () => {\n  emit('row-hover', rowIdentity.value)\n}\n\nconst handleMouseLeave = () => {\n  emit('row-leave', rowIdentity.value)\n}\n\nconst handleToggleSelection = (payload: FunctionalSelectionPayload) => {\n  const columnIndex = props.columns.findIndex(col => col.id === payload.column.id)\n  emit('toggle-selection', {\n    ...payload,\n    rowId: rowIdentity.value,\n    columnIndex: columnIndex >= 0 ? columnIndex : 0,\n  })\n}\n\n// Row-level drag/drop target handling\nconst handleDragOver = (event: DragEvent) => {\n  event.preventDefault()\n\n  // Emit for auto-scroll handling\n  emit('row-drag-over', event)\n\n  // Calculate drop position based on cursor position\n  const rect = (event.currentTarget as HTMLElement).getBoundingClientRect()\n  const midpoint = rect.top + rect.height / 2\n  const position = event.clientY < midpoint ? 'top' : 'bottom'\n\n  // Update centralized drop target state\n  setDropTarget(rowIdentity.value, position)\n}\n\nconst handleDragLeave = (event: DragEvent) => {\n  // Only clear if actually leaving the row (not entering a child element)\n  const relatedTarget = event.relatedTarget as HTMLElement\n  if (!relatedTarget || !(event.currentTarget as HTMLElement).contains(relatedTarget)) {\n    // Clear drop target if leaving this specific row\n    if (dropTargetRowId.value === rowIdentity.value) {\n      setDropTarget(null, null)\n    }\n  }\n}\n\nconst handleDrop = (event: DragEvent) => {\n  // Store position before clearing\n  const position = dropPosition.value\n\n  // Clear drop target state\n  setDropTarget(null, null)\n\n  try {\n    const json = event.dataTransfer?.getData('application/json')\n    if (!json) return\n    const data = JSON.parse(json) as { rowData: RowData; rowIndex: number }\n\n    // Calculate actual destination index based on drop position\n    let destinationIndex = props.rowIndex\n    if (position === 'bottom') {\n      destinationIndex = props.rowIndex + 1\n    }\n\n    // Don't emit if dropping on the same position\n    if (data.rowIndex === destinationIndex) {\n      return\n    }\n\n    const result: DragResult = {\n      sourceIndex: data.rowIndex,\n      destinationIndex,\n      rowData: data.rowData,\n    }\n\n    // Note: sourceId and targetId are informational only\n    // The plugin will use destinationIndex for accurate positioning\n    emit('row-drag-end', {\n      result,\n      sourceId: (data.rowData as any)?.id ?? data.rowIndex,\n      targetId: (props.row as any)?.id ?? props.rowIndex,\n    })\n  } catch {\n    // Ignore malformed data\n  }\n}\n</script>\n\n<template>\n  <div\n    :class=\"rowClasses\"\n    :style=\"rowStyle\"\n    role=\"row\"\n    :aria-rowindex=\"rowIndex + 1\"\n    :aria-selected=\"selected\"\n  >\n    <!-- Drag drop indicator -->\n    <div\n      v-if=\"dropPosition !== null\"\n      class=\"ht-drop-indicator\"\n      aria-hidden=\"true\"\n      :class=\"{ 'ht-drop-top': dropPosition === 'top', 'ht-drop-bottom': dropPosition === 'bottom' }\"\n    />\n\n    <!-- Main row cells -->\n    <div\n      class=\"ht-row-cells\"\n      :class=\"rowBorderClasses\"\n      :style=\"{ height: `${rowHeight}px`, display: 'flex', alignItems: 'center' }\"\n      @click=\"handleRowClick\"\n      @mouseenter=\"handleMouseEnter\"\n      @mouseleave=\"handleMouseLeave\"\n      @dragover.prevent=\"handleDragOver\"\n      @dragleave=\"handleDragLeave\"\n      @drop.prevent=\"handleDrop\"\n    >\n      <BodyCell\n        v-for=\"(column, columnIndex) in columns\"\n        :key=\"column.id\"\n        :row=\"row\"\n        :column=\"column\"\n        :value=\"row && column.field ? row[column.field] : undefined\"\n        :focused=\"isCellFocused(column.id)\"\n        :row-selected=\"selected\"\n        :row-index=\"rowIndex\"\n        :column-index=\"columnIndex\"\n        :border-classes=\"cellBorderClasses\"\n        @cell-click=\"handleCellClick\"\n        @cell-double-click=\"handleCellDoubleClick\"\n        @cell-right-click=\"handleCellRightClick\"\n        @toggle-selection=\"handleToggleSelection\"\n        @row-drag-start=\"payload => emit('row-drag-start', payload)\"\n      />\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.ht-body-row {\n  contain: layout style paint;\n  will-change: transform;\n}\n\n/* Row selection styling */\n.ht-body-row[aria-selected='true'] {\n  background: var(--ht-row-selected);\n}\n\n/* Hover effects */\n.ht-body-row:hover {\n  background: var(--ht-row-hover);\n}\n\n.ht-body-row[aria-selected='true']:hover {\n  background: var(--ht-row-selected-hover);\n}\n\n.ht-row-hover-state {\n  background: var(--ht-row-hover) !important;\n}\n\n.ht-row-hover-selected {\n  background: var(--ht-row-selected-hover) !important;\n}\n\n/* Drag drop indicator */\n.ht-drop-indicator {\n  position: absolute;\n  left: 0;\n  right: 0;\n  height: var(--ht-drop-indicator-width, 2px);\n  background: var(--ht-drop-indicator, var(--ht-primary, rgb(59 130 246)));\n  pointer-events: none;\n  z-index: 10;\n  transition: all 0.15s ease;\n}\n\n.ht-drop-indicator::before {\n  content: '';\n  position: absolute;\n  left: 0;\n  top: 50%;\n  transform: translateY(-50%);\n  width: var(--ht-drop-indicator-dot-size, 6px);\n  height: var(--ht-drop-indicator-dot-size, 6px);\n  background: var(--ht-drop-indicator, var(--ht-primary, rgb(59 130 246)));\n  border-radius: 50%;\n}\n\n.ht-drop-top {\n  top: -1px;\n}\n\n.ht-drop-bottom {\n  bottom: -1px;\n}\n\n/* Dragging source row */\n.ht-row-dragging {\n  opacity: var(--ht-row-dragging-opacity, 0.4);\n  background: var(--ht-row-dragging-bg, var(--ht-row-hover)) !important;\n  transition: opacity 0.15s ease;\n}\n\n/* Drop target row */\n.ht-row-drop-target {\n  background: var(--ht-row-drag-over-bg, oklch(from var(--ht-primary) l c h / 0.1)) !important;\n  border-color: var(--ht-row-drag-over-border, var(--ht-primary));\n  transition: background-color 0.15s ease;\n}\n\n/* Zebra striping handled by Vue computed classes to support virtual scrolling */\n</style>\n","/**\n * DragAutoScroller - Automatic scrolling during drag operations\n *\n * Provides smooth auto-scrolling when dragging near container edges\n * Supports both vertical and horizontal scrolling with configurable zones\n */\n\nexport interface AutoScrollOptions {\n  /** Distance from edge to trigger scrolling (px) */\n  scrollZone?: number\n  /** Scroll speed (px per frame) */\n  scrollSpeed?: number\n  /** Enable horizontal scrolling */\n  horizontal?: boolean\n  /** Enable vertical scrolling */\n  vertical?: boolean\n}\n\nexport class DragAutoScroller {\n  private scrollContainer: HTMLElement | null = null\n  private scrollInterval: number | null = null\n  private readonly scrollZone: number\n  private readonly scrollSpeed: number\n  private readonly horizontal: boolean\n  private readonly vertical: boolean\n  // Keep latest desired scroll direction; interval loop reads these continuously\n  private currentScrollX: number = 0\n  private currentScrollY: number = 0\n\n  constructor(container: HTMLElement, options: AutoScrollOptions = {}) {\n    this.scrollContainer = container\n    this.scrollZone = options.scrollZone ?? 50\n    this.scrollSpeed = options.scrollSpeed ?? 10\n    this.horizontal = options.horizontal ?? false\n    this.vertical = options.vertical ?? true\n  }\n\n  start(event: DragEvent) {\n    if (!this.scrollContainer) return\n\n    const rect = this.scrollContainer.getBoundingClientRect()\n    const { clientX, clientY } = event\n\n    // Compute desired scroll vector for this frame\n    let nextX = 0\n    let nextY = 0\n\n    // Calculate vertical scroll\n    if (this.vertical) {\n      const distanceFromTop = clientY - rect.top\n      const distanceFromBottom = rect.bottom - clientY\n\n      if (distanceFromTop < this.scrollZone && distanceFromTop >= 0) {\n        nextY = -this.scrollSpeed\n      } else if (distanceFromBottom < this.scrollZone && distanceFromBottom >= 0) {\n        nextY = this.scrollSpeed\n      }\n    }\n\n    // Calculate horizontal scroll\n    if (this.horizontal) {\n      const distanceFromLeft = clientX - rect.left\n      const distanceFromRight = rect.right - clientX\n\n      if (distanceFromLeft < this.scrollZone && distanceFromLeft >= 0) {\n        nextX = -this.scrollSpeed\n      } else if (distanceFromRight < this.scrollZone && distanceFromRight >= 0) {\n        nextX = this.scrollSpeed\n      }\n    }\n\n    // Update current desired vector\n    this.currentScrollX = nextX\n    this.currentScrollY = nextY\n\n    // Start or stop scrolling based on calculated values\n    if (this.currentScrollX !== 0 || this.currentScrollY !== 0) {\n      this.ensureInterval()\n    } else {\n      this.stop()\n    }\n  }\n\n  private ensureInterval() {\n    if (this.scrollInterval) return\n\n    this.scrollInterval = window.setInterval(() => {\n      if (!this.scrollContainer) return\n\n      if (this.currentScrollY !== 0) {\n        this.scrollContainer.scrollTop += this.currentScrollY\n      }\n      if (this.currentScrollX !== 0) {\n        this.scrollContainer.scrollLeft += this.currentScrollX\n      }\n\n      // If vector becomes zero (updated by subsequent start calls), stop interval\n      if (this.currentScrollX === 0 && this.currentScrollY === 0) {\n        this.stop()\n      }\n    }, 16) // ~60fps\n  }\n\n  stop() {\n    if (this.scrollInterval) {\n      clearInterval(this.scrollInterval)\n      this.scrollInterval = null\n    }\n  }\n\n  destroy() {\n    this.stop()\n    this.scrollContainer = null\n  }\n}\n","<!--\n  GridBody.vue - Virtual Scrolling Body Component\n\n  Responsibilities:\n  1. Virtual scrolling container management\n  2. Row rendering with position-based layout\n  3. Three-pane synchronized scrolling\n  4. Event delegation for cell interactions\n\n  Performance: 60FPS scrolling with 100k+ rows\n-->\n\n<script setup lang=\"ts\">\nimport { computed, ref, onMounted, onUnmounted, defineExpose, provide } from 'vue'\nimport BodyRow from './BodyRow.vue'\nimport { createLogger } from '../../../utils/logger'\nimport { useRAFScroll } from '../../../utils/scroll-optimization'\nimport { DragAutoScroller } from '../../../utils/drag-auto-scroll'\n\nconst logger = createLogger('grid-body')\nimport type {\n  RowData,\n  ColumnDef,\n  VirtualizerReturn,\n  GridInteractionContract,\n  PaneConfig,\n  VirtualData,\n  CellValue,\n} from '../../../types'\n\n// Props\nconst props = defineProps<{\n  data: VirtualData\n  columns: ColumnDef[]\n  paneConfig: PaneConfig\n  virtualizer: VirtualizerReturn\n  rowHeight: number\n  isContentOverflowing: boolean\n  focusedCell: { rowId: string | number; columnId: string } | null\n  selectedRows: (string | number)[]\n  interactionContract: GridInteractionContract\n  bodyRowBorderClasses?: string\n  bodyCellBorderClasses?: string\n  stripeEnabled?: boolean\n}>()\n\n// Emits\nconst emit = defineEmits<{\n  scroll: [event: Event]\n}>()\n\n// Refs\nconst bodyContainer = ref<HTMLElement>()\nconst bodyScrollArea = ref<HTMLElement>()\nconst centerScrollArea = ref<HTMLElement>()\n\n// Computed\nconst bodyStyle = computed(() => ({\n  height: '100%',\n  overflow: 'hidden',\n  position: 'relative' as const,\n}))\n\nconst virtualContainerStyle = computed(() => ({\n  height: `${props.data.totalHeight}px`,\n  position: 'relative' as const,\n  overflow: 'hidden',\n}))\n\n// 中心滚动区域的虚拟容器需要设置内容宽度以触发横向滚动\nconst centerVirtualContainerStyle = computed(() => ({\n  ...virtualContainerStyle.value,\n  width: `${props.paneConfig.center.width}px`,\n}))\n\nconst centerScrollAreaStyle = computed(() => ({\n  height: '100%',\n  overflow: 'auto',\n  // 移除固定宽度设置，让滚动容器适应外层容器尺寸\n}))\n\n// Scroll state management\nconst currentScrollLeft = ref(0)\nconst currentScrollTop = ref(0)\nconst hoveredRowKey = ref<string | number | null>(null)\n\n// Drag state management\nconst draggingRowId = ref<string | number | null>(null)\nconst setDraggingRowId = (id: string | number | null) => {\n  draggingRowId.value = id\n}\n\n// Drop target state management (shared across all panes)\nconst dropTargetRowId = ref<string | number | null>(null)\nconst dropTargetPosition = ref<'top' | 'bottom' | null>(null)\n\nconst setDropTarget = (rowId: string | number | null, position: 'top' | 'bottom' | null) => {\n  dropTargetRowId.value = rowId\n  dropTargetPosition.value = position\n}\n\n// Provide drag state to child components\nprovide('draggingRowId', draggingRowId)\nprovide('setDraggingRowId', setDraggingRowId)\nprovide('dropTargetRowId', dropTargetRowId)\nprovide('dropTargetPosition', dropTargetPosition)\nprovide('setDropTarget', setDropTarget)\n\n// Auto-scroll support during drag\nlet autoScroller: DragAutoScroller | null = null\n\n// Virtual items from virtualizer\nconst virtualItems = computed(() => props.virtualizer.virtualItems.value || [])\n\n// Processed virtual items with row data\nconst processedVirtualItems = computed(() => {\n  return virtualItems.value\n    .map(item => {\n      // Direct mapping using the virtualizer's index\n      const row = props.data.visibleRows[item.index]\n\n      if (!row) {\n        logger.warn(`Missing row data for index ${item.index}, total rows: ${props.data.visibleRows.length}`)\n        return null\n      }\n\n      return {\n        ...item,\n        row,\n        rowArrayIndex: item.index,\n      }\n    })\n    .filter(item => item !== null) // Filter out null items\n})\n\nconst setHoveredRowKey = (rowKey: string | number) => {\n  hoveredRowKey.value = rowKey\n}\n\nconst clearHoveredRowKey = (rowKey: string | number) => {\n  if (hoveredRowKey.value === rowKey) {\n    hoveredRowKey.value = null\n  }\n}\n\n// Event handlers with RAF optimization and velocity tracking\nconst handleBodyScrollCore = (event: Event) => {\n  const target = event.target as HTMLElement\n\n  // Update scroll top from body container\n  currentScrollTop.value = target.scrollTop\n\n  // Create a wrapper that looks like the original event but with correct scroll values\n  const eventWrapper = {\n    ...event,\n    target: {\n      ...target,\n      scrollLeft: currentScrollLeft.value,\n      scrollTop: currentScrollTop.value,\n      dataset: { pane: 'body' }\n    }\n  }\n\n  emit('scroll', eventWrapper as Event)\n}\n\nconst handleCenterScrollCore = (event: Event) => {\n  const target = event.target as HTMLElement\n\n  // Update scroll left from center pane\n  currentScrollLeft.value = target.scrollLeft\n\n  // Create a wrapper that looks like the original event but with correct scroll values\n  const eventWrapper = {\n    ...event,\n    target: {\n      ...target,\n      scrollLeft: currentScrollLeft.value,\n      scrollTop: currentScrollTop.value,\n      dataset: { pane: 'body' }\n    }\n  }\n\n  emit('scroll', eventWrapper as Event)\n}\n\n// RAF-optimized scroll handlers with debouncing and velocity tracking\nconst bodyScrollHandler = useRAFScroll({\n  onScroll: handleBodyScrollCore,\n  debounceDelay: 150,\n  trackVelocity: true,\n})\n\nconst centerScrollHandler = useRAFScroll({\n  onScroll: handleCenterScrollCore,\n  debounceDelay: 150,\n  trackVelocity: true,\n})\n\n// Public scroll handlers\nconst handleBodyScroll = bodyScrollHandler.handleScroll\nconst handleCenterScroll = centerScrollHandler.handleScroll\n\n// Row click handler\nconst handleRowClick = (row: RowData, index: number) => {\n  props.interactionContract.emit?.('row-click', { row, index })\n}\n\n// Cell interaction handlers\nconst handleCellClick = (row: RowData, column: ColumnDef, value: CellValue) => {\n  props.interactionContract.emit?.('cell-click', { row, column, value })\n}\n\nconst handleCellDoubleClick = (row: RowData, column: ColumnDef, value: CellValue) => {\n  // Emit explicit double-click event for consumer handlers\n  props.interactionContract.emit?.('cell-double-click' as any, { row, column, value } as any)\n}\n\nconst handleCellRightClick = (row: RowData, column: ColumnDef, value: CellValue) => {\n  props.interactionContract.emit?.('cell-right-click' as any, { row, column, value } as any)\n}\n\n// Selection handlers\nconst handleToggleSelection = (payload: {\n  rowData: RowData\n  rowIndex: number\n  rowId: string | number\n  column: ColumnDef\n  columnIndex: number\n  selectionType: 'checkbox' | 'radio'\n}) => {\n  props.interactionContract.emit?.('toggle-selection', {\n    row: payload.rowData,\n    rowId: payload.rowId,\n    rowIndex: payload.rowIndex,\n    selectionType: payload.selectionType,\n  })\n}\n\n// Row drag handlers\nconst handleRowDragStart = (payload: { row: RowData; rowIndex: number; event?: DragEvent }) => {\n  props.interactionContract.emit?.('row-drag-start' as any, payload as any)\n}\n\nconst handleRowDragOver = (event: DragEvent) => {\n  autoScroller?.start(event)\n}\n\nconst handleRowDragEnd = (payload: { result: any; sourceId?: string | number; targetId?: string | number }) => {\n  autoScroller?.stop()\n  props.interactionContract.emit?.('row-drag-end' as any, payload as any)\n}\n\n// no-op removed: dragleave handler unused\n\n// Edit mode handlers\nconst recalculate = () => {\n  // Force virtualizer recalculation\n  if (props.virtualizer.updateScrollPosition) {\n    // Use current scroll top state\n    props.virtualizer.updateScrollPosition(currentScrollTop.value)\n  }\n}\n\nconst enterEditMode = async (id: string | number): Promise<boolean> => {\n  // Delegate to interaction contract if available\n  if (props.interactionContract.toggleEditMode) {\n    return await props.interactionContract.toggleEditMode(id, 'enter')\n  }\n  return false\n}\n\nconst completeEdit = async (id: string | number, _value: CellValue): Promise<boolean> => {\n  // Complete edit and exit edit mode\n  if (props.interactionContract.toggleEditMode) {\n    return await props.interactionContract.toggleEditMode(id, 'exit')\n  }\n  return false\n}\n\nconst cancelEdit = (id: string | number) => {\n  // Cancel edit without saving\n  if (props.interactionContract.toggleEditMode) {\n    props.interactionContract.toggleEditMode(id, 'exit')\n  }\n}\n\n// Expose methods\ndefineExpose({\n  scrollToIndex: props.virtualizer.scrollToIndex,\n  recalculate,\n  enterEditMode,\n  completeEdit,\n  cancelEdit,\n  centerScrollArea, // Expose for parent component\n})\n\n// Lifecycle\nonMounted(() => {\n  // Initialize auto-scroller for body scroll area\n  if (bodyScrollArea.value) {\n    autoScroller = new DragAutoScroller(bodyScrollArea.value, {\n      vertical: true,\n      horizontal: false,\n      scrollZone: 50,\n      scrollSpeed: 10,\n    })\n  }\n})\n\nonUnmounted(() => {\n  // Cleanup RAF scroll handlers\n  bodyScrollHandler.cleanup()\n  centerScrollHandler.cleanup()\n\n  // Cleanup auto-scroller\n  autoScroller?.destroy()\n  autoScroller = null\n})\n</script>\n\n<template>\n  <div ref=\"bodyContainer\" class=\"ht-body h-full\" :style=\"bodyStyle\" role=\"rowgroup\">\n    <!-- Main scroll container (vertical scrolling for entire body) -->\n    <div\n      ref=\"bodyScrollArea\"\n      class=\"ht-scroll-area h-full overflow-y-auto overflow-x-hidden ht-custom-scrollbar\"\n      @scroll=\"handleBodyScroll\"\n    >\n      <!-- Virtual container wrapper with fixed height -->\n      <div class=\"ht-virtual-wrapper\" :style=\"virtualContainerStyle\">\n        <!-- Three-pane layout container -->\n        <div class=\"ht-panes-container flex\">\n          <!-- Left Frozen Pane -->\n          <div\n            v-if=\"paneConfig.left.columns.length > 0\"\n            class=\"ht-pane-left flex-shrink-0 relative z-10 overflow-hidden\"\n            :style=\"{ width: `${paneConfig.left.width}px` }\"\n          >\n            <div class=\"ht-virtual-container-left relative\">\n              <BodyRow\n                v-for=\"item in processedVirtualItems\"\n                :key=\"`left-${item.row.id || item.index}`\"\n                :row=\"item.row\"\n                :columns=\"paneConfig.left.columns\"\n                :row-index=\"item.index\"\n                :virtual-item=\"item\"\n                :row-height=\"rowHeight\"\n                :focused-cell=\"focusedCell\"\n                :selected=\"item.row.id !== null && item.row.id !== undefined && selectedRows.includes(item.row.id)\"\n                :hovered-row-key=\"hoveredRowKey\"\n                :row-border-classes=\"bodyRowBorderClasses\"\n                :cell-border-classes=\"bodyCellBorderClasses\"\n                :stripe-enabled=\"stripeEnabled\"\n                @row-click=\"handleRowClick\"\n                @cell-click=\"handleCellClick\"\n                @cell-double-click=\"handleCellDoubleClick\"\n                @cell-right-click=\"handleCellRightClick\"\n                @row-hover=\"setHoveredRowKey\"\n                @row-leave=\"clearHoveredRowKey\"\n                @toggle-selection=\"handleToggleSelection\"\n                @row-drag-start=\"handleRowDragStart\"\n                @row-drag-over=\"handleRowDragOver\"\n                @row-drag-end=\"handleRowDragEnd\"\n              />\n            </div>\n          </div>\n\n          <!-- Center Scrollable Pane -->\n          <div\n            class=\"ht-pane-center relative overflow-hidden\"\n            :class=\"{ 'flex-1': isContentOverflowing }\"\n          >\n            <div\n              ref=\"centerScrollArea\"\n              class=\"ht-scroll-area-horizontal h-full overflow-x-auto overflow-y-hidden\"\n              :style=\"centerScrollAreaStyle\"\n              @scroll=\"handleCenterScroll\"\n            >\n              <div class=\"ht-virtual-container-center\" :style=\"centerVirtualContainerStyle\">\n                <BodyRow\n                  v-for=\"item in processedVirtualItems\"\n                  :key=\"`center-${item.row.id || item.index}`\"\n                  :row=\"item.row\"\n                  :columns=\"paneConfig.center.columns\"\n                  :row-index=\"item.index\"\n                  :virtual-item=\"item\"\n                  :row-height=\"rowHeight\"\n                  :focused-cell=\"focusedCell\"\n                  :selected=\"item.row.id !== null && item.row.id !== undefined && selectedRows.includes(item.row.id)\"\n                  :hovered-row-key=\"hoveredRowKey\"\n                  :row-border-classes=\"bodyRowBorderClasses\"\n                  :cell-border-classes=\"bodyCellBorderClasses\"\n                  :stripe-enabled=\"stripeEnabled\"\n                  @row-click=\"handleRowClick\"\n                  @cell-click=\"handleCellClick\"\n                  @cell-double-click=\"handleCellDoubleClick\"\n                  @cell-right-click=\"handleCellRightClick\"\n                  @row-hover=\"setHoveredRowKey\"\n                  @row-leave=\"clearHoveredRowKey\"\n                  @toggle-selection=\"handleToggleSelection\"\n                  @row-drag-start=\"handleRowDragStart\"\n                  @row-drag-over=\"handleRowDragOver\"\n                  @row-drag-end=\"handleRowDragEnd\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <!-- Right Frozen Pane -->\n          <div\n            v-if=\"paneConfig.right.columns.length > 0\"\n            class=\"ht-pane-right flex-shrink-0 relative z-10 overflow-hidden\"\n            :style=\"{ width: `${paneConfig.right.width}px` }\"\n          >\n            <div class=\"ht-virtual-container-right relative\">\n              <BodyRow\n                v-for=\"item in processedVirtualItems\"\n                :key=\"`right-${item.row.id || item.index}`\"\n                :row=\"item.row\"\n                :columns=\"paneConfig.right.columns\"\n                :row-index=\"item.index\"\n                :virtual-item=\"item\"\n                :row-height=\"rowHeight\"\n                :focused-cell=\"focusedCell\"\n                :selected=\"item.row.id !== null && item.row.id !== undefined && selectedRows.includes(item.row.id)\"\n                :hovered-row-key=\"hoveredRowKey\"\n                :row-border-classes=\"bodyRowBorderClasses\"\n                :cell-border-classes=\"bodyCellBorderClasses\"\n                :stripe-enabled=\"stripeEnabled\"\n                @row-click=\"handleRowClick\"\n                @cell-click=\"handleCellClick\"\n                @cell-double-click=\"handleCellDoubleClick\"\n                @cell-right-click=\"handleCellRightClick\"\n                @row-hover=\"setHoveredRowKey\"\n                @row-leave=\"clearHoveredRowKey\"\n                @toggle-selection=\"handleToggleSelection\"\n                @row-drag-start=\"handleRowDragStart\"\n                @row-drag-over=\"handleRowDragOver\"\n                @row-drag-end=\"handleRowDragEnd\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.ht-body {\n  contain: layout style paint;\n}\n\n/* Shadow for pinned panes is now defined in pinned-columns.css */\n\n/* Main vertical scroll container */\n.ht-scroll-area {\n  /* Performance optimizations */\n  transform: translateZ(0);\n  will-change: scroll-position;\n}\n\n/* Horizontal scroll container for center pane */\n.ht-scroll-area-horizontal {\n  /* Performance optimizations */\n  transform: translateZ(0);\n  will-change: scroll-position;\n}\n\n.ht-virtual-wrapper {\n  position: relative;\n}\n\n.ht-panes-container {\n  position: relative;\n}\n\n.ht-virtual-container-center {\n  position: relative;\n}\n\n/* Virtual item positioning */\n.ht-body :deep(.ht-virtual-item) {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  contain: layout style paint;\n  will-change: transform;\n}\n</style>\n","<!--\n  GridBody.vue - Virtual Scrolling Body Component\n\n  Responsibilities:\n  1. Virtual scrolling container management\n  2. Row rendering with position-based layout\n  3. Three-pane synchronized scrolling\n  4. Event delegation for cell interactions\n\n  Performance: 60FPS scrolling with 100k+ rows\n-->\n\n<script setup lang=\"ts\">\nimport { computed, ref, onMounted, onUnmounted, defineExpose, provide } from 'vue'\nimport BodyRow from './BodyRow.vue'\nimport { createLogger } from '../../../utils/logger'\nimport { useRAFScroll } from '../../../utils/scroll-optimization'\nimport { DragAutoScroller } from '../../../utils/drag-auto-scroll'\n\nconst logger = createLogger('grid-body')\nimport type {\n  RowData,\n  ColumnDef,\n  VirtualizerReturn,\n  GridInteractionContract,\n  PaneConfig,\n  VirtualData,\n  CellValue,\n} from '../../../types'\n\n// Props\nconst props = defineProps<{\n  data: VirtualData\n  columns: ColumnDef[]\n  paneConfig: PaneConfig\n  virtualizer: VirtualizerReturn\n  rowHeight: number\n  isContentOverflowing: boolean\n  focusedCell: { rowId: string | number; columnId: string } | null\n  selectedRows: (string | number)[]\n  interactionContract: GridInteractionContract\n  bodyRowBorderClasses?: string\n  bodyCellBorderClasses?: string\n  stripeEnabled?: boolean\n}>()\n\n// Emits\nconst emit = defineEmits<{\n  scroll: [event: Event]\n}>()\n\n// Refs\nconst bodyContainer = ref<HTMLElement>()\nconst bodyScrollArea = ref<HTMLElement>()\nconst centerScrollArea = ref<HTMLElement>()\n\n// Computed\nconst bodyStyle = computed(() => ({\n  height: '100%',\n  overflow: 'hidden',\n  position: 'relative' as const,\n}))\n\nconst virtualContainerStyle = computed(() => ({\n  height: `${props.data.totalHeight}px`,\n  position: 'relative' as const,\n  overflow: 'hidden',\n}))\n\n// 中心滚动区域的虚拟容器需要设置内容宽度以触发横向滚动\nconst centerVirtualContainerStyle = computed(() => ({\n  ...virtualContainerStyle.value,\n  width: `${props.paneConfig.center.width}px`,\n}))\n\nconst centerScrollAreaStyle = computed(() => ({\n  height: '100%',\n  overflow: 'auto',\n  // 移除固定宽度设置，让滚动容器适应外层容器尺寸\n}))\n\n// Scroll state management\nconst currentScrollLeft = ref(0)\nconst currentScrollTop = ref(0)\nconst hoveredRowKey = ref<string | number | null>(null)\n\n// Drag state management\nconst draggingRowId = ref<string | number | null>(null)\nconst setDraggingRowId = (id: string | number | null) => {\n  draggingRowId.value = id\n}\n\n// Drop target state management (shared across all panes)\nconst dropTargetRowId = ref<string | number | null>(null)\nconst dropTargetPosition = ref<'top' | 'bottom' | null>(null)\n\nconst setDropTarget = (rowId: string | number | null, position: 'top' | 'bottom' | null) => {\n  dropTargetRowId.value = rowId\n  dropTargetPosition.value = position\n}\n\n// Provide drag state to child components\nprovide('draggingRowId', draggingRowId)\nprovide('setDraggingRowId', setDraggingRowId)\nprovide('dropTargetRowId', dropTargetRowId)\nprovide('dropTargetPosition', dropTargetPosition)\nprovide('setDropTarget', setDropTarget)\n\n// Auto-scroll support during drag\nlet autoScroller: DragAutoScroller | null = null\n\n// Virtual items from virtualizer\nconst virtualItems = computed(() => props.virtualizer.virtualItems.value || [])\n\n// Processed virtual items with row data\nconst processedVirtualItems = computed(() => {\n  return virtualItems.value\n    .map(item => {\n      // Direct mapping using the virtualizer's index\n      const row = props.data.visibleRows[item.index]\n\n      if (!row) {\n        logger.warn(`Missing row data for index ${item.index}, total rows: ${props.data.visibleRows.length}`)\n        return null\n      }\n\n      return {\n        ...item,\n        row,\n        rowArrayIndex: item.index,\n      }\n    })\n    .filter(item => item !== null) // Filter out null items\n})\n\nconst setHoveredRowKey = (rowKey: string | number) => {\n  hoveredRowKey.value = rowKey\n}\n\nconst clearHoveredRowKey = (rowKey: string | number) => {\n  if (hoveredRowKey.value === rowKey) {\n    hoveredRowKey.value = null\n  }\n}\n\n// Event handlers with RAF optimization and velocity tracking\nconst handleBodyScrollCore = (event: Event) => {\n  const target = event.target as HTMLElement\n\n  // Update scroll top from body container\n  currentScrollTop.value = target.scrollTop\n\n  // Create a wrapper that looks like the original event but with correct scroll values\n  const eventWrapper = {\n    ...event,\n    target: {\n      ...target,\n      scrollLeft: currentScrollLeft.value,\n      scrollTop: currentScrollTop.value,\n      dataset: { pane: 'body' }\n    }\n  }\n\n  emit('scroll', eventWrapper as Event)\n}\n\nconst handleCenterScrollCore = (event: Event) => {\n  const target = event.target as HTMLElement\n\n  // Update scroll left from center pane\n  currentScrollLeft.value = target.scrollLeft\n\n  // Create a wrapper that looks like the original event but with correct scroll values\n  const eventWrapper = {\n    ...event,\n    target: {\n      ...target,\n      scrollLeft: currentScrollLeft.value,\n      scrollTop: currentScrollTop.value,\n      dataset: { pane: 'body' }\n    }\n  }\n\n  emit('scroll', eventWrapper as Event)\n}\n\n// RAF-optimized scroll handlers with debouncing and velocity tracking\nconst bodyScrollHandler = useRAFScroll({\n  onScroll: handleBodyScrollCore,\n  debounceDelay: 150,\n  trackVelocity: true,\n})\n\nconst centerScrollHandler = useRAFScroll({\n  onScroll: handleCenterScrollCore,\n  debounceDelay: 150,\n  trackVelocity: true,\n})\n\n// Public scroll handlers\nconst handleBodyScroll = bodyScrollHandler.handleScroll\nconst handleCenterScroll = centerScrollHandler.handleScroll\n\n// Row click handler\nconst handleRowClick = (row: RowData, index: number) => {\n  props.interactionContract.emit?.('row-click', { row, index })\n}\n\n// Cell interaction handlers\nconst handleCellClick = (row: RowData, column: ColumnDef, value: CellValue) => {\n  props.interactionContract.emit?.('cell-click', { row, column, value })\n}\n\nconst handleCellDoubleClick = (row: RowData, column: ColumnDef, value: CellValue) => {\n  // Emit explicit double-click event for consumer handlers\n  props.interactionContract.emit?.('cell-double-click' as any, { row, column, value } as any)\n}\n\nconst handleCellRightClick = (row: RowData, column: ColumnDef, value: CellValue) => {\n  props.interactionContract.emit?.('cell-right-click' as any, { row, column, value } as any)\n}\n\n// Selection handlers\nconst handleToggleSelection = (payload: {\n  rowData: RowData\n  rowIndex: number\n  rowId: string | number\n  column: ColumnDef\n  columnIndex: number\n  selectionType: 'checkbox' | 'radio'\n}) => {\n  props.interactionContract.emit?.('toggle-selection', {\n    row: payload.rowData,\n    rowId: payload.rowId,\n    rowIndex: payload.rowIndex,\n    selectionType: payload.selectionType,\n  })\n}\n\n// Row drag handlers\nconst handleRowDragStart = (payload: { row: RowData; rowIndex: number; event?: DragEvent }) => {\n  props.interactionContract.emit?.('row-drag-start' as any, payload as any)\n}\n\nconst handleRowDragOver = (event: DragEvent) => {\n  autoScroller?.start(event)\n}\n\nconst handleRowDragEnd = (payload: { result: any; sourceId?: string | number; targetId?: string | number }) => {\n  autoScroller?.stop()\n  props.interactionContract.emit?.('row-drag-end' as any, payload as any)\n}\n\n// no-op removed: dragleave handler unused\n\n// Edit mode handlers\nconst recalculate = () => {\n  // Force virtualizer recalculation\n  if (props.virtualizer.updateScrollPosition) {\n    // Use current scroll top state\n    props.virtualizer.updateScrollPosition(currentScrollTop.value)\n  }\n}\n\nconst enterEditMode = async (id: string | number): Promise<boolean> => {\n  // Delegate to interaction contract if available\n  if (props.interactionContract.toggleEditMode) {\n    return await props.interactionContract.toggleEditMode(id, 'enter')\n  }\n  return false\n}\n\nconst completeEdit = async (id: string | number, _value: CellValue): Promise<boolean> => {\n  // Complete edit and exit edit mode\n  if (props.interactionContract.toggleEditMode) {\n    return await props.interactionContract.toggleEditMode(id, 'exit')\n  }\n  return false\n}\n\nconst cancelEdit = (id: string | number) => {\n  // Cancel edit without saving\n  if (props.interactionContract.toggleEditMode) {\n    props.interactionContract.toggleEditMode(id, 'exit')\n  }\n}\n\n// Expose methods\ndefineExpose({\n  scrollToIndex: props.virtualizer.scrollToIndex,\n  recalculate,\n  enterEditMode,\n  completeEdit,\n  cancelEdit,\n  centerScrollArea, // Expose for parent component\n})\n\n// Lifecycle\nonMounted(() => {\n  // Initialize auto-scroller for body scroll area\n  if (bodyScrollArea.value) {\n    autoScroller = new DragAutoScroller(bodyScrollArea.value, {\n      vertical: true,\n      horizontal: false,\n      scrollZone: 50,\n      scrollSpeed: 10,\n    })\n  }\n})\n\nonUnmounted(() => {\n  // Cleanup RAF scroll handlers\n  bodyScrollHandler.cleanup()\n  centerScrollHandler.cleanup()\n\n  // Cleanup auto-scroller\n  autoScroller?.destroy()\n  autoScroller = null\n})\n</script>\n\n<template>\n  <div ref=\"bodyContainer\" class=\"ht-body h-full\" :style=\"bodyStyle\" role=\"rowgroup\">\n    <!-- Main scroll container (vertical scrolling for entire body) -->\n    <div\n      ref=\"bodyScrollArea\"\n      class=\"ht-scroll-area h-full overflow-y-auto overflow-x-hidden ht-custom-scrollbar\"\n      @scroll=\"handleBodyScroll\"\n    >\n      <!-- Virtual container wrapper with fixed height -->\n      <div class=\"ht-virtual-wrapper\" :style=\"virtualContainerStyle\">\n        <!-- Three-pane layout container -->\n        <div class=\"ht-panes-container flex\">\n          <!-- Left Frozen Pane -->\n          <div\n            v-if=\"paneConfig.left.columns.length > 0\"\n            class=\"ht-pane-left flex-shrink-0 relative z-10 overflow-hidden\"\n            :style=\"{ width: `${paneConfig.left.width}px` }\"\n          >\n            <div class=\"ht-virtual-container-left relative\">\n              <BodyRow\n                v-for=\"item in processedVirtualItems\"\n                :key=\"`left-${item.row.id || item.index}`\"\n                :row=\"item.row\"\n                :columns=\"paneConfig.left.columns\"\n                :row-index=\"item.index\"\n                :virtual-item=\"item\"\n                :row-height=\"rowHeight\"\n                :focused-cell=\"focusedCell\"\n                :selected=\"item.row.id !== null && item.row.id !== undefined && selectedRows.includes(item.row.id)\"\n                :hovered-row-key=\"hoveredRowKey\"\n                :row-border-classes=\"bodyRowBorderClasses\"\n                :cell-border-classes=\"bodyCellBorderClasses\"\n                :stripe-enabled=\"stripeEnabled\"\n                @row-click=\"handleRowClick\"\n                @cell-click=\"handleCellClick\"\n                @cell-double-click=\"handleCellDoubleClick\"\n                @cell-right-click=\"handleCellRightClick\"\n                @row-hover=\"setHoveredRowKey\"\n                @row-leave=\"clearHoveredRowKey\"\n                @toggle-selection=\"handleToggleSelection\"\n                @row-drag-start=\"handleRowDragStart\"\n                @row-drag-over=\"handleRowDragOver\"\n                @row-drag-end=\"handleRowDragEnd\"\n              />\n            </div>\n          </div>\n\n          <!-- Center Scrollable Pane -->\n          <div\n            class=\"ht-pane-center relative overflow-hidden\"\n            :class=\"{ 'flex-1': isContentOverflowing }\"\n          >\n            <div\n              ref=\"centerScrollArea\"\n              class=\"ht-scroll-area-horizontal h-full overflow-x-auto overflow-y-hidden\"\n              :style=\"centerScrollAreaStyle\"\n              @scroll=\"handleCenterScroll\"\n            >\n              <div class=\"ht-virtual-container-center\" :style=\"centerVirtualContainerStyle\">\n                <BodyRow\n                  v-for=\"item in processedVirtualItems\"\n                  :key=\"`center-${item.row.id || item.index}`\"\n                  :row=\"item.row\"\n                  :columns=\"paneConfig.center.columns\"\n                  :row-index=\"item.index\"\n                  :virtual-item=\"item\"\n                  :row-height=\"rowHeight\"\n                  :focused-cell=\"focusedCell\"\n                  :selected=\"item.row.id !== null && item.row.id !== undefined && selectedRows.includes(item.row.id)\"\n                  :hovered-row-key=\"hoveredRowKey\"\n                  :row-border-classes=\"bodyRowBorderClasses\"\n                  :cell-border-classes=\"bodyCellBorderClasses\"\n                  :stripe-enabled=\"stripeEnabled\"\n                  @row-click=\"handleRowClick\"\n                  @cell-click=\"handleCellClick\"\n                  @cell-double-click=\"handleCellDoubleClick\"\n                  @cell-right-click=\"handleCellRightClick\"\n                  @row-hover=\"setHoveredRowKey\"\n                  @row-leave=\"clearHoveredRowKey\"\n                  @toggle-selection=\"handleToggleSelection\"\n                  @row-drag-start=\"handleRowDragStart\"\n                  @row-drag-over=\"handleRowDragOver\"\n                  @row-drag-end=\"handleRowDragEnd\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <!-- Right Frozen Pane -->\n          <div\n            v-if=\"paneConfig.right.columns.length > 0\"\n            class=\"ht-pane-right flex-shrink-0 relative z-10 overflow-hidden\"\n            :style=\"{ width: `${paneConfig.right.width}px` }\"\n          >\n            <div class=\"ht-virtual-container-right relative\">\n              <BodyRow\n                v-for=\"item in processedVirtualItems\"\n                :key=\"`right-${item.row.id || item.index}`\"\n                :row=\"item.row\"\n                :columns=\"paneConfig.right.columns\"\n                :row-index=\"item.index\"\n                :virtual-item=\"item\"\n                :row-height=\"rowHeight\"\n                :focused-cell=\"focusedCell\"\n                :selected=\"item.row.id !== null && item.row.id !== undefined && selectedRows.includes(item.row.id)\"\n                :hovered-row-key=\"hoveredRowKey\"\n                :row-border-classes=\"bodyRowBorderClasses\"\n                :cell-border-classes=\"bodyCellBorderClasses\"\n                :stripe-enabled=\"stripeEnabled\"\n                @row-click=\"handleRowClick\"\n                @cell-click=\"handleCellClick\"\n                @cell-double-click=\"handleCellDoubleClick\"\n                @cell-right-click=\"handleCellRightClick\"\n                @row-hover=\"setHoveredRowKey\"\n                @row-leave=\"clearHoveredRowKey\"\n                @toggle-selection=\"handleToggleSelection\"\n                @row-drag-start=\"handleRowDragStart\"\n                @row-drag-over=\"handleRowDragOver\"\n                @row-drag-end=\"handleRowDragEnd\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.ht-body {\n  contain: layout style paint;\n}\n\n/* Shadow for pinned panes is now defined in pinned-columns.css */\n\n/* Main vertical scroll container */\n.ht-scroll-area {\n  /* Performance optimizations */\n  transform: translateZ(0);\n  will-change: scroll-position;\n}\n\n/* Horizontal scroll container for center pane */\n.ht-scroll-area-horizontal {\n  /* Performance optimizations */\n  transform: translateZ(0);\n  will-change: scroll-position;\n}\n\n.ht-virtual-wrapper {\n  position: relative;\n}\n\n.ht-panes-container {\n  position: relative;\n}\n\n.ht-virtual-container-center {\n  position: relative;\n}\n\n/* Virtual item positioning */\n.ht-body :deep(.ht-virtual-item) {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  contain: layout style paint;\n  will-change: transform;\n}\n</style>\n","<!--\n  GridFooter.vue - Grid Footer Component\n\n  Responsibilities:\n  1. Display row count and selection info\n  2. Performance metrics (development mode)\n  3. Status messages and loading indicators\n  4. Action buttons area\n\n  Vue 3 Pattern: Simple status display component\n-->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport type { RenderMetrics } from '../../../types'\n\n// Props\nconst props = defineProps<{\n  totalRows: number\n  selectedCount: number\n  renderMetrics?: RenderMetrics\n}>()\n\n// Computed\nconst statusText = computed(() => {\n  if (props.selectedCount > 0) {\n    return `${props.selectedCount} of ${props.totalRows} rows selected`\n  }\n  return `${props.totalRows.toLocaleString()} rows`\n})\n\nconst performanceText = computed(() => {\n  // Show performance metrics in development\n  const isDev = import.meta.env?.DEV ?? false\n  if (isDev && props.renderMetrics) {\n    const renderTime = props.renderMetrics.lastRenderTime.toFixed(1)\n    const fps = Math.round(props.renderMetrics.averageFPS)\n    return `Render: ${renderTime}ms | FPS: ${fps}`\n  }\n  // Placeholder performance text for development\n  return isDev ? 'Render: 2.5ms | FPS: 60' : ''\n})\n\nconst footerClasses = computed(() => [\n  'ht-grid-footer',\n  'flex items-center justify-between',\n  'px-3 py-2',\n  'bg-[var(--ht-footer-bg)]',\n  'border-t border-[var(--ht-border)]',\n  'text-sm text-[var(--ht-text-muted)]',\n  'h-10',\n])\n</script>\n\n<template>\n  <div :class=\"footerClasses\">\n    <!-- Left Section: Row Information -->\n    <div class=\"flex items-center space-x-4\">\n      <span>{{ statusText }}</span>\n\n      <!-- Performance Metrics (Development Only) -->\n      <span v-if=\"performanceText\" class=\"text-xs opacity-75\">\n        {{ performanceText }}\n      </span>\n    </div>\n\n    <!-- Right Section: Actions and Status -->\n    <div class=\"flex items-center space-x-2\">\n      <!-- Loading Indicator -->\n      <div v-if=\"false\" class=\"flex items-center space-x-2\">\n        <div class=\"animate-spin w-3 h-3 border border-[var(--ht-primary)] border-t-transparent rounded-full\" />\n        <span class=\"text-xs\">Loading...</span>\n      </div>\n\n      <!-- Action Buttons Slot -->\n      <slot name=\"actions\" />\n\n      <!-- Status Indicator -->\n      <div class=\"flex items-center space-x-1\">\n        <div class=\"ht-status-ready w-2 h-2 bg-[var(--ht-success)] rounded-full\" />\n        <span class=\"text-xs\">Ready</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.ht-grid-footer {\n  contain: layout style;\n  min-height: 40px;\n}\n\n/* Status indicator animations */\n@keyframes pulse-green {\n  0%,\n  100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.5;\n  }\n}\n\n.ht-grid-footer .ht-status-ready {\n  animation: pulse-green 2s ease-in-out infinite;\n}\n</style>\n","<!--\n  GridFooter.vue - Grid Footer Component\n\n  Responsibilities:\n  1. Display row count and selection info\n  2. Performance metrics (development mode)\n  3. Status messages and loading indicators\n  4. Action buttons area\n\n  Vue 3 Pattern: Simple status display component\n-->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport type { RenderMetrics } from '../../../types'\n\n// Props\nconst props = defineProps<{\n  totalRows: number\n  selectedCount: number\n  renderMetrics?: RenderMetrics\n}>()\n\n// Computed\nconst statusText = computed(() => {\n  if (props.selectedCount > 0) {\n    return `${props.selectedCount} of ${props.totalRows} rows selected`\n  }\n  return `${props.totalRows.toLocaleString()} rows`\n})\n\nconst performanceText = computed(() => {\n  // Show performance metrics in development\n  const isDev = import.meta.env?.DEV ?? false\n  if (isDev && props.renderMetrics) {\n    const renderTime = props.renderMetrics.lastRenderTime.toFixed(1)\n    const fps = Math.round(props.renderMetrics.averageFPS)\n    return `Render: ${renderTime}ms | FPS: ${fps}`\n  }\n  // Placeholder performance text for development\n  return isDev ? 'Render: 2.5ms | FPS: 60' : ''\n})\n\nconst footerClasses = computed(() => [\n  'ht-grid-footer',\n  'flex items-center justify-between',\n  'px-3 py-2',\n  'bg-[var(--ht-footer-bg)]',\n  'border-t border-[var(--ht-border)]',\n  'text-sm text-[var(--ht-text-muted)]',\n  'h-10',\n])\n</script>\n\n<template>\n  <div :class=\"footerClasses\">\n    <!-- Left Section: Row Information -->\n    <div class=\"flex items-center space-x-4\">\n      <span>{{ statusText }}</span>\n\n      <!-- Performance Metrics (Development Only) -->\n      <span v-if=\"performanceText\" class=\"text-xs opacity-75\">\n        {{ performanceText }}\n      </span>\n    </div>\n\n    <!-- Right Section: Actions and Status -->\n    <div class=\"flex items-center space-x-2\">\n      <!-- Loading Indicator -->\n      <div v-if=\"false\" class=\"flex items-center space-x-2\">\n        <div class=\"animate-spin w-3 h-3 border border-[var(--ht-primary)] border-t-transparent rounded-full\" />\n        <span class=\"text-xs\">Loading...</span>\n      </div>\n\n      <!-- Action Buttons Slot -->\n      <slot name=\"actions\" />\n\n      <!-- Status Indicator -->\n      <div class=\"flex items-center space-x-1\">\n        <div class=\"ht-status-ready w-2 h-2 bg-[var(--ht-success)] rounded-full\" />\n        <span class=\"text-xs\">Ready</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.ht-grid-footer {\n  contain: layout style;\n  min-height: 40px;\n}\n\n/* Status indicator animations */\n@keyframes pulse-green {\n  0%,\n  100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.5;\n  }\n}\n\n.ht-grid-footer .ht-status-ready {\n  animation: pulse-green 2s ease-in-out infinite;\n}\n</style>\n","<!--\n  TableRendererComponent.vue - Vue component wrapper for TableRenderer\n\n  This component serves as the Vue layer for the TableRenderer class,\n  providing reactive state management and DOM rendering while delegating\n  all business logic to the renderer instance.\n\n  Architecture: Dumb component that renders state and emits events\n-->\n\n<script setup lang=\"ts\">\nimport { ref, reactive, computed, onMounted, onUnmounted, watch, nextTick, provide, getCurrentInstance } from 'vue'\nimport type { VirtualRow, RendererOptions } from '../../renderers/base/renderer-interface'\nimport type { GridState, ColumnDef, TableRendererProps, CellValue, BorderMode } from '../../types'\nimport { createLogger } from '../../utils/logger'\nimport { useVirtualizer, useHorizontalVirtualizer } from '../../utils/virtualization'\nimport { GRID_INSTANCE_ID_KEY, GRID_API_KEY } from '../../utils/injection-keys'\n\n// Import existing components\nimport GridHeader from '../../components/table-renderer/header/GridHeader.vue'\nimport GridBody from '../../components/table-renderer/body/GridBody.vue'\nimport GridFooter from '../../components/table-renderer/footer/GridFooter.vue'\n\n// Props from TableRenderer class\n// Using shared TableRendererProps from layout types\n\nconst props = defineProps<TableRendererProps>()\n\nconst componentInstance = getCurrentInstance()\nconst gridInstanceId = `ht-grid-${componentInstance?.uid ?? '0'}`\nprovide(GRID_INSTANCE_ID_KEY, gridInstanceId)\n\n// Provide gridAPI to child components (especially DragCell)\nprovide(GRID_API_KEY, props.gridAPI)\n\n// Border mode from grid config (with default fallback)\nconst borderMode = computed<BorderMode>(() => {\n  return renderState.state?.config?.border ?? 'default'\n})\n\n// Stripe mode from grid config (with default fallback)\nconst stripeMode = computed<boolean>(() => {\n  return renderState.state?.config?.stripe ?? false\n})\n\n// Border classes computed properties\nconst tableRootBorderClasses = computed(() => {\n  const mode = borderMode.value\n  switch (mode) {\n    case 'none':\n      return ''\n    case 'outer':\n    case 'full':\n    case 'default':\n    default:\n      return 'border border-[var(--ht-border)] rounded-md'\n  }\n})\n\nconst headerCellBorderClasses = computed(() => {\n  const mode = borderMode.value\n  switch (mode) {\n    case 'full':\n      return 'border-r border-[var(--ht-border)] last:border-r-0'\n    case 'default':\n    case 'none':\n    case 'outer':\n    default:\n      return ''\n  }\n})\n\nconst bodyRowBorderClasses = computed(() => {\n  const mode = borderMode.value\n  switch (mode) {\n    case 'full':\n    case 'default':\n      return 'border-b border-[var(--ht-border)]'\n    case 'none':\n    case 'outer':\n    default:\n      return ''\n  }\n})\n\nconst bodyCellBorderClasses = computed(() => {\n  const mode = borderMode.value\n  switch (mode) {\n    case 'full':\n      return 'border-r border-[var(--ht-border)] last:border-r-0'\n    case 'default':\n    case 'none':\n    case 'outer':\n    default:\n      return ''\n  }\n})\n\n// Logger for component\nconst logger = createLogger('TableRendererComponent')\n\n// Component refs\nconst containerRef = ref<HTMLElement>()\nconst headerRef = ref<InstanceType<typeof GridHeader>>()\nconst bodyRef = ref<InstanceType<typeof GridBody>>()\nconst footerRef = ref<InstanceType<typeof GridFooter>>()\nconst horizontalScrollbarRef = ref<HTMLElement>() // Reference to the external horizontal scrollbar element\nconst containerWidth = ref(0)\n\n// Check if content is overflowing the container\nconst isContentOverflowing = computed(() => {\n  if (!containerRef.value) return false\n  // Ensure we compare against the sum of pane widths, not the virtualizer total\n  const totalContentWidth = paneConfig.value.left.width + paneConfig.value.center.width + paneConfig.value.right.width\n  return totalContentWidth > containerWidth.value\n})\n\n// Reactive state for rendering\nconst renderState = reactive({\n  state: null as GridState | null,\n  columns: [] as ColumnDef[],\n  rows: [] as VirtualRow[],\n  loading: false,\n  error: null as string | null,\n})\n\n// Configuration state with proper typing\nconst config = reactive<RendererOptions>({\n  ...props.options,\n})\n\n// Layout calculations\n// P0-2 Optimization: Reuse paneConfig width calculations instead of redundant reduce\n// Cache scrollbar height in a ref, update on mount and resize\nconst scrollbarHeight = ref(8)\nconst updateScrollbarHeight = () => {\n  const value = parseInt(getComputedStyle(document.documentElement).getPropertyValue('--ht-scrollbar-height'))\n  scrollbarHeight.value = isNaN(value) ? 8 : value\n}\n\nonMounted(() => {\n  updateScrollbarHeight()\n  window.addEventListener('resize', updateScrollbarHeight)\n})\n\nonUnmounted(() => {\n  window.removeEventListener('resize', updateScrollbarHeight)\n})\n\nconst layoutMetrics = computed(() => {\n  if (!renderState.state) {\n    return {\n      totalWidth: 0,\n      headerHeight: 40,\n      rowHeight: 32,\n      bodyHeight: `calc(100% - 80px - var(--ht-scrollbar-height, 8px))`, // Adjusted for scrollbar\n    }\n  }\n\n  const { config: gridConfig } = renderState.state\n  const pane = paneConfig.value // Reuse already computed widths\n\n  const footerHeight = config.layout?.showFooter !== false ? 40 : 0\n\n  return {\n    totalWidth: pane.left.width + pane.center.width + pane.right.width,\n    headerHeight: gridConfig.headerHeight,\n    rowHeight: gridConfig.rowHeight,\n    bodyHeight: `calc(100% - ${gridConfig.headerHeight}px - ${footerHeight}px - ${scrollbarHeight.value}px)`,\n  }\n})\n\n// Pane configuration for three-pane layout\n// P0-1 Optimization: Single-pass O(n) instead of 3 filters + 3 reduces = O(6n)\nconst paneConfig = computed(() => {\n  const config = {\n    left: { columns: [] as ColumnDef[], width: 0 },\n    center: { columns: [] as ColumnDef[], width: 0 },\n    right: { columns: [] as ColumnDef[], width: 0 },\n  }\n\n  // Single-pass iteration: classify and accumulate width simultaneously\n  for (const col of renderState.columns) {\n    const width = col.width || 150\n\n    if (col.pinned === 'left') {\n      config.left.columns.push(col)\n      config.left.width += width\n    } else if (col.pinned === 'right') {\n      config.right.columns.push(col)\n      config.right.width += width\n    } else {\n      config.center.columns.push(col)\n      config.center.width += width\n    }\n  }\n\n  // Mark the last left-pinned and first right-pinned columns for styling\n  if (config.left.columns.length > 0) {\n    const lastLeft = config.left.columns[config.left.columns.length - 1] as any\n    lastLeft.isLastPinned = true\n  }\n  if (config.right.columns.length > 0) {\n    const firstRight = config.right.columns[0] as any\n    firstRight.isFirstRightPinned = true\n  }\n\n  return config\n})\n\n// Scroll state management\nconst scrollState = ref({\n  scrollLeft: 0,\n  scrollTop: 0,\n})\n\n// 用于防止循环同步的标志\nlet isSyncingScroll = false\n\n// Selection state with version tracking for optimized reactivity\nconst selectionState = reactive({\n  selectedIds: new Set<string | number>(),\n  activeId: null as string | number | null,\n})\n\n// P1-1 Optimization: Version-based tracking to avoid deep watch overhead\nconst selectionVersion = ref(0)\nconst cleanupFns: Array<() => void> = []\n\n// Virtualization: Vertical (rows)\nconst verticalVirtualizer = useVirtualizer({\n  count: computed(() => renderState.rows.length),\n  getItemSize: () => layoutMetrics.value.rowHeight,\n  estimateItemSize: () => layoutMetrics.value.rowHeight,\n  overscan: 5,\n  enabled: computed(() => renderState.rows.length > 20),\n})\n\n// Virtualization: Horizontal (columns) - only for center pane\nconst horizontalVirtualizer = useHorizontalVirtualizer({\n  columns: computed(() => paneConfig.value.center.columns),\n  getColumnWidth: index => {\n    const column = paneConfig.value.center.columns[index]\n    return column?.width || 150\n  },\n  overscan: 3,\n  enabled: computed(() => paneConfig.value.center.columns.length > 20),\n})\n\n// P1-2 Optimization: Extract virtual data to computed to avoid repeated calculations\n// Prevents object creation and map() execution on every render cycle\n// Expected performance gain: 15% rendering performance, reduced GC pressure\nconst virtualizedData = computed<import('../../types').VirtualData>(() => ({\n  visibleRows: renderState.rows.map((vr: VirtualRow) => vr.data || vr),\n  startIndex: verticalVirtualizer.startIndex.value,\n  endIndex: verticalVirtualizer.endIndex.value,\n  totalHeight: verticalVirtualizer.totalSize.value,\n}))\n\n// P2-3 Optimization: Row index map cache for O(1) lookup in ensureVisible\n// Performance gain: O(n) → O(1) row lookup, significant for large datasets\n// Use case: Smart scrolling, navigation, focus management\nconst rowIndexMap = computed(() => {\n  const map = new Map<string, number>()\n  renderState.rows.forEach((row, index) => {\n    const data = row.data || row\n    const id = String(data.id || data.rowId)\n    map.set(id, index)\n  })\n  return map\n})\n\n/**\n * Methods exposed to TableRenderer class\n */\n\n// Update state from renderer\nconst updateState = (state: GridState, columns: ColumnDef[], rows: VirtualRow[]) => {\n  renderState.state = state\n  renderState.columns = columns\n  renderState.rows = rows\n  renderState.loading = state.loading\n  renderState.error = state.error\n}\n\n// Update selection\n// P1-1 Optimization: Increment version to trigger shallow watchers\nconst updateSelection = (selectedIds: Set<string | number>, _reason: 'programmatic' | 'user') => {\n  selectionState.selectedIds = new Set(selectedIds)\n  selectionVersion.value++ // Trigger version-based reactivity\n}\n\n// Set active cell/row\nconst setActive = (activeId: string | number | null) => {\n  selectionState.activeId = activeId\n}\n\n// Update scroll position\nconst updateScrollPosition = (position: { top: number; left: number }) => {\n  scrollState.value = {\n    scrollLeft: position.left,\n    scrollTop: position.top,\n  }\n}\n\n/**\n * Handle resize events with error boundary\n * @param width - New container width\n * @param height - New container height\n */\nconst resize = (width: number, height: number) => {\n  try {\n    containerWidth.value = width\n    // Update virtualizer container sizes\n    nextTick(() => {\n      if (containerRef.value) {\n        // Update vertical virtualizer\n        verticalVirtualizer.setContainerSize({ height, width })\n\n        // Update horizontal virtualizer\n        horizontalVirtualizer.setContainerSize({ width, height })\n\n        // Force recalculation of virtual scrolling\n        if (bodyRef.value?.recalculate) {\n          bodyRef.value.recalculate()\n        }\n      }\n    })\n  } catch (error) {\n    logger.error('Resize failed:', { module: 'TableRendererComponent' }, error)\n  }\n}\n\n// Update configuration\nconst updateConfig = (newConfig: RendererOptions) => {\n  Object.assign(config, newConfig)\n}\n\n// Edit mode management\nconst enterEditMode = async (id: string | number): Promise<boolean> => {\n  try {\n    // Delegate to body component for edit mode\n    if (bodyRef.value?.enterEditMode) {\n      return await bodyRef.value.enterEditMode(id)\n    }\n    return false\n  } catch (error) {\n    logger.error('Failed to enter edit mode:', { module: 'TableRendererComponent' }, error)\n    return false\n  }\n}\n\nconst completeEdit = async (id: string | number, value: CellValue): Promise<boolean> => {\n  try {\n    if (bodyRef.value?.completeEdit) {\n      return await bodyRef.value.completeEdit(id, value)\n    }\n    return false\n  } catch (error) {\n    logger.error('Failed to complete edit:', { module: 'TableRendererComponent' }, error)\n    return false\n  }\n}\n\nconst cancelEdit = (id: string | number) => {\n  if (bodyRef.value?.cancelEdit) {\n    bodyRef.value.cancelEdit(id)\n  }\n}\n\n/**\n * Unified edit mode API\n * @param id - Cell or row ID\n * @param mode - 'enter' to start editing, 'exit' to cancel\n * @returns Promise resolving to success status\n */\nconst toggleEditMode = async (id: string | number, mode: 'enter' | 'exit'): Promise<boolean> => {\n  try {\n    if (mode === 'enter') {\n      return await enterEditMode(id)\n    } else if (mode === 'exit') {\n      cancelEdit(id)\n      return true\n    }\n    return false\n  } catch (error) {\n    logger.error('Toggle edit mode failed:', { module: 'TableRendererComponent', id, mode }, error)\n    return false\n  }\n}\n\n/**\n * Task 1: Smart scrolling - Programmatically scroll to a specific row or cell\n * Implements GridInteractionContract.ensureVisible method\n * @param id - Row ID or cell ID (format: \"rowId_columnId\")\n * @param behavior - Scroll behavior: 'smooth' or 'auto'\n */\nconst ensureVisible = (id: string | number, behavior: 'smooth' | 'auto' = 'auto') => {\n  try {\n    if (!containerRef.value) {\n      logger.warn('Cannot scroll: container not mounted', { id })\n      return\n    }\n\n    // Parse id to determine if it's a cell (rowId_columnId) or row (rowId)\n    const idStr = String(id)\n    const parts = idStr.split('_')\n    const rowId = parts[0] || ''\n\n    // P2-3 Optimization: Use O(1) map lookup instead of O(n) findIndex\n    // Performance gain: Significant for large datasets (1000+ rows)\n    const rowIndex = rowIndexMap.value.get(rowId) ?? -1\n\n    if (rowIndex === -1) {\n      logger.warn('Row not found for ensureVisible', { id, rowId })\n      return\n    }\n\n    // Calculate scroll position using layout metrics\n    const headerHeight = layoutMetrics.value.headerHeight\n    const rowHeight = layoutMetrics.value.rowHeight\n    const targetScrollTop = rowIndex * rowHeight\n\n    // Get container and body dimensions\n    const containerRect = containerRef.value.getBoundingClientRect()\n    const visibleHeight = containerRect.height - headerHeight - 40 // minus footer\n\n    // Check if already visible\n    const currentScrollTop = scrollState.value.scrollTop\n    const isVisible =\n      targetScrollTop >= currentScrollTop && targetScrollTop + rowHeight <= currentScrollTop + visibleHeight\n\n    if (isVisible) {\n      logger.debug('Row already visible', { rowIndex, id })\n      return\n    }\n\n    // Scroll to make row visible\n    // Use the body's scroll container if available\n    const scrollContainer = bodyRef.value?.$el?.querySelector('.ht-scroll-area') || containerRef.value\n\n    scrollContainer.scrollTo({\n      top: targetScrollTop,\n      behavior,\n    })\n\n    logger.debug('Scrolled to row', { rowIndex, targetScrollTop, behavior })\n\n    // If it's a cell, also handle horizontal scroll\n    if (parts.length >= 2) {\n      const columnId = parts[1]\n      const columnIndex = renderState.columns.findIndex(col => col.id === columnId)\n\n      if (columnIndex !== -1) {\n        const targetScrollLeft = renderState.columns\n          .slice(0, columnIndex)\n          .reduce((sum, col) => sum + (col.width || 150), 0)\n\n        scrollContainer.scrollTo({\n          left: targetScrollLeft,\n          behavior,\n        })\n\n        logger.debug('Scrolled to cell', { rowIndex, columnIndex, targetScrollLeft })\n      }\n    }\n  } catch (error) {\n    logger.error('Error in ensureVisible:', { module: 'TableRendererComponent' }, error)\n  }\n}\n\n/**\n * Task 2: Force re-render - Recalculate virtualizers and force component update\n * Implements GridInteractionContract.refresh method\n */\nconst refresh = () => {\n  try {\n    nextTick(() => {\n      if (!containerRef.value) return\n\n      // Get current container dimensions\n      const rect = containerRef.value.getBoundingClientRect()\n\n      // Recalculate vertical virtualizer\n      verticalVirtualizer.setContainerSize({\n        height: rect.height,\n        width: rect.width,\n      })\n\n      // Recalculate horizontal virtualizer\n      horizontalVirtualizer.setContainerSize({\n        width: rect.width,\n        height: rect.height,\n      })\n\n      // Force body component to recalculate if method exists\n      if (bodyRef.value?.recalculate) {\n        bodyRef.value.recalculate()\n      }\n\n      // Update scroll positions to trigger re-render\n      const currentScroll = scrollState.value\n      verticalVirtualizer.updateScrollPosition(currentScroll.scrollTop)\n      horizontalVirtualizer.updateScrollPosition(currentScroll.scrollLeft)\n\n      logger.debug('Refresh completed', {\n        containerSize: { width: rect.width, height: rect.height },\n        rowCount: renderState.rows.length,\n        columnCount: renderState.columns.length,\n      })\n    })\n  } catch (error) {\n    logger.error('Error in refresh:', { module: 'TableRendererComponent' }, error)\n  }\n}\n\n/**\n * Task 3: Core interaction callbacks\n * These handlers transform low-level interaction events into high-level grid events\n */\n\n/**\n * Handle cell click events\n */\nconst handleCellClick = (payload: import('../../types').InteractionPayload) => {\n  try {\n    if (!payload.position) return\n\n    const virtualRow = renderState.rows[payload.position.rowIndex]\n    if (!virtualRow) return\n\n    // Extract RowData from VirtualRow\n    const row: import('../../types').RowData = virtualRow.data || virtualRow\n    const column = renderState.columns.find(col => col.id === payload.position?.columnId)\n\n    if (row && column) {\n      props.gridAPI.emit('cell-click', {\n        row,\n        column,\n        value: row[column.field],\n      })\n    }\n  } catch (error) {\n    logger.error('Error in handleCellClick:', { module: 'TableRendererComponent' }, error)\n  }\n}\n\n/**\n * Handle cell double-click events\n */\nconst handleCellDoubleClick = (payload: import('../../types').InteractionPayload) => {\n  try {\n    if (!payload.position) return\n\n    const virtualRow = renderState.rows[payload.position.rowIndex]\n    if (!virtualRow) return\n\n    // Extract RowData from VirtualRow\n    const row: import('../../types').RowData = virtualRow.data || virtualRow\n    const column = renderState.columns.find(col => col.id === payload.position?.columnId)\n\n    if (row && column) {\n      props.gridAPI.emit('cell-double-click', {\n        row,\n        column,\n        value: row[column.field],\n      })\n    }\n  } catch (error) {\n    logger.error('Error in handleCellDoubleClick:', { module: 'TableRendererComponent' }, error)\n  }\n}\n\n/**\n * Handle cell right-click events\n */\nconst handleCellRightClick = (payload: import('../../types').InteractionPayload) => {\n  try {\n    if (!payload.position) return\n\n    const virtualRow = renderState.rows[payload.position.rowIndex]\n    if (!virtualRow) return\n\n    // Extract RowData from VirtualRow\n    const row: import('../../types').RowData = virtualRow.data || virtualRow\n    const column = renderState.columns.find(col => col.id === payload.position?.columnId)\n\n    if (row && column) {\n      props.gridAPI.emit('cell-right-click', {\n        row,\n        column,\n        value: row[column.field],\n      })\n    }\n  } catch (error) {\n    logger.error('Error in handleCellRightClick:', { module: 'TableRendererComponent' }, error)\n  }\n}\n\n/**\n * Handle row selection events\n * P1-1 Optimization: Increment version after selection mutation\n */\nconst handleRowSelect = (payload: import('../../types').InteractionPayload) => {\n  try {\n    if (!payload.position) return\n\n    const rowId = payload.position.rowId\n    const isSelected = selectionState.selectedIds.has(rowId)\n\n    // Toggle selection\n    if (isSelected) {\n      selectionState.selectedIds.delete(rowId)\n    } else {\n      selectionState.selectedIds.add(rowId)\n    }\n\n    // Increment version to trigger watchers\n    selectionVersion.value++\n\n    // Selection change will be handled by the watch() below\n    logger.debug('Row selection toggled', { rowId, selected: !isSelected })\n  } catch (error) {\n    logger.error('Error in handleRowSelect:', { module: 'TableRendererComponent' }, error)\n  }\n}\n\nconst selectAllVisibleRows = () => {\n  try {\n    let changed = false\n\n    // Find checkbox column configuration\n    const checkboxColumn = renderState.columns.find(col => (col as any).type === 'checkbox')\n\n    renderState.rows.forEach(vr => {\n      const row = (vr as any).data || vr\n      const rowId =\n        row?.id ??\n        row?.rowId ??\n        (vr as any)?.key ??\n        (typeof (vr as any)?.index === 'number' ? (vr as any).index : null)\n\n      if (rowId === null || selectionState.selectedIds.has(rowId)) {\n        return // Skip if no rowId or already selected\n      }\n\n      // Check if row is selectable based on checkbox column condition\n      const isSelectable = isRowSelectable(row, checkboxColumn)\n\n      if (isSelectable) {\n        selectionState.selectedIds.add(rowId)\n        changed = true\n      }\n    })\n\n    if (changed) {\n      selectionVersion.value++\n    }\n\n    props.gridAPI.emit('select-all', { count: selectionState.selectedIds.size })\n    logger.debug('All rows selected via header', { count: selectionState.selectedIds.size })\n  } catch (error) {\n    logger.error('Error selecting all rows:', { module: 'TableRendererComponent' }, error)\n  }\n}\n\n/**\n * Helper function to check if a row is selectable based on checkbox column condition\n * This implements the same logic as CheckboxCell.selectabilityResult\n */\nfunction isRowSelectable(row: any, column?: any): boolean {\n  if (!column) return true\n\n  // Use condition from column definition (top-level)\n  if (column.condition) {\n    return column.condition(row)\n  }\n\n  return true\n}\n\n/**\n * Calculate the total number of selectable rows based on checkbox column condition\n * This is used to correctly determine if all selectable rows are selected\n */\nconst totalSelectableRows = computed(() => {\n  // Find checkbox column\n  const checkboxColumn = renderState.columns.find(col => (col as any).type === 'checkbox')\n\n  // If no checkbox column or no condition, all rows are selectable\n  if (!checkboxColumn || !checkboxColumn.condition) {\n    return renderState.rows.length\n  }\n\n  // Count rows that pass the condition\n  let count = 0\n  renderState.rows.forEach(vr => {\n    const row = (vr as any).data || vr\n    if (isRowSelectable(row, checkboxColumn)) {\n      count++\n    }\n  })\n\n  return count\n})\n\nconst clearAllSelection = (reason?: string) => {\n  try {\n    const previousCount = selectionState.selectedIds.size\n    if (previousCount === 0) {\n      return\n    }\n\n    selectionState.selectedIds.clear()\n    selectionVersion.value++\n    props.gridAPI.emit('selection-clear', { previousCount })\n    logger.debug('Selection cleared', { reason, previousCount })\n  } catch (error) {\n    logger.error('Error clearing selection:', { module: 'TableRendererComponent' }, error)\n  }\n}\n\n/**\n * Handle select all rows event from checkbox header\n */\nconst handleSelectAll = () => {\n  selectAllVisibleRows()\n}\n\n/**\n * Handle clear selection event from checkbox header\n */\nconst handleClearSelection = () => {\n  clearAllSelection('header-action')\n}\n\n/**\n * Get current rendering state snapshot (for debugging)\n * @returns Current state including render state, scroll position, and selection\n */\nconst getCurrentState = () => {\n  return {\n    state: renderState.state,\n    columns: renderState.columns,\n    rows: renderState.rows,\n    loading: renderState.loading,\n    error: renderState.error,\n    scrollPosition: scrollState.value,\n    selection: {\n      selectedIds: Array.from(selectionState.selectedIds),\n      activeId: selectionState.activeId,\n    },\n    layout: {\n      metrics: layoutMetrics.value,\n      paneConfig: paneConfig.value,\n    },\n    virtualization: {\n      vertical: {\n        startIndex: verticalVirtualizer.startIndex.value,\n        endIndex: verticalVirtualizer.endIndex.value,\n        totalSize: verticalVirtualizer.totalSize.value,\n      },\n      horizontal: {\n        startIndex: horizontalVirtualizer.startIndex.value,\n        endIndex: horizontalVirtualizer.endIndex.value,\n        totalWidth: horizontalVirtualizer.totalWidth.value,\n      },\n    },\n  }\n}\n\n/**\n * Get configuration schema definition\n * @returns Configuration metadata with types and defaults\n */\nconst getConfigSchema = (): Record<string, any> => {\n  return {\n    performance: {\n      type: 'object',\n      properties: {\n        enableRAF: { type: 'boolean', default: true, description: 'Use requestAnimationFrame for rendering' },\n        batchUpdates: { type: 'boolean', default: true, description: 'Batch multiple updates together' },\n        maxConcurrentRenders: { type: 'number', default: 3, description: 'Maximum concurrent render operations' },\n      },\n    },\n    accessibility: {\n      type: 'object',\n      properties: {\n        enableAria: { type: 'boolean', default: true, description: 'Enable ARIA attributes' },\n        announceChanges: { type: 'boolean', default: true, description: 'Announce changes to screen readers' },\n        keyboardNavigation: { type: 'boolean', default: true, description: 'Enable keyboard navigation' },\n      },\n    },\n    layout: {\n      type: 'object',\n      properties: {\n        showHeader: { type: 'boolean', default: true, description: 'Show table header' },\n        showFooter: { type: 'boolean', default: true, description: 'Show table footer' },\n        enablePanes: { type: 'boolean', default: true, description: 'Enable frozen panes' },\n        stickyHeader: { type: 'boolean', default: true, description: 'Make header sticky on scroll' },\n      },\n    },\n    theme: {\n      type: 'object',\n      properties: {\n        className: { type: 'string', default: '', description: 'Custom theme class name' },\n      },\n    },\n  }\n}\n\n/**\n * Event handlers for interaction delegation\n */\n\n/**\n * Handle scroll events from GridBody.\n * This is for VERTICAL scroll and HORIZONTAL scroll from touchpad/wheel.\n */\nconst handleScroll = (event: Event) => {\n  if (isSyncingScroll) return\n\n  try {\n    const target = event.target as HTMLElement\n    const scrollLeft = target.scrollLeft\n    const scrollTop = target.scrollTop\n\n    isSyncingScroll = true\n\n    // Update local scroll state\n    scrollState.value = { scrollLeft, scrollTop }\n\n    // Sync external horizontal scrollbar\n    if (horizontalScrollbarRef.value && horizontalScrollbarRef.value.scrollLeft !== scrollLeft) {\n      horizontalScrollbarRef.value.scrollLeft = scrollLeft\n    }\n\n    // Update virtualizers\n    verticalVirtualizer.updateScrollPosition(scrollTop)\n    horizontalVirtualizer.updateScrollPosition(scrollLeft)\n\n    // Update interaction contract and emit public scroll event\n    props.interactionContract.updateScrollPosition?.({ left: scrollLeft, top: scrollTop })\n    props.interactionContract.emit?.('scroll' as any, { left: scrollLeft, top: scrollTop } as any)\n\n    nextTick(() => {\n      isSyncingScroll = false\n    })\n  } catch (error) {\n    logger.error('Scroll handling failed:', { module: 'TableRendererComponent' }, error)\n    isSyncingScroll = false\n  }\n}\n\n/**\n * Handle scroll events from the new external horizontal scrollbar.\n */\nconst handleHorizontalScroll = (event: Event) => {\n  if (isSyncingScroll) return\n\n  try {\n    const target = event.target as HTMLElement\n    const scrollLeft = target.scrollLeft\n\n    isSyncingScroll = true\n\n    // Update local scroll state\n    scrollState.value.scrollLeft = scrollLeft\n\n    // Sync body content scroll\n    if (bodyRef.value?.centerScrollArea && bodyRef.value.centerScrollArea.scrollLeft !== scrollLeft) {\n      bodyRef.value.centerScrollArea.scrollLeft = scrollLeft\n    }\n\n    // Update virtualizer\n    horizontalVirtualizer.updateScrollPosition(scrollLeft)\n\n    // Update interaction contract and emit public scroll event\n    props.interactionContract.updateScrollPosition?.({ left: scrollLeft, top: scrollState.value.scrollTop })\n    props.interactionContract.emit?.('scroll' as any, { left: scrollLeft, top: scrollState.value.scrollTop } as any)\n\n    nextTick(() => {\n      isSyncingScroll = false\n    })\n  } catch (error) {\n    logger.error('Horizontal scrollbar handling failed:', { module: 'TableRendererComponent' }, error)\n    isSyncingScroll = false\n  }\n}\n\n/**\n * Handle header scroll events and sync to body and new scrollbar\n * @param scrollLeft - New scroll left position from header\n */\nconst handleHeaderScroll = (scrollLeft: number) => {\n  if (isSyncingScroll) return\n\n  try {\n    isSyncingScroll = true\n\n    // Update local scroll state\n    scrollState.value.scrollLeft = scrollLeft\n\n    // Sync body scroll through bodyRef\n    if (bodyRef.value?.centerScrollArea && bodyRef.value.centerScrollArea.scrollLeft !== scrollLeft) {\n      bodyRef.value.centerScrollArea.scrollLeft = scrollLeft\n    }\n\n    // Sync external horizontal scrollbar\n    if (horizontalScrollbarRef.value && horizontalScrollbarRef.value.scrollLeft !== scrollLeft) {\n      horizontalScrollbarRef.value.scrollLeft = scrollLeft\n    }\n\n    // Update horizontal virtualizer\n    horizontalVirtualizer.updateScrollPosition(scrollLeft)\n\n    // Update interaction contract\n    props.interactionContract.updateScrollPosition?.({\n      left: scrollLeft,\n      top: scrollState.value.scrollTop,\n    })\n\n    nextTick(() => {\n      isSyncingScroll = false\n    })\n  } catch (error) {\n    logger.error('Header scroll handling failed:', { module: 'TableRendererComponent' }, error)\n    isSyncingScroll = false\n  }\n}\n\n/**\n * Handle sort indicator focus - TAB 键跳转时确保可见\n * @param field - 获得焦点的列字段\n */\nconst handleSortIndicatorFocus = (field: string) => {\n  try {\n    if (!bodyRef.value) return\n\n    // 找到对应的列\n    const column = renderState.columns.find(col => col.field === field)\n    if (!column) return\n\n    // 计算列的位置\n    const columnIndex = paneConfig.value.center.columns.findIndex(col => col.field === field)\n    if (columnIndex === -1) return // 不在中心面板\n\n    const scrollPosition = paneConfig.value.center.columns\n      .slice(0, columnIndex)\n      .reduce((sum, col) => sum + (col.width || 150), 0)\n\n    const columnWidth = column.width || 150\n\n    // 获取 Body 的横向滚动容器\n    const bodyScrollContainer = bodyRef.value.$el?.querySelector('.ht-scroll-area-horizontal')\n    if (!bodyScrollContainer) return\n\n    const containerWidth = bodyScrollContainer.clientWidth\n    const currentScroll = bodyScrollContainer.scrollLeft\n\n    // 检查列是否完全可见\n    const isFullyVisible =\n      scrollPosition >= currentScroll && scrollPosition + columnWidth <= currentScroll + containerWidth\n\n    if (!isFullyVisible) {\n      // 平滑滚动到目标位置\n      bodyScrollContainer.scrollTo({\n        left: scrollPosition,\n        behavior: 'smooth',\n      })\n    }\n  } catch (error) {\n    logger.error('Sort indicator focus handling failed:', { module: 'TableRendererComponent' }, error)\n  }\n}\n\n// Note: Row/cell interactions are handled by the interaction contract system\n\n// Keyboard navigation\nconst handleKeyDown = (event: KeyboardEvent) => {\n  const { activeId } = selectionState\n\n  if (!activeId) return\n\n  switch (event.key) {\n    case 'ArrowDown':\n    case 'ArrowUp':\n    case 'ArrowLeft':\n    case 'ArrowRight':\n      event.preventDefault()\n      // Handle navigation through interaction contract\n      break\n    case 'Enter':\n      event.preventDefault()\n      enterEditMode(activeId)\n      break\n    case 'Escape':\n      event.preventDefault()\n      cancelEdit(activeId)\n      break\n  }\n}\n\n/**\n * Lifecycle hooks\n */\n\nonMounted(() => {\n  try {\n    // Setup interaction contract event emitter\n    props.interactionContract.registerEventEmitter?.((eventName, payload) => {\n      props.gridAPI.emit(eventName as keyof import('../../types').GridEvents, payload)\n    })\n\n    // Register core logic callbacks with interaction contract\n    // This enables the interaction contract to call these handlers\n    if (props.interactionContract.registerCoreCallbacks) {\n      props.interactionContract.registerCoreCallbacks({\n        onCellClick: handleCellClick,\n        onCellDoubleClick: handleCellDoubleClick,\n        onCellRightClick: handleCellRightClick,\n        onRowSelect: handleRowSelect,\n      })\n      logger.debug('Core interaction callbacks registered', { module: 'TableRendererComponent' })\n    }\n\n    const toggleSelectionOff = props.gridAPI.on?.('toggle-selection', payload => {\n      const rowId = payload?.rowId ?? null\n      if (rowId === null) {\n        logger.warn('toggle-selection event missing rowId', payload)\n        return\n      }\n\n      if (payload.selectionType === 'radio') {\n        const alreadySelected = selectionState.selectedIds.has(rowId)\n        if (alreadySelected) {\n          return\n        }\n        selectionState.selectedIds.clear()\n        selectionState.selectedIds.add(rowId)\n      } else {\n        if (selectionState.selectedIds.has(rowId)) {\n          selectionState.selectedIds.delete(rowId)\n        } else {\n          selectionState.selectedIds.add(rowId)\n        }\n      }\n\n      selectionState.activeId = rowId\n      selectionVersion.value++\n      logger.debug('Selection toggled via toggle-selection event', {\n        rowId,\n        selectionType: payload.selectionType,\n        selected: selectionState.selectedIds.has(rowId),\n      })\n    })\n    if (toggleSelectionOff) {\n      cleanupFns.push(toggleSelectionOff)\n    }\n\n    const clearSelectionOff = props.gridAPI.on?.('clear-selection', payload => {\n      clearAllSelection(payload?.reason)\n    })\n    if (clearSelectionOff) {\n      cleanupFns.push(clearSelectionOff)\n    }\n\n    // Initialize virtualizer container sizes\n    nextTick(() => {\n      try {\n        if (containerRef.value) {\n          const rect = containerRef.value.getBoundingClientRect()\n          verticalVirtualizer.setContainerSize({ height: rect.height, width: rect.width })\n          horizontalVirtualizer.setContainerSize({ width: rect.width, height: rect.height })\n        }\n\n        // Connect scroll element refs to virtualizers\n        if (bodyRef.value) {\n          // GridBody will handle scroll element binding\n          logger.debug('Virtualizers initialized', {\n            rowCount: renderState.rows.length,\n            columnCount: renderState.columns.length,\n          })\n        }\n      } catch (error) {\n        logger.error('Virtualizer initialization failed:', { module: 'TableRendererComponent' }, error)\n      }\n    })\n\n    // Setup resize observer\n    if (containerRef.value) {\n      const resizeObserver = new ResizeObserver(entries => {\n        try {\n          for (const entry of entries) {\n            const { height, width } = entry.contentRect\n            resize(width, height)\n          }\n        } catch (error) {\n          logger.error('ResizeObserver callback failed:', { module: 'TableRendererComponent' }, error)\n        }\n      })\n\n      resizeObserver.observe(containerRef.value)\n\n      // Cleanup on unmount\n      onUnmounted(() => {\n        resizeObserver.disconnect()\n      })\n    }\n  } catch (error) {\n    logger.error('Mount initialization failed:', { module: 'TableRendererComponent' }, error)\n  }\n})\n\n// P1-1 Optimization: Use version-based shallow watch instead of deep watch\n// Performance gain: ~20% reduction in selection operation overhead\n// Previous: O(n) deep comparison of Set on every change\n// Current: O(1) number comparison + lazy emission only when needed\nlet previousSelectionIds = new Set<string | number>()\n\nwatch(selectionVersion, () => {\n  const currentIds = selectionState.selectedIds\n\n  // Skip if no actual change (safety check)\n  if (currentIds === previousSelectionIds) return\n\n  // Emit for each selected row change\n  const newIds = Array.from(currentIds)\n  const oldIds = Array.from(previousSelectionIds)\n\n  // Find newly selected rows\n  const added = newIds.filter(id => !oldIds.includes(id))\n  const removed = oldIds.filter(id => !newIds.includes(id))\n\n  // Emit events for added selections\n  added.forEach(rowId => {\n    props.gridAPI.emit('row-select', {\n      rowId,\n      selected: true,\n      selectedRows: newIds,\n    })\n  })\n\n  // Emit events for removed selections\n  removed.forEach(rowId => {\n    props.gridAPI.emit('row-select', {\n      rowId,\n      selected: false,\n      selectedRows: newIds,\n    })\n  })\n\n  // Update previous selection for next comparison\n  previousSelectionIds = new Set(currentIds)\n})\n\nwatch(\n  () => selectionState.activeId,\n  (newActiveId, oldActiveId) => {\n    if (newActiveId !== oldActiveId) {\n      // Parse activeId to rowId and columnId\n      let rowId: string | number | null = null\n      let columnId: string | null = null\n\n      if (newActiveId) {\n        const parts = String(newActiveId).split('_')\n        if (parts.length >= 2) {\n          rowId = parts[0] || null\n          columnId = parts[1] || null\n        }\n      }\n\n      props.gridAPI.emit('cell-focus-change', {\n        rowId,\n        columnId,\n      })\n    }\n  }\n)\n\nonUnmounted(() => {\n  cleanupFns.forEach(cleanup => {\n    try {\n      cleanup()\n    } catch (error) {\n      logger.error('Cleanup handler failed during unmount', { module: 'TableRendererComponent' }, error)\n    }\n  })\n  cleanupFns.length = 0\n})\n\n// Expose methods to parent renderer\ndefineExpose({\n  // State management\n  updateState,\n  updateSelection,\n  setActive,\n  updateScrollPosition,\n  updateConfig,\n\n  // Layout management\n  resize,\n  refresh,\n  ensureVisible,\n\n  // Edit mode APIs\n  enterEditMode,\n  completeEdit,\n  cancelEdit,\n  toggleEditMode,\n\n  // Interaction handlers (for InteractionContract registration)\n  handleCellClick,\n  handleCellDoubleClick,\n  handleCellRightClick,\n  handleRowSelect,\n\n  // Debug and utility APIs\n  getCurrentState,\n  getConfigSchema,\n})\n</script>\n\n<template>\n  <div\n    ref=\"containerRef\"\n    class=\"ht-table-renderer-component h-full w-full flex flex-col\"\n    :class=\"[config.theme?.className, tableRootBorderClasses]\"\n    :data-border-mode=\"borderMode\"\n    tabindex=\"0\"\n    role=\"grid\"\n    :aria-rowcount=\"renderState.rows.length\"\n    :aria-colcount=\"renderState.columns.length\"\n    @keydown=\"handleKeyDown\"\n  >\n    <!-- Header Section -->\n    <GridHeader\n      v-if=\"config.layout?.showHeader !== false\"\n      ref=\"headerRef\"\n      :columns=\"renderState.columns\"\n      :pane-config=\"paneConfig\"\n      :scroll-left=\"scrollState.scrollLeft\"\n      :height=\"layoutMetrics.headerHeight\"\n      :is-content-overflowing=\"isContentOverflowing\"\n      :grid-a-p-i=\"props.gridAPI\"\n      :header-cell-border-classes=\"headerCellBorderClasses\"\n      :selected-rows=\"Array.from(selectionState.selectedIds)\"\n      :total-rows=\"totalSelectableRows\"\n      class=\"flex-shrink-0\"\n      @header-scroll=\"handleHeaderScroll\"\n      @sort-indicator-focus=\"handleSortIndicatorFocus\"\n      @select-all=\"handleSelectAll\"\n      @clear-selection=\"handleClearSelection\"\n    />\n\n    <!-- Body Section -->\n    <GridBody\n      ref=\"bodyRef\"\n      :data=\"virtualizedData\"\n      :columns=\"renderState.columns\"\n      :pane-config=\"paneConfig\"\n      :virtualizer=\"verticalVirtualizer\"\n      :row-height=\"layoutMetrics.rowHeight\"\n      :is-content-overflowing=\"isContentOverflowing\"\n      :focused-cell=\"\n        typeof selectionState.activeId === 'string' || typeof selectionState.activeId === 'number'\n          ? { rowId: selectionState.activeId, columnId: '' }\n          : null\n      \"\n      :selected-rows=\"Array.from(selectionState.selectedIds)\"\n      :interaction-contract=\"props.interactionContract\"\n      :body-row-border-classes=\"bodyRowBorderClasses\"\n      :body-cell-border-classes=\"bodyCellBorderClasses\"\n      :stripe-enabled=\"stripeMode\"\n      class=\"flex-1 overflow-hidden\"\n      :style=\"{ height: layoutMetrics.bodyHeight }\"\n      @scroll=\"handleScroll\"\n    />\n\n    <!-- Horizontal Scrollbar Section -->\n    <div v-if=\"isContentOverflowing\" class=\"ht-horizontal-scrollbar-container flex flex-shrink-0\">\n      <div class=\"ht-scrollbar-pane-left flex-shrink-0\" :style=\"{ width: `${paneConfig.left.width}px` }\"></div>\n      <div\n        ref=\"horizontalScrollbarRef\"\n        class=\"ht-scrollbar-pane-center flex-1 overflow-x-auto ht-custom-scrollbar\"\n        tabindex=\"-1\"\n        role=\"presentation\"\n        aria-hidden=\"true\"\n        @scroll.passive=\"handleHorizontalScroll\"\n      >\n        <div :style=\"{ width: `${paneConfig.center.width}px`, height: '1px' }\"></div>\n      </div>\n      <div class=\"ht-scrollbar-pane-right flex-shrink-0\" :style=\"{ width: `${paneConfig.right.width}px` }\"></div>\n    </div>\n\n    <!-- Footer Section -->\n    <GridFooter\n      v-if=\"config.layout?.showFooter !== false\"\n      ref=\"footerRef\"\n      :total-rows=\"renderState.rows.length\"\n      :selected-count=\"selectionState.selectedIds.size\"\n      :render-metrics=\"{ lastRenderTime: 0, renderCount: 0, avgRenderTime: 0, averageFPS: 60 }\"\n      class=\"flex-shrink-0 border-t border-[var(--ht-border)] h-10\"\n    />\n  </div>\n</template>\n\n<style scoped>\n:root {\n  --ht-scrollbar-height: 8px;\n}\n\n.ht-table-renderer-component {\n  /* Performance optimizations */\n  contain: layout style paint;\n}\n\n/* 移除鼠标点击时的焦点边框 */\n.ht-table-renderer-component:focus:not(:focus-visible) {\n  outline: none;\n}\n\n/* 仅在键盘导航时显示焦点边框 */\n.ht-table-renderer-component:focus-visible {\n  outline: 2px solid var(--ht-primary);\n  outline-offset: -2px;\n}\n\n/* Ensure proper stacking context */\n.ht-table-renderer-component :deep(.ht-virtual-container) {\n  position: relative;\n  z-index: 1;\n}\n\n/* Header positioning */\n.ht-table-renderer-component :deep(.ht-header) {\n  position: sticky;\n  top: 0;\n  z-index: var(--z-ht-header);\n  background: var(--ht-header-bg);\n}\n\n/* Scroll performance */\n.ht-table-renderer-component :deep(.ht-scroll-area) {\n  overflow: auto;\n  transform: translateZ(0);\n  will-change: scroll-position;\n}\n\n/* Virtual item performance */\n.ht-table-renderer-component :deep(.ht-virtual-item) {\n  contain: layout style paint;\n  will-change: transform;\n}\n\n.ht-horizontal-scrollbar-container {\n  border-top: 1px solid var(--ht-border);\n  height: var(--ht-scrollbar-height, 8px); /* Standard scrollbar height */\n  background: var(--ht-bg);\n}\n</style>\n","<!--\n  TableRendererComponent.vue - Vue component wrapper for TableRenderer\n\n  This component serves as the Vue layer for the TableRenderer class,\n  providing reactive state management and DOM rendering while delegating\n  all business logic to the renderer instance.\n\n  Architecture: Dumb component that renders state and emits events\n-->\n\n<script setup lang=\"ts\">\nimport { ref, reactive, computed, onMounted, onUnmounted, watch, nextTick, provide, getCurrentInstance } from 'vue'\nimport type { VirtualRow, RendererOptions } from '../../renderers/base/renderer-interface'\nimport type { GridState, ColumnDef, TableRendererProps, CellValue, BorderMode } from '../../types'\nimport { createLogger } from '../../utils/logger'\nimport { useVirtualizer, useHorizontalVirtualizer } from '../../utils/virtualization'\nimport { GRID_INSTANCE_ID_KEY, GRID_API_KEY } from '../../utils/injection-keys'\n\n// Import existing components\nimport GridHeader from '../../components/table-renderer/header/GridHeader.vue'\nimport GridBody from '../../components/table-renderer/body/GridBody.vue'\nimport GridFooter from '../../components/table-renderer/footer/GridFooter.vue'\n\n// Props from TableRenderer class\n// Using shared TableRendererProps from layout types\n\nconst props = defineProps<TableRendererProps>()\n\nconst componentInstance = getCurrentInstance()\nconst gridInstanceId = `ht-grid-${componentInstance?.uid ?? '0'}`\nprovide(GRID_INSTANCE_ID_KEY, gridInstanceId)\n\n// Provide gridAPI to child components (especially DragCell)\nprovide(GRID_API_KEY, props.gridAPI)\n\n// Border mode from grid config (with default fallback)\nconst borderMode = computed<BorderMode>(() => {\n  return renderState.state?.config?.border ?? 'default'\n})\n\n// Stripe mode from grid config (with default fallback)\nconst stripeMode = computed<boolean>(() => {\n  return renderState.state?.config?.stripe ?? false\n})\n\n// Border classes computed properties\nconst tableRootBorderClasses = computed(() => {\n  const mode = borderMode.value\n  switch (mode) {\n    case 'none':\n      return ''\n    case 'outer':\n    case 'full':\n    case 'default':\n    default:\n      return 'border border-[var(--ht-border)] rounded-md'\n  }\n})\n\nconst headerCellBorderClasses = computed(() => {\n  const mode = borderMode.value\n  switch (mode) {\n    case 'full':\n      return 'border-r border-[var(--ht-border)] last:border-r-0'\n    case 'default':\n    case 'none':\n    case 'outer':\n    default:\n      return ''\n  }\n})\n\nconst bodyRowBorderClasses = computed(() => {\n  const mode = borderMode.value\n  switch (mode) {\n    case 'full':\n    case 'default':\n      return 'border-b border-[var(--ht-border)]'\n    case 'none':\n    case 'outer':\n    default:\n      return ''\n  }\n})\n\nconst bodyCellBorderClasses = computed(() => {\n  const mode = borderMode.value\n  switch (mode) {\n    case 'full':\n      return 'border-r border-[var(--ht-border)] last:border-r-0'\n    case 'default':\n    case 'none':\n    case 'outer':\n    default:\n      return ''\n  }\n})\n\n// Logger for component\nconst logger = createLogger('TableRendererComponent')\n\n// Component refs\nconst containerRef = ref<HTMLElement>()\nconst headerRef = ref<InstanceType<typeof GridHeader>>()\nconst bodyRef = ref<InstanceType<typeof GridBody>>()\nconst footerRef = ref<InstanceType<typeof GridFooter>>()\nconst horizontalScrollbarRef = ref<HTMLElement>() // Reference to the external horizontal scrollbar element\nconst containerWidth = ref(0)\n\n// Check if content is overflowing the container\nconst isContentOverflowing = computed(() => {\n  if (!containerRef.value) return false\n  // Ensure we compare against the sum of pane widths, not the virtualizer total\n  const totalContentWidth = paneConfig.value.left.width + paneConfig.value.center.width + paneConfig.value.right.width\n  return totalContentWidth > containerWidth.value\n})\n\n// Reactive state for rendering\nconst renderState = reactive({\n  state: null as GridState | null,\n  columns: [] as ColumnDef[],\n  rows: [] as VirtualRow[],\n  loading: false,\n  error: null as string | null,\n})\n\n// Configuration state with proper typing\nconst config = reactive<RendererOptions>({\n  ...props.options,\n})\n\n// Layout calculations\n// P0-2 Optimization: Reuse paneConfig width calculations instead of redundant reduce\n// Cache scrollbar height in a ref, update on mount and resize\nconst scrollbarHeight = ref(8)\nconst updateScrollbarHeight = () => {\n  const value = parseInt(getComputedStyle(document.documentElement).getPropertyValue('--ht-scrollbar-height'))\n  scrollbarHeight.value = isNaN(value) ? 8 : value\n}\n\nonMounted(() => {\n  updateScrollbarHeight()\n  window.addEventListener('resize', updateScrollbarHeight)\n})\n\nonUnmounted(() => {\n  window.removeEventListener('resize', updateScrollbarHeight)\n})\n\nconst layoutMetrics = computed(() => {\n  if (!renderState.state) {\n    return {\n      totalWidth: 0,\n      headerHeight: 40,\n      rowHeight: 32,\n      bodyHeight: `calc(100% - 80px - var(--ht-scrollbar-height, 8px))`, // Adjusted for scrollbar\n    }\n  }\n\n  const { config: gridConfig } = renderState.state\n  const pane = paneConfig.value // Reuse already computed widths\n\n  const footerHeight = config.layout?.showFooter !== false ? 40 : 0\n\n  return {\n    totalWidth: pane.left.width + pane.center.width + pane.right.width,\n    headerHeight: gridConfig.headerHeight,\n    rowHeight: gridConfig.rowHeight,\n    bodyHeight: `calc(100% - ${gridConfig.headerHeight}px - ${footerHeight}px - ${scrollbarHeight.value}px)`,\n  }\n})\n\n// Pane configuration for three-pane layout\n// P0-1 Optimization: Single-pass O(n) instead of 3 filters + 3 reduces = O(6n)\nconst paneConfig = computed(() => {\n  const config = {\n    left: { columns: [] as ColumnDef[], width: 0 },\n    center: { columns: [] as ColumnDef[], width: 0 },\n    right: { columns: [] as ColumnDef[], width: 0 },\n  }\n\n  // Single-pass iteration: classify and accumulate width simultaneously\n  for (const col of renderState.columns) {\n    const width = col.width || 150\n\n    if (col.pinned === 'left') {\n      config.left.columns.push(col)\n      config.left.width += width\n    } else if (col.pinned === 'right') {\n      config.right.columns.push(col)\n      config.right.width += width\n    } else {\n      config.center.columns.push(col)\n      config.center.width += width\n    }\n  }\n\n  // Mark the last left-pinned and first right-pinned columns for styling\n  if (config.left.columns.length > 0) {\n    const lastLeft = config.left.columns[config.left.columns.length - 1] as any\n    lastLeft.isLastPinned = true\n  }\n  if (config.right.columns.length > 0) {\n    const firstRight = config.right.columns[0] as any\n    firstRight.isFirstRightPinned = true\n  }\n\n  return config\n})\n\n// Scroll state management\nconst scrollState = ref({\n  scrollLeft: 0,\n  scrollTop: 0,\n})\n\n// 用于防止循环同步的标志\nlet isSyncingScroll = false\n\n// Selection state with version tracking for optimized reactivity\nconst selectionState = reactive({\n  selectedIds: new Set<string | number>(),\n  activeId: null as string | number | null,\n})\n\n// P1-1 Optimization: Version-based tracking to avoid deep watch overhead\nconst selectionVersion = ref(0)\nconst cleanupFns: Array<() => void> = []\n\n// Virtualization: Vertical (rows)\nconst verticalVirtualizer = useVirtualizer({\n  count: computed(() => renderState.rows.length),\n  getItemSize: () => layoutMetrics.value.rowHeight,\n  estimateItemSize: () => layoutMetrics.value.rowHeight,\n  overscan: 5,\n  enabled: computed(() => renderState.rows.length > 20),\n})\n\n// Virtualization: Horizontal (columns) - only for center pane\nconst horizontalVirtualizer = useHorizontalVirtualizer({\n  columns: computed(() => paneConfig.value.center.columns),\n  getColumnWidth: index => {\n    const column = paneConfig.value.center.columns[index]\n    return column?.width || 150\n  },\n  overscan: 3,\n  enabled: computed(() => paneConfig.value.center.columns.length > 20),\n})\n\n// P1-2 Optimization: Extract virtual data to computed to avoid repeated calculations\n// Prevents object creation and map() execution on every render cycle\n// Expected performance gain: 15% rendering performance, reduced GC pressure\nconst virtualizedData = computed<import('../../types').VirtualData>(() => ({\n  visibleRows: renderState.rows.map((vr: VirtualRow) => vr.data || vr),\n  startIndex: verticalVirtualizer.startIndex.value,\n  endIndex: verticalVirtualizer.endIndex.value,\n  totalHeight: verticalVirtualizer.totalSize.value,\n}))\n\n// P2-3 Optimization: Row index map cache for O(1) lookup in ensureVisible\n// Performance gain: O(n) → O(1) row lookup, significant for large datasets\n// Use case: Smart scrolling, navigation, focus management\nconst rowIndexMap = computed(() => {\n  const map = new Map<string, number>()\n  renderState.rows.forEach((row, index) => {\n    const data = row.data || row\n    const id = String(data.id || data.rowId)\n    map.set(id, index)\n  })\n  return map\n})\n\n/**\n * Methods exposed to TableRenderer class\n */\n\n// Update state from renderer\nconst updateState = (state: GridState, columns: ColumnDef[], rows: VirtualRow[]) => {\n  renderState.state = state\n  renderState.columns = columns\n  renderState.rows = rows\n  renderState.loading = state.loading\n  renderState.error = state.error\n}\n\n// Update selection\n// P1-1 Optimization: Increment version to trigger shallow watchers\nconst updateSelection = (selectedIds: Set<string | number>, _reason: 'programmatic' | 'user') => {\n  selectionState.selectedIds = new Set(selectedIds)\n  selectionVersion.value++ // Trigger version-based reactivity\n}\n\n// Set active cell/row\nconst setActive = (activeId: string | number | null) => {\n  selectionState.activeId = activeId\n}\n\n// Update scroll position\nconst updateScrollPosition = (position: { top: number; left: number }) => {\n  scrollState.value = {\n    scrollLeft: position.left,\n    scrollTop: position.top,\n  }\n}\n\n/**\n * Handle resize events with error boundary\n * @param width - New container width\n * @param height - New container height\n */\nconst resize = (width: number, height: number) => {\n  try {\n    containerWidth.value = width\n    // Update virtualizer container sizes\n    nextTick(() => {\n      if (containerRef.value) {\n        // Update vertical virtualizer\n        verticalVirtualizer.setContainerSize({ height, width })\n\n        // Update horizontal virtualizer\n        horizontalVirtualizer.setContainerSize({ width, height })\n\n        // Force recalculation of virtual scrolling\n        if (bodyRef.value?.recalculate) {\n          bodyRef.value.recalculate()\n        }\n      }\n    })\n  } catch (error) {\n    logger.error('Resize failed:', { module: 'TableRendererComponent' }, error)\n  }\n}\n\n// Update configuration\nconst updateConfig = (newConfig: RendererOptions) => {\n  Object.assign(config, newConfig)\n}\n\n// Edit mode management\nconst enterEditMode = async (id: string | number): Promise<boolean> => {\n  try {\n    // Delegate to body component for edit mode\n    if (bodyRef.value?.enterEditMode) {\n      return await bodyRef.value.enterEditMode(id)\n    }\n    return false\n  } catch (error) {\n    logger.error('Failed to enter edit mode:', { module: 'TableRendererComponent' }, error)\n    return false\n  }\n}\n\nconst completeEdit = async (id: string | number, value: CellValue): Promise<boolean> => {\n  try {\n    if (bodyRef.value?.completeEdit) {\n      return await bodyRef.value.completeEdit(id, value)\n    }\n    return false\n  } catch (error) {\n    logger.error('Failed to complete edit:', { module: 'TableRendererComponent' }, error)\n    return false\n  }\n}\n\nconst cancelEdit = (id: string | number) => {\n  if (bodyRef.value?.cancelEdit) {\n    bodyRef.value.cancelEdit(id)\n  }\n}\n\n/**\n * Unified edit mode API\n * @param id - Cell or row ID\n * @param mode - 'enter' to start editing, 'exit' to cancel\n * @returns Promise resolving to success status\n */\nconst toggleEditMode = async (id: string | number, mode: 'enter' | 'exit'): Promise<boolean> => {\n  try {\n    if (mode === 'enter') {\n      return await enterEditMode(id)\n    } else if (mode === 'exit') {\n      cancelEdit(id)\n      return true\n    }\n    return false\n  } catch (error) {\n    logger.error('Toggle edit mode failed:', { module: 'TableRendererComponent', id, mode }, error)\n    return false\n  }\n}\n\n/**\n * Task 1: Smart scrolling - Programmatically scroll to a specific row or cell\n * Implements GridInteractionContract.ensureVisible method\n * @param id - Row ID or cell ID (format: \"rowId_columnId\")\n * @param behavior - Scroll behavior: 'smooth' or 'auto'\n */\nconst ensureVisible = (id: string | number, behavior: 'smooth' | 'auto' = 'auto') => {\n  try {\n    if (!containerRef.value) {\n      logger.warn('Cannot scroll: container not mounted', { id })\n      return\n    }\n\n    // Parse id to determine if it's a cell (rowId_columnId) or row (rowId)\n    const idStr = String(id)\n    const parts = idStr.split('_')\n    const rowId = parts[0] || ''\n\n    // P2-3 Optimization: Use O(1) map lookup instead of O(n) findIndex\n    // Performance gain: Significant for large datasets (1000+ rows)\n    const rowIndex = rowIndexMap.value.get(rowId) ?? -1\n\n    if (rowIndex === -1) {\n      logger.warn('Row not found for ensureVisible', { id, rowId })\n      return\n    }\n\n    // Calculate scroll position using layout metrics\n    const headerHeight = layoutMetrics.value.headerHeight\n    const rowHeight = layoutMetrics.value.rowHeight\n    const targetScrollTop = rowIndex * rowHeight\n\n    // Get container and body dimensions\n    const containerRect = containerRef.value.getBoundingClientRect()\n    const visibleHeight = containerRect.height - headerHeight - 40 // minus footer\n\n    // Check if already visible\n    const currentScrollTop = scrollState.value.scrollTop\n    const isVisible =\n      targetScrollTop >= currentScrollTop && targetScrollTop + rowHeight <= currentScrollTop + visibleHeight\n\n    if (isVisible) {\n      logger.debug('Row already visible', { rowIndex, id })\n      return\n    }\n\n    // Scroll to make row visible\n    // Use the body's scroll container if available\n    const scrollContainer = bodyRef.value?.$el?.querySelector('.ht-scroll-area') || containerRef.value\n\n    scrollContainer.scrollTo({\n      top: targetScrollTop,\n      behavior,\n    })\n\n    logger.debug('Scrolled to row', { rowIndex, targetScrollTop, behavior })\n\n    // If it's a cell, also handle horizontal scroll\n    if (parts.length >= 2) {\n      const columnId = parts[1]\n      const columnIndex = renderState.columns.findIndex(col => col.id === columnId)\n\n      if (columnIndex !== -1) {\n        const targetScrollLeft = renderState.columns\n          .slice(0, columnIndex)\n          .reduce((sum, col) => sum + (col.width || 150), 0)\n\n        scrollContainer.scrollTo({\n          left: targetScrollLeft,\n          behavior,\n        })\n\n        logger.debug('Scrolled to cell', { rowIndex, columnIndex, targetScrollLeft })\n      }\n    }\n  } catch (error) {\n    logger.error('Error in ensureVisible:', { module: 'TableRendererComponent' }, error)\n  }\n}\n\n/**\n * Task 2: Force re-render - Recalculate virtualizers and force component update\n * Implements GridInteractionContract.refresh method\n */\nconst refresh = () => {\n  try {\n    nextTick(() => {\n      if (!containerRef.value) return\n\n      // Get current container dimensions\n      const rect = containerRef.value.getBoundingClientRect()\n\n      // Recalculate vertical virtualizer\n      verticalVirtualizer.setContainerSize({\n        height: rect.height,\n        width: rect.width,\n      })\n\n      // Recalculate horizontal virtualizer\n      horizontalVirtualizer.setContainerSize({\n        width: rect.width,\n        height: rect.height,\n      })\n\n      // Force body component to recalculate if method exists\n      if (bodyRef.value?.recalculate) {\n        bodyRef.value.recalculate()\n      }\n\n      // Update scroll positions to trigger re-render\n      const currentScroll = scrollState.value\n      verticalVirtualizer.updateScrollPosition(currentScroll.scrollTop)\n      horizontalVirtualizer.updateScrollPosition(currentScroll.scrollLeft)\n\n      logger.debug('Refresh completed', {\n        containerSize: { width: rect.width, height: rect.height },\n        rowCount: renderState.rows.length,\n        columnCount: renderState.columns.length,\n      })\n    })\n  } catch (error) {\n    logger.error('Error in refresh:', { module: 'TableRendererComponent' }, error)\n  }\n}\n\n/**\n * Task 3: Core interaction callbacks\n * These handlers transform low-level interaction events into high-level grid events\n */\n\n/**\n * Handle cell click events\n */\nconst handleCellClick = (payload: import('../../types').InteractionPayload) => {\n  try {\n    if (!payload.position) return\n\n    const virtualRow = renderState.rows[payload.position.rowIndex]\n    if (!virtualRow) return\n\n    // Extract RowData from VirtualRow\n    const row: import('../../types').RowData = virtualRow.data || virtualRow\n    const column = renderState.columns.find(col => col.id === payload.position?.columnId)\n\n    if (row && column) {\n      props.gridAPI.emit('cell-click', {\n        row,\n        column,\n        value: row[column.field],\n      })\n    }\n  } catch (error) {\n    logger.error('Error in handleCellClick:', { module: 'TableRendererComponent' }, error)\n  }\n}\n\n/**\n * Handle cell double-click events\n */\nconst handleCellDoubleClick = (payload: import('../../types').InteractionPayload) => {\n  try {\n    if (!payload.position) return\n\n    const virtualRow = renderState.rows[payload.position.rowIndex]\n    if (!virtualRow) return\n\n    // Extract RowData from VirtualRow\n    const row: import('../../types').RowData = virtualRow.data || virtualRow\n    const column = renderState.columns.find(col => col.id === payload.position?.columnId)\n\n    if (row && column) {\n      props.gridAPI.emit('cell-double-click', {\n        row,\n        column,\n        value: row[column.field],\n      })\n    }\n  } catch (error) {\n    logger.error('Error in handleCellDoubleClick:', { module: 'TableRendererComponent' }, error)\n  }\n}\n\n/**\n * Handle cell right-click events\n */\nconst handleCellRightClick = (payload: import('../../types').InteractionPayload) => {\n  try {\n    if (!payload.position) return\n\n    const virtualRow = renderState.rows[payload.position.rowIndex]\n    if (!virtualRow) return\n\n    // Extract RowData from VirtualRow\n    const row: import('../../types').RowData = virtualRow.data || virtualRow\n    const column = renderState.columns.find(col => col.id === payload.position?.columnId)\n\n    if (row && column) {\n      props.gridAPI.emit('cell-right-click', {\n        row,\n        column,\n        value: row[column.field],\n      })\n    }\n  } catch (error) {\n    logger.error('Error in handleCellRightClick:', { module: 'TableRendererComponent' }, error)\n  }\n}\n\n/**\n * Handle row selection events\n * P1-1 Optimization: Increment version after selection mutation\n */\nconst handleRowSelect = (payload: import('../../types').InteractionPayload) => {\n  try {\n    if (!payload.position) return\n\n    const rowId = payload.position.rowId\n    const isSelected = selectionState.selectedIds.has(rowId)\n\n    // Toggle selection\n    if (isSelected) {\n      selectionState.selectedIds.delete(rowId)\n    } else {\n      selectionState.selectedIds.add(rowId)\n    }\n\n    // Increment version to trigger watchers\n    selectionVersion.value++\n\n    // Selection change will be handled by the watch() below\n    logger.debug('Row selection toggled', { rowId, selected: !isSelected })\n  } catch (error) {\n    logger.error('Error in handleRowSelect:', { module: 'TableRendererComponent' }, error)\n  }\n}\n\nconst selectAllVisibleRows = () => {\n  try {\n    let changed = false\n\n    // Find checkbox column configuration\n    const checkboxColumn = renderState.columns.find(col => (col as any).type === 'checkbox')\n\n    renderState.rows.forEach(vr => {\n      const row = (vr as any).data || vr\n      const rowId =\n        row?.id ??\n        row?.rowId ??\n        (vr as any)?.key ??\n        (typeof (vr as any)?.index === 'number' ? (vr as any).index : null)\n\n      if (rowId === null || selectionState.selectedIds.has(rowId)) {\n        return // Skip if no rowId or already selected\n      }\n\n      // Check if row is selectable based on checkbox column condition\n      const isSelectable = isRowSelectable(row, checkboxColumn)\n\n      if (isSelectable) {\n        selectionState.selectedIds.add(rowId)\n        changed = true\n      }\n    })\n\n    if (changed) {\n      selectionVersion.value++\n    }\n\n    props.gridAPI.emit('select-all', { count: selectionState.selectedIds.size })\n    logger.debug('All rows selected via header', { count: selectionState.selectedIds.size })\n  } catch (error) {\n    logger.error('Error selecting all rows:', { module: 'TableRendererComponent' }, error)\n  }\n}\n\n/**\n * Helper function to check if a row is selectable based on checkbox column condition\n * This implements the same logic as CheckboxCell.selectabilityResult\n */\nfunction isRowSelectable(row: any, column?: any): boolean {\n  if (!column) return true\n\n  // Use condition from column definition (top-level)\n  if (column.condition) {\n    return column.condition(row)\n  }\n\n  return true\n}\n\n/**\n * Calculate the total number of selectable rows based on checkbox column condition\n * This is used to correctly determine if all selectable rows are selected\n */\nconst totalSelectableRows = computed(() => {\n  // Find checkbox column\n  const checkboxColumn = renderState.columns.find(col => (col as any).type === 'checkbox')\n\n  // If no checkbox column or no condition, all rows are selectable\n  if (!checkboxColumn || !checkboxColumn.condition) {\n    return renderState.rows.length\n  }\n\n  // Count rows that pass the condition\n  let count = 0\n  renderState.rows.forEach(vr => {\n    const row = (vr as any).data || vr\n    if (isRowSelectable(row, checkboxColumn)) {\n      count++\n    }\n  })\n\n  return count\n})\n\nconst clearAllSelection = (reason?: string) => {\n  try {\n    const previousCount = selectionState.selectedIds.size\n    if (previousCount === 0) {\n      return\n    }\n\n    selectionState.selectedIds.clear()\n    selectionVersion.value++\n    props.gridAPI.emit('selection-clear', { previousCount })\n    logger.debug('Selection cleared', { reason, previousCount })\n  } catch (error) {\n    logger.error('Error clearing selection:', { module: 'TableRendererComponent' }, error)\n  }\n}\n\n/**\n * Handle select all rows event from checkbox header\n */\nconst handleSelectAll = () => {\n  selectAllVisibleRows()\n}\n\n/**\n * Handle clear selection event from checkbox header\n */\nconst handleClearSelection = () => {\n  clearAllSelection('header-action')\n}\n\n/**\n * Get current rendering state snapshot (for debugging)\n * @returns Current state including render state, scroll position, and selection\n */\nconst getCurrentState = () => {\n  return {\n    state: renderState.state,\n    columns: renderState.columns,\n    rows: renderState.rows,\n    loading: renderState.loading,\n    error: renderState.error,\n    scrollPosition: scrollState.value,\n    selection: {\n      selectedIds: Array.from(selectionState.selectedIds),\n      activeId: selectionState.activeId,\n    },\n    layout: {\n      metrics: layoutMetrics.value,\n      paneConfig: paneConfig.value,\n    },\n    virtualization: {\n      vertical: {\n        startIndex: verticalVirtualizer.startIndex.value,\n        endIndex: verticalVirtualizer.endIndex.value,\n        totalSize: verticalVirtualizer.totalSize.value,\n      },\n      horizontal: {\n        startIndex: horizontalVirtualizer.startIndex.value,\n        endIndex: horizontalVirtualizer.endIndex.value,\n        totalWidth: horizontalVirtualizer.totalWidth.value,\n      },\n    },\n  }\n}\n\n/**\n * Get configuration schema definition\n * @returns Configuration metadata with types and defaults\n */\nconst getConfigSchema = (): Record<string, any> => {\n  return {\n    performance: {\n      type: 'object',\n      properties: {\n        enableRAF: { type: 'boolean', default: true, description: 'Use requestAnimationFrame for rendering' },\n        batchUpdates: { type: 'boolean', default: true, description: 'Batch multiple updates together' },\n        maxConcurrentRenders: { type: 'number', default: 3, description: 'Maximum concurrent render operations' },\n      },\n    },\n    accessibility: {\n      type: 'object',\n      properties: {\n        enableAria: { type: 'boolean', default: true, description: 'Enable ARIA attributes' },\n        announceChanges: { type: 'boolean', default: true, description: 'Announce changes to screen readers' },\n        keyboardNavigation: { type: 'boolean', default: true, description: 'Enable keyboard navigation' },\n      },\n    },\n    layout: {\n      type: 'object',\n      properties: {\n        showHeader: { type: 'boolean', default: true, description: 'Show table header' },\n        showFooter: { type: 'boolean', default: true, description: 'Show table footer' },\n        enablePanes: { type: 'boolean', default: true, description: 'Enable frozen panes' },\n        stickyHeader: { type: 'boolean', default: true, description: 'Make header sticky on scroll' },\n      },\n    },\n    theme: {\n      type: 'object',\n      properties: {\n        className: { type: 'string', default: '', description: 'Custom theme class name' },\n      },\n    },\n  }\n}\n\n/**\n * Event handlers for interaction delegation\n */\n\n/**\n * Handle scroll events from GridBody.\n * This is for VERTICAL scroll and HORIZONTAL scroll from touchpad/wheel.\n */\nconst handleScroll = (event: Event) => {\n  if (isSyncingScroll) return\n\n  try {\n    const target = event.target as HTMLElement\n    const scrollLeft = target.scrollLeft\n    const scrollTop = target.scrollTop\n\n    isSyncingScroll = true\n\n    // Update local scroll state\n    scrollState.value = { scrollLeft, scrollTop }\n\n    // Sync external horizontal scrollbar\n    if (horizontalScrollbarRef.value && horizontalScrollbarRef.value.scrollLeft !== scrollLeft) {\n      horizontalScrollbarRef.value.scrollLeft = scrollLeft\n    }\n\n    // Update virtualizers\n    verticalVirtualizer.updateScrollPosition(scrollTop)\n    horizontalVirtualizer.updateScrollPosition(scrollLeft)\n\n    // Update interaction contract and emit public scroll event\n    props.interactionContract.updateScrollPosition?.({ left: scrollLeft, top: scrollTop })\n    props.interactionContract.emit?.('scroll' as any, { left: scrollLeft, top: scrollTop } as any)\n\n    nextTick(() => {\n      isSyncingScroll = false\n    })\n  } catch (error) {\n    logger.error('Scroll handling failed:', { module: 'TableRendererComponent' }, error)\n    isSyncingScroll = false\n  }\n}\n\n/**\n * Handle scroll events from the new external horizontal scrollbar.\n */\nconst handleHorizontalScroll = (event: Event) => {\n  if (isSyncingScroll) return\n\n  try {\n    const target = event.target as HTMLElement\n    const scrollLeft = target.scrollLeft\n\n    isSyncingScroll = true\n\n    // Update local scroll state\n    scrollState.value.scrollLeft = scrollLeft\n\n    // Sync body content scroll\n    if (bodyRef.value?.centerScrollArea && bodyRef.value.centerScrollArea.scrollLeft !== scrollLeft) {\n      bodyRef.value.centerScrollArea.scrollLeft = scrollLeft\n    }\n\n    // Update virtualizer\n    horizontalVirtualizer.updateScrollPosition(scrollLeft)\n\n    // Update interaction contract and emit public scroll event\n    props.interactionContract.updateScrollPosition?.({ left: scrollLeft, top: scrollState.value.scrollTop })\n    props.interactionContract.emit?.('scroll' as any, { left: scrollLeft, top: scrollState.value.scrollTop } as any)\n\n    nextTick(() => {\n      isSyncingScroll = false\n    })\n  } catch (error) {\n    logger.error('Horizontal scrollbar handling failed:', { module: 'TableRendererComponent' }, error)\n    isSyncingScroll = false\n  }\n}\n\n/**\n * Handle header scroll events and sync to body and new scrollbar\n * @param scrollLeft - New scroll left position from header\n */\nconst handleHeaderScroll = (scrollLeft: number) => {\n  if (isSyncingScroll) return\n\n  try {\n    isSyncingScroll = true\n\n    // Update local scroll state\n    scrollState.value.scrollLeft = scrollLeft\n\n    // Sync body scroll through bodyRef\n    if (bodyRef.value?.centerScrollArea && bodyRef.value.centerScrollArea.scrollLeft !== scrollLeft) {\n      bodyRef.value.centerScrollArea.scrollLeft = scrollLeft\n    }\n\n    // Sync external horizontal scrollbar\n    if (horizontalScrollbarRef.value && horizontalScrollbarRef.value.scrollLeft !== scrollLeft) {\n      horizontalScrollbarRef.value.scrollLeft = scrollLeft\n    }\n\n    // Update horizontal virtualizer\n    horizontalVirtualizer.updateScrollPosition(scrollLeft)\n\n    // Update interaction contract\n    props.interactionContract.updateScrollPosition?.({\n      left: scrollLeft,\n      top: scrollState.value.scrollTop,\n    })\n\n    nextTick(() => {\n      isSyncingScroll = false\n    })\n  } catch (error) {\n    logger.error('Header scroll handling failed:', { module: 'TableRendererComponent' }, error)\n    isSyncingScroll = false\n  }\n}\n\n/**\n * Handle sort indicator focus - TAB 键跳转时确保可见\n * @param field - 获得焦点的列字段\n */\nconst handleSortIndicatorFocus = (field: string) => {\n  try {\n    if (!bodyRef.value) return\n\n    // 找到对应的列\n    const column = renderState.columns.find(col => col.field === field)\n    if (!column) return\n\n    // 计算列的位置\n    const columnIndex = paneConfig.value.center.columns.findIndex(col => col.field === field)\n    if (columnIndex === -1) return // 不在中心面板\n\n    const scrollPosition = paneConfig.value.center.columns\n      .slice(0, columnIndex)\n      .reduce((sum, col) => sum + (col.width || 150), 0)\n\n    const columnWidth = column.width || 150\n\n    // 获取 Body 的横向滚动容器\n    const bodyScrollContainer = bodyRef.value.$el?.querySelector('.ht-scroll-area-horizontal')\n    if (!bodyScrollContainer) return\n\n    const containerWidth = bodyScrollContainer.clientWidth\n    const currentScroll = bodyScrollContainer.scrollLeft\n\n    // 检查列是否完全可见\n    const isFullyVisible =\n      scrollPosition >= currentScroll && scrollPosition + columnWidth <= currentScroll + containerWidth\n\n    if (!isFullyVisible) {\n      // 平滑滚动到目标位置\n      bodyScrollContainer.scrollTo({\n        left: scrollPosition,\n        behavior: 'smooth',\n      })\n    }\n  } catch (error) {\n    logger.error('Sort indicator focus handling failed:', { module: 'TableRendererComponent' }, error)\n  }\n}\n\n// Note: Row/cell interactions are handled by the interaction contract system\n\n// Keyboard navigation\nconst handleKeyDown = (event: KeyboardEvent) => {\n  const { activeId } = selectionState\n\n  if (!activeId) return\n\n  switch (event.key) {\n    case 'ArrowDown':\n    case 'ArrowUp':\n    case 'ArrowLeft':\n    case 'ArrowRight':\n      event.preventDefault()\n      // Handle navigation through interaction contract\n      break\n    case 'Enter':\n      event.preventDefault()\n      enterEditMode(activeId)\n      break\n    case 'Escape':\n      event.preventDefault()\n      cancelEdit(activeId)\n      break\n  }\n}\n\n/**\n * Lifecycle hooks\n */\n\nonMounted(() => {\n  try {\n    // Setup interaction contract event emitter\n    props.interactionContract.registerEventEmitter?.((eventName, payload) => {\n      props.gridAPI.emit(eventName as keyof import('../../types').GridEvents, payload)\n    })\n\n    // Register core logic callbacks with interaction contract\n    // This enables the interaction contract to call these handlers\n    if (props.interactionContract.registerCoreCallbacks) {\n      props.interactionContract.registerCoreCallbacks({\n        onCellClick: handleCellClick,\n        onCellDoubleClick: handleCellDoubleClick,\n        onCellRightClick: handleCellRightClick,\n        onRowSelect: handleRowSelect,\n      })\n      logger.debug('Core interaction callbacks registered', { module: 'TableRendererComponent' })\n    }\n\n    const toggleSelectionOff = props.gridAPI.on?.('toggle-selection', payload => {\n      const rowId = payload?.rowId ?? null\n      if (rowId === null) {\n        logger.warn('toggle-selection event missing rowId', payload)\n        return\n      }\n\n      if (payload.selectionType === 'radio') {\n        const alreadySelected = selectionState.selectedIds.has(rowId)\n        if (alreadySelected) {\n          return\n        }\n        selectionState.selectedIds.clear()\n        selectionState.selectedIds.add(rowId)\n      } else {\n        if (selectionState.selectedIds.has(rowId)) {\n          selectionState.selectedIds.delete(rowId)\n        } else {\n          selectionState.selectedIds.add(rowId)\n        }\n      }\n\n      selectionState.activeId = rowId\n      selectionVersion.value++\n      logger.debug('Selection toggled via toggle-selection event', {\n        rowId,\n        selectionType: payload.selectionType,\n        selected: selectionState.selectedIds.has(rowId),\n      })\n    })\n    if (toggleSelectionOff) {\n      cleanupFns.push(toggleSelectionOff)\n    }\n\n    const clearSelectionOff = props.gridAPI.on?.('clear-selection', payload => {\n      clearAllSelection(payload?.reason)\n    })\n    if (clearSelectionOff) {\n      cleanupFns.push(clearSelectionOff)\n    }\n\n    // Initialize virtualizer container sizes\n    nextTick(() => {\n      try {\n        if (containerRef.value) {\n          const rect = containerRef.value.getBoundingClientRect()\n          verticalVirtualizer.setContainerSize({ height: rect.height, width: rect.width })\n          horizontalVirtualizer.setContainerSize({ width: rect.width, height: rect.height })\n        }\n\n        // Connect scroll element refs to virtualizers\n        if (bodyRef.value) {\n          // GridBody will handle scroll element binding\n          logger.debug('Virtualizers initialized', {\n            rowCount: renderState.rows.length,\n            columnCount: renderState.columns.length,\n          })\n        }\n      } catch (error) {\n        logger.error('Virtualizer initialization failed:', { module: 'TableRendererComponent' }, error)\n      }\n    })\n\n    // Setup resize observer\n    if (containerRef.value) {\n      const resizeObserver = new ResizeObserver(entries => {\n        try {\n          for (const entry of entries) {\n            const { height, width } = entry.contentRect\n            resize(width, height)\n          }\n        } catch (error) {\n          logger.error('ResizeObserver callback failed:', { module: 'TableRendererComponent' }, error)\n        }\n      })\n\n      resizeObserver.observe(containerRef.value)\n\n      // Cleanup on unmount\n      onUnmounted(() => {\n        resizeObserver.disconnect()\n      })\n    }\n  } catch (error) {\n    logger.error('Mount initialization failed:', { module: 'TableRendererComponent' }, error)\n  }\n})\n\n// P1-1 Optimization: Use version-based shallow watch instead of deep watch\n// Performance gain: ~20% reduction in selection operation overhead\n// Previous: O(n) deep comparison of Set on every change\n// Current: O(1) number comparison + lazy emission only when needed\nlet previousSelectionIds = new Set<string | number>()\n\nwatch(selectionVersion, () => {\n  const currentIds = selectionState.selectedIds\n\n  // Skip if no actual change (safety check)\n  if (currentIds === previousSelectionIds) return\n\n  // Emit for each selected row change\n  const newIds = Array.from(currentIds)\n  const oldIds = Array.from(previousSelectionIds)\n\n  // Find newly selected rows\n  const added = newIds.filter(id => !oldIds.includes(id))\n  const removed = oldIds.filter(id => !newIds.includes(id))\n\n  // Emit events for added selections\n  added.forEach(rowId => {\n    props.gridAPI.emit('row-select', {\n      rowId,\n      selected: true,\n      selectedRows: newIds,\n    })\n  })\n\n  // Emit events for removed selections\n  removed.forEach(rowId => {\n    props.gridAPI.emit('row-select', {\n      rowId,\n      selected: false,\n      selectedRows: newIds,\n    })\n  })\n\n  // Update previous selection for next comparison\n  previousSelectionIds = new Set(currentIds)\n})\n\nwatch(\n  () => selectionState.activeId,\n  (newActiveId, oldActiveId) => {\n    if (newActiveId !== oldActiveId) {\n      // Parse activeId to rowId and columnId\n      let rowId: string | number | null = null\n      let columnId: string | null = null\n\n      if (newActiveId) {\n        const parts = String(newActiveId).split('_')\n        if (parts.length >= 2) {\n          rowId = parts[0] || null\n          columnId = parts[1] || null\n        }\n      }\n\n      props.gridAPI.emit('cell-focus-change', {\n        rowId,\n        columnId,\n      })\n    }\n  }\n)\n\nonUnmounted(() => {\n  cleanupFns.forEach(cleanup => {\n    try {\n      cleanup()\n    } catch (error) {\n      logger.error('Cleanup handler failed during unmount', { module: 'TableRendererComponent' }, error)\n    }\n  })\n  cleanupFns.length = 0\n})\n\n// Expose methods to parent renderer\ndefineExpose({\n  // State management\n  updateState,\n  updateSelection,\n  setActive,\n  updateScrollPosition,\n  updateConfig,\n\n  // Layout management\n  resize,\n  refresh,\n  ensureVisible,\n\n  // Edit mode APIs\n  enterEditMode,\n  completeEdit,\n  cancelEdit,\n  toggleEditMode,\n\n  // Interaction handlers (for InteractionContract registration)\n  handleCellClick,\n  handleCellDoubleClick,\n  handleCellRightClick,\n  handleRowSelect,\n\n  // Debug and utility APIs\n  getCurrentState,\n  getConfigSchema,\n})\n</script>\n\n<template>\n  <div\n    ref=\"containerRef\"\n    class=\"ht-table-renderer-component h-full w-full flex flex-col\"\n    :class=\"[config.theme?.className, tableRootBorderClasses]\"\n    :data-border-mode=\"borderMode\"\n    tabindex=\"0\"\n    role=\"grid\"\n    :aria-rowcount=\"renderState.rows.length\"\n    :aria-colcount=\"renderState.columns.length\"\n    @keydown=\"handleKeyDown\"\n  >\n    <!-- Header Section -->\n    <GridHeader\n      v-if=\"config.layout?.showHeader !== false\"\n      ref=\"headerRef\"\n      :columns=\"renderState.columns\"\n      :pane-config=\"paneConfig\"\n      :scroll-left=\"scrollState.scrollLeft\"\n      :height=\"layoutMetrics.headerHeight\"\n      :is-content-overflowing=\"isContentOverflowing\"\n      :grid-a-p-i=\"props.gridAPI\"\n      :header-cell-border-classes=\"headerCellBorderClasses\"\n      :selected-rows=\"Array.from(selectionState.selectedIds)\"\n      :total-rows=\"totalSelectableRows\"\n      class=\"flex-shrink-0\"\n      @header-scroll=\"handleHeaderScroll\"\n      @sort-indicator-focus=\"handleSortIndicatorFocus\"\n      @select-all=\"handleSelectAll\"\n      @clear-selection=\"handleClearSelection\"\n    />\n\n    <!-- Body Section -->\n    <GridBody\n      ref=\"bodyRef\"\n      :data=\"virtualizedData\"\n      :columns=\"renderState.columns\"\n      :pane-config=\"paneConfig\"\n      :virtualizer=\"verticalVirtualizer\"\n      :row-height=\"layoutMetrics.rowHeight\"\n      :is-content-overflowing=\"isContentOverflowing\"\n      :focused-cell=\"\n        typeof selectionState.activeId === 'string' || typeof selectionState.activeId === 'number'\n          ? { rowId: selectionState.activeId, columnId: '' }\n          : null\n      \"\n      :selected-rows=\"Array.from(selectionState.selectedIds)\"\n      :interaction-contract=\"props.interactionContract\"\n      :body-row-border-classes=\"bodyRowBorderClasses\"\n      :body-cell-border-classes=\"bodyCellBorderClasses\"\n      :stripe-enabled=\"stripeMode\"\n      class=\"flex-1 overflow-hidden\"\n      :style=\"{ height: layoutMetrics.bodyHeight }\"\n      @scroll=\"handleScroll\"\n    />\n\n    <!-- Horizontal Scrollbar Section -->\n    <div v-if=\"isContentOverflowing\" class=\"ht-horizontal-scrollbar-container flex flex-shrink-0\">\n      <div class=\"ht-scrollbar-pane-left flex-shrink-0\" :style=\"{ width: `${paneConfig.left.width}px` }\"></div>\n      <div\n        ref=\"horizontalScrollbarRef\"\n        class=\"ht-scrollbar-pane-center flex-1 overflow-x-auto ht-custom-scrollbar\"\n        tabindex=\"-1\"\n        role=\"presentation\"\n        aria-hidden=\"true\"\n        @scroll.passive=\"handleHorizontalScroll\"\n      >\n        <div :style=\"{ width: `${paneConfig.center.width}px`, height: '1px' }\"></div>\n      </div>\n      <div class=\"ht-scrollbar-pane-right flex-shrink-0\" :style=\"{ width: `${paneConfig.right.width}px` }\"></div>\n    </div>\n\n    <!-- Footer Section -->\n    <GridFooter\n      v-if=\"config.layout?.showFooter !== false\"\n      ref=\"footerRef\"\n      :total-rows=\"renderState.rows.length\"\n      :selected-count=\"selectionState.selectedIds.size\"\n      :render-metrics=\"{ lastRenderTime: 0, renderCount: 0, avgRenderTime: 0, averageFPS: 60 }\"\n      class=\"flex-shrink-0 border-t border-[var(--ht-border)] h-10\"\n    />\n  </div>\n</template>\n\n<style scoped>\n:root {\n  --ht-scrollbar-height: 8px;\n}\n\n.ht-table-renderer-component {\n  /* Performance optimizations */\n  contain: layout style paint;\n}\n\n/* 移除鼠标点击时的焦点边框 */\n.ht-table-renderer-component:focus:not(:focus-visible) {\n  outline: none;\n}\n\n/* 仅在键盘导航时显示焦点边框 */\n.ht-table-renderer-component:focus-visible {\n  outline: 2px solid var(--ht-primary);\n  outline-offset: -2px;\n}\n\n/* Ensure proper stacking context */\n.ht-table-renderer-component :deep(.ht-virtual-container) {\n  position: relative;\n  z-index: 1;\n}\n\n/* Header positioning */\n.ht-table-renderer-component :deep(.ht-header) {\n  position: sticky;\n  top: 0;\n  z-index: var(--z-ht-header);\n  background: var(--ht-header-bg);\n}\n\n/* Scroll performance */\n.ht-table-renderer-component :deep(.ht-scroll-area) {\n  overflow: auto;\n  transform: translateZ(0);\n  will-change: scroll-position;\n}\n\n/* Virtual item performance */\n.ht-table-renderer-component :deep(.ht-virtual-item) {\n  contain: layout style paint;\n  will-change: transform;\n}\n\n.ht-horizontal-scrollbar-container {\n  border-top: 1px solid var(--ht-border);\n  height: var(--ht-scrollbar-height, 8px); /* Standard scrollbar height */\n  background: var(--ht-bg);\n}\n</style>\n","/**\n * TableRenderer - Modern web-style table renderer implementation\n *\n * Implements the GridRenderer interface and wraps the existing TableRenderer.vue\n * component to provide a clean separation between logic and rendering.\n *\n * Features:\n * - Three-pane layout (left/center/right)\n * - Virtual scrolling support\n * - Complete GridInteractionContract implementation\n * - Event delegation for all interactions\n */\n\nimport { createApp, type App } from 'vue'\nimport type {\n  GridRenderer,\n  GridInteractionContract,\n  VirtualRow,\n  RendererOptions,\n} from '../base/renderer-interface'\nimport type { GridAPI, GridState, ColumnDef, GridEvents } from '../../types'\nimport {\n  createInteractionContract,\n  type CoreLogicCallbacks,\n  type InteractionPayload,\n} from '../base/interaction-contract'\nimport { createLogger } from '../../utils/logger'\n\n// Import the existing Vue component (will be created next)\nimport TableRendererComponent from '../../components/table-renderer/TableRendererComponent.vue'\n\n/**\n * Interface for the Vue component instance methods\n */\n// interface ComponentInstance {\n//   updateSelection?: (selectedIds: Set<string | number>, reason: 'programmatic' | 'user') => void\n//   setActive?: (activeId: string | number | null) => void\n//   ensureVisible?: (id: string | number, behavior: 'smooth' | 'auto') => void\n//   toggleEditMode?: (id: string | number, mode: 'enter' | 'exit') => Promise<boolean>\n//   updateScrollPosition?: (position: { top: number; left: number }) => void\n//   refresh?: () => void\n//   updateState?: (state: GridState, columns: ColumnDef[], rows: VirtualRow[]) => void\n//   resize?: (width: number, height: number) => void\n//   updateConfig?: (options: RendererOptions) => void\n//   handleCellClick?: (payload: any) => void\n//   handleCellDoubleClick?: (payload: any) => void\n//   handleCellRightClick?: (payload: any) => void\n//   handleRowSelect?: (payload: any) => void\n//   handleScroll?: (payload: any) => void\n// }\n\n/**\n * TableRenderer implementation using Vue component\n */\nexport class TableRenderer implements GridRenderer {\n  readonly name = 'table' as const\n  readonly interactionContract: GridInteractionContract\n  private logger: ReturnType<typeof createLogger>\n\n  private app: App | null = null\n  private componentInstance: any | null = null\n  private hostElement: HTMLElement | null = null\n  private isDestroyed = false\n  private readonly options: RendererOptions\n\n  // Current state tracking\n  private currentState: GridState | null = null\n  private currentColumns: ColumnDef[] = []\n  private currentRows: VirtualRow[] = []\n\n  constructor(options: RendererOptions = {}) {\n    this.options = options\n    // Logger for table renderer\n    this.logger = createLogger('TableRenderer')\n    const contract = createInteractionContract('table-renderer')\n\n    // Create a wrapper to match the GridInteractionContract interface\n    this.interactionContract = {\n      updateSelection: (selectedIds: Set<string | number>, reason: 'programmatic' | 'user') => {\n        // Forward to component instance\n        if (this.componentInstance?.updateSelection) {\n          this.componentInstance.updateSelection(selectedIds, reason)\n        }\n      },\n      setActive: (activeId: string | number | null) => {\n        // Forward to component instance\n        if (this.componentInstance?.setActive) {\n          this.componentInstance.setActive(activeId)\n        }\n      },\n      ensureVisible: (id: string | number, behavior: 'smooth' | 'auto') => {\n        // Forward to component instance\n        if (this.componentInstance?.ensureVisible) {\n          this.componentInstance.ensureVisible(id, behavior)\n        }\n      },\n      toggleEditMode: async (id: string | number, mode: 'enter' | 'exit') => {\n        // Forward to component instance\n        if (this.componentInstance?.toggleEditMode) {\n          return await this.componentInstance.toggleEditMode(id, mode)\n        }\n        return false\n      },\n      registerEventEmitter: <K extends keyof GridEvents>(emit: (eventName: K, payload: GridEvents[K]) => void) => {\n        contract.registerEventEmitter(emit)\n      },\n      updateScrollPosition: (position: { top: number; left: number }) => {\n        // Forward to component instance\n        if (this.componentInstance?.updateScrollPosition) {\n          this.componentInstance.updateScrollPosition(position)\n        }\n      },\n      refresh: () => {\n        // Force component re-render\n        if (this.componentInstance?.refresh) {\n          this.componentInstance.refresh()\n        }\n      },\n      emit: <K extends keyof GridEvents>(eventName: K, payload: GridEvents[K]) => {\n        contract.emit?.(eventName, payload)\n      },\n      registerCoreCallbacks: (callbacks: CoreLogicCallbacks) => {\n        contract.registerCoreCallbacks?.(callbacks)\n      },\n      destroy: () => {\n        contract.destroy?.()\n      },\n    }\n\n    // Setup core logic callbacks\n    this.setupCoreCallbacks()\n  }\n\n  /**\n   * Mount renderer to host element\n   */\n  async mount(host: HTMLElement, api: GridAPI): Promise<void> {\n    if (this.isDestroyed) {\n      throw new Error('Cannot mount destroyed TableRenderer')\n    }\n\n    if (this.app) {\n      this.logger.warn('Already mounted, unmounting first')\n      await this.unmount()\n    }\n\n    try {\n      this.hostElement = host\n\n      // Create Vue app with TableRenderer component\n      this.app = createApp(TableRendererComponent, {\n        // Pass renderer context to component\n        renderer: this,\n        interactionContract: this.interactionContract,\n        gridAPI: api,\n        options: this.options,\n      })\n\n      // Mount component\n      this.componentInstance = this.app.mount(host)\n\n      // Register event emitter with interaction contract\n      // Clean system: emit public event names without legacy prefixes\n      this.interactionContract.registerEventEmitter(<K extends keyof GridEvents>(eventName: K, payload: GridEvents[K]) => {\n        api.emit(eventName as any, payload)\n      })\n\n      this.logger.debug('Mounted successfully')\n    } catch (error) {\n      this.logger.error('Mount failed:', { module: 'TableRenderer' }, error)\n      await this.cleanup()\n      throw error\n    }\n  }\n\n  /**\n   * Unmount renderer and cleanup\n   */\n  async unmount(): Promise<void> {\n    await this.cleanup()\n  }\n\n  /**\n   * Render current state\n   */\n  render(state: GridState, columns: ColumnDef[], rows: VirtualRow[]): void {\n    if (this.isDestroyed || !this.componentInstance) {\n      return\n    }\n\n    try {\n      // Store current state\n      this.currentState = state\n      this.currentColumns = columns\n      this.currentRows = rows\n\n      // Update component state through reactive properties\n      if (this.componentInstance.updateState) {\n        this.componentInstance.updateState(state, columns, rows)\n      }\n    } catch (error) {\n      this.logger.error('Render failed:', { module: 'TableRenderer' }, error)\n    }\n  }\n\n  /**\n   * Handle resize events\n   */\n  resize(width: number, height: number): void {\n    if (this.isDestroyed || !this.componentInstance) {\n      return\n    }\n\n    try {\n      if (this.componentInstance.resize) {\n        this.componentInstance.resize(width, height)\n      }\n    } catch (error) {\n      this.logger.error('Resize failed:', { module: 'TableRenderer' }, error)\n    }\n  }\n\n  /**\n   * Get renderer configuration schema\n   */\n  getConfigSchema(): Record<string, any> {\n    return {\n      performance: {\n        type: 'object',\n        properties: {\n          enableRAF: { type: 'boolean', default: true },\n          batchUpdates: { type: 'boolean', default: true },\n          maxConcurrentRenders: { type: 'number', default: 3 },\n        },\n      },\n      accessibility: {\n        type: 'object',\n        properties: {\n          enableAria: { type: 'boolean', default: true },\n          announceChanges: { type: 'boolean', default: true },\n          keyboardNavigation: { type: 'boolean', default: true },\n        },\n      },\n      layout: {\n        type: 'object',\n        properties: {\n          showHeader: { type: 'boolean', default: true },\n          showFooter: { type: 'boolean', default: true },\n          enablePanes: { type: 'boolean', default: true },\n          stickyHeader: { type: 'boolean', default: true },\n        },\n      },\n    }\n  }\n\n  /**\n   * Update configuration\n   */\n  updateConfig(config: Record<string, any>): void {\n    Object.assign(this.options, config)\n\n    if (this.componentInstance?.updateConfig) {\n      this.componentInstance.updateConfig(this.options)\n    }\n  }\n\n  /**\n   * Get current state (for debugging)\n   */\n  getCurrentState(): {\n    state: GridState | null\n    columns: ColumnDef[]\n    rows: VirtualRow[]\n  } {\n    return {\n      state: this.currentState,\n      columns: this.currentColumns,\n      rows: this.currentRows,\n    }\n  }\n\n  /**\n   * Setup core logic callbacks for interaction contract\n   */\n  private setupCoreCallbacks(): void {\n    const callbacks: Partial<CoreLogicCallbacks> = {\n      onCellClick: (payload: InteractionPayload) => {\n        // Handle cell click events\n        if (this.componentInstance?.handleCellClick) {\n          this.componentInstance.handleCellClick(payload)\n        }\n      },\n\n      onCellDoubleClick: (payload: InteractionPayload) => {\n        // Handle cell double-click events\n        if (this.componentInstance?.handleCellDoubleClick) {\n          this.componentInstance.handleCellDoubleClick(payload)\n        }\n      },\n\n      onCellRightClick: (payload: InteractionPayload) => {\n        // Handle cell right-click events\n        if (this.componentInstance?.handleCellRightClick) {\n          this.componentInstance.handleCellRightClick(payload)\n        }\n      },\n\n      onRowSelect: (payload: InteractionPayload) => {\n        // Handle row selection\n        if (this.componentInstance?.handleRowSelect) {\n          this.componentInstance.handleRowSelect(payload)\n        }\n      },\n\n      onScroll: (payload: InteractionPayload) => {\n        // Handle scroll events\n        if (this.componentInstance?.handleScroll) {\n          this.componentInstance.handleScroll(payload)\n        }\n      },\n    }\n\n    // Register callbacks with interaction contract\n    this.interactionContract.registerCoreCallbacks?.(callbacks)\n  }\n\n  /**\n   * Cleanup resources\n   */\n  private async cleanup(): Promise<void> {\n    try {\n      // Unmount Vue app\n      if (this.app && this.hostElement) {\n        this.app.unmount()\n        this.app = null\n        this.componentInstance = null\n      }\n\n      // Clear host element\n      if (this.hostElement) {\n        this.hostElement.innerHTML = ''\n        this.hostElement = null\n      }\n\n      // Cleanup interaction contract\n      this.interactionContract.destroy?.()\n\n      // Clear state references\n      this.currentState = null\n      this.currentColumns = []\n      this.currentRows = []\n    } catch (error) {\n      this.logger.error('Cleanup failed:', { module: 'TableRenderer' }, error)\n    }\n  }\n\n  /**\n   * Mark renderer as destroyed\n   */\n  destroy(): void {\n    this.isDestroyed = true\n    this.cleanup()\n  }\n}\n\n/**\n * Factory function to create TableRenderer instances\n */\nexport function createTableRenderer(options: RendererOptions = {}): TableRenderer {\n  return new TableRenderer(options)\n}\n\n/**\n * Default export for convenience\n */\nexport default createTableRenderer\n","<!--\n  Keyboard Shortcuts Helper Component\n\n  Displays available keyboard shortcuts for the grid and provides accessibility\n  information for screen reader users.\n-->\n\n<template>\n  <div v-if=\"showShortcuts\" class=\"keyboard-shortcuts-panel\" role=\"complementary\" aria-labelledby=\"shortcuts-title\">\n    <div class=\"shortcuts-header\">\n      <h3 id=\"shortcuts-title\" class=\"shortcuts-title\">Keyboard Shortcuts</h3>\n      <button class=\"shortcuts-close\" aria-label=\"Close keyboard shortcuts\" @click=\"closeShortcuts\">×</button>\n    </div>\n\n    <div class=\"shortcuts-content\">\n      <!-- Navigation shortcuts -->\n      <div class=\"shortcut-group\">\n        <h4 class=\"shortcut-group-title\">Navigation</h4>\n        <div class=\"shortcut-list\">\n          <div class=\"shortcut-item\">\n            <div class=\"shortcut-keys\">\n              <kbd>↑</kbd>\n              <kbd>↓</kbd>\n              <kbd>←</kbd>\n              <kbd>→</kbd>\n            </div>\n            <div class=\"shortcut-description\">Move between cells</div>\n          </div>\n          <div class=\"shortcut-item\">\n            <div class=\"shortcut-keys\">\n              <kbd>Home</kbd>\n              /\n              <kbd>End</kbd>\n            </div>\n            <div class=\"shortcut-description\">First/last cell in row</div>\n          </div>\n          <div class=\"shortcut-item\">\n            <div class=\"shortcut-keys\">\n              <kbd>Ctrl</kbd>\n              +\n              <kbd>Home</kbd>\n              /\n              <kbd>End</kbd>\n            </div>\n            <div class=\"shortcut-description\">First/last cell in grid</div>\n          </div>\n          <div class=\"shortcut-item\">\n            <div class=\"shortcut-keys\">\n              <kbd>Page Up</kbd>\n              /\n              <kbd>Page Down</kbd>\n            </div>\n            <div class=\"shortcut-description\">Move page up/down</div>\n          </div>\n          <div class=\"shortcut-item\">\n            <div class=\"shortcut-keys\">\n              <kbd>Tab</kbd>\n              /\n              <kbd>Shift</kbd>\n              +\n              <kbd>Tab</kbd>\n            </div>\n            <div class=\"shortcut-description\">Next/previous cell</div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Editing shortcuts -->\n      <div v-if=\"enableEditing\" class=\"shortcut-group\">\n        <h4 class=\"shortcut-group-title\">Editing</h4>\n        <div class=\"shortcut-list\">\n          <div class=\"shortcut-item\">\n            <div class=\"shortcut-keys\">\n              <kbd>Enter</kbd>\n              /\n              <kbd>F2</kbd>\n            </div>\n            <div class=\"shortcut-description\">Start editing cell</div>\n          </div>\n          <div class=\"shortcut-item\">\n            <div class=\"shortcut-keys\">\n              <kbd>Escape</kbd>\n            </div>\n            <div class=\"shortcut-description\">Cancel editing</div>\n          </div>\n          <div class=\"shortcut-item\">\n            <div class=\"shortcut-keys\">\n              <kbd>Enter</kbd>\n            </div>\n            <div class=\"shortcut-description\">Commit edit and move down</div>\n          </div>\n          <div class=\"shortcut-item\">\n            <div class=\"shortcut-keys\">\n              <kbd>Tab</kbd>\n            </div>\n            <div class=\"shortcut-description\">Commit edit and move right</div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Selection shortcuts -->\n      <div v-if=\"enableSelection\" class=\"shortcut-group\">\n        <h4 class=\"shortcut-group-title\">Selection</h4>\n        <div class=\"shortcut-list\">\n          <div class=\"shortcut-item\">\n            <div class=\"shortcut-keys\">\n              <kbd>Space</kbd>\n            </div>\n            <div class=\"shortcut-description\">Toggle row selection</div>\n          </div>\n          <div class=\"shortcut-item\">\n            <div class=\"shortcut-keys\">\n              <kbd>Ctrl</kbd>\n              +\n              <kbd>A</kbd>\n            </div>\n            <div class=\"shortcut-description\">Select all rows</div>\n          </div>\n          <div class=\"shortcut-item\">\n            <div class=\"shortcut-keys\">\n              <kbd>Shift</kbd>\n              +\n              <kbd>Arrow</kbd>\n            </div>\n            <div class=\"shortcut-description\">Extend selection</div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Custom shortcuts -->\n      <div v-if=\"customShortcuts.length > 0\" class=\"shortcut-group\">\n        <h4 class=\"shortcut-group-title\">Custom</h4>\n        <div class=\"shortcut-list\">\n          <div v-for=\"shortcut in customShortcuts\" :key=\"shortcut.key\" class=\"shortcut-item\">\n            <div class=\"shortcut-keys\">\n              <kbd v-for=\"key in shortcut.keys\" :key=\"key\">{{ key }}</kbd>\n            </div>\n            <div class=\"shortcut-description\">{{ shortcut.description }}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"shortcuts-footer\">\n      <div class=\"shortcut-help\">\n        Press\n        <kbd>?</kbd>\n        to toggle this panel\n      </div>\n    </div>\n  </div>\n\n  <!-- Help trigger -->\n  <div v-else-if=\"showHelpHint\" class=\"keyboard-help-hint\">\n    <div class=\"help-hint-content\">\n      Press\n      <kbd>?</kbd>\n      for keyboard shortcuts\n    </div>\n  </div>\n\n  <!-- Screen reader announcements -->\n  <div class=\"sr-only\" aria-live=\"polite\" aria-atomic=\"true\">\n    {{ announcement }}\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, onUnmounted } from 'vue'\n\ninterface CustomShortcut {\n  key: string\n  keys: string[]\n  description: string\n}\n\ninterface Props {\n  showShortcuts?: boolean\n  showHelpHint?: boolean\n  enableEditing?: boolean\n  enableSelection?: boolean\n  customShortcuts?: CustomShortcut[]\n}\n\ninterface Emits {\n  (e: 'close'): void\n  (e: 'show'): void\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  showShortcuts: false,\n  showHelpHint: true,\n  enableEditing: true,\n  enableSelection: true,\n  customShortcuts: () => [],\n})\n\nconst emit = defineEmits<Emits>()\n\nconst announcement = ref('')\n\nconst closeShortcuts = () => {\n  emit('close')\n}\n\nconst handleGlobalKeydown = (event: KeyboardEvent) => {\n  // Toggle shortcuts panel with '?' key\n  if (event.key === '?' && !event.ctrlKey && !event.altKey && !event.metaKey) {\n    // Don't trigger if user is typing in an input\n    const target = event.target as HTMLElement\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA') {\n      return\n    }\n\n    event.preventDefault()\n    if (props.showShortcuts) {\n      closeShortcuts()\n    } else {\n      emit('show')\n    }\n  }\n\n  // Escape to close shortcuts\n  if (event.key === 'Escape' && props.showShortcuts) {\n    event.preventDefault()\n    closeShortcuts()\n  }\n}\n\nconst announceShortcut = (shortcut: string, action: string) => {\n  announcement.value = `${shortcut} ${action}`\n\n  // Clear announcement after a delay\n  setTimeout(() => {\n    announcement.value = ''\n  }, 1000)\n}\n\nonMounted(() => {\n  document.addEventListener('keydown', handleGlobalKeydown)\n})\n\nonUnmounted(() => {\n  document.removeEventListener('keydown', handleGlobalKeydown)\n})\n\n// Expose method for external components\ndefineExpose({\n  announceShortcut,\n})\n</script>\n\n<style scoped>\n.keyboard-shortcuts-panel {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: var(--ht-bg);\n  border: 1px solid var(--ht-border);\n  border-radius: var(--radius-ht-lg);\n  box-shadow: var(--shadow-ht-xl);\n  z-index: var(--z-ht-modal);\n  max-width: 500px;\n  max-height: 80vh;\n  overflow-y: auto;\n  font-size: 0.875rem;\n}\n\n.shortcuts-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: var(--size-ht-4) var(--size-ht-6);\n  border-bottom: 1px solid var(--ht-border);\n}\n\n.shortcuts-title {\n  margin: 0;\n  font-size: 1.125rem;\n  font-weight: 600;\n  color: var(--ht-text);\n}\n\n.shortcuts-close {\n  background: none;\n  border: none;\n  font-size: 1.5rem;\n  color: var(--ht-text-muted);\n  cursor: pointer;\n  padding: var(--size-ht-1);\n  border-radius: var(--radius-ht-sm);\n  transition: var(--ht-transition-fast);\n\n  &:hover {\n    background-color: var(--ht-bg-subtle);\n    color: var(--ht-text);\n  }\n\n  &:focus-visible {\n    outline: 2px solid var(--ht-primary);\n    outline-offset: 2px;\n  }\n}\n\n.shortcuts-content {\n  padding: var(--size-ht-6);\n}\n\n.shortcut-group {\n  margin-bottom: var(--size-ht-6);\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n}\n\n.shortcut-group-title {\n  margin: 0 0 var(--size-ht-3) 0;\n  font-size: 0.875rem;\n  font-weight: 600;\n  color: var(--ht-text);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.shortcut-list {\n  display: flex;\n  flex-direction: column;\n  gap: var(--size-ht-2);\n}\n\n.shortcut-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: var(--size-ht-4);\n}\n\n.shortcut-keys {\n  display: flex;\n  gap: var(--size-ht-1);\n  align-items: center;\n  flex-shrink: 0;\n}\n\n.shortcut-description {\n  color: var(--ht-text-muted);\n  text-align: right;\n}\n\nkbd {\n  background-color: var(--ht-bg-subtle);\n  border: 1px solid var(--ht-border);\n  border-radius: var(--radius-ht-sm);\n  padding: var(--size-ht-0-5) var(--size-ht-1);\n  font-size: 0.75rem;\n  font-family: ui-monospace, SFMono-Regular, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace;\n  font-weight: 500;\n  color: var(--ht-text);\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);\n}\n\n.shortcuts-footer {\n  padding: var(--size-ht-4) var(--size-ht-6);\n  border-top: 1px solid var(--ht-border);\n  background-color: var(--ht-bg-subtle);\n  border-radius: 0 0 var(--radius-ht-lg) var(--radius-ht-lg);\n}\n\n.shortcut-help {\n  text-align: center;\n  color: var(--ht-text-muted);\n  font-size: 0.75rem;\n}\n\n.keyboard-help-hint {\n  position: absolute;\n  bottom: var(--size-ht-4);\n  right: var(--size-ht-4);\n  z-index: var(--z-ht-overlay);\n}\n\n.help-hint-content {\n  background: var(--ht-bg);\n  border: 1px solid var(--ht-border);\n  border-radius: var(--radius-ht-md);\n  padding: var(--size-ht-2) var(--size-ht-3);\n  font-size: 0.75rem;\n  color: var(--ht-text-muted);\n  box-shadow: var(--shadow-ht-sm);\n  opacity: 0.8;\n  transition: var(--ht-transition-fast);\n\n  &:hover {\n    opacity: 1;\n  }\n}\n\n/* Use Tailwind's built-in `sr-only` utility */\n\n/* Responsive adjustments */\n@media (max-width: 640px) {\n  .keyboard-shortcuts-panel {\n    max-width: 90vw;\n    max-height: 90vh;\n  }\n\n  .shortcuts-header,\n  .shortcuts-content,\n  .shortcuts-footer {\n    padding-left: var(--size-ht-4);\n    padding-right: var(--size-ht-4);\n  }\n\n  .shortcut-item {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: var(--size-ht-1);\n  }\n\n  .shortcut-description {\n    text-align: left;\n  }\n}\n\n/* Dark theme adjustments */\n@media (prefers-color-scheme: dark) {\n  kbd {\n    background-color: var(--ht-bg-subtle);\n    border-color: var(--ht-border);\n    color: var(--ht-text);\n  }\n}\n\n/* High contrast adjustments */\n@media (prefers-contrast: high) {\n  .keyboard-shortcuts-panel {\n    border-width: 2px;\n  }\n\n  kbd {\n    border-width: 2px;\n    font-weight: 600;\n  }\n}\n</style>\n","<!--\n  Keyboard Shortcuts Helper Component\n\n  Displays available keyboard shortcuts for the grid and provides accessibility\n  information for screen reader users.\n-->\n\n<template>\n  <div v-if=\"showShortcuts\" class=\"keyboard-shortcuts-panel\" role=\"complementary\" aria-labelledby=\"shortcuts-title\">\n    <div class=\"shortcuts-header\">\n      <h3 id=\"shortcuts-title\" class=\"shortcuts-title\">Keyboard Shortcuts</h3>\n      <button class=\"shortcuts-close\" aria-label=\"Close keyboard shortcuts\" @click=\"closeShortcuts\">×</button>\n    </div>\n\n    <div class=\"shortcuts-content\">\n      <!-- Navigation shortcuts -->\n      <div class=\"shortcut-group\">\n        <h4 class=\"shortcut-group-title\">Navigation</h4>\n        <div class=\"shortcut-list\">\n          <div class=\"shortcut-item\">\n            <div class=\"shortcut-keys\">\n              <kbd>↑</kbd>\n              <kbd>↓</kbd>\n              <kbd>←</kbd>\n              <kbd>→</kbd>\n            </div>\n            <div class=\"shortcut-description\">Move between cells</div>\n          </div>\n          <div class=\"shortcut-item\">\n            <div class=\"shortcut-keys\">\n              <kbd>Home</kbd>\n              /\n              <kbd>End</kbd>\n            </div>\n            <div class=\"shortcut-description\">First/last cell in row</div>\n          </div>\n          <div class=\"shortcut-item\">\n            <div class=\"shortcut-keys\">\n              <kbd>Ctrl</kbd>\n              +\n              <kbd>Home</kbd>\n              /\n              <kbd>End</kbd>\n            </div>\n            <div class=\"shortcut-description\">First/last cell in grid</div>\n          </div>\n          <div class=\"shortcut-item\">\n            <div class=\"shortcut-keys\">\n              <kbd>Page Up</kbd>\n              /\n              <kbd>Page Down</kbd>\n            </div>\n            <div class=\"shortcut-description\">Move page up/down</div>\n          </div>\n          <div class=\"shortcut-item\">\n            <div class=\"shortcut-keys\">\n              <kbd>Tab</kbd>\n              /\n              <kbd>Shift</kbd>\n              +\n              <kbd>Tab</kbd>\n            </div>\n            <div class=\"shortcut-description\">Next/previous cell</div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Editing shortcuts -->\n      <div v-if=\"enableEditing\" class=\"shortcut-group\">\n        <h4 class=\"shortcut-group-title\">Editing</h4>\n        <div class=\"shortcut-list\">\n          <div class=\"shortcut-item\">\n            <div class=\"shortcut-keys\">\n              <kbd>Enter</kbd>\n              /\n              <kbd>F2</kbd>\n            </div>\n            <div class=\"shortcut-description\">Start editing cell</div>\n          </div>\n          <div class=\"shortcut-item\">\n            <div class=\"shortcut-keys\">\n              <kbd>Escape</kbd>\n            </div>\n            <div class=\"shortcut-description\">Cancel editing</div>\n          </div>\n          <div class=\"shortcut-item\">\n            <div class=\"shortcut-keys\">\n              <kbd>Enter</kbd>\n            </div>\n            <div class=\"shortcut-description\">Commit edit and move down</div>\n          </div>\n          <div class=\"shortcut-item\">\n            <div class=\"shortcut-keys\">\n              <kbd>Tab</kbd>\n            </div>\n            <div class=\"shortcut-description\">Commit edit and move right</div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Selection shortcuts -->\n      <div v-if=\"enableSelection\" class=\"shortcut-group\">\n        <h4 class=\"shortcut-group-title\">Selection</h4>\n        <div class=\"shortcut-list\">\n          <div class=\"shortcut-item\">\n            <div class=\"shortcut-keys\">\n              <kbd>Space</kbd>\n            </div>\n            <div class=\"shortcut-description\">Toggle row selection</div>\n          </div>\n          <div class=\"shortcut-item\">\n            <div class=\"shortcut-keys\">\n              <kbd>Ctrl</kbd>\n              +\n              <kbd>A</kbd>\n            </div>\n            <div class=\"shortcut-description\">Select all rows</div>\n          </div>\n          <div class=\"shortcut-item\">\n            <div class=\"shortcut-keys\">\n              <kbd>Shift</kbd>\n              +\n              <kbd>Arrow</kbd>\n            </div>\n            <div class=\"shortcut-description\">Extend selection</div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Custom shortcuts -->\n      <div v-if=\"customShortcuts.length > 0\" class=\"shortcut-group\">\n        <h4 class=\"shortcut-group-title\">Custom</h4>\n        <div class=\"shortcut-list\">\n          <div v-for=\"shortcut in customShortcuts\" :key=\"shortcut.key\" class=\"shortcut-item\">\n            <div class=\"shortcut-keys\">\n              <kbd v-for=\"key in shortcut.keys\" :key=\"key\">{{ key }}</kbd>\n            </div>\n            <div class=\"shortcut-description\">{{ shortcut.description }}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"shortcuts-footer\">\n      <div class=\"shortcut-help\">\n        Press\n        <kbd>?</kbd>\n        to toggle this panel\n      </div>\n    </div>\n  </div>\n\n  <!-- Help trigger -->\n  <div v-else-if=\"showHelpHint\" class=\"keyboard-help-hint\">\n    <div class=\"help-hint-content\">\n      Press\n      <kbd>?</kbd>\n      for keyboard shortcuts\n    </div>\n  </div>\n\n  <!-- Screen reader announcements -->\n  <div class=\"sr-only\" aria-live=\"polite\" aria-atomic=\"true\">\n    {{ announcement }}\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, onUnmounted } from 'vue'\n\ninterface CustomShortcut {\n  key: string\n  keys: string[]\n  description: string\n}\n\ninterface Props {\n  showShortcuts?: boolean\n  showHelpHint?: boolean\n  enableEditing?: boolean\n  enableSelection?: boolean\n  customShortcuts?: CustomShortcut[]\n}\n\ninterface Emits {\n  (e: 'close'): void\n  (e: 'show'): void\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  showShortcuts: false,\n  showHelpHint: true,\n  enableEditing: true,\n  enableSelection: true,\n  customShortcuts: () => [],\n})\n\nconst emit = defineEmits<Emits>()\n\nconst announcement = ref('')\n\nconst closeShortcuts = () => {\n  emit('close')\n}\n\nconst handleGlobalKeydown = (event: KeyboardEvent) => {\n  // Toggle shortcuts panel with '?' key\n  if (event.key === '?' && !event.ctrlKey && !event.altKey && !event.metaKey) {\n    // Don't trigger if user is typing in an input\n    const target = event.target as HTMLElement\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA') {\n      return\n    }\n\n    event.preventDefault()\n    if (props.showShortcuts) {\n      closeShortcuts()\n    } else {\n      emit('show')\n    }\n  }\n\n  // Escape to close shortcuts\n  if (event.key === 'Escape' && props.showShortcuts) {\n    event.preventDefault()\n    closeShortcuts()\n  }\n}\n\nconst announceShortcut = (shortcut: string, action: string) => {\n  announcement.value = `${shortcut} ${action}`\n\n  // Clear announcement after a delay\n  setTimeout(() => {\n    announcement.value = ''\n  }, 1000)\n}\n\nonMounted(() => {\n  document.addEventListener('keydown', handleGlobalKeydown)\n})\n\nonUnmounted(() => {\n  document.removeEventListener('keydown', handleGlobalKeydown)\n})\n\n// Expose method for external components\ndefineExpose({\n  announceShortcut,\n})\n</script>\n\n<style scoped>\n.keyboard-shortcuts-panel {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: var(--ht-bg);\n  border: 1px solid var(--ht-border);\n  border-radius: var(--radius-ht-lg);\n  box-shadow: var(--shadow-ht-xl);\n  z-index: var(--z-ht-modal);\n  max-width: 500px;\n  max-height: 80vh;\n  overflow-y: auto;\n  font-size: 0.875rem;\n}\n\n.shortcuts-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: var(--size-ht-4) var(--size-ht-6);\n  border-bottom: 1px solid var(--ht-border);\n}\n\n.shortcuts-title {\n  margin: 0;\n  font-size: 1.125rem;\n  font-weight: 600;\n  color: var(--ht-text);\n}\n\n.shortcuts-close {\n  background: none;\n  border: none;\n  font-size: 1.5rem;\n  color: var(--ht-text-muted);\n  cursor: pointer;\n  padding: var(--size-ht-1);\n  border-radius: var(--radius-ht-sm);\n  transition: var(--ht-transition-fast);\n\n  &:hover {\n    background-color: var(--ht-bg-subtle);\n    color: var(--ht-text);\n  }\n\n  &:focus-visible {\n    outline: 2px solid var(--ht-primary);\n    outline-offset: 2px;\n  }\n}\n\n.shortcuts-content {\n  padding: var(--size-ht-6);\n}\n\n.shortcut-group {\n  margin-bottom: var(--size-ht-6);\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n}\n\n.shortcut-group-title {\n  margin: 0 0 var(--size-ht-3) 0;\n  font-size: 0.875rem;\n  font-weight: 600;\n  color: var(--ht-text);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.shortcut-list {\n  display: flex;\n  flex-direction: column;\n  gap: var(--size-ht-2);\n}\n\n.shortcut-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: var(--size-ht-4);\n}\n\n.shortcut-keys {\n  display: flex;\n  gap: var(--size-ht-1);\n  align-items: center;\n  flex-shrink: 0;\n}\n\n.shortcut-description {\n  color: var(--ht-text-muted);\n  text-align: right;\n}\n\nkbd {\n  background-color: var(--ht-bg-subtle);\n  border: 1px solid var(--ht-border);\n  border-radius: var(--radius-ht-sm);\n  padding: var(--size-ht-0-5) var(--size-ht-1);\n  font-size: 0.75rem;\n  font-family: ui-monospace, SFMono-Regular, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace;\n  font-weight: 500;\n  color: var(--ht-text);\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);\n}\n\n.shortcuts-footer {\n  padding: var(--size-ht-4) var(--size-ht-6);\n  border-top: 1px solid var(--ht-border);\n  background-color: var(--ht-bg-subtle);\n  border-radius: 0 0 var(--radius-ht-lg) var(--radius-ht-lg);\n}\n\n.shortcut-help {\n  text-align: center;\n  color: var(--ht-text-muted);\n  font-size: 0.75rem;\n}\n\n.keyboard-help-hint {\n  position: absolute;\n  bottom: var(--size-ht-4);\n  right: var(--size-ht-4);\n  z-index: var(--z-ht-overlay);\n}\n\n.help-hint-content {\n  background: var(--ht-bg);\n  border: 1px solid var(--ht-border);\n  border-radius: var(--radius-ht-md);\n  padding: var(--size-ht-2) var(--size-ht-3);\n  font-size: 0.75rem;\n  color: var(--ht-text-muted);\n  box-shadow: var(--shadow-ht-sm);\n  opacity: 0.8;\n  transition: var(--ht-transition-fast);\n\n  &:hover {\n    opacity: 1;\n  }\n}\n\n/* Use Tailwind's built-in `sr-only` utility */\n\n/* Responsive adjustments */\n@media (max-width: 640px) {\n  .keyboard-shortcuts-panel {\n    max-width: 90vw;\n    max-height: 90vh;\n  }\n\n  .shortcuts-header,\n  .shortcuts-content,\n  .shortcuts-footer {\n    padding-left: var(--size-ht-4);\n    padding-right: var(--size-ht-4);\n  }\n\n  .shortcut-item {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: var(--size-ht-1);\n  }\n\n  .shortcut-description {\n    text-align: left;\n  }\n}\n\n/* Dark theme adjustments */\n@media (prefers-color-scheme: dark) {\n  kbd {\n    background-color: var(--ht-bg-subtle);\n    border-color: var(--ht-border);\n    color: var(--ht-text);\n  }\n}\n\n/* High contrast adjustments */\n@media (prefers-contrast: high) {\n  .keyboard-shortcuts-panel {\n    border-width: 2px;\n  }\n\n  kbd {\n    border-width: 2px;\n    font-weight: 600;\n  }\n}\n</style>\n","<!--\n  Accessibility Announcer Component\n\n  Provides live region announcements for screen reader users during\n  keyboard navigation and other grid interactions.\n-->\n\n<template>\n  <!-- Primary live region for important announcements -->\n  <div ref=\"primaryRegion\" class=\"sr-only\" aria-live=\"assertive\" aria-atomic=\"true\" role=\"status\">\n    {{ primaryMessage }}\n  </div>\n\n  <!-- Secondary live region for less critical announcements -->\n  <div ref=\"secondaryRegion\" class=\"sr-only\" aria-live=\"polite\" aria-atomic=\"false\" role=\"log\">\n    {{ secondaryMessage }}\n  </div>\n\n  <!-- Navigation announcements -->\n  <div ref=\"navigationRegion\" class=\"sr-only\" aria-live=\"polite\" aria-atomic=\"true\" role=\"status\">\n    {{ navigationMessage }}\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onUnmounted } from 'vue'\nimport type { CellValue } from '../../types'\n\ninterface AnnouncementOptions {\n  priority?: 'high' | 'medium' | 'low'\n  category?: 'navigation' | 'editing' | 'selection' | 'error' | 'success'\n  delay?: number\n  clearAfter?: number\n}\n\nconst primaryMessage = ref('')\nconst secondaryMessage = ref('')\nconst navigationMessage = ref('')\n\n// Message queues for different priority levels\nconst messageQueue = {\n  high: [] as Array<{ message: string; options: AnnouncementOptions }>,\n  medium: [] as Array<{ message: string; options: AnnouncementOptions }>,\n  low: [] as Array<{ message: string; options: AnnouncementOptions }>,\n}\n\nlet isProcessingQueue = false\nlet clearTimeouts: number[] = []\n\n/**\n * Announce a message to screen readers\n */\nconst announce = (message: string, options: AnnouncementOptions = {}) => {\n  const { priority = 'medium', category: _category = 'navigation', delay = 0, clearAfter: _clearAfter = 3000 } = options\n\n  // Don't announce empty messages\n  if (!message.trim()) return\n\n  // Add to appropriate queue\n  messageQueue[priority].push({ message, options })\n\n  // Process queue if not already processing\n  if (!isProcessingQueue) {\n    setTimeout(() => processQueue(), delay)\n  }\n}\n\n/**\n * Process the message queue in priority order\n */\nconst processQueue = () => {\n  isProcessingQueue = true\n\n  // Process high priority first, then medium, then low\n  const priorities = ['high', 'medium', 'low'] as const\n\n  for (const priority of priorities) {\n    const queue = messageQueue[priority]\n    if (queue.length > 0) {\n      const { message, options } = queue.shift()!\n      displayMessage(message, options)\n      break\n    }\n  }\n\n  // Continue processing if there are more messages\n  const hasMoreMessages = priorities.some(p => messageQueue[p].length > 0)\n  if (hasMoreMessages) {\n    setTimeout(() => processQueue(), 100)\n  } else {\n    isProcessingQueue = false\n  }\n}\n\n/**\n * Display message in appropriate live region\n */\nconst displayMessage = (message: string, options: AnnouncementOptions) => {\n  const { priority = 'medium', category = 'navigation', clearAfter = 3000 } = options\n\n  // Clear any existing timeouts\n  clearTimeouts.forEach(timeout => clearTimeout(timeout))\n  clearTimeouts = []\n\n  // Choose appropriate live region based on priority and category\n  if (priority === 'high' || category === 'error') {\n    primaryMessage.value = message\n    if (clearAfter > 0) {\n      const timeout = window.setTimeout(() => {\n        primaryMessage.value = ''\n      }, clearAfter)\n      clearTimeouts.push(timeout)\n    }\n  } else if (category === 'navigation') {\n    navigationMessage.value = message\n    if (clearAfter > 0) {\n      const timeout = window.setTimeout(() => {\n        navigationMessage.value = ''\n      }, clearAfter)\n      clearTimeouts.push(timeout)\n    }\n  } else {\n    secondaryMessage.value = message\n    if (clearAfter > 0) {\n      const timeout = window.setTimeout(() => {\n        secondaryMessage.value = ''\n      }, clearAfter)\n      clearTimeouts.push(timeout)\n    }\n  }\n}\n\n/**\n * Announce cell focus change\n */\nconst announceCellFocus = (rowIndex: number, columnIndex: number, cellValue?: CellValue, columnTitle?: string) => {\n  const position = `Row ${rowIndex + 1}, Column ${columnIndex + 1}`\n  const column = columnTitle ? `, ${columnTitle}` : ''\n  const value = cellValue ? `, ${cellValue}` : ''\n\n  announce(`${position}${column}${value}`, {\n    category: 'navigation',\n    priority: 'low',\n    clearAfter: 2000,\n  })\n}\n\n/**\n * Announce selection change\n */\nconst announceSelection = (selectedCount: number, totalCount: number) => {\n  const message =\n    selectedCount === 0\n      ? 'Selection cleared'\n      : selectedCount === 1\n        ? '1 row selected'\n        : selectedCount === totalCount\n          ? 'All rows selected'\n          : `${selectedCount} of ${totalCount} rows selected`\n\n  announce(message, {\n    category: 'selection',\n    priority: 'medium',\n    clearAfter: 2000,\n  })\n}\n\n/**\n * Announce edit mode changes\n */\nconst announceEditMode = (entering: boolean, cellInfo?: { row: number; column: number; title?: string }) => {\n  if (entering && cellInfo) {\n    const position = `Row ${cellInfo.row + 1}, Column ${cellInfo.column + 1}`\n    const column = cellInfo.title ? `, ${cellInfo.title}` : ''\n    announce(`Editing ${position}${column}`, {\n      category: 'editing',\n      priority: 'medium',\n      clearAfter: 1000,\n    })\n  } else if (!entering) {\n    announce('Edit mode exited', {\n      category: 'editing',\n      priority: 'low',\n      clearAfter: 1000,\n    })\n  }\n}\n\n/**\n * Announce sorting changes\n */\nconst announceSorting = (columnTitle: string, direction: 'asc' | 'desc' | 'none') => {\n  const directionText = direction === 'asc' ? 'ascending' : direction === 'desc' ? 'descending' : 'none'\n  const message = direction === 'none' ? `${columnTitle} sorting cleared` : `${columnTitle} sorted ${directionText}`\n\n  announce(message, {\n    category: 'navigation',\n    priority: 'medium',\n    clearAfter: 2000,\n  })\n}\n\n/**\n * Announce filtering changes\n */\nconst announceFiltering = (activeFilters: number, totalRows: number, visibleRows: number) => {\n  if (activeFilters === 0) {\n    announce(`All filters cleared. Showing all ${totalRows} rows`, {\n      category: 'navigation',\n      priority: 'medium',\n      clearAfter: 2000,\n    })\n  } else {\n    announce(\n      `${activeFilters} filter${activeFilters > 1 ? 's' : ''} applied. Showing ${visibleRows} of ${totalRows} rows`,\n      {\n        category: 'navigation',\n        priority: 'medium',\n        clearAfter: 2000,\n      }\n    )\n  }\n}\n\n/**\n * Announce error messages\n */\nconst announceError = (message: string) => {\n  announce(`Error: ${message}`, {\n    category: 'error',\n    priority: 'high',\n    clearAfter: 5000,\n  })\n}\n\n/**\n * Announce success messages\n */\nconst announceSuccess = (message: string) => {\n  announce(message, {\n    category: 'success',\n    priority: 'medium',\n    clearAfter: 2000,\n  })\n}\n\n/**\n * Clear all messages\n */\nconst clearAll = () => {\n  primaryMessage.value = ''\n  secondaryMessage.value = ''\n  navigationMessage.value = ''\n\n  clearTimeouts.forEach(timeout => clearTimeout(timeout))\n  clearTimeouts = []\n\n  // Clear queues\n  Object.keys(messageQueue).forEach(key => {\n    messageQueue[key as keyof typeof messageQueue] = []\n  })\n\n  isProcessingQueue = false\n}\n\nonUnmounted(() => {\n  clearAll()\n})\n\n// Expose methods for external use\ndefineExpose({\n  announce,\n  announceCellFocus,\n  announceSelection,\n  announceEditMode,\n  announceSorting,\n  announceFiltering,\n  announceError,\n  announceSuccess,\n  clearAll,\n})\n</script>\n\n<style scoped>\n/* Using Tailwind's built-in `sr-only` utility */\n</style>\n","<!--\n  Accessibility Announcer Component\n\n  Provides live region announcements for screen reader users during\n  keyboard navigation and other grid interactions.\n-->\n\n<template>\n  <!-- Primary live region for important announcements -->\n  <div ref=\"primaryRegion\" class=\"sr-only\" aria-live=\"assertive\" aria-atomic=\"true\" role=\"status\">\n    {{ primaryMessage }}\n  </div>\n\n  <!-- Secondary live region for less critical announcements -->\n  <div ref=\"secondaryRegion\" class=\"sr-only\" aria-live=\"polite\" aria-atomic=\"false\" role=\"log\">\n    {{ secondaryMessage }}\n  </div>\n\n  <!-- Navigation announcements -->\n  <div ref=\"navigationRegion\" class=\"sr-only\" aria-live=\"polite\" aria-atomic=\"true\" role=\"status\">\n    {{ navigationMessage }}\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onUnmounted } from 'vue'\nimport type { CellValue } from '../../types'\n\ninterface AnnouncementOptions {\n  priority?: 'high' | 'medium' | 'low'\n  category?: 'navigation' | 'editing' | 'selection' | 'error' | 'success'\n  delay?: number\n  clearAfter?: number\n}\n\nconst primaryMessage = ref('')\nconst secondaryMessage = ref('')\nconst navigationMessage = ref('')\n\n// Message queues for different priority levels\nconst messageQueue = {\n  high: [] as Array<{ message: string; options: AnnouncementOptions }>,\n  medium: [] as Array<{ message: string; options: AnnouncementOptions }>,\n  low: [] as Array<{ message: string; options: AnnouncementOptions }>,\n}\n\nlet isProcessingQueue = false\nlet clearTimeouts: number[] = []\n\n/**\n * Announce a message to screen readers\n */\nconst announce = (message: string, options: AnnouncementOptions = {}) => {\n  const { priority = 'medium', category: _category = 'navigation', delay = 0, clearAfter: _clearAfter = 3000 } = options\n\n  // Don't announce empty messages\n  if (!message.trim()) return\n\n  // Add to appropriate queue\n  messageQueue[priority].push({ message, options })\n\n  // Process queue if not already processing\n  if (!isProcessingQueue) {\n    setTimeout(() => processQueue(), delay)\n  }\n}\n\n/**\n * Process the message queue in priority order\n */\nconst processQueue = () => {\n  isProcessingQueue = true\n\n  // Process high priority first, then medium, then low\n  const priorities = ['high', 'medium', 'low'] as const\n\n  for (const priority of priorities) {\n    const queue = messageQueue[priority]\n    if (queue.length > 0) {\n      const { message, options } = queue.shift()!\n      displayMessage(message, options)\n      break\n    }\n  }\n\n  // Continue processing if there are more messages\n  const hasMoreMessages = priorities.some(p => messageQueue[p].length > 0)\n  if (hasMoreMessages) {\n    setTimeout(() => processQueue(), 100)\n  } else {\n    isProcessingQueue = false\n  }\n}\n\n/**\n * Display message in appropriate live region\n */\nconst displayMessage = (message: string, options: AnnouncementOptions) => {\n  const { priority = 'medium', category = 'navigation', clearAfter = 3000 } = options\n\n  // Clear any existing timeouts\n  clearTimeouts.forEach(timeout => clearTimeout(timeout))\n  clearTimeouts = []\n\n  // Choose appropriate live region based on priority and category\n  if (priority === 'high' || category === 'error') {\n    primaryMessage.value = message\n    if (clearAfter > 0) {\n      const timeout = window.setTimeout(() => {\n        primaryMessage.value = ''\n      }, clearAfter)\n      clearTimeouts.push(timeout)\n    }\n  } else if (category === 'navigation') {\n    navigationMessage.value = message\n    if (clearAfter > 0) {\n      const timeout = window.setTimeout(() => {\n        navigationMessage.value = ''\n      }, clearAfter)\n      clearTimeouts.push(timeout)\n    }\n  } else {\n    secondaryMessage.value = message\n    if (clearAfter > 0) {\n      const timeout = window.setTimeout(() => {\n        secondaryMessage.value = ''\n      }, clearAfter)\n      clearTimeouts.push(timeout)\n    }\n  }\n}\n\n/**\n * Announce cell focus change\n */\nconst announceCellFocus = (rowIndex: number, columnIndex: number, cellValue?: CellValue, columnTitle?: string) => {\n  const position = `Row ${rowIndex + 1}, Column ${columnIndex + 1}`\n  const column = columnTitle ? `, ${columnTitle}` : ''\n  const value = cellValue ? `, ${cellValue}` : ''\n\n  announce(`${position}${column}${value}`, {\n    category: 'navigation',\n    priority: 'low',\n    clearAfter: 2000,\n  })\n}\n\n/**\n * Announce selection change\n */\nconst announceSelection = (selectedCount: number, totalCount: number) => {\n  const message =\n    selectedCount === 0\n      ? 'Selection cleared'\n      : selectedCount === 1\n        ? '1 row selected'\n        : selectedCount === totalCount\n          ? 'All rows selected'\n          : `${selectedCount} of ${totalCount} rows selected`\n\n  announce(message, {\n    category: 'selection',\n    priority: 'medium',\n    clearAfter: 2000,\n  })\n}\n\n/**\n * Announce edit mode changes\n */\nconst announceEditMode = (entering: boolean, cellInfo?: { row: number; column: number; title?: string }) => {\n  if (entering && cellInfo) {\n    const position = `Row ${cellInfo.row + 1}, Column ${cellInfo.column + 1}`\n    const column = cellInfo.title ? `, ${cellInfo.title}` : ''\n    announce(`Editing ${position}${column}`, {\n      category: 'editing',\n      priority: 'medium',\n      clearAfter: 1000,\n    })\n  } else if (!entering) {\n    announce('Edit mode exited', {\n      category: 'editing',\n      priority: 'low',\n      clearAfter: 1000,\n    })\n  }\n}\n\n/**\n * Announce sorting changes\n */\nconst announceSorting = (columnTitle: string, direction: 'asc' | 'desc' | 'none') => {\n  const directionText = direction === 'asc' ? 'ascending' : direction === 'desc' ? 'descending' : 'none'\n  const message = direction === 'none' ? `${columnTitle} sorting cleared` : `${columnTitle} sorted ${directionText}`\n\n  announce(message, {\n    category: 'navigation',\n    priority: 'medium',\n    clearAfter: 2000,\n  })\n}\n\n/**\n * Announce filtering changes\n */\nconst announceFiltering = (activeFilters: number, totalRows: number, visibleRows: number) => {\n  if (activeFilters === 0) {\n    announce(`All filters cleared. Showing all ${totalRows} rows`, {\n      category: 'navigation',\n      priority: 'medium',\n      clearAfter: 2000,\n    })\n  } else {\n    announce(\n      `${activeFilters} filter${activeFilters > 1 ? 's' : ''} applied. Showing ${visibleRows} of ${totalRows} rows`,\n      {\n        category: 'navigation',\n        priority: 'medium',\n        clearAfter: 2000,\n      }\n    )\n  }\n}\n\n/**\n * Announce error messages\n */\nconst announceError = (message: string) => {\n  announce(`Error: ${message}`, {\n    category: 'error',\n    priority: 'high',\n    clearAfter: 5000,\n  })\n}\n\n/**\n * Announce success messages\n */\nconst announceSuccess = (message: string) => {\n  announce(message, {\n    category: 'success',\n    priority: 'medium',\n    clearAfter: 2000,\n  })\n}\n\n/**\n * Clear all messages\n */\nconst clearAll = () => {\n  primaryMessage.value = ''\n  secondaryMessage.value = ''\n  navigationMessage.value = ''\n\n  clearTimeouts.forEach(timeout => clearTimeout(timeout))\n  clearTimeouts = []\n\n  // Clear queues\n  Object.keys(messageQueue).forEach(key => {\n    messageQueue[key as keyof typeof messageQueue] = []\n  })\n\n  isProcessingQueue = false\n}\n\nonUnmounted(() => {\n  clearAll()\n})\n\n// Expose methods for external use\ndefineExpose({\n  announce,\n  announceCellFocus,\n  announceSelection,\n  announceEditMode,\n  announceSorting,\n  announceFiltering,\n  announceError,\n  announceSuccess,\n  clearAll,\n})\n</script>\n\n<style scoped>\n/* Using Tailwind's built-in `sr-only` utility */\n</style>\n","<!--\n  ToastNotification.vue - Simple Toast Notification Component\n\n  Responsibilities:\n  1. Display temporary notification messages to users\n  2. Auto-dismiss after configurable duration\n  3. Support different notification types (info, warn, error, success)\n  4. Accessible with proper ARIA attributes\n\n  Vue 3 Pattern: Composition API with reactive state\n-->\n\n<script setup lang=\"ts\">\nimport { ref, watch, onMounted } from 'vue'\n\n// Props\nconst props = withDefaults(\n  defineProps<{\n    message: string\n    type?: 'info' | 'warn' | 'error' | 'success'\n    duration?: number // Duration in milliseconds\n    visible?: boolean\n  }>(),\n  {\n    type: 'info',\n    duration: 4000,\n    visible: false,\n  }\n)\n\n// Emits\nconst emit = defineEmits<{\n  'close': []\n}>()\n\n// Local state\nconst show = ref(props.visible)\nlet timer: ReturnType<typeof setTimeout> | null = null\n\n// Watch for visibility changes\nwatch(\n  () => props.visible,\n  (newValue) => {\n    show.value = newValue\n    if (newValue) {\n      startTimer()\n    } else {\n      clearTimer()\n    }\n  }\n)\n\n// Auto-dismiss timer\nfunction startTimer() {\n  clearTimer()\n  if (props.duration > 0) {\n    timer = setTimeout(() => {\n      show.value = false\n      emit('close')\n    }, props.duration)\n  }\n}\n\nfunction clearTimer() {\n  if (timer) {\n    clearTimeout(timer)\n    timer = null\n  }\n}\n\nfunction handleClose() {\n  clearTimer()\n  show.value = false\n  emit('close')\n}\n\nonMounted(() => {\n  if (props.visible) {\n    startTimer()\n  }\n})\n\n// Type-specific styling\nconst typeClasses = {\n  info: 'bg-[var(--ht-primary)] text-[var(--ht-text-inverse)]',\n  warn: 'bg-orange-500 text-white',\n  error: 'bg-red-500 text-white',\n  success: 'bg-green-500 text-white',\n}\n</script>\n\n<template>\n  <Transition name=\"toast-slide\">\n    <div\n      v-if=\"show\"\n      class=\"ht-toast fixed bottom-4 right-4 z-50 px-4 py-3 rounded-lg shadow-lg max-w-md flex items-center gap-3\"\n      :class=\"typeClasses[type]\"\n      role=\"alert\"\n      :aria-live=\"type === 'error' ? 'assertive' : 'polite'\"\n    >\n      <!-- Icon -->\n      <div class=\"flex-shrink-0\">\n        <svg\n          v-if=\"type === 'info'\"\n          class=\"w-5 h-5\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          stroke-width=\"2\"\n          viewBox=\"0 0 24 24\"\n        >\n          <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n          <path d=\"M12 16v-4\"></path>\n          <path d=\"M12 8h.01\"></path>\n        </svg>\n        <svg\n          v-else-if=\"type === 'warn'\"\n          class=\"w-5 h-5\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          stroke-width=\"2\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3\"></path>\n          <path d=\"M12 9v4\"></path>\n          <path d=\"M12 17h.01\"></path>\n        </svg>\n        <svg\n          v-else-if=\"type === 'error'\"\n          class=\"w-5 h-5\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          stroke-width=\"2\"\n          viewBox=\"0 0 24 24\"\n        >\n          <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n          <path d=\"m15 9-6 6\"></path>\n          <path d=\"m9 9 6 6\"></path>\n        </svg>\n        <svg\n          v-else-if=\"type === 'success'\"\n          class=\"w-5 h-5\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          stroke-width=\"2\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\n          <path d=\"m9 11 3 3L22 4\"></path>\n        </svg>\n      </div>\n\n      <!-- Message -->\n      <div class=\"flex-1 text-sm font-medium\">\n        {{ message }}\n      </div>\n\n      <!-- Close button -->\n      <button\n        class=\"flex-shrink-0 ml-2 p-1 rounded hover:bg-white/20 transition-colors focus:outline-none focus:ring-2 focus:ring-white/50\"\n        aria-label=\"Close notification\"\n        @click=\"handleClose\"\n      >\n        <svg\n          class=\"w-4 h-4\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          stroke-width=\"2\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M18 6 6 18\"></path>\n          <path d=\"m6 6 12 12\"></path>\n        </svg>\n      </button>\n    </div>\n  </Transition>\n</template>\n\n<style scoped>\n.toast-slide-enter-active,\n.toast-slide-leave-active {\n  transition: all 0.3s ease;\n}\n\n.toast-slide-enter-from {\n  opacity: 0;\n  transform: translateX(100%);\n}\n\n.toast-slide-leave-to {\n  opacity: 0;\n  transform: translateY(20px);\n}\n\n/* Accessibility - reduce motion */\n@media (prefers-reduced-motion: reduce) {\n  .toast-slide-enter-active,\n  .toast-slide-leave-active {\n    transition: opacity 0.1s ease;\n  }\n\n  .toast-slide-enter-from,\n  .toast-slide-leave-to {\n    transform: none;\n  }\n}\n</style>\n","<!--\n  ToastNotification.vue - Simple Toast Notification Component\n\n  Responsibilities:\n  1. Display temporary notification messages to users\n  2. Auto-dismiss after configurable duration\n  3. Support different notification types (info, warn, error, success)\n  4. Accessible with proper ARIA attributes\n\n  Vue 3 Pattern: Composition API with reactive state\n-->\n\n<script setup lang=\"ts\">\nimport { ref, watch, onMounted } from 'vue'\n\n// Props\nconst props = withDefaults(\n  defineProps<{\n    message: string\n    type?: 'info' | 'warn' | 'error' | 'success'\n    duration?: number // Duration in milliseconds\n    visible?: boolean\n  }>(),\n  {\n    type: 'info',\n    duration: 4000,\n    visible: false,\n  }\n)\n\n// Emits\nconst emit = defineEmits<{\n  'close': []\n}>()\n\n// Local state\nconst show = ref(props.visible)\nlet timer: ReturnType<typeof setTimeout> | null = null\n\n// Watch for visibility changes\nwatch(\n  () => props.visible,\n  (newValue) => {\n    show.value = newValue\n    if (newValue) {\n      startTimer()\n    } else {\n      clearTimer()\n    }\n  }\n)\n\n// Auto-dismiss timer\nfunction startTimer() {\n  clearTimer()\n  if (props.duration > 0) {\n    timer = setTimeout(() => {\n      show.value = false\n      emit('close')\n    }, props.duration)\n  }\n}\n\nfunction clearTimer() {\n  if (timer) {\n    clearTimeout(timer)\n    timer = null\n  }\n}\n\nfunction handleClose() {\n  clearTimer()\n  show.value = false\n  emit('close')\n}\n\nonMounted(() => {\n  if (props.visible) {\n    startTimer()\n  }\n})\n\n// Type-specific styling\nconst typeClasses = {\n  info: 'bg-[var(--ht-primary)] text-[var(--ht-text-inverse)]',\n  warn: 'bg-orange-500 text-white',\n  error: 'bg-red-500 text-white',\n  success: 'bg-green-500 text-white',\n}\n</script>\n\n<template>\n  <Transition name=\"toast-slide\">\n    <div\n      v-if=\"show\"\n      class=\"ht-toast fixed bottom-4 right-4 z-50 px-4 py-3 rounded-lg shadow-lg max-w-md flex items-center gap-3\"\n      :class=\"typeClasses[type]\"\n      role=\"alert\"\n      :aria-live=\"type === 'error' ? 'assertive' : 'polite'\"\n    >\n      <!-- Icon -->\n      <div class=\"flex-shrink-0\">\n        <svg\n          v-if=\"type === 'info'\"\n          class=\"w-5 h-5\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          stroke-width=\"2\"\n          viewBox=\"0 0 24 24\"\n        >\n          <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n          <path d=\"M12 16v-4\"></path>\n          <path d=\"M12 8h.01\"></path>\n        </svg>\n        <svg\n          v-else-if=\"type === 'warn'\"\n          class=\"w-5 h-5\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          stroke-width=\"2\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3\"></path>\n          <path d=\"M12 9v4\"></path>\n          <path d=\"M12 17h.01\"></path>\n        </svg>\n        <svg\n          v-else-if=\"type === 'error'\"\n          class=\"w-5 h-5\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          stroke-width=\"2\"\n          viewBox=\"0 0 24 24\"\n        >\n          <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n          <path d=\"m15 9-6 6\"></path>\n          <path d=\"m9 9 6 6\"></path>\n        </svg>\n        <svg\n          v-else-if=\"type === 'success'\"\n          class=\"w-5 h-5\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          stroke-width=\"2\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\n          <path d=\"m9 11 3 3L22 4\"></path>\n        </svg>\n      </div>\n\n      <!-- Message -->\n      <div class=\"flex-1 text-sm font-medium\">\n        {{ message }}\n      </div>\n\n      <!-- Close button -->\n      <button\n        class=\"flex-shrink-0 ml-2 p-1 rounded hover:bg-white/20 transition-colors focus:outline-none focus:ring-2 focus:ring-white/50\"\n        aria-label=\"Close notification\"\n        @click=\"handleClose\"\n      >\n        <svg\n          class=\"w-4 h-4\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          stroke-width=\"2\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M18 6 6 18\"></path>\n          <path d=\"m6 6 12 12\"></path>\n        </svg>\n      </button>\n    </div>\n  </Transition>\n</template>\n\n<style scoped>\n.toast-slide-enter-active,\n.toast-slide-leave-active {\n  transition: all 0.3s ease;\n}\n\n.toast-slide-enter-from {\n  opacity: 0;\n  transform: translateX(100%);\n}\n\n.toast-slide-leave-to {\n  opacity: 0;\n  transform: translateY(20px);\n}\n\n/* Accessibility - reduce motion */\n@media (prefers-reduced-motion: reduce) {\n  .toast-slide-enter-active,\n  .toast-slide-leave-active {\n    transition: opacity 0.1s ease;\n  }\n\n  .toast-slide-enter-from,\n  .toast-slide-leave-to {\n    transform: none;\n  }\n}\n</style>\n","<script setup lang=\"ts\">\nimport { computed, onMounted, onUnmounted, ref } from 'vue'\nimport type { GridAPI, FilterConfig } from '../../types'\nimport { createLogger } from '../../utils/logger'\n\nconst props = defineProps<{ api: GridAPI }>()\nconst logger = createLogger({ module: 'FilterBar' })\n\nconst filters = ref<FilterConfig[]>([])\nconst total = ref(0)\nconst count = ref(0)\nconst duration = ref(0)\nconst progress = ref<{ processed: number; total: number } | null>(null)\nconst cleanupFns = ref<Array<() => void>>([])\n\nfunction refreshFromAPI() {\n  try {\n    filters.value = (props.api.getState()?.config?.filters || []) as FilterConfig[]\n  } catch (err) {\n    logger.warn('Failed to refresh filters from API', err)\n  }\n}\n\nonMounted(() => {\n  refreshFromAPI()\n  if (props.api.on) {\n    cleanupFns.value.push(props.api.on('filter-change', fs => { filters.value = fs || [] }))\n    cleanupFns.value.push(\n      props.api.on('data-pipeline-complete', payload => {\n        total.value = payload?.originalCount ?? 0\n        count.value = payload?.processedCount ?? 0\n        duration.value = Math.round(payload?.processingTime ?? 0)\n        progress.value = null\n      })\n    )\n    cleanupFns.value.push(\n      props.api.on('filter-progress', payload => {\n        progress.value = payload ? { processed: payload.processed ?? 0, total: payload.total ?? 0 } : null\n      })\n    )\n  }\n})\n\nonUnmounted(() => {\n  cleanupFns.value.forEach(off => {\n    try {\n      off()\n    } catch (err) {\n      logger.warn('Failed to cleanup event listener', err)\n    }\n  })\n  cleanupFns.value = []\n})\n\nfunction clearAll() {\n  props.api.updateConfig({ filters: [] })\n}\n\nfunction cancelWorker() {\n  try {\n    props.api.emit('filter-cancel', null)\n  } catch (err) {\n    logger.warn('Failed to cancel worker', err)\n  }\n  progress.value = null\n}\n\nfunction removeFilter(f: FilterConfig) {\n  const rest = filters.value.filter(x => !(x.field === f.field && x.operator === f.operator && x.value === f.value))\n  props.api.updateConfig({ filters: rest })\n}\n\nfunction editFilter(f: FilterConfig) {\n  try {\n    props.api.emit('column-open-filter', { field: f.field })\n  } catch (err) {\n    logger.warn('Failed to emit column-open-filter event', err)\n  }\n}\n\nfunction labelOf(f: FilterConfig): string {\n  const opMap: Record<string,string> = {\n    equals: '=',\n    contains: 'Contains',\n    startsWith: 'Starts with',\n    endsWith: 'Ends with',\n    gt: '>',\n    gte: '≥',\n    lt: '<',\n    lte: '≤',\n    between: 'Between',\n    in: 'Includes',\n    oneOf: 'One of',\n    notIn: 'Excludes',\n    notEquals: '≠'\n  }\n  const v = Array.isArray(f.value)\n    ? (f.operator === 'between' ? `${f.value[0]}~${f.value[1]}` : `${(f.value as any[]).length} items`)\n    : String(f.value)\n  return `${f.field} ${opMap[f.operator] ?? f.operator} ${v}`\n}\n\nconst hasFilters = computed(() => (filters.value?.length ?? 0) > 0)\n</script>\n\n<template>\n  <div class=\"ht-filterbar mb-2\" v-if=\"hasFilters || total\">\n    <div class=\"flex items-center justify-between gap-2\">\n      <div class=\"flex flex-wrap items-center gap-2\">\n        <template v-for=\"f in filters\" :key=\"labelOf(f)\">\n          <span class=\"inline-flex items-center gap-2 rounded border border-[var(--ht-border)] bg-[var(--ht-bg-subtle)] px-2 py-1 text-xs text-[var(--ht-text)] cursor-pointer\" @click=\"editFilter(f)\">\n            <span class=\"truncate max-w-[220px]\">{{ labelOf(f) }}</span>\n            <button class=\"text-[var(--ht-text-muted)] hover:text-[var(--ht-danger)]\" @click.stop=\"removeFilter(f)\">×</button>\n          </span>\n        </template>\n        <button v-if=\"hasFilters\" class=\"text-xs text-[var(--ht-primary)] hover:underline\" @click=\"clearAll\">Clear All</button>\n      </div>\n      <div class=\"text-xs text-[var(--ht-text-muted)]\" aria-live=\"polite\" aria-atomic=\"true\">\n        <template v-if=\"total\">Showing {{ count || total }} / {{ total }}<span v-if=\"duration\"> ({{ duration }} ms)</span></template>\n        <template v-if=\"progress && progress.total\">\n          <div class=\"mt-1 flex items-center gap-2\">\n            <div class=\"relative h-2 w-24 rounded bg-[var(--ht-bg-subtle)]\">\n              <div class=\"h-2 rounded bg-[var(--ht-primary)]\" :style=\"{ width: Math.min(100, Math.round((progress.processed / progress.total) * 100)) + '%' }\"></div>\n            </div>\n            <span>{{ Math.min(100, Math.round((progress.processed / progress.total) * 100)) }}%</span>\n            <button class=\"px-2 py-0.5 rounded border border-[var(--ht-border)] text-[var(--ht-text-muted)] hover:text-[var(--ht-danger)]\" @click=\"cancelWorker\">Cancel</button>\n          </div>\n        </template>\n      </div>\n    </div>\n  </div>\n  <div v-else></div>\n  \n</template>\n\n<style scoped>\n</style>\n","<script setup lang=\"ts\">\nimport { computed, onMounted, onUnmounted, ref } from 'vue'\nimport type { GridAPI, FilterConfig } from '../../types'\nimport { createLogger } from '../../utils/logger'\n\nconst props = defineProps<{ api: GridAPI }>()\nconst logger = createLogger({ module: 'FilterBar' })\n\nconst filters = ref<FilterConfig[]>([])\nconst total = ref(0)\nconst count = ref(0)\nconst duration = ref(0)\nconst progress = ref<{ processed: number; total: number } | null>(null)\nconst cleanupFns = ref<Array<() => void>>([])\n\nfunction refreshFromAPI() {\n  try {\n    filters.value = (props.api.getState()?.config?.filters || []) as FilterConfig[]\n  } catch (err) {\n    logger.warn('Failed to refresh filters from API', err)\n  }\n}\n\nonMounted(() => {\n  refreshFromAPI()\n  if (props.api.on) {\n    cleanupFns.value.push(props.api.on('filter-change', fs => { filters.value = fs || [] }))\n    cleanupFns.value.push(\n      props.api.on('data-pipeline-complete', payload => {\n        total.value = payload?.originalCount ?? 0\n        count.value = payload?.processedCount ?? 0\n        duration.value = Math.round(payload?.processingTime ?? 0)\n        progress.value = null\n      })\n    )\n    cleanupFns.value.push(\n      props.api.on('filter-progress', payload => {\n        progress.value = payload ? { processed: payload.processed ?? 0, total: payload.total ?? 0 } : null\n      })\n    )\n  }\n})\n\nonUnmounted(() => {\n  cleanupFns.value.forEach(off => {\n    try {\n      off()\n    } catch (err) {\n      logger.warn('Failed to cleanup event listener', err)\n    }\n  })\n  cleanupFns.value = []\n})\n\nfunction clearAll() {\n  props.api.updateConfig({ filters: [] })\n}\n\nfunction cancelWorker() {\n  try {\n    props.api.emit('filter-cancel', null)\n  } catch (err) {\n    logger.warn('Failed to cancel worker', err)\n  }\n  progress.value = null\n}\n\nfunction removeFilter(f: FilterConfig) {\n  const rest = filters.value.filter(x => !(x.field === f.field && x.operator === f.operator && x.value === f.value))\n  props.api.updateConfig({ filters: rest })\n}\n\nfunction editFilter(f: FilterConfig) {\n  try {\n    props.api.emit('column-open-filter', { field: f.field })\n  } catch (err) {\n    logger.warn('Failed to emit column-open-filter event', err)\n  }\n}\n\nfunction labelOf(f: FilterConfig): string {\n  const opMap: Record<string,string> = {\n    equals: '=',\n    contains: 'Contains',\n    startsWith: 'Starts with',\n    endsWith: 'Ends with',\n    gt: '>',\n    gte: '≥',\n    lt: '<',\n    lte: '≤',\n    between: 'Between',\n    in: 'Includes',\n    oneOf: 'One of',\n    notIn: 'Excludes',\n    notEquals: '≠'\n  }\n  const v = Array.isArray(f.value)\n    ? (f.operator === 'between' ? `${f.value[0]}~${f.value[1]}` : `${(f.value as any[]).length} items`)\n    : String(f.value)\n  return `${f.field} ${opMap[f.operator] ?? f.operator} ${v}`\n}\n\nconst hasFilters = computed(() => (filters.value?.length ?? 0) > 0)\n</script>\n\n<template>\n  <div class=\"ht-filterbar mb-2\" v-if=\"hasFilters || total\">\n    <div class=\"flex items-center justify-between gap-2\">\n      <div class=\"flex flex-wrap items-center gap-2\">\n        <template v-for=\"f in filters\" :key=\"labelOf(f)\">\n          <span class=\"inline-flex items-center gap-2 rounded border border-[var(--ht-border)] bg-[var(--ht-bg-subtle)] px-2 py-1 text-xs text-[var(--ht-text)] cursor-pointer\" @click=\"editFilter(f)\">\n            <span class=\"truncate max-w-[220px]\">{{ labelOf(f) }}</span>\n            <button class=\"text-[var(--ht-text-muted)] hover:text-[var(--ht-danger)]\" @click.stop=\"removeFilter(f)\">×</button>\n          </span>\n        </template>\n        <button v-if=\"hasFilters\" class=\"text-xs text-[var(--ht-primary)] hover:underline\" @click=\"clearAll\">Clear All</button>\n      </div>\n      <div class=\"text-xs text-[var(--ht-text-muted)]\" aria-live=\"polite\" aria-atomic=\"true\">\n        <template v-if=\"total\">Showing {{ count || total }} / {{ total }}<span v-if=\"duration\"> ({{ duration }} ms)</span></template>\n        <template v-if=\"progress && progress.total\">\n          <div class=\"mt-1 flex items-center gap-2\">\n            <div class=\"relative h-2 w-24 rounded bg-[var(--ht-bg-subtle)]\">\n              <div class=\"h-2 rounded bg-[var(--ht-primary)]\" :style=\"{ width: Math.min(100, Math.round((progress.processed / progress.total) * 100)) + '%' }\"></div>\n            </div>\n            <span>{{ Math.min(100, Math.round((progress.processed / progress.total) * 100)) }}%</span>\n            <button class=\"px-2 py-0.5 rounded border border-[var(--ht-border)] text-[var(--ht-text-muted)] hover:text-[var(--ht-danger)]\" @click=\"cancelWorker\">Cancel</button>\n          </div>\n        </template>\n      </div>\n    </div>\n  </div>\n  <div v-else></div>\n  \n</template>\n\n<style scoped>\n</style>\n","import type { GridEvents } from './index'\n\n// Public event names exposed to consumers (template + helpers)\nexport const GRID_EVENT_NAMES = [\n  'row-click',\n  'row-select',\n  'cell-click',\n  'cell-double-click',\n  'cell-right-click',\n  'multi-sort-change',\n  'filter-change',\n  'scroll',\n  'column-resize-start',\n  'column-resize',\n  'toggle-selection',\n  'select-all',\n  'clear-selection',\n] as const\n\nexport type PublicEventName = typeof GRID_EVENT_NAMES[number]\nexport type GridEventName = keyof GridEvents\nexport type PublicEventMap = Pick<GridEvents, PublicEventName>\n","<!--\n  DataGrid.vue - Root \"Dumb\" Component\n\n  Responsibilities:\n  1. Props validation and defaults\n  2. Event emission to parent\n  3. Coordinate with useGridState composable\n  4. Render selected renderer (Table/Excel)\n\n  Architecture: Smart Composable, Dumb Component pattern\n-->\n\n<script setup lang=\"ts\">\nimport { ref, computed, provide, onMounted, onUnmounted, watch, nextTick } from 'vue'\nimport { useGridState } from '../core/useGridState'\nimport { createTableRenderer } from '../renderers/table/TableRenderer'\nimport KeyboardShortcuts from './shared/KeyboardShortcuts.vue'\nimport AccessibilityAnnouncer from './shared/AccessibilityAnnouncer.vue'\nimport ToastNotification from './shared/ToastNotification.vue'\nimport FilterBar from './shared/FilterBar.vue'\nimport { createLogger } from '../utils/logger'\nimport type { DataGridProps, GridEvents, RowData, GridInteractionContract, CellValue, CoreLogicCallbacks, RendererOptions, FilterConfig } from '../types'\nimport { isFunctionalColumn } from '../utils/functional-columns'\nimport { GRID_EVENT_NAMES } from '../types/events'\nimport HtButton from './primitives/HtButton.vue'\nimport { GRID_API_KEY } from '../utils/injection-keys'\n\n// 1. ENHANCED PROPS DEFINITION with renderer support\nconst props = withDefaults(\n  defineProps<DataGridProps>(),\n  {\n    data: () => [],\n    columns: () => [],\n    config: () => ({}),\n    loading: false,\n    height: 400,\n    class: '',\n    plugins: () => [],\n    renderer: 'table',\n    showKeyboardShortcuts: false,\n    keyboardHelpHint: true,\n  }\n)\n\n// 2. EVENTS DEFINITION (enhanced)\nconst emit = defineEmits<{\n  'row-click': [payload: GridEvents['row-click']]\n  'row-select': [payload: GridEvents['row-select']]\n  'cell-click': [payload: GridEvents['cell-click']]\n  'cell-double-click': [payload: GridEvents['cell-double-click']]\n  'cell-right-click': [payload: GridEvents['cell-right-click']]\n  'multi-sort-change': [payload: GridEvents['multi-sort-change']]\n  'filter-change': [payload: GridEvents['filter-change']]\n  scroll: [payload: GridEvents['scroll']]\n  'column-resize-start': [payload: GridEvents['column-resize-start']]\n  'column-resize': [payload: GridEvents['column-resize']]\n  // Renderer lifecycle events\n  'renderer-changed': [payload: { name: string; previousRenderer: string }]\n  'renderer-error': [payload: { error: Error; context: string; renderer: string }]\n  'toggle-selection': [payload: GridEvents['toggle-selection']]\n  'clear-selection': [payload: GridEvents['clear-selection']]\n}>()\n\n// 3. ENHANCED COMPOSABLE INTEGRATION with renderer support\nconst mergedConfig = computed(() => ({\n  ...props.config,\n  renderer: props.renderer, // Ensure renderer prop overrides config\n}))\n\n// Logger for component\nconst logger = createLogger('DataGrid')\n\nconst gridState = useGridState(mergedConfig.value, props.plugins)\nconst { api } = gridState\n\n// 4. COMPONENT REFS\nconst gridContainer = ref<HTMLElement>()\nconst rendererContainer = ref<HTMLElement>()\nconst rendererHost = ref<HTMLElement>()\nconst keyboardShortcutsRef = ref<InstanceType<typeof KeyboardShortcuts>>()\nconst accessibilityAnnouncerRef = ref<InstanceType<typeof AccessibilityAnnouncer>>()\nconst teardownFns: Array<() => void> = []\n\n// Component state\nconst rendererInitialized = ref(false)\nconst rendererError = ref<string | null>(null)\nconst showShortcuts = ref(props.showKeyboardShortcuts)\n\n// Toast notification state\nconst toastVisible = ref(false)\nconst toastMessage = ref('')\nconst toastType = ref<'info' | 'warn' | 'error' | 'success'>('info')\n// Track currently installed plugin names to support dynamic add/remove\nconst installedPluginNames = ref<Set<string>>(new Set((props.plugins || []).map(p => p.name)))\n\n// Selection mode tracking to clear selection when switching between checkbox/radio\ntype SelectionKind = 'checkbox' | 'radio' | null\nconst currentSelectionKind = ref<SelectionKind>(null)\n\nconst deriveSelectionKind = (cols: Array<any>): SelectionKind => {\n  let kind: SelectionKind = null\n  for (const c of cols || []) {\n    if (isFunctionalColumn(c)) {\n      const t = (c as any).type\n      if (t === 'radio') return 'radio'\n      if (t === 'checkbox') kind = kind ?? 'checkbox'\n    }\n  }\n  return kind\n}\n\n// 5. COMPUTED PROPERTIES (enhanced)\nconst containerStyle = computed(() => {\n  const height = typeof props.height === 'number' ? `${props.height}px` : props.height\n  return {\n    height,\n    position: 'relative' as const,\n    overflow: 'hidden',\n  }\n})\n\nconst containerClasses = computed(() =>\n  [\n    'ht-grid-container',\n    'bg-[var(--ht-bg)]',\n    'rounded-[var(--radius-ht-md)]',\n    // Renderer-specific classes\n    `ht-renderer-${props.renderer}`,\n    props.class,\n  ]\n    .filter(Boolean)\n    .join(' ')\n)\n\nconst isRendererReady = computed(\n  () => !gridState.loading.value && !gridState.error.value && !rendererError.value\n)\n\n// 6. ENHANCED INTERACTION CONTRACT with renderer integration\nconst interactionContract: GridInteractionContract = {\n  // [Core → Renderer] Update visual selection state\n  updateSelection: (selectedIds: Set<string | number>, reason: 'programmatic' | 'user') => {\n    // Get active renderer from registry\n    const rendererInstance = api.getActiveRendererInstance?.()\n    if (rendererInstance?.renderer?.interactionContract) {\n      rendererInstance.renderer.interactionContract.updateSelection(selectedIds, reason)\n    }\n  },\n\n  // [Core → Renderer] Set or clear the active focus item\n  setActive: (activeId: string | number | null) => {\n    const rendererInstance = api.getActiveRendererInstance?.()\n    if (rendererInstance?.renderer?.interactionContract) {\n      rendererInstance.renderer.interactionContract.setActive(activeId)\n    }\n  },\n\n  // [Core → Renderer] Ensure specified item is visible in viewport\n  ensureVisible: (id: string | number, behavior: 'smooth' | 'auto') => {\n    const rendererInstance = api.getActiveRendererInstance?.()\n    if (rendererInstance?.renderer?.interactionContract) {\n      rendererInstance.renderer.interactionContract.ensureVisible(id, behavior)\n    }\n  },\n\n  // [Core → Renderer] Toggle edit mode for specified cell/item\n  toggleEditMode: async (id: string | number, mode: 'enter' | 'exit') => {\n    const rendererInstance = api.getActiveRendererInstance?.()\n    if (rendererInstance?.renderer?.interactionContract) {\n      return await rendererInstance.renderer.interactionContract.toggleEditMode(id, mode)\n    }\n    return false\n  },\n\n  // [Renderer → Core] Register event emitter for renderer to send interaction events\n  registerEventEmitter: <K extends keyof GridEvents>(emit: (eventName: K, payload: GridEvents[K]) => void) => {\n    // Register emitter with the current renderer\n    const rendererInstance = api.getActiveRendererInstance?.()\n    if (rendererInstance?.renderer?.interactionContract) {\n      rendererInstance.renderer.interactionContract.registerEventEmitter(emit)\n    }\n  },\n\n  // [Renderer → Core] Update scroll position in core state\n  updateScrollPosition: (position: { top: number; left: number }) => {\n    const rendererInstance = api.getActiveRendererInstance?.()\n    if (rendererInstance?.renderer?.interactionContract) {\n      rendererInstance.renderer.interactionContract.updateScrollPosition?.(position)\n    }\n  },\n\n  // [Core → Renderer] Force re-render of all visible content\n  refresh: () => {\n    const rendererInstance = api.getActiveRendererInstance?.()\n    if (rendererInstance?.renderer?.interactionContract) {\n      rendererInstance.renderer.interactionContract.refresh?.()\n    }\n  },\n\n  // [Renderer → Core] Emit interaction events to core logic\n  emit: <K extends keyof GridEvents>(eventName: K, payload: GridEvents[K]) => {\n    // Only emit events that are defined in the component's emit interface\n    const supportedEvents: (keyof GridEvents)[] = GRID_EVENT_NAMES as unknown as (keyof GridEvents)[]\n\n    if (supportedEvents.includes(eventName)) {\n      // Emit supported events through component emit\n      // @ts-expect-error - Complex type mapping between GridEvents and component emit signature\n      emit(eventName, payload)\n    } else {\n      // For other events, emit through the API event system\n      api.emit(eventName, payload)\n    }\n  },\n\n  // [Core → Renderer] Register core logic callbacks for interaction handling\n  registerCoreCallbacks: (callbacks: Partial<CoreLogicCallbacks>) => {\n    const rendererInstance = api.getActiveRendererInstance?.()\n    if (rendererInstance?.renderer?.interactionContract) {\n      rendererInstance.renderer.interactionContract.registerCoreCallbacks?.(callbacks)\n    }\n  },\n\n  // [Core → Renderer] Cleanup and destroy the interaction contract\n  destroy: () => {\n    const rendererInstance = api.getActiveRendererInstance?.()\n    if (rendererInstance?.renderer?.interactionContract) {\n      rendererInstance.renderer.interactionContract.destroy?.()\n    }\n  }\n}\n\n// 7. PROVIDE/INJECT PATTERN (enhanced)\nprovide('gridState', gridState)\nprovide('interactionContract', interactionContract)\nprovide(GRID_API_KEY, api)\n\n// 8. RENDERER SYSTEM INTEGRATION\n\n/**\n * Initialize the renderer system\n */\nconst initializeRenderer = async () => {\n  try {\n    if (!rendererHost.value) {\n      throw new Error('Renderer host element not found')\n    }\n\n    rendererError.value = null\n\n    // Register table renderer if not already registered\n    const availableRenderers = api.getAvailableRenderers?.() || []\n    if (!availableRenderers.includes('table') && api.registerRenderer) {\n      logger.debug('Registering table renderer')\n      api.registerRenderer('table', (options?: RendererOptions) => createTableRenderer(options))\n    }\n\n    // Initialize renderer through the registry system\n    const success = await api.initializeRenderer?.(rendererHost.value)\n\n    if (!success) {\n      throw new Error('Renderer initialization returned false')\n    }\n\n    rendererInitialized.value = true\n    logger.debug(`Renderer system initialized with '${props.renderer}' renderer`)\n    return true\n  } catch (error) {\n    const errorMessage = error instanceof Error ? error.message : 'Unknown error'\n    rendererError.value = errorMessage\n    logger.error('Renderer initialization failed:', { module: 'DataGrid' }, error)\n\n    emit('renderer-error', {\n      error: error instanceof Error ? error : new Error(errorMessage),\n      context: 'initialization',\n      renderer: props.renderer,\n    })\n\n    return false\n  }\n}\n\n/**\n * Switch to a different renderer\n */\nconst switchRenderer = async (rendererName: string) => {\n  if (!rendererInitialized.value) {\n    logger.warn('Cannot switch renderer - system not initialized')\n    return false\n  }\n\n  try {\n    const previousRenderer = api.getRenderer?.() || 'unknown'\n    const success = await api.setRenderer?.(rendererName)\n\n    if (success) {\n      emit('renderer-changed', {\n        name: rendererName,\n        previousRenderer,\n      })\n      logger.debug(`Switched from '${previousRenderer}' to '${rendererName}' renderer`)\n    }\n\n    return success\n  } catch (error) {\n    logger.error(`Failed to switch to renderer '${rendererName}':`, { module: 'DataGrid' }, error)\n    emit('renderer-error', {\n      error: error instanceof Error ? error : new Error('Renderer switch failed'),\n      context: 'switch',\n      renderer: rendererName,\n    })\n    return false\n  }\n}\n\n// 9. KEYBOARD SHORTCUTS AND ACCESSIBILITY INTEGRATION\nconst handleShowShortcuts = () => {\n  showShortcuts.value = true\n}\n\nconst handleCloseShortcuts = () => {\n  showShortcuts.value = false\n}\n\n// Determine which features are enabled based on loaded plugins\nconst keyboardFeaturesEnabled = computed(() => {\n  const loadedPlugins = api.listPlugins().map(p => p.name)\n  return {\n    editing: loadedPlugins.includes('core-cell-editing'),\n    selection: loadedPlugins.includes('core-selection'),\n  }\n})\n\n// Set up grid event listeners for accessibility announcements\nconst setupAccessibilityIntegration = () => {\n  if (!accessibilityAnnouncerRef.value) return\n\n  const announcer = accessibilityAnnouncerRef.value\n\n  // Listen for focus changes\n  api.on?.('cell-focus-change', (payload: { rowId: string | number | null; columnId: string | null }) => {\n    if (payload.rowId !== null && payload.columnId !== null) {\n      // For now, we'll announce the cell change with available info\n      // TODO: Convert rowId/columnId to indices when needed\n      announcer.announceCellFocus(0, 0, undefined, payload.columnId)\n    }\n  })\n\n  // Listen for selection changes\n  api.on?.('row-select', (payload: { rowId: string | number; selected: boolean; selectedRows: (string | number)[]; row?: RowData }) => {\n    if (payload.selectedRows) {\n      const totalRows = gridState.data.value.visibleRows.length\n      announcer.announceSelection(payload.selectedRows.length, totalRows)\n    }\n  })\n\n  // Listen for edit mode changes\n  api.on?.('cell-edit-start', (payload: { rowId: string | number; columnId: string; value: CellValue }) => {\n    // Convert rowId and columnId to indices for accessibility announcements\n    const rowIndex = gridState.data.value.visibleRows.findIndex(row => (row.id ?? row.index) === payload.rowId)\n    const columnIndex = gridState.columns.value.findIndex(col => col.field === payload.columnId)\n    const column = gridState.columns.value.find(col => col.field === payload.columnId)\n    \n    if (rowIndex >= 0 && columnIndex >= 0) {\n      announcer.announceEditMode(true, {\n        row: rowIndex,\n        column: columnIndex,\n        title: column?.title,\n      })\n    }\n  })\n\n  api.on?.('cell-edit-complete', () => {\n    announcer.announceEditMode(false)\n  })\n\n  api.on?.('cell-edit-cancel', () => {\n    announcer.announceEditMode(false)\n  })\n\n  // Listen for sorting changes (multi-sort only)\n  api.on?.('multi-sort-change', (config: import('../types').MultiSortConfig) => {\n    if (!config || !config.fields || config.fields.length === 0) {\n      announcer.announceSorting('All columns', 'none')\n      return\n    }\n    const [first] = config.fields\n    if (!first) return\n    const column = gridState.columns.value.find(c => c.field === first.field)\n    if (column) {\n      announcer.announceSorting(column.title, first.direction)\n    }\n  })\n\n  // Listen for filtering changes\n  api.on?.('filter-change', (payload: FilterConfig[]) => {\n    const totalRows = props.data.length\n    const visibleRows = gridState.data.value.visibleRows.length\n    const activeFilters = payload.length || 0\n    announcer.announceFiltering(activeFilters, totalRows, visibleRows)\n  })\n\n  // Listen for errors\n  api.on?.('plugin-error', (payload: { error: Error }) => {\n    announcer.announceError(`Plugin error: ${payload.error.message}`)\n  })\n}\n\n// Bridge column resize lifecycle events to parent listeners\nconst columnResizeStartOff = api.on?.('column-resize-start', payload => {\n  emit('column-resize-start', payload)\n})\nif (columnResizeStartOff) {\n  teardownFns.push(columnResizeStartOff)\n}\n\nconst columnResizeOff = api.on?.('column-resize', payload => {\n  emit('column-resize', payload)\n})\nif (columnResizeOff) {\n  teardownFns.push(columnResizeOff)\n}\n\n// Bridge core/public events from API to component emits (clean path)\nconst cellClickOff = api.on?.('cell-click', payload => {\n  emit('cell-click', payload as any)\n})\nif (cellClickOff) teardownFns.push(cellClickOff)\n\nconst rowClickOff = api.on?.('row-click', payload => {\n  emit('row-click', payload as any)\n})\nif (rowClickOff) teardownFns.push(rowClickOff)\n\nconst cellDblClickOff = api.on?.('cell-double-click', payload => {\n  emit('cell-double-click', payload as any)\n})\nif (cellDblClickOff) teardownFns.push(cellDblClickOff)\n\nconst cellRightClickOff = api.on?.('cell-right-click', payload => {\n  emit('cell-right-click', payload as any)\n})\nif (cellRightClickOff) teardownFns.push(cellRightClickOff)\n\nconst rowSelectOff = api.on?.('row-select', payload => {\n  emit('row-select', payload as any)\n})\nif (rowSelectOff) teardownFns.push(rowSelectOff)\n\nconst toggleSelectionOff = api.on?.('toggle-selection', payload => {\n  emit('toggle-selection', payload as any)\n})\nif (toggleSelectionOff) teardownFns.push(toggleSelectionOff)\n\nconst clearSelectionOff = api.on?.('clear-selection', payload => {\n  emit('clear-selection', payload as any)\n})\nif (clearSelectionOff) teardownFns.push(clearSelectionOff)\n\nconst multiSortChangeOff = api.on?.('multi-sort-change', payload => {\n  emit('multi-sort-change', payload as any)\n})\nif (multiSortChangeOff) teardownFns.push(multiSortChangeOff)\n\nconst filterChangeOff = api.on?.('filter-change', payload => {\n  emit('filter-change', payload as any)\n})\nif (filterChangeOff) teardownFns.push(filterChangeOff)\n\nconst scrollOff = api.on?.('scroll', payload => {\n  emit('scroll', payload as any)\n})\nif (scrollOff) teardownFns.push(scrollOff)\n\n// Listen for multi-sort disabled warning\nconst multiSortDisabledOff = api.on?.('multi-sort-disabled-warning', (payload: { attempted: boolean; message: string }) => {\n  showToast(payload.message, 'warn')\n})\nif (multiSortDisabledOff) teardownFns.push(multiSortDisabledOff)\n\n// Listen for user notifications (general purpose)\nconst userNotificationOff = api.on?.('user-notification', (payload: { type: 'info' | 'warn' | 'error' | 'success'; message: string; details?: string }) => {\n  showToast(payload.message, payload.type)\n})\nif (userNotificationOff) teardownFns.push(userNotificationOff)\n\n// Helper function to show toast notifications\nconst showToast = (message: string, type: 'info' | 'warn' | 'error' | 'success' = 'info') => {\n  toastMessage.value = message\n  toastType.value = type\n  toastVisible.value = true\n}\n\nconst handleToastClose = () => {\n  toastVisible.value = false\n}\n\n// Clean system: renderer → DataGrid emits are handled via interactionContract above.\n\n// 10. LIFECYCLE HOOKS (enhanced)\nonMounted(async () => {\n  // Initialize grid with props data\n  if (props.data.length > 0) {\n    api.setData(props.data)\n  }\n\n  if (props.columns.length > 0) {\n    api.setColumns(props.columns)\n  }\n\n  // Set loading state\n  gridState.__internal.setLoading(props.loading)\n\n  // Initialize renderer system\n  await nextTick() // Ensure DOM is ready\n  await initializeRenderer()\n\n  // Set up accessibility integration\n  await nextTick() // Ensure announcer component is ready\n  setupAccessibilityIntegration()\n\n  // Initialize current selection kind from processed columns\n  currentSelectionKind.value = deriveSelectionKind(gridState.columns.value as any)\n})\n\n// 11. PROP WATCHERS (enhanced)\nwatch(\n  () => props.data,\n  newData => {\n    api.setData(newData)\n  }\n)\n\nwatch(\n  () => props.columns,\n  newColumns => {\n    api.setColumns(newColumns)\n  }\n)\n\n// React to processed columns change to detect selection kind switches\nwatch(\n  () => gridState.columns.value,\n  (processedColumns) => {\n    const nextKind = deriveSelectionKind(processedColumns as any)\n    if (nextKind !== currentSelectionKind.value) {\n      // Clear selection when switching between checkbox and radio\n      ;(api as any).clearSelection?.()\n      // Also reset renderer-side selection state immediately to avoid stale highlights\n      interactionContract.updateSelection?.(new Set(), 'programmatic')\n      // Align plugin selection mode if available\n      if (nextKind === 'radio') {\n        ;(api as any).setSelectionMode?.('single')\n      } else if (nextKind === 'checkbox') {\n        ;(api as any).setSelectionMode?.('multi')\n      }\n      currentSelectionKind.value = nextKind\n    }\n  }\n)\n\nwatch(\n  () => props.loading,\n  newLoading => {\n    gridState.__internal.setLoading(newLoading)\n  }\n)\n\nwatch(\n  () => mergedConfig.value,\n  newConfig => {\n    api.updateConfig(newConfig)\n  }\n)\n\n// Watch for renderer prop changes\nwatch(\n  () => props.renderer,\n  async (newRenderer, oldRenderer) => {\n    if (newRenderer !== oldRenderer && rendererInitialized.value) {\n      await switchRenderer(newRenderer)\n    }\n  }\n)\n\n// Watch for data/column changes and trigger re-render\nwatch(\n  [() => gridState.data.value, () => gridState.columns.value],\n  () => {\n    // Vue's reactivity system will automatically handle re-rendering\n    logger.debug('Data or columns changed, Vue will handle re-render')\n  },\n  { deep: false }\n)\n\n// 12. RESIZE HANDLING\nlet resizeObserver: ResizeObserver | null = null\n\nonMounted(() => {\n  if (rendererContainer.value) {\n    resizeObserver = new ResizeObserver(entries => {\n      for (const entry of entries) {\n        const { width, height } = entry.contentRect\n        api.resizeRenderer?.(width, height)\n      }\n    })\n\n    resizeObserver.observe(rendererContainer.value)\n  }\n})\n\n// 13. CLEANUP (enhanced)\nonUnmounted(() => {\n  if (resizeObserver) {\n    resizeObserver.disconnect()\n  }\n\n  // Renderer cleanup is handled by useGridState composable\n\n  teardownFns.forEach(off => {\n    try {\n      off()\n    } catch (error) {\n      logger.warn('Error cleaning up listener', error)\n    }\n  })\n  teardownFns.length = 0\n})\n\n// Dynamically load/unload plugins when props.plugins changes (for demos/toggles)\nwatch(\n  () => props.plugins,\n  async (next) => {\n    const nextNames = new Set((next || []).map(p => p.name))\n    const current = installedPluginNames.value\n\n    // Unload removed plugins\n    for (const name of current) {\n      if (!nextNames.has(name)) {\n        try {\n          await api.unloadPlugin?.(name)\n        } catch (error) {\n          logger.warn(`Failed to unload plugin ${name}:`, error)\n        }\n      }\n    }\n\n    // Load newly added plugins\n    const nextByName = new Map((next || []).map(p => [p.name, p]))\n    for (const name of nextNames) {\n      if (!current.has(name)) {\n        const plugin = nextByName.get(name)\n        if (plugin) {\n          try {\n            await api.loadPlugin?.(plugin)\n          } catch (error) {\n            logger.warn(`Failed to load plugin ${name}:`, error)\n          }\n        }\n      }\n    }\n\n    installedPluginNames.value = nextNames\n\n    // Re-apply columns to ensure functional columns are normalized with current plugin set\n    // This lets drag handle enable/disable state reflect the latest plugins\n    if (props.columns && props.columns.length > 0) {\n      try {\n        api.setColumns(props.columns)\n      } catch (error) {\n        logger.warn('Failed to re-apply columns after plugin change:', error)\n      }\n    }\n  },\n  { deep: false }\n)\n\n// 14. EXPOSE METHODS for external control\ndefineExpose({\n  switchRenderer,\n  initializeRenderer,\n  getAvailableRenderers: () => api.getAvailableRenderers?.() || [],\n  getCurrentRenderer: () => api.getRenderer?.() || 'unknown',\n  renderNow: () => api.renderWithActiveRenderer?.(),\n  gridState,\n  api,\n})\n</script>\n\n<template>\n  <div\n    ref=\"gridContainer\"\n    :class=\"containerClasses\"\n    :style=\"containerStyle\"\n    role=\"grid\"\n    :aria-label=\"`Data grid with ${gridState.data.value.visibleRows.length} rows using ${props.renderer} renderer`\"\n    :aria-rowcount=\"gridState.data.value.visibleRows.length\"\n    :aria-colcount=\"gridState.columns.value.length\"\n    :data-renderer=\"props.renderer\"\n  >\n    <!-- Loading State -->\n    <div v-if=\"gridState.loading.value\" class=\"ht-overlay ht-overlay-bg z-30\">\n      <div class=\"flex items-center space-x-2\">\n        <div class=\"animate-spin w-4 h-4 border-2 border-[var(--ht-primary)] border-t-transparent rounded-full\"></div>\n        <span class=\"text-[var(--ht-text-muted)]\">Loading...</span>\n      </div>\n    </div>\n\n    <!-- Grid Error State -->\n    <div v-else-if=\"gridState.error.value\" class=\"ht-overlay bg-[var(--ht-bg)] z-30\">\n      <div class=\"ht-overlay-panel\">\n        <div class=\"text-[var(--ht-danger)] mb-2\">⚠️ Grid Error</div>\n        <div class=\"text-[var(--ht-text)]\">{{ gridState.error.value }}</div>\n      </div>\n    </div>\n\n    <!-- Renderer Error State -->\n    <div v-else-if=\"rendererError\" class=\"ht-overlay bg-[var(--ht-bg)] z-30\">\n      <div class=\"ht-overlay-panel\">\n        <div class=\"text-[var(--ht-danger)] mb-2\">⚠️ Renderer Error</div>\n        <div class=\"text-[var(--ht-text)] text-sm mb-4\">{{ rendererError }}</div>\n        <HtButton size=\"sm\" variant=\"primary\" @click=\"initializeRenderer\">Retry</HtButton>\n      </div>\n    </div>\n\n    <!-- Filter Bar -->\n    <FilterBar :api=\"api\" />\n\n    <!-- Renderer Container -->\n    <div\n      v-if=\"isRendererReady\"\n      ref=\"rendererContainer\"\n      class=\"h-full w-full ht-renderer-container\"\n      :class=\"`ht-renderer-${props.renderer}`\"\n    >\n      <!-- Renderer Host (managed by RendererRegistry) -->\n      <div ref=\"rendererHost\" class=\"h-full w-full\" />\n\n      <!-- Empty State -->\n      <div\n        v-if=\"gridState.data.value.visibleRows.length === 0\"\n        class=\"ht-overlay ht-empty-overlay text-[var(--ht-text-muted)]\"\n      >\n        <div class=\"ht-overlay-panel\">\n          <div class=\"text-4xl mb-2\">📄</div>\n          <div>No data available</div>\n          <div class=\"text-xs mt-1 text-[var(--ht-text-muted)]\">Renderer: {{ props.renderer }}</div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Keyboard Navigation Components -->\n    <KeyboardShortcuts\n      ref=\"keyboardShortcutsRef\"\n      :show-shortcuts=\"showShortcuts\"\n      :show-help-hint=\"props.keyboardHelpHint\"\n      :enable-editing=\"keyboardFeaturesEnabled.editing\"\n      :enable-selection=\"keyboardFeaturesEnabled.selection\"\n      @show=\"handleShowShortcuts\"\n      @close=\"handleCloseShortcuts\"\n    />\n\n    <!-- Accessibility Announcer -->\n    <AccessibilityAnnouncer ref=\"accessibilityAnnouncerRef\" />\n\n    <!-- Toast Notification -->\n    <ToastNotification\n      :visible=\"toastVisible\"\n      :message=\"toastMessage\"\n      :type=\"toastType\"\n      :duration=\"4000\"\n      @close=\"handleToastClose\"\n    />\n  </div>\n</template>\n\n<style scoped>\n.ht-grid-container {\n  /* Container-specific styles */\n  contain: layout style;\n  /* CSS containment for performance */\n}\n\n/* Grid-level focus management: no visible ring on container focus */\n.ht-grid-container:focus,\n.ht-grid-container:focus-within {\n  outline: none;\n  box-shadow: none;\n}\n\n/* Renderer-specific container styling */\n.ht-renderer-container {\n  /* Ensure renderer container fills space */\n  position: relative;\n  overflow: hidden;\n}\n\n.ht-empty-overlay {\n  pointer-events: none;\n}\n\n/* Renderer-specific classes */\n.ht-renderer-table {\n  /* Table renderer specific styles */\n}\n\n.ht-renderer-excel {\n  /* Excel renderer specific styles */\n  font-family: var(--ht-font-mono, 'SF Mono', 'Monaco', 'Consolas', monospace);\n}\n\n/* Scrollbar styling (applies to renderer content) */\n.ht-grid-container :deep(.ht-scroller) {\n  scrollbar-width: thin;\n  scrollbar-color: var(--ht-border) transparent;\n}\n\n.ht-grid-container :deep(.ht-scroller::-webkit-scrollbar) {\n  width: 8px;\n  height: 8px;\n}\n\n.ht-grid-container :deep(.ht-scroller::-webkit-scrollbar-track) {\n  background: transparent;\n}\n\n.ht-grid-container :deep(.ht-scroller::-webkit-scrollbar-thumb) {\n  background: var(--ht-border);\n  border-radius: 4px;\n}\n\n.ht-grid-container :deep(.ht-scroller::-webkit-scrollbar-thumb:hover) {\n  background: var(--ht-text-muted);\n}\n\n/* Renderer loading and transition states */\n.ht-renderer-container {\n  transition: var(--ht-transition-fast);\n}\n\n.ht-grid-container[data-renderer='excel'] .ht-renderer-container {\n  /* Excel-specific container adjustments */\n  background: var(--ht-bg-excel, var(--ht-bg));\n}\n</style>\n","<!--\n  DataGrid.vue - Root \"Dumb\" Component\n\n  Responsibilities:\n  1. Props validation and defaults\n  2. Event emission to parent\n  3. Coordinate with useGridState composable\n  4. Render selected renderer (Table/Excel)\n\n  Architecture: Smart Composable, Dumb Component pattern\n-->\n\n<script setup lang=\"ts\">\nimport { ref, computed, provide, onMounted, onUnmounted, watch, nextTick } from 'vue'\nimport { useGridState } from '../core/useGridState'\nimport { createTableRenderer } from '../renderers/table/TableRenderer'\nimport KeyboardShortcuts from './shared/KeyboardShortcuts.vue'\nimport AccessibilityAnnouncer from './shared/AccessibilityAnnouncer.vue'\nimport ToastNotification from './shared/ToastNotification.vue'\nimport FilterBar from './shared/FilterBar.vue'\nimport { createLogger } from '../utils/logger'\nimport type { DataGridProps, GridEvents, RowData, GridInteractionContract, CellValue, CoreLogicCallbacks, RendererOptions, FilterConfig } from '../types'\nimport { isFunctionalColumn } from '../utils/functional-columns'\nimport { GRID_EVENT_NAMES } from '../types/events'\nimport HtButton from './primitives/HtButton.vue'\nimport { GRID_API_KEY } from '../utils/injection-keys'\n\n// 1. ENHANCED PROPS DEFINITION with renderer support\nconst props = withDefaults(\n  defineProps<DataGridProps>(),\n  {\n    data: () => [],\n    columns: () => [],\n    config: () => ({}),\n    loading: false,\n    height: 400,\n    class: '',\n    plugins: () => [],\n    renderer: 'table',\n    showKeyboardShortcuts: false,\n    keyboardHelpHint: true,\n  }\n)\n\n// 2. EVENTS DEFINITION (enhanced)\nconst emit = defineEmits<{\n  'row-click': [payload: GridEvents['row-click']]\n  'row-select': [payload: GridEvents['row-select']]\n  'cell-click': [payload: GridEvents['cell-click']]\n  'cell-double-click': [payload: GridEvents['cell-double-click']]\n  'cell-right-click': [payload: GridEvents['cell-right-click']]\n  'multi-sort-change': [payload: GridEvents['multi-sort-change']]\n  'filter-change': [payload: GridEvents['filter-change']]\n  scroll: [payload: GridEvents['scroll']]\n  'column-resize-start': [payload: GridEvents['column-resize-start']]\n  'column-resize': [payload: GridEvents['column-resize']]\n  // Renderer lifecycle events\n  'renderer-changed': [payload: { name: string; previousRenderer: string }]\n  'renderer-error': [payload: { error: Error; context: string; renderer: string }]\n  'toggle-selection': [payload: GridEvents['toggle-selection']]\n  'clear-selection': [payload: GridEvents['clear-selection']]\n}>()\n\n// 3. ENHANCED COMPOSABLE INTEGRATION with renderer support\nconst mergedConfig = computed(() => ({\n  ...props.config,\n  renderer: props.renderer, // Ensure renderer prop overrides config\n}))\n\n// Logger for component\nconst logger = createLogger('DataGrid')\n\nconst gridState = useGridState(mergedConfig.value, props.plugins)\nconst { api } = gridState\n\n// 4. COMPONENT REFS\nconst gridContainer = ref<HTMLElement>()\nconst rendererContainer = ref<HTMLElement>()\nconst rendererHost = ref<HTMLElement>()\nconst keyboardShortcutsRef = ref<InstanceType<typeof KeyboardShortcuts>>()\nconst accessibilityAnnouncerRef = ref<InstanceType<typeof AccessibilityAnnouncer>>()\nconst teardownFns: Array<() => void> = []\n\n// Component state\nconst rendererInitialized = ref(false)\nconst rendererError = ref<string | null>(null)\nconst showShortcuts = ref(props.showKeyboardShortcuts)\n\n// Toast notification state\nconst toastVisible = ref(false)\nconst toastMessage = ref('')\nconst toastType = ref<'info' | 'warn' | 'error' | 'success'>('info')\n// Track currently installed plugin names to support dynamic add/remove\nconst installedPluginNames = ref<Set<string>>(new Set((props.plugins || []).map(p => p.name)))\n\n// Selection mode tracking to clear selection when switching between checkbox/radio\ntype SelectionKind = 'checkbox' | 'radio' | null\nconst currentSelectionKind = ref<SelectionKind>(null)\n\nconst deriveSelectionKind = (cols: Array<any>): SelectionKind => {\n  let kind: SelectionKind = null\n  for (const c of cols || []) {\n    if (isFunctionalColumn(c)) {\n      const t = (c as any).type\n      if (t === 'radio') return 'radio'\n      if (t === 'checkbox') kind = kind ?? 'checkbox'\n    }\n  }\n  return kind\n}\n\n// 5. COMPUTED PROPERTIES (enhanced)\nconst containerStyle = computed(() => {\n  const height = typeof props.height === 'number' ? `${props.height}px` : props.height\n  return {\n    height,\n    position: 'relative' as const,\n    overflow: 'hidden',\n  }\n})\n\nconst containerClasses = computed(() =>\n  [\n    'ht-grid-container',\n    'bg-[var(--ht-bg)]',\n    'rounded-[var(--radius-ht-md)]',\n    // Renderer-specific classes\n    `ht-renderer-${props.renderer}`,\n    props.class,\n  ]\n    .filter(Boolean)\n    .join(' ')\n)\n\nconst isRendererReady = computed(\n  () => !gridState.loading.value && !gridState.error.value && !rendererError.value\n)\n\n// 6. ENHANCED INTERACTION CONTRACT with renderer integration\nconst interactionContract: GridInteractionContract = {\n  // [Core → Renderer] Update visual selection state\n  updateSelection: (selectedIds: Set<string | number>, reason: 'programmatic' | 'user') => {\n    // Get active renderer from registry\n    const rendererInstance = api.getActiveRendererInstance?.()\n    if (rendererInstance?.renderer?.interactionContract) {\n      rendererInstance.renderer.interactionContract.updateSelection(selectedIds, reason)\n    }\n  },\n\n  // [Core → Renderer] Set or clear the active focus item\n  setActive: (activeId: string | number | null) => {\n    const rendererInstance = api.getActiveRendererInstance?.()\n    if (rendererInstance?.renderer?.interactionContract) {\n      rendererInstance.renderer.interactionContract.setActive(activeId)\n    }\n  },\n\n  // [Core → Renderer] Ensure specified item is visible in viewport\n  ensureVisible: (id: string | number, behavior: 'smooth' | 'auto') => {\n    const rendererInstance = api.getActiveRendererInstance?.()\n    if (rendererInstance?.renderer?.interactionContract) {\n      rendererInstance.renderer.interactionContract.ensureVisible(id, behavior)\n    }\n  },\n\n  // [Core → Renderer] Toggle edit mode for specified cell/item\n  toggleEditMode: async (id: string | number, mode: 'enter' | 'exit') => {\n    const rendererInstance = api.getActiveRendererInstance?.()\n    if (rendererInstance?.renderer?.interactionContract) {\n      return await rendererInstance.renderer.interactionContract.toggleEditMode(id, mode)\n    }\n    return false\n  },\n\n  // [Renderer → Core] Register event emitter for renderer to send interaction events\n  registerEventEmitter: <K extends keyof GridEvents>(emit: (eventName: K, payload: GridEvents[K]) => void) => {\n    // Register emitter with the current renderer\n    const rendererInstance = api.getActiveRendererInstance?.()\n    if (rendererInstance?.renderer?.interactionContract) {\n      rendererInstance.renderer.interactionContract.registerEventEmitter(emit)\n    }\n  },\n\n  // [Renderer → Core] Update scroll position in core state\n  updateScrollPosition: (position: { top: number; left: number }) => {\n    const rendererInstance = api.getActiveRendererInstance?.()\n    if (rendererInstance?.renderer?.interactionContract) {\n      rendererInstance.renderer.interactionContract.updateScrollPosition?.(position)\n    }\n  },\n\n  // [Core → Renderer] Force re-render of all visible content\n  refresh: () => {\n    const rendererInstance = api.getActiveRendererInstance?.()\n    if (rendererInstance?.renderer?.interactionContract) {\n      rendererInstance.renderer.interactionContract.refresh?.()\n    }\n  },\n\n  // [Renderer → Core] Emit interaction events to core logic\n  emit: <K extends keyof GridEvents>(eventName: K, payload: GridEvents[K]) => {\n    // Only emit events that are defined in the component's emit interface\n    const supportedEvents: (keyof GridEvents)[] = GRID_EVENT_NAMES as unknown as (keyof GridEvents)[]\n\n    if (supportedEvents.includes(eventName)) {\n      // Emit supported events through component emit\n      // @ts-expect-error - Complex type mapping between GridEvents and component emit signature\n      emit(eventName, payload)\n    } else {\n      // For other events, emit through the API event system\n      api.emit(eventName, payload)\n    }\n  },\n\n  // [Core → Renderer] Register core logic callbacks for interaction handling\n  registerCoreCallbacks: (callbacks: Partial<CoreLogicCallbacks>) => {\n    const rendererInstance = api.getActiveRendererInstance?.()\n    if (rendererInstance?.renderer?.interactionContract) {\n      rendererInstance.renderer.interactionContract.registerCoreCallbacks?.(callbacks)\n    }\n  },\n\n  // [Core → Renderer] Cleanup and destroy the interaction contract\n  destroy: () => {\n    const rendererInstance = api.getActiveRendererInstance?.()\n    if (rendererInstance?.renderer?.interactionContract) {\n      rendererInstance.renderer.interactionContract.destroy?.()\n    }\n  }\n}\n\n// 7. PROVIDE/INJECT PATTERN (enhanced)\nprovide('gridState', gridState)\nprovide('interactionContract', interactionContract)\nprovide(GRID_API_KEY, api)\n\n// 8. RENDERER SYSTEM INTEGRATION\n\n/**\n * Initialize the renderer system\n */\nconst initializeRenderer = async () => {\n  try {\n    if (!rendererHost.value) {\n      throw new Error('Renderer host element not found')\n    }\n\n    rendererError.value = null\n\n    // Register table renderer if not already registered\n    const availableRenderers = api.getAvailableRenderers?.() || []\n    if (!availableRenderers.includes('table') && api.registerRenderer) {\n      logger.debug('Registering table renderer')\n      api.registerRenderer('table', (options?: RendererOptions) => createTableRenderer(options))\n    }\n\n    // Initialize renderer through the registry system\n    const success = await api.initializeRenderer?.(rendererHost.value)\n\n    if (!success) {\n      throw new Error('Renderer initialization returned false')\n    }\n\n    rendererInitialized.value = true\n    logger.debug(`Renderer system initialized with '${props.renderer}' renderer`)\n    return true\n  } catch (error) {\n    const errorMessage = error instanceof Error ? error.message : 'Unknown error'\n    rendererError.value = errorMessage\n    logger.error('Renderer initialization failed:', { module: 'DataGrid' }, error)\n\n    emit('renderer-error', {\n      error: error instanceof Error ? error : new Error(errorMessage),\n      context: 'initialization',\n      renderer: props.renderer,\n    })\n\n    return false\n  }\n}\n\n/**\n * Switch to a different renderer\n */\nconst switchRenderer = async (rendererName: string) => {\n  if (!rendererInitialized.value) {\n    logger.warn('Cannot switch renderer - system not initialized')\n    return false\n  }\n\n  try {\n    const previousRenderer = api.getRenderer?.() || 'unknown'\n    const success = await api.setRenderer?.(rendererName)\n\n    if (success) {\n      emit('renderer-changed', {\n        name: rendererName,\n        previousRenderer,\n      })\n      logger.debug(`Switched from '${previousRenderer}' to '${rendererName}' renderer`)\n    }\n\n    return success\n  } catch (error) {\n    logger.error(`Failed to switch to renderer '${rendererName}':`, { module: 'DataGrid' }, error)\n    emit('renderer-error', {\n      error: error instanceof Error ? error : new Error('Renderer switch failed'),\n      context: 'switch',\n      renderer: rendererName,\n    })\n    return false\n  }\n}\n\n// 9. KEYBOARD SHORTCUTS AND ACCESSIBILITY INTEGRATION\nconst handleShowShortcuts = () => {\n  showShortcuts.value = true\n}\n\nconst handleCloseShortcuts = () => {\n  showShortcuts.value = false\n}\n\n// Determine which features are enabled based on loaded plugins\nconst keyboardFeaturesEnabled = computed(() => {\n  const loadedPlugins = api.listPlugins().map(p => p.name)\n  return {\n    editing: loadedPlugins.includes('core-cell-editing'),\n    selection: loadedPlugins.includes('core-selection'),\n  }\n})\n\n// Set up grid event listeners for accessibility announcements\nconst setupAccessibilityIntegration = () => {\n  if (!accessibilityAnnouncerRef.value) return\n\n  const announcer = accessibilityAnnouncerRef.value\n\n  // Listen for focus changes\n  api.on?.('cell-focus-change', (payload: { rowId: string | number | null; columnId: string | null }) => {\n    if (payload.rowId !== null && payload.columnId !== null) {\n      // For now, we'll announce the cell change with available info\n      // TODO: Convert rowId/columnId to indices when needed\n      announcer.announceCellFocus(0, 0, undefined, payload.columnId)\n    }\n  })\n\n  // Listen for selection changes\n  api.on?.('row-select', (payload: { rowId: string | number; selected: boolean; selectedRows: (string | number)[]; row?: RowData }) => {\n    if (payload.selectedRows) {\n      const totalRows = gridState.data.value.visibleRows.length\n      announcer.announceSelection(payload.selectedRows.length, totalRows)\n    }\n  })\n\n  // Listen for edit mode changes\n  api.on?.('cell-edit-start', (payload: { rowId: string | number; columnId: string; value: CellValue }) => {\n    // Convert rowId and columnId to indices for accessibility announcements\n    const rowIndex = gridState.data.value.visibleRows.findIndex(row => (row.id ?? row.index) === payload.rowId)\n    const columnIndex = gridState.columns.value.findIndex(col => col.field === payload.columnId)\n    const column = gridState.columns.value.find(col => col.field === payload.columnId)\n    \n    if (rowIndex >= 0 && columnIndex >= 0) {\n      announcer.announceEditMode(true, {\n        row: rowIndex,\n        column: columnIndex,\n        title: column?.title,\n      })\n    }\n  })\n\n  api.on?.('cell-edit-complete', () => {\n    announcer.announceEditMode(false)\n  })\n\n  api.on?.('cell-edit-cancel', () => {\n    announcer.announceEditMode(false)\n  })\n\n  // Listen for sorting changes (multi-sort only)\n  api.on?.('multi-sort-change', (config: import('../types').MultiSortConfig) => {\n    if (!config || !config.fields || config.fields.length === 0) {\n      announcer.announceSorting('All columns', 'none')\n      return\n    }\n    const [first] = config.fields\n    if (!first) return\n    const column = gridState.columns.value.find(c => c.field === first.field)\n    if (column) {\n      announcer.announceSorting(column.title, first.direction)\n    }\n  })\n\n  // Listen for filtering changes\n  api.on?.('filter-change', (payload: FilterConfig[]) => {\n    const totalRows = props.data.length\n    const visibleRows = gridState.data.value.visibleRows.length\n    const activeFilters = payload.length || 0\n    announcer.announceFiltering(activeFilters, totalRows, visibleRows)\n  })\n\n  // Listen for errors\n  api.on?.('plugin-error', (payload: { error: Error }) => {\n    announcer.announceError(`Plugin error: ${payload.error.message}`)\n  })\n}\n\n// Bridge column resize lifecycle events to parent listeners\nconst columnResizeStartOff = api.on?.('column-resize-start', payload => {\n  emit('column-resize-start', payload)\n})\nif (columnResizeStartOff) {\n  teardownFns.push(columnResizeStartOff)\n}\n\nconst columnResizeOff = api.on?.('column-resize', payload => {\n  emit('column-resize', payload)\n})\nif (columnResizeOff) {\n  teardownFns.push(columnResizeOff)\n}\n\n// Bridge core/public events from API to component emits (clean path)\nconst cellClickOff = api.on?.('cell-click', payload => {\n  emit('cell-click', payload as any)\n})\nif (cellClickOff) teardownFns.push(cellClickOff)\n\nconst rowClickOff = api.on?.('row-click', payload => {\n  emit('row-click', payload as any)\n})\nif (rowClickOff) teardownFns.push(rowClickOff)\n\nconst cellDblClickOff = api.on?.('cell-double-click', payload => {\n  emit('cell-double-click', payload as any)\n})\nif (cellDblClickOff) teardownFns.push(cellDblClickOff)\n\nconst cellRightClickOff = api.on?.('cell-right-click', payload => {\n  emit('cell-right-click', payload as any)\n})\nif (cellRightClickOff) teardownFns.push(cellRightClickOff)\n\nconst rowSelectOff = api.on?.('row-select', payload => {\n  emit('row-select', payload as any)\n})\nif (rowSelectOff) teardownFns.push(rowSelectOff)\n\nconst toggleSelectionOff = api.on?.('toggle-selection', payload => {\n  emit('toggle-selection', payload as any)\n})\nif (toggleSelectionOff) teardownFns.push(toggleSelectionOff)\n\nconst clearSelectionOff = api.on?.('clear-selection', payload => {\n  emit('clear-selection', payload as any)\n})\nif (clearSelectionOff) teardownFns.push(clearSelectionOff)\n\nconst multiSortChangeOff = api.on?.('multi-sort-change', payload => {\n  emit('multi-sort-change', payload as any)\n})\nif (multiSortChangeOff) teardownFns.push(multiSortChangeOff)\n\nconst filterChangeOff = api.on?.('filter-change', payload => {\n  emit('filter-change', payload as any)\n})\nif (filterChangeOff) teardownFns.push(filterChangeOff)\n\nconst scrollOff = api.on?.('scroll', payload => {\n  emit('scroll', payload as any)\n})\nif (scrollOff) teardownFns.push(scrollOff)\n\n// Listen for multi-sort disabled warning\nconst multiSortDisabledOff = api.on?.('multi-sort-disabled-warning', (payload: { attempted: boolean; message: string }) => {\n  showToast(payload.message, 'warn')\n})\nif (multiSortDisabledOff) teardownFns.push(multiSortDisabledOff)\n\n// Listen for user notifications (general purpose)\nconst userNotificationOff = api.on?.('user-notification', (payload: { type: 'info' | 'warn' | 'error' | 'success'; message: string; details?: string }) => {\n  showToast(payload.message, payload.type)\n})\nif (userNotificationOff) teardownFns.push(userNotificationOff)\n\n// Helper function to show toast notifications\nconst showToast = (message: string, type: 'info' | 'warn' | 'error' | 'success' = 'info') => {\n  toastMessage.value = message\n  toastType.value = type\n  toastVisible.value = true\n}\n\nconst handleToastClose = () => {\n  toastVisible.value = false\n}\n\n// Clean system: renderer → DataGrid emits are handled via interactionContract above.\n\n// 10. LIFECYCLE HOOKS (enhanced)\nonMounted(async () => {\n  // Initialize grid with props data\n  if (props.data.length > 0) {\n    api.setData(props.data)\n  }\n\n  if (props.columns.length > 0) {\n    api.setColumns(props.columns)\n  }\n\n  // Set loading state\n  gridState.__internal.setLoading(props.loading)\n\n  // Initialize renderer system\n  await nextTick() // Ensure DOM is ready\n  await initializeRenderer()\n\n  // Set up accessibility integration\n  await nextTick() // Ensure announcer component is ready\n  setupAccessibilityIntegration()\n\n  // Initialize current selection kind from processed columns\n  currentSelectionKind.value = deriveSelectionKind(gridState.columns.value as any)\n})\n\n// 11. PROP WATCHERS (enhanced)\nwatch(\n  () => props.data,\n  newData => {\n    api.setData(newData)\n  }\n)\n\nwatch(\n  () => props.columns,\n  newColumns => {\n    api.setColumns(newColumns)\n  }\n)\n\n// React to processed columns change to detect selection kind switches\nwatch(\n  () => gridState.columns.value,\n  (processedColumns) => {\n    const nextKind = deriveSelectionKind(processedColumns as any)\n    if (nextKind !== currentSelectionKind.value) {\n      // Clear selection when switching between checkbox and radio\n      ;(api as any).clearSelection?.()\n      // Also reset renderer-side selection state immediately to avoid stale highlights\n      interactionContract.updateSelection?.(new Set(), 'programmatic')\n      // Align plugin selection mode if available\n      if (nextKind === 'radio') {\n        ;(api as any).setSelectionMode?.('single')\n      } else if (nextKind === 'checkbox') {\n        ;(api as any).setSelectionMode?.('multi')\n      }\n      currentSelectionKind.value = nextKind\n    }\n  }\n)\n\nwatch(\n  () => props.loading,\n  newLoading => {\n    gridState.__internal.setLoading(newLoading)\n  }\n)\n\nwatch(\n  () => mergedConfig.value,\n  newConfig => {\n    api.updateConfig(newConfig)\n  }\n)\n\n// Watch for renderer prop changes\nwatch(\n  () => props.renderer,\n  async (newRenderer, oldRenderer) => {\n    if (newRenderer !== oldRenderer && rendererInitialized.value) {\n      await switchRenderer(newRenderer)\n    }\n  }\n)\n\n// Watch for data/column changes and trigger re-render\nwatch(\n  [() => gridState.data.value, () => gridState.columns.value],\n  () => {\n    // Vue's reactivity system will automatically handle re-rendering\n    logger.debug('Data or columns changed, Vue will handle re-render')\n  },\n  { deep: false }\n)\n\n// 12. RESIZE HANDLING\nlet resizeObserver: ResizeObserver | null = null\n\nonMounted(() => {\n  if (rendererContainer.value) {\n    resizeObserver = new ResizeObserver(entries => {\n      for (const entry of entries) {\n        const { width, height } = entry.contentRect\n        api.resizeRenderer?.(width, height)\n      }\n    })\n\n    resizeObserver.observe(rendererContainer.value)\n  }\n})\n\n// 13. CLEANUP (enhanced)\nonUnmounted(() => {\n  if (resizeObserver) {\n    resizeObserver.disconnect()\n  }\n\n  // Renderer cleanup is handled by useGridState composable\n\n  teardownFns.forEach(off => {\n    try {\n      off()\n    } catch (error) {\n      logger.warn('Error cleaning up listener', error)\n    }\n  })\n  teardownFns.length = 0\n})\n\n// Dynamically load/unload plugins when props.plugins changes (for demos/toggles)\nwatch(\n  () => props.plugins,\n  async (next) => {\n    const nextNames = new Set((next || []).map(p => p.name))\n    const current = installedPluginNames.value\n\n    // Unload removed plugins\n    for (const name of current) {\n      if (!nextNames.has(name)) {\n        try {\n          await api.unloadPlugin?.(name)\n        } catch (error) {\n          logger.warn(`Failed to unload plugin ${name}:`, error)\n        }\n      }\n    }\n\n    // Load newly added plugins\n    const nextByName = new Map((next || []).map(p => [p.name, p]))\n    for (const name of nextNames) {\n      if (!current.has(name)) {\n        const plugin = nextByName.get(name)\n        if (plugin) {\n          try {\n            await api.loadPlugin?.(plugin)\n          } catch (error) {\n            logger.warn(`Failed to load plugin ${name}:`, error)\n          }\n        }\n      }\n    }\n\n    installedPluginNames.value = nextNames\n\n    // Re-apply columns to ensure functional columns are normalized with current plugin set\n    // This lets drag handle enable/disable state reflect the latest plugins\n    if (props.columns && props.columns.length > 0) {\n      try {\n        api.setColumns(props.columns)\n      } catch (error) {\n        logger.warn('Failed to re-apply columns after plugin change:', error)\n      }\n    }\n  },\n  { deep: false }\n)\n\n// 14. EXPOSE METHODS for external control\ndefineExpose({\n  switchRenderer,\n  initializeRenderer,\n  getAvailableRenderers: () => api.getAvailableRenderers?.() || [],\n  getCurrentRenderer: () => api.getRenderer?.() || 'unknown',\n  renderNow: () => api.renderWithActiveRenderer?.(),\n  gridState,\n  api,\n})\n</script>\n\n<template>\n  <div\n    ref=\"gridContainer\"\n    :class=\"containerClasses\"\n    :style=\"containerStyle\"\n    role=\"grid\"\n    :aria-label=\"`Data grid with ${gridState.data.value.visibleRows.length} rows using ${props.renderer} renderer`\"\n    :aria-rowcount=\"gridState.data.value.visibleRows.length\"\n    :aria-colcount=\"gridState.columns.value.length\"\n    :data-renderer=\"props.renderer\"\n  >\n    <!-- Loading State -->\n    <div v-if=\"gridState.loading.value\" class=\"ht-overlay ht-overlay-bg z-30\">\n      <div class=\"flex items-center space-x-2\">\n        <div class=\"animate-spin w-4 h-4 border-2 border-[var(--ht-primary)] border-t-transparent rounded-full\"></div>\n        <span class=\"text-[var(--ht-text-muted)]\">Loading...</span>\n      </div>\n    </div>\n\n    <!-- Grid Error State -->\n    <div v-else-if=\"gridState.error.value\" class=\"ht-overlay bg-[var(--ht-bg)] z-30\">\n      <div class=\"ht-overlay-panel\">\n        <div class=\"text-[var(--ht-danger)] mb-2\">⚠️ Grid Error</div>\n        <div class=\"text-[var(--ht-text)]\">{{ gridState.error.value }}</div>\n      </div>\n    </div>\n\n    <!-- Renderer Error State -->\n    <div v-else-if=\"rendererError\" class=\"ht-overlay bg-[var(--ht-bg)] z-30\">\n      <div class=\"ht-overlay-panel\">\n        <div class=\"text-[var(--ht-danger)] mb-2\">⚠️ Renderer Error</div>\n        <div class=\"text-[var(--ht-text)] text-sm mb-4\">{{ rendererError }}</div>\n        <HtButton size=\"sm\" variant=\"primary\" @click=\"initializeRenderer\">Retry</HtButton>\n      </div>\n    </div>\n\n    <!-- Filter Bar -->\n    <FilterBar :api=\"api\" />\n\n    <!-- Renderer Container -->\n    <div\n      v-if=\"isRendererReady\"\n      ref=\"rendererContainer\"\n      class=\"h-full w-full ht-renderer-container\"\n      :class=\"`ht-renderer-${props.renderer}`\"\n    >\n      <!-- Renderer Host (managed by RendererRegistry) -->\n      <div ref=\"rendererHost\" class=\"h-full w-full\" />\n\n      <!-- Empty State -->\n      <div\n        v-if=\"gridState.data.value.visibleRows.length === 0\"\n        class=\"ht-overlay ht-empty-overlay text-[var(--ht-text-muted)]\"\n      >\n        <div class=\"ht-overlay-panel\">\n          <div class=\"text-4xl mb-2\">📄</div>\n          <div>No data available</div>\n          <div class=\"text-xs mt-1 text-[var(--ht-text-muted)]\">Renderer: {{ props.renderer }}</div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Keyboard Navigation Components -->\n    <KeyboardShortcuts\n      ref=\"keyboardShortcutsRef\"\n      :show-shortcuts=\"showShortcuts\"\n      :show-help-hint=\"props.keyboardHelpHint\"\n      :enable-editing=\"keyboardFeaturesEnabled.editing\"\n      :enable-selection=\"keyboardFeaturesEnabled.selection\"\n      @show=\"handleShowShortcuts\"\n      @close=\"handleCloseShortcuts\"\n    />\n\n    <!-- Accessibility Announcer -->\n    <AccessibilityAnnouncer ref=\"accessibilityAnnouncerRef\" />\n\n    <!-- Toast Notification -->\n    <ToastNotification\n      :visible=\"toastVisible\"\n      :message=\"toastMessage\"\n      :type=\"toastType\"\n      :duration=\"4000\"\n      @close=\"handleToastClose\"\n    />\n  </div>\n</template>\n\n<style scoped>\n.ht-grid-container {\n  /* Container-specific styles */\n  contain: layout style;\n  /* CSS containment for performance */\n}\n\n/* Grid-level focus management: no visible ring on container focus */\n.ht-grid-container:focus,\n.ht-grid-container:focus-within {\n  outline: none;\n  box-shadow: none;\n}\n\n/* Renderer-specific container styling */\n.ht-renderer-container {\n  /* Ensure renderer container fills space */\n  position: relative;\n  overflow: hidden;\n}\n\n.ht-empty-overlay {\n  pointer-events: none;\n}\n\n/* Renderer-specific classes */\n.ht-renderer-table {\n  /* Table renderer specific styles */\n}\n\n.ht-renderer-excel {\n  /* Excel renderer specific styles */\n  font-family: var(--ht-font-mono, 'SF Mono', 'Monaco', 'Consolas', monospace);\n}\n\n/* Scrollbar styling (applies to renderer content) */\n.ht-grid-container :deep(.ht-scroller) {\n  scrollbar-width: thin;\n  scrollbar-color: var(--ht-border) transparent;\n}\n\n.ht-grid-container :deep(.ht-scroller::-webkit-scrollbar) {\n  width: 8px;\n  height: 8px;\n}\n\n.ht-grid-container :deep(.ht-scroller::-webkit-scrollbar-track) {\n  background: transparent;\n}\n\n.ht-grid-container :deep(.ht-scroller::-webkit-scrollbar-thumb) {\n  background: var(--ht-border);\n  border-radius: 4px;\n}\n\n.ht-grid-container :deep(.ht-scroller::-webkit-scrollbar-thumb:hover) {\n  background: var(--ht-text-muted);\n}\n\n/* Renderer loading and transition states */\n.ht-renderer-container {\n  transition: var(--ht-transition-fast);\n}\n\n.ht-grid-container[data-renderer='excel'] .ht-renderer-container {\n  /* Excel-specific container adjustments */\n  background: var(--ht-bg-excel, var(--ht-bg));\n}\n</style>\n","import { reactive } from 'vue'\nimport { createLogger } from '../utils/logger'\nimport type { DataGridProps, GridPlugin } from '../types'\n\nexport interface UseHappyTableOptions {\n  /** Base props applied to the DataGrid component */\n  props?: Partial<DataGridProps>\n  /** Optional override for grid data */\n  data?: DataGridProps['data']\n  /** Optional override for grid columns */\n  columns?: DataGridProps['columns']\n  /** Optional override for grid plugins */\n  plugins?: GridPlugin[]\n  /** Convenience shortcut to set grid height */\n  height?: DataGridProps['height']\n  /** Toggle the inline keyboard shortcut hint */\n  keyboardHelpHint?: DataGridProps['keyboardHelpHint']\n  /** Logger name */\n  loggerModule?: string\n}\n\nexport interface UseHappyTableResult {\n  gridProps: DataGridProps\n  updateGridProps: (props: Partial<DataGridProps>) => void\n  logger: ReturnType<typeof createLogger>\n}\n\nconst DEFAULT_GRID_PROPS: Pick<Required<DataGridProps>, 'data' | 'columns' | 'plugins' | 'height' | 'showKeyboardShortcuts' | 'keyboardHelpHint'> = {\n  data: [],\n  columns: [],\n  plugins: [],\n  height: 400,\n  showKeyboardShortcuts: false,\n  keyboardHelpHint: false,\n}\n\nexport function useHappyTable(options: UseHappyTableOptions = {}): UseHappyTableResult {\n  const {\n    props,\n    data,\n    columns,\n    plugins,\n    height,\n    keyboardHelpHint,\n    loggerModule = 'HappyTable',\n  } = options\n\n  const logger = createLogger(loggerModule)\n\n  const gridProps = reactive<DataGridProps>({\n    ...DEFAULT_GRID_PROPS,\n    ...(props ?? {}),\n  })\n\n  if (data !== undefined) gridProps.data = data\n  if (columns !== undefined) gridProps.columns = columns\n  if (plugins !== undefined) gridProps.plugins = plugins\n  if (height !== undefined) gridProps.height = height\n  if (keyboardHelpHint !== undefined) gridProps.keyboardHelpHint = keyboardHelpHint\n\n  const updateGridProps = (nextProps: Partial<DataGridProps>) => {\n    Object.assign(gridProps, nextProps)\n  }\n\n  return {\n    gridProps,\n    updateGridProps,\n    logger,\n  }\n}\n","import type { GridEvents } from '../types'\n\ntype OnFn = <K extends keyof GridEvents>(event: K, handler: (payload: GridEvents[K]) => void) => void\ntype OffFn = <K extends keyof GridEvents>(event: K) => void\n\nexport interface GridEventsBinding {\n  on: OnFn\n  off: OffFn\n}\n\nexport function useGridEvents(bind: GridEventsBinding) {\n  const { on, off } = bind\n\n  const onEvent = <K extends keyof GridEvents>(event: K, handler: (p: GridEvents[K]) => void) => on(event, handler)\n\n  const onceEvent = <K extends keyof GridEvents>(event: K, handler: (p: GridEvents[K]) => void) => {\n    const wrapper = (p: GridEvents[K]) => {\n      handler(p)\n      off(event)\n    }\n    on(event, wrapper)\n  }\n\n  // Cell events\n  const onCellClick = (h: (p: GridEvents['cell-click']) => void) => on('cell-click', h)\n  const onceCellClick = (h: (p: GridEvents['cell-click']) => void) => onceEvent('cell-click', h)\n  const offCellClick = () => off('cell-click')\n\n  const onCellDoubleClick = (h: (p: GridEvents['cell-double-click']) => void) => on('cell-double-click', h)\n  const offCellDoubleClick = () => off('cell-double-click')\n\n  const onCellRightClick = (h: (p: GridEvents['cell-right-click']) => void) => on('cell-right-click', h)\n  const offCellRightClick = () => off('cell-right-click')\n\n  // Row events\n  const onRowClick = (h: (p: GridEvents['row-click']) => void) => on('row-click', h)\n  const onceRowClick = (h: (p: GridEvents['row-click']) => void) => onceEvent('row-click', h)\n  const offRowClick = () => off('row-click')\n\n  const onRowSelect = (h: (p: GridEvents['row-select']) => void) => on('row-select', h)\n  const offRowSelect = () => off('row-select')\n\n  // Sorting / filtering\n  const onMultiSortChange = (h: (p: GridEvents['multi-sort-change']) => void) => on('multi-sort-change', h)\n  const offMultiSortChange = () => off('multi-sort-change')\n\n  const onFilterChange = (h: (p: GridEvents['filter-change']) => void) => on('filter-change', h)\n  const offFilterChange = () => off('filter-change')\n\n  // Scroll / column\n  const onScroll = (h: (p: GridEvents['scroll']) => void) => on('scroll', h)\n  const offScroll = () => off('scroll')\n\n  const onColumnResizeStart = (h: (p: GridEvents['column-resize-start']) => void) => on('column-resize-start', h)\n  const onColumnResize = (h: (p: GridEvents['column-resize']) => void) => on('column-resize', h)\n\n  return {\n    // generic\n    onEvent,\n    onceEvent,\n    // cell\n    onCellClick,\n    onceCellClick,\n    offCellClick,\n    onCellDoubleClick,\n    offCellDoubleClick,\n    onCellRightClick,\n    offCellRightClick,\n    // row\n    onRowClick,\n    onceRowClick,\n    offRowClick,\n    onRowSelect,\n    offRowSelect,\n    // sort/filter\n    onMultiSortChange,\n    offMultiSortChange,\n    onFilterChange,\n    offFilterChange,\n    // misc\n    onScroll,\n    offScroll,\n    onColumnResizeStart,\n    onColumnResize,\n  }\n}\n","/**\n * ExcelRenderer - Placeholder for Excel-like grid renderer\n *\n * This is a stub implementation that will be provided by the Excel plugin\n * in Phase 3 of the development roadmap. The interface is defined here\n * to ensure forward compatibility.\n *\n * Features (Future Implementation):\n * - Excel-style grid lines and headers (A/B/C..., 1/2/3...)\n * - Cell-based interactions and selection\n * - Active cell highlighting\n * - Multi-range selection (Ctrl+Click, Shift+Click)\n * - Fill handle for cell dragging\n * - In-cell editing with formula support\n * - Excel-style keyboard navigation\n */\n\nimport type {\n  GridRenderer,\n  GridInteractionContract,\n  VirtualRow,\n  RendererOptions,\n} from '../base/renderer-interface'\nimport type { GridAPI, GridState, ColumnDef } from '../../types'\nimport { createInteractionContract } from '../base/interaction-contract'\n\n/**\n * ExcelRenderer stub implementation\n *\n * This class provides the interface contract but throws errors when used,\n * indicating that the Excel plugin needs to be loaded.\n */\nexport class ExcelRenderer implements GridRenderer {\n  readonly name = 'excel' as const\n  readonly interactionContract: GridInteractionContract\n  private readonly options: RendererOptions\n\n  constructor(options: RendererOptions = {}) {\n    this.options = options\n    const contract = createInteractionContract('excel-renderer-stub')\n\n    // Create a wrapper to match the GridInteractionContract interface\n    this.interactionContract = {\n      updateSelection: (_selectedIds: Set<string | number>, _reason: 'programmatic' | 'user') => {\n        // Stub implementation\n      },\n      setActive: (_activeId: string | number | null) => {\n        // Stub implementation\n      },\n      ensureVisible: (_id: string | number, _behavior: 'smooth' | 'auto') => {\n        // Stub implementation\n      },\n      toggleEditMode: async (_id: string | number, _mode: 'enter' | 'exit') => {\n        return false // Stub implementation\n      },\n      registerEventEmitter: (emit: (eventName: any, payload: any) => void) => {\n        contract.registerEventEmitter(emit)\n      },\n      updateScrollPosition: (_position: { top: number; left: number }) => {\n        // Stub implementation\n      },\n      refresh: () => {\n        // Stub implementation\n      },\n      emit: (_eventName: any, _payload: any) => {\n        // Stub implementation\n      },\n      registerCoreCallbacks: (_callbacks: any) => {\n        // Stub implementation\n      },\n      destroy: () => {\n        // Stub implementation\n      },\n    }\n  }\n\n  /**\n   * Mount renderer - throws error for stub\n   */\n  async mount(_host: HTMLElement, _api: GridAPI): Promise<void> {\n    throw new Error(\n      'ExcelRenderer is not available. Please install the Excel plugin to use Excel-style rendering.\\n' +\n        'Installation: npm install @happy-table/excel-plugin\\n' +\n        'Usage: import { excelPlugin } from \"@happy-table/excel-plugin\"\\n' +\n        '       useGridState(config, [excelPlugin])'\n    )\n  }\n\n  /**\n   * Unmount renderer - stub implementation\n   */\n  async unmount(): Promise<void> {\n    // No-op for stub\n  }\n\n  /**\n   * Render state - throws error for stub\n   */\n  render(_state: GridState, _columns: ColumnDef[], _rows: VirtualRow[]): void {\n    throw new Error('ExcelRenderer stub cannot render. Please install the Excel plugin.')\n  }\n\n  /**\n   * Handle resize - stub implementation\n   */\n  resize(_width: number, _height: number): void {\n    // No-op for stub\n  }\n\n  /**\n   * Get configuration schema\n   */\n  getConfigSchema(): Record<string, any> {\n    return {\n      grid: {\n        type: 'object',\n        description: 'Excel-style grid configuration',\n        properties: {\n          showGridLines: { type: 'boolean', default: true },\n          showRowHeaders: { type: 'boolean', default: true },\n          showColumnHeaders: { type: 'boolean', default: true },\n          headerStyle: {\n            type: 'string',\n            enum: ['excel', 'google-sheets'],\n            default: 'excel',\n          },\n        },\n      },\n      selection: {\n        type: 'object',\n        description: 'Selection behavior configuration',\n        properties: {\n          multiRange: { type: 'boolean', default: true },\n          showFillHandle: { type: 'boolean', default: true },\n          enableRangeSelection: { type: 'boolean', default: true },\n        },\n      },\n      editing: {\n        type: 'object',\n        description: 'Cell editing configuration',\n        properties: {\n          enableInCellEditing: { type: 'boolean', default: true },\n          enableFormulaBar: { type: 'boolean', default: true },\n          autoCommitOnEnter: { type: 'boolean', default: true },\n        },\n      },\n    }\n  }\n\n  /**\n   * Update configuration - stub implementation\n   */\n  updateConfig(config: Record<string, any>): void {\n    Object.assign(this.options, config)\n  }\n}\n\n/**\n * Factory function to create ExcelRenderer stub\n */\nexport function createExcelRenderer(options: RendererOptions = {}): ExcelRenderer {\n  return new ExcelRenderer(options)\n}\n\n/**\n * Excel-specific interaction contract interface\n *\n * Extends the base GridInteractionContract with Excel-specific methods\n * that will be implemented by the Excel plugin.\n */\nexport interface ExcelInteractionContract extends GridInteractionContract {\n  /**\n   * Select a range of cells (Excel-style)\n   */\n  selectRange(start: { row: number; col: number }, end: { row: number; col: number }): void\n\n  /**\n   * Add a range to multi-selection\n   */\n  addToSelection(range: {\n    start: { row: number; col: number }\n    end: { row: number; col: number }\n  }): void\n\n  /**\n   * Clear all selections\n   */\n  clearSelections(): void\n\n  /**\n   * Start fill operation (drag handle)\n   */\n  startFill(sourceRange: {\n    start: { row: number; col: number }\n    end: { row: number; col: number }\n  }): void\n\n  /**\n   * Complete fill operation\n   */\n  completeFill(targetRange: {\n    start: { row: number; col: number }\n    end: { row: number; col: number }\n  }): void\n\n  /**\n   * Show formula bar\n   */\n  showFormulaBar(cellId: string, formula: string): void\n\n  /**\n   * Hide formula bar\n   */\n  hideFormulaBar(): void\n\n  /**\n   * Update cell coordinate display (A1, B2, etc.)\n   */\n  updateCoordinateDisplay(coordinate: string): void\n}\n\n/**\n * Excel renderer configuration interface\n */\nexport interface ExcelRendererConfig extends RendererOptions {\n  grid?: {\n    showGridLines?: boolean\n    showRowHeaders?: boolean\n    showColumnHeaders?: boolean\n    headerStyle?: 'excel' | 'google-sheets'\n    gridLineColor?: string\n    headerBackgroundColor?: string\n  }\n\n  selection?: {\n    multiRange?: boolean\n    showFillHandle?: boolean\n    enableRangeSelection?: boolean\n    selectionColor?: string\n    activeColor?: string\n  }\n\n  editing?: {\n    enableInCellEditing?: boolean\n    enableFormulaBar?: boolean\n    autoCommitOnEnter?: boolean\n    formulaBarHeight?: number\n  }\n\n  coordinates?: {\n    showCoordinates?: boolean\n    coordinateFormat?: 'A1' | 'R1C1'\n    startRow?: number\n    startColumn?: string\n  }\n}\n\n/**\n * Plugin information for Excel renderer\n */\nexport const EXCEL_PLUGIN_INFO = {\n  name: '@happy-table/excel-plugin',\n  version: '^1.0.0',\n  description: 'Excel-style grid renderer with advanced cell interactions',\n  features: [\n    'Excel-style grid lines and headers',\n    'Multi-range selection',\n    'Fill handle for cell dragging',\n    'In-cell editing with formula support',\n    'Excel-style keyboard navigation',\n    'A1 coordinate system',\n    'Formula bar',\n    'Cell merging (future)',\n    'Conditional formatting (future)',\n  ],\n  installation: 'npm install @happy-table/excel-plugin',\n  usage: `\nimport { createExcelPlugin } from '@happy-table/excel-plugin'\n\nconst excelPlugin = createExcelPlugin({\n  grid: { showGridLines: true },\n  selection: { multiRange: true },\n  editing: { enableFormulaBar: true }\n})\n\nconst gridState = useGridState(config, [excelPlugin])\n  `,\n}\n\n/**\n * Default export for convenience\n */\nexport default createExcelRenderer\n","/**\n * Table Interactions - Event handling and user interaction management for TableRenderer\n *\n * Provides a clean abstraction layer between DOM events and the GridInteractionContract,\n * handling keyboard navigation, mouse interactions, and accessibility features.\n */\n\nimport type { GridInteractionContract } from '../base/renderer-interface'\nimport type { ColumnDef, RowData, GridAPI } from '../../types'\n\n/**\n * Keyboard navigation directions\n */\ntype NavigationDirection = 'up' | 'down' | 'left' | 'right' | 'home' | 'end' | 'pageUp' | 'pageDown'\n\n/**\n * Mouse interaction types\n */\ntype MouseInteractionType = 'click' | 'doubleClick' | 'contextMenu' | 'dragStart' | 'dragEnd'\n\n/**\n * Cell position interface\n */\ninterface CellPosition {\n  rowIndex: number\n  columnIndex: number\n  rowId: string | number\n  columnId: string\n}\n\n/**\n * TableInteractionHandler - Manages all user interactions for TableRenderer\n */\nexport class TableInteractionHandler {\n  private keyboardNavEnabled = true\n  private mouseNavEnabled = true\n  private editMode = false\n  private currentFocus: CellPosition | null = null\n  private isDestroyed = false\n  private readonly interactionContract: GridInteractionContract\n  private readonly gridAPI: GridAPI\n\n  constructor(interactionContract: GridInteractionContract, gridAPI: GridAPI) {\n    this.interactionContract = interactionContract\n    this.gridAPI = gridAPI\n    this.setupEventListeners()\n  }\n\n  /**\n   * Initialize interaction handling for a container element\n   */\n  initialize(container: HTMLElement): void {\n    if (this.isDestroyed) return\n\n    // Set up basic interaction attributes\n    container.setAttribute('role', 'grid')\n    container.setAttribute('tabindex', '0')\n\n    // Initialize keyboard navigation plugin if available\n    if ((this.gridAPI as any).initializeKeyboardHandling) {\n      ;(this.gridAPI as any).initializeKeyboardHandling(container)\n    } else {\n      // Fallback to basic keyboard navigation\n      this.enableKeyboardNavigation(container)\n    }\n\n    // Enable mouse interactions\n    this.enableMouseInteractions(container)\n  }\n\n  /**\n   * Enable keyboard navigation\n   */\n  enableKeyboardNavigation(container: HTMLElement): void {\n    if (!this.keyboardNavEnabled) return\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      this.handleKeyboardEvent(event)\n    }\n\n    container.addEventListener('keydown', handleKeyDown)\n\n    // Store cleanup function\n    const cleanup = () => {\n      container.removeEventListener('keydown', handleKeyDown)\n    }\n\n    // Store cleanup for later\n    ;(container as any).__cleanup = cleanup\n  }\n\n  /**\n   * Enable mouse interactions\n   */\n  enableMouseInteractions(container: HTMLElement): void {\n    if (!this.mouseNavEnabled) return\n\n    const handleClick = (event: MouseEvent) => {\n      this.handleMouseEvent(event, 'click')\n    }\n\n    const handleDoubleClick = (event: MouseEvent) => {\n      this.handleMouseEvent(event, 'doubleClick')\n    }\n\n    const handleContextMenu = (event: MouseEvent) => {\n      this.handleMouseEvent(event, 'contextMenu')\n    }\n\n    container.addEventListener('click', handleClick)\n    container.addEventListener('dblclick', handleDoubleClick)\n    container.addEventListener('contextmenu', handleContextMenu)\n\n    // Store cleanup function\n    const cleanup = () => {\n      container.removeEventListener('click', handleClick)\n      container.removeEventListener('dblclick', handleDoubleClick)\n      container.removeEventListener('contextmenu', handleContextMenu)\n    }\n\n    // Store cleanup for later\n    ;(container as any).__cleanup = cleanup\n  }\n\n  /**\n   * Handle keyboard events\n   */\n  private handleKeyboardEvent(event: KeyboardEvent): void {\n    if (!this.keyboardNavEnabled || this.isDestroyed) return\n\n    // Delegate to keyboard navigation plugin if available\n    if ((this.gridAPI as any).handleKeyboardEvent) {\n      const handled = (this.gridAPI as any).handleKeyboardEvent(event)\n      if (handled) {\n        return\n      }\n    }\n\n    // Fallback to basic navigation\n    const direction = this.getNavigationDirection(event)\n    if (direction) {\n      event.preventDefault()\n      this.navigateCell(direction)\n    }\n\n    // Handle other keyboard shortcuts\n    switch (event.key) {\n      case 'Enter':\n        if (this.currentFocus) {\n          event.preventDefault()\n          this.activateCell(this.currentFocus)\n        }\n        break\n      case 'Escape':\n        if (this.editMode) {\n          event.preventDefault()\n          this.exitEditMode()\n        }\n        break\n      case ' ':\n        if (this.currentFocus && !this.editMode) {\n          event.preventDefault()\n          this.toggleCellSelection(this.currentFocus)\n        }\n        break\n    }\n  }\n\n  /**\n   * Handle mouse events\n   */\n  private handleMouseEvent(event: MouseEvent, type: MouseInteractionType): void {\n    if (!this.mouseNavEnabled || this.isDestroyed) return\n\n    const cellInfo = this.getCellFromEvent(event)\n    if (!cellInfo) return\n\n    switch (type) {\n      case 'click':\n        this.handleCellClick(event, cellInfo.position, cellInfo.rowData, cellInfo.columnDef)\n        break\n      case 'doubleClick':\n        this.handleCellDoubleClick(event, cellInfo.position, cellInfo.rowData, cellInfo.columnDef)\n        break\n      case 'contextMenu':\n        this.handleCellRightClick(event, cellInfo.position, cellInfo.rowData, cellInfo.columnDef)\n        break\n    }\n  }\n\n  /**\n   * Get navigation direction from keyboard event\n   */\n  private getNavigationDirection(event: KeyboardEvent): NavigationDirection | null {\n    switch (event.key) {\n      case 'ArrowUp':\n        return 'up'\n      case 'ArrowDown':\n        return 'down'\n      case 'ArrowLeft':\n        return 'left'\n      case 'ArrowRight':\n        return 'right'\n      case 'Home':\n        return 'home'\n      case 'End':\n        return 'end'\n      case 'PageUp':\n        return 'pageUp'\n      case 'PageDown':\n        return 'pageDown'\n      default:\n        return null\n    }\n  }\n\n  /**\n   * Navigate to a cell based on direction\n   */\n  private navigateCell(direction: NavigationDirection): void {\n    if (!this.currentFocus) {\n      // Set initial focus to first cell\n      this.setFocus({ rowIndex: 0, columnIndex: 0, rowId: '0', columnId: 'col-0' })\n      return\n    }\n\n    let newPosition: CellPosition | null = null\n\n    switch (direction) {\n      case 'up':\n        if (this.currentFocus.rowIndex > 0) {\n          newPosition = {\n            ...this.currentFocus,\n            rowIndex: this.currentFocus.rowIndex - 1,\n            rowId: String(this.currentFocus.rowIndex - 1),\n          }\n        }\n        break\n      case 'down':\n        newPosition = {\n          ...this.currentFocus,\n          rowIndex: this.currentFocus.rowIndex + 1,\n          rowId: String(this.currentFocus.rowIndex + 1),\n        }\n        break\n      case 'left':\n        if (this.currentFocus.columnIndex > 0) {\n          newPosition = {\n            ...this.currentFocus,\n            columnIndex: this.currentFocus.columnIndex - 1,\n            columnId: `col-${this.currentFocus.columnIndex - 1}`,\n          }\n        }\n        break\n      case 'right':\n        newPosition = {\n          ...this.currentFocus,\n          columnIndex: this.currentFocus.columnIndex + 1,\n          columnId: `col-${this.currentFocus.columnIndex + 1}`,\n        }\n        break\n      case 'home':\n        newPosition = {\n          ...this.currentFocus,\n          columnIndex: 0,\n          columnId: 'col-0',\n        }\n        break\n      case 'end':\n        // Move to last column (would need column count)\n        break\n    }\n\n    if (newPosition) {\n      this.setFocus(newPosition)\n    }\n  }\n\n  /**\n   * Set focus to a specific cell\n   */\n  private setFocus(position: CellPosition): void {\n    this.currentFocus = position\n\n    // Notify interaction contract\n    this.interactionContract.setActive(position.rowId)\n\n    // Ensure cell is visible\n    this.interactionContract.ensureVisible(position.rowId, 'smooth')\n  }\n\n  /**\n   * Activate a cell (enter edit mode or trigger action)\n   */\n  private activateCell(position: CellPosition): void {\n    // Enter edit mode for the cell\n    this.interactionContract.toggleEditMode(position.rowId, 'enter')\n    this.editMode = true\n  }\n\n  /**\n   * Exit edit mode\n   */\n  private exitEditMode(): void {\n    if (this.currentFocus) {\n      this.interactionContract.toggleEditMode(this.currentFocus.rowId, 'exit')\n    }\n    this.editMode = false\n  }\n\n  /**\n   * Toggle cell selection\n   */\n  private toggleCellSelection(position: CellPosition): void {\n    // Create a selection set with the current cell\n    const selection = new Set<string | number>([position.rowId])\n    this.interactionContract.updateSelection(selection, 'user')\n  }\n\n  /**\n   * Handle cell click\n   */\n  private handleCellClick(\n    _event: MouseEvent,\n    position: CellPosition,\n    rowData: RowData,\n    columnDef: ColumnDef\n  ): void {\n    // Set focus to clicked cell\n    this.setFocus(position)\n\n    // Emit cell click event\n    this.interactionContract.emit?.('cell-click', {\n      row: rowData,\n      column: columnDef,\n      value: rowData[columnDef.field],\n    })\n  }\n\n  /**\n   * Handle cell double-click\n   */\n  private handleCellDoubleClick(\n    _event: MouseEvent,\n    position: CellPosition,\n    rowData: RowData,\n    columnDef: ColumnDef\n  ): void {\n    // Enter edit mode on double-click\n    this.activateCell(position)\n\n    // Emit cell double-click event\n    this.interactionContract.emit?.('cell-double-click', {\n      row: rowData,\n      column: columnDef,\n      value: rowData[columnDef.field],\n    })\n  }\n\n  /**\n   * Handle cell right-click\n   */\n  private handleCellRightClick(\n    event: MouseEvent,\n    _position: CellPosition,\n    rowData: RowData,\n    columnDef: ColumnDef\n  ): void {\n    event.preventDefault()\n\n    // Emit cell right-click event\n    this.interactionContract.emit?.('cell-right-click', {\n      row: rowData,\n      column: columnDef,\n      value: rowData[columnDef.field],\n    })\n  }\n\n  /**\n   * Get cell information from DOM event\n   */\n  private getCellFromEvent(event: MouseEvent): {\n    position: CellPosition\n    rowData: RowData\n    columnDef: ColumnDef\n  } | null {\n    // Basic implementation - would need proper DOM traversal\n    const target = event.target as HTMLElement\n    const cellElement = target.closest('[data-cell-id]')\n\n    if (!cellElement) return null\n\n    // Extract position from data attributes\n    const cellId = cellElement.getAttribute('data-cell-id')\n    const rowId = cellElement.getAttribute('data-row-id')\n    const columnId = cellElement.getAttribute('data-column-id')\n\n    if (!cellId || !rowId || !columnId) return null\n\n    // Parse indices from IDs (basic implementation)\n    const rowIndex = parseInt(rowId, 10)\n    const columnIndex = parseInt(columnId, 10)\n\n    return {\n      position: {\n        rowIndex,\n        columnIndex,\n        rowId,\n        columnId,\n      },\n      rowData: {}, // Would need to get actual row data\n      columnDef: {} as ColumnDef, // Would need to get actual column definition\n    }\n  }\n\n  /**\n   * Setup event listeners for interaction contract\n   */\n  private setupEventListeners(): void {\n    // Register event emitter with interaction contract\n    this.interactionContract.registerEventEmitter((eventName, payload) => {\n      // Forward events to grid API\n      this.gridAPI.emit(eventName, payload)\n    })\n  }\n\n  /**\n   * Enable/disable keyboard navigation\n   */\n  setKeyboardNavigationEnabled(enabled: boolean): void {\n    this.keyboardNavEnabled = enabled\n  }\n\n  /**\n   * Enable/disable mouse interactions\n   */\n  setMouseInteractionsEnabled(enabled: boolean): void {\n    this.mouseNavEnabled = enabled\n  }\n\n  /**\n   * Get current focus position\n   */\n  getCurrentFocus(): CellPosition | null {\n    return this.currentFocus\n  }\n\n  /**\n   * Check if in edit mode\n   */\n  isInEditMode(): boolean {\n    return this.editMode\n  }\n\n  /**\n   * Cleanup and destroy handler\n   */\n  destroy(): void {\n    this.isDestroyed = true\n    this.currentFocus = null\n    this.editMode = false\n  }\n}\n\n/**\n * Factory function to create table interaction handler\n */\nexport function createTableInteractionHandler(\n  interactionContract: GridInteractionContract,\n  gridAPI: GridAPI\n): TableInteractionHandler {\n  return new TableInteractionHandler(interactionContract, gridAPI)\n}\n\nexport default createTableInteractionHandler\n","/**\n * Core Plugin Presets\n *\n * Pre-configured plugin combinations for common use cases.\n * Uses factory functions to create fresh plugin instances for each grid.\n *\n * IMPORTANT: Plugin instances MUST NOT be shared between multiple grid instances\n * as they contain internal state (e.g., currentColumns, sort config).\n * Always use the factory functions to create new instances.\n */\n\nimport { createSortingPlugin } from './sorting-plugin'\nimport { filteringPlugin } from './filtering-plugin'\nimport { selectionPlugin } from './selection-plugin'\nimport { columnManagementPlugin } from './column-management-plugin'\nimport { cellEditingPlugin } from './cell-editing-plugin'\nimport { keyboardNavigationPlugin } from './keyboard-navigation-plugin'\n\n/**\n * Plugin preset factory functions\n * These create fresh plugin instances for each grid to avoid state sharing\n */\nexport const pluginPresets = {\n  // Basic functionality with single-field sorting and keyboard navigation\n  get basic() {\n    return [\n      createSortingPlugin({ enableMultiSort: false }),\n      columnManagementPlugin,\n      filteringPlugin,\n      selectionPlugin,\n      keyboardNavigationPlugin\n    ]\n  },\n\n  // Enhanced functionality with multi-field sorting and full navigation\n  get enhanced() {\n    return [\n      createSortingPlugin({ enableMultiSort: true }),\n      filteringPlugin,\n      selectionPlugin,\n      columnManagementPlugin,\n      keyboardNavigationPlugin,\n    ]\n  },\n\n  // Full-featured preset for advanced use cases\n  get full() {\n    return [\n      createSortingPlugin({ enableMultiSort: true }),\n      filteringPlugin,\n      selectionPlugin,\n      columnManagementPlugin,\n      cellEditingPlugin,\n      keyboardNavigationPlugin,\n    ]\n  },\n\n  // Editing-focused preset for data entry scenarios\n  get editing() {\n    return [\n      createSortingPlugin({ enableMultiSort: false }),\n      filteringPlugin,\n      selectionPlugin,\n      cellEditingPlugin,\n      keyboardNavigationPlugin,\n    ]\n  },\n\n  // Accessibility-focused preset with comprehensive keyboard support\n  get accessible() {\n    return [\n      createSortingPlugin({ enableMultiSort: false }),\n      filteringPlugin,\n      selectionPlugin,\n      keyboardNavigationPlugin\n    ]\n  },\n}","/**\n * Core Plugins Collection\n *\n * Built-in plugins that provide essential grid functionality.\n * These plugins use only v1.0+ capabilities and serve as examples for plugin development.\n *\n * Available plugins:\n * - sortingPlugin: Unified sorting with configurable capabilities (v2.0)\n * - filteringPlugin: Data filtering capabilities\n * - selectionPlugin: Row selection management\n * - columnManagementPlugin: Column operations and state management\n * - cellEditingPlugin: In-cell editing capabilities\n * - keyboardNavigationPlugin: Comprehensive keyboard navigation with WCAG compliance\n */\n\nexport {\n  sortingPlugin,\n  createSortingPlugin,\n  basicSortingPlugin,\n  enhancedSortingPlugin,\n} from './sorting-plugin'\nexport { filteringPlugin } from './filtering-plugin'\nexport { selectionPlugin } from './selection-plugin'\nexport { columnManagementPlugin } from './column-management-plugin'\nexport { cellEditingPlugin } from './cell-editing-plugin'\nexport { keyboardNavigationPlugin } from './keyboard-navigation-plugin'\nexport { dragDropPlugin } from './drag-drop-plugin'\n\n// Core plugin bundle for convenience - using dynamic imports only\nexport const corePlugins = {\n  sorting: () => import('./sorting-plugin').then(m => m.sortingPlugin),\n  filtering: () => import('./filtering-plugin').then(m => m.filteringPlugin),\n  selection: () => import('./selection-plugin').then(m => m.selectionPlugin),\n  columnManagement: () => import('./column-management-plugin').then(m => m.columnManagementPlugin),\n  cellEditing: () => import('./cell-editing-plugin').then(m => m.cellEditingPlugin),\n  keyboardNavigation: () =>\n    import('./keyboard-navigation-plugin').then(m => m.keyboardNavigationPlugin),\n  dragDrop: () => import('./drag-drop-plugin').then(m => m.dragDropPlugin),\n}\n\n// Export plugin presets from separate file to avoid import conflicts\nexport { pluginPresets } from './presets'\n","<!--\n  CellTextEditor.vue - Text Input Editor (using HtInput)\n\n  Responsibilities:\n  1. Text input with focus management\n  2. Auto-sizing to cell dimensions\n  3. Escape/Enter key handling\n  4. Value synchronization with plugin\n-->\n\n<script setup lang=\"ts\">\nimport { ref, nextTick, onMounted, computed } from 'vue'\nimport type { GridAPI, ColumnDef, RowData, CellValue } from '../../../types'\nimport HtInput from '../../primitives/HtInput.vue'\n\n// Props\nconst props = defineProps<{\n  value: CellValue\n  row: RowData\n  column: ColumnDef\n  cellRect: DOMRect\n  gridAPI: GridAPI\n}>()\n\n// Emits\nconst emit = defineEmits<{\n  'update:value': [value: CellValue]\n  commit: []\n  cancel: []\n}>()\n\n// Local state\nconst inputRef = ref<InstanceType<typeof HtInput>>()\nconst localValue = ref<string>(String(props.value || ''))\n\n// Computed\nconst inputStyle = computed(() => ({\n  position: 'absolute' as const,\n  left: `${props.cellRect.left}px`,\n  top: `${props.cellRect.top}px`,\n  width: `${props.cellRect.width}px`,\n  height: `${props.cellRect.height}px`,\n  zIndex: 1000,\n}))\n\n// Methods\nconst handleInput = (value: string | number) => {\n  const stringValue = String(value)\n  localValue.value = stringValue\n  emit('update:value', stringValue)\n\n  // Update plugin state\n  if (props.gridAPI?.updateCellEditValue) {\n    props.gridAPI.updateCellEditValue(stringValue)\n  }\n}\n\nconst handleKeydown = (event: KeyboardEvent) => {\n  switch (event.key) {\n    case 'Enter':\n      if (!event.shiftKey) {\n        event.preventDefault()\n        event.stopPropagation()\n        emit('commit')\n      }\n      break\n    case 'Escape':\n      event.preventDefault()\n      event.stopPropagation()\n      emit('cancel')\n      break\n    case 'Tab':\n      event.preventDefault()\n      event.stopPropagation()\n      emit('commit')\n      break\n  }\n}\n\nconst handleBlur = () => {\n  // Auto-commit on blur unless explicitly cancelled\n  emit('commit')\n}\n\nconst focus = () => {\n  // Focus the native input inside HtInput\n  const inputElement = inputRef.value?.$el?.querySelector('input')\n  if (inputElement) {\n    inputElement.focus()\n    inputElement.select()\n  }\n}\n\n// Lifecycle\nonMounted(async () => {\n  await nextTick()\n  focus()\n})\n\n// Expose methods for parent\ndefineExpose({\n  focus,\n})\n</script>\n\n<template>\n  <div :style=\"inputStyle\" class=\"ht-cell-text-editor\">\n    <HtInput\n      ref=\"inputRef\"\n      :model-value=\"localValue\"\n      type=\"text\"\n      variant=\"default\"\n      size=\"md\"\n      :placeholder=\"column.placeholder || `Enter ${column.title}`\"\n      :maxlength=\"column.maxLength\"\n      autocomplete=\"off\"\n      class=\"ht-cell-editor-input\"\n      @update:model-value=\"handleInput\"\n      @keydown=\"handleKeydown\"\n      @blur=\"handleBlur\"\n    />\n  </div>\n</template>\n\n<style scoped>\n.ht-cell-text-editor {\n  /* Ensure proper absolute positioning */\n  display: block;\n}\n\n.ht-cell-editor-input {\n  /* Override default styles for cell editing */\n  width: 100%;\n  height: 100%;\n}\n\n/* Enhance focus ring for cell editing context */\n.ht-cell-editor-input :deep(input) {\n  border-width: 2px;\n  border-color: var(--ht-primary);\n  box-shadow: 0 0 0 1px var(--ht-primary);\n  border-radius: 4px;\n  height: 100%;\n}\n\n.ht-cell-editor-input :deep(input:focus) {\n  outline: none;\n  box-shadow: 0 0 0 2px var(--ht-primary);\n}\n</style>\n","<!--\n  CellTextEditor.vue - Text Input Editor (using HtInput)\n\n  Responsibilities:\n  1. Text input with focus management\n  2. Auto-sizing to cell dimensions\n  3. Escape/Enter key handling\n  4. Value synchronization with plugin\n-->\n\n<script setup lang=\"ts\">\nimport { ref, nextTick, onMounted, computed } from 'vue'\nimport type { GridAPI, ColumnDef, RowData, CellValue } from '../../../types'\nimport HtInput from '../../primitives/HtInput.vue'\n\n// Props\nconst props = defineProps<{\n  value: CellValue\n  row: RowData\n  column: ColumnDef\n  cellRect: DOMRect\n  gridAPI: GridAPI\n}>()\n\n// Emits\nconst emit = defineEmits<{\n  'update:value': [value: CellValue]\n  commit: []\n  cancel: []\n}>()\n\n// Local state\nconst inputRef = ref<InstanceType<typeof HtInput>>()\nconst localValue = ref<string>(String(props.value || ''))\n\n// Computed\nconst inputStyle = computed(() => ({\n  position: 'absolute' as const,\n  left: `${props.cellRect.left}px`,\n  top: `${props.cellRect.top}px`,\n  width: `${props.cellRect.width}px`,\n  height: `${props.cellRect.height}px`,\n  zIndex: 1000,\n}))\n\n// Methods\nconst handleInput = (value: string | number) => {\n  const stringValue = String(value)\n  localValue.value = stringValue\n  emit('update:value', stringValue)\n\n  // Update plugin state\n  if (props.gridAPI?.updateCellEditValue) {\n    props.gridAPI.updateCellEditValue(stringValue)\n  }\n}\n\nconst handleKeydown = (event: KeyboardEvent) => {\n  switch (event.key) {\n    case 'Enter':\n      if (!event.shiftKey) {\n        event.preventDefault()\n        event.stopPropagation()\n        emit('commit')\n      }\n      break\n    case 'Escape':\n      event.preventDefault()\n      event.stopPropagation()\n      emit('cancel')\n      break\n    case 'Tab':\n      event.preventDefault()\n      event.stopPropagation()\n      emit('commit')\n      break\n  }\n}\n\nconst handleBlur = () => {\n  // Auto-commit on blur unless explicitly cancelled\n  emit('commit')\n}\n\nconst focus = () => {\n  // Focus the native input inside HtInput\n  const inputElement = inputRef.value?.$el?.querySelector('input')\n  if (inputElement) {\n    inputElement.focus()\n    inputElement.select()\n  }\n}\n\n// Lifecycle\nonMounted(async () => {\n  await nextTick()\n  focus()\n})\n\n// Expose methods for parent\ndefineExpose({\n  focus,\n})\n</script>\n\n<template>\n  <div :style=\"inputStyle\" class=\"ht-cell-text-editor\">\n    <HtInput\n      ref=\"inputRef\"\n      :model-value=\"localValue\"\n      type=\"text\"\n      variant=\"default\"\n      size=\"md\"\n      :placeholder=\"column.placeholder || `Enter ${column.title}`\"\n      :maxlength=\"column.maxLength\"\n      autocomplete=\"off\"\n      class=\"ht-cell-editor-input\"\n      @update:model-value=\"handleInput\"\n      @keydown=\"handleKeydown\"\n      @blur=\"handleBlur\"\n    />\n  </div>\n</template>\n\n<style scoped>\n.ht-cell-text-editor {\n  /* Ensure proper absolute positioning */\n  display: block;\n}\n\n.ht-cell-editor-input {\n  /* Override default styles for cell editing */\n  width: 100%;\n  height: 100%;\n}\n\n/* Enhance focus ring for cell editing context */\n.ht-cell-editor-input :deep(input) {\n  border-width: 2px;\n  border-color: var(--ht-primary);\n  box-shadow: 0 0 0 1px var(--ht-primary);\n  border-radius: 4px;\n  height: 100%;\n}\n\n.ht-cell-editor-input :deep(input:focus) {\n  outline: none;\n  box-shadow: 0 0 0 2px var(--ht-primary);\n}\n</style>\n","<!--\n  CellNumberEditor.vue - Number Input Editor (using HtInput)\n\n  Responsibilities:\n  1. Number input with validation\n  2. Formatting and parsing\n  3. Min/max value constraints\n  4. Decimal place handling\n-->\n\n<script setup lang=\"ts\">\nimport { ref, nextTick, onMounted, computed, watch } from 'vue'\nimport type { GridAPI, ColumnDef, RowData, CellValue } from '../../../types'\nimport HtInput from '../../primitives/HtInput.vue'\n\n// Props\nconst props = defineProps<{\n  value: CellValue\n  row: RowData\n  column: ColumnDef\n  cellRect: DOMRect\n  gridAPI: GridAPI\n}>()\n\n// Emits\nconst emit = defineEmits<{\n  'update:value': [value: CellValue]\n  commit: []\n  cancel: []\n}>()\n\n// Local state\nconst inputRef = ref<InstanceType<typeof HtInput>>()\nconst localValue = ref<number | string>(formatNumber(props.value))\nconst hasError = ref(false)\nconst errorMessage = ref('')\n\n// Computed\nconst inputStyle = computed(() => ({\n  position: 'absolute' as const,\n  left: `${props.cellRect.left}px`,\n  top: `${props.cellRect.top}px`,\n  width: `${props.cellRect.width}px`,\n  height: `${props.cellRect.height}px`,\n  zIndex: 1000,\n}))\n\nconst inputState = computed(() => {\n  return hasError.value ? 'error' : 'default'\n})\n\n// Methods\nfunction formatNumber(value: any): number | string {\n  if (value === null || value === undefined || value === '') {\n    return ''\n  }\n\n  const num = Number(value)\n  if (isNaN(num)) {\n    return String(value)\n  }\n\n  // Apply decimal places if specified\n  if (props.column.decimals !== undefined) {\n    return Number(num.toFixed(props.column.decimals))\n  }\n\n  return num\n}\n\nfunction parseNumber(value: string | number): number | null {\n  if (value === '' || value === null || value === undefined) {\n    return null\n  }\n\n  const num = Number(value)\n  return isNaN(num) ? null : num\n}\n\nfunction validateNumber(value: string | number): { valid: boolean; message?: string } {\n  if (value === '') {\n    return { valid: true }\n  }\n\n  const num = Number(value)\n  if (isNaN(num)) {\n    return {\n      valid: false,\n      message: 'Must be a valid number',\n    }\n  }\n\n  if (props.column.min !== undefined && num < props.column.min) {\n    return {\n      valid: false,\n      message: `Must be at least ${props.column.min}`,\n    }\n  }\n\n  if (props.column.max !== undefined && num > props.column.max) {\n    return {\n      valid: false,\n      message: `Must be at most ${props.column.max}`,\n    }\n  }\n\n  return { valid: true }\n}\n\nconst handleInput = (value: string | number) => {\n  localValue.value = value\n\n  // Validate input\n  const validation = validateNumber(value)\n  hasError.value = !validation.valid\n  errorMessage.value = validation.message || ''\n\n  // Emit the parsed value\n  const parsedValue = parseNumber(value)\n  emit('update:value', parsedValue)\n\n  // Update plugin state\n  if (props.gridAPI?.updateCellEditValue) {\n    props.gridAPI.updateCellEditValue(parsedValue)\n  }\n}\n\nconst handleKeydown = (event: KeyboardEvent) => {\n  switch (event.key) {\n    case 'Enter':\n      if (!event.shiftKey) {\n        event.preventDefault()\n        event.stopPropagation()\n        if (!hasError.value) {\n          emit('commit')\n        }\n      }\n      break\n    case 'Escape':\n      event.preventDefault()\n      event.stopPropagation()\n      emit('cancel')\n      break\n    case 'Tab':\n      event.preventDefault()\n      event.stopPropagation()\n      if (!hasError.value) {\n        emit('commit')\n      }\n      break\n    case 'ArrowUp':\n      event.preventDefault()\n      incrementValue(1)\n      break\n    case 'ArrowDown':\n      event.preventDefault()\n      incrementValue(-1)\n      break\n  }\n}\n\nconst handleBlur = () => {\n  // Auto-commit on blur if no error\n  if (!hasError.value) {\n    emit('commit')\n  }\n}\n\nconst incrementValue = (delta: number) => {\n  const current = parseNumber(localValue.value) || 0\n  const step = props.column.step || 1\n  const newValue = current + delta * step\n\n  // Apply constraints\n  let constrainedValue = newValue\n  if (props.column.min !== undefined) {\n    constrainedValue = Math.max(constrainedValue, props.column.min)\n  }\n  if (props.column.max !== undefined) {\n    constrainedValue = Math.min(constrainedValue, props.column.max)\n  }\n\n  localValue.value = formatNumber(constrainedValue)\n  handleInput(localValue.value)\n}\n\nconst focus = () => {\n  // Focus the native input inside HtInput\n  const inputElement = inputRef.value?.$el?.querySelector('input')\n  if (inputElement) {\n    inputElement.focus()\n    inputElement.select()\n  }\n}\n\n// Watch for external value changes\nwatch(\n  () => props.value,\n  newValue => {\n    localValue.value = formatNumber(newValue)\n    hasError.value = false\n    errorMessage.value = ''\n  }\n)\n\n// Lifecycle\nonMounted(async () => {\n  await nextTick()\n  focus()\n})\n\n// Expose methods for parent\ndefineExpose({\n  focus,\n})\n</script>\n\n<template>\n  <div :style=\"inputStyle\" class=\"ht-cell-number-editor\">\n    <HtInput\n      ref=\"inputRef\"\n      :model-value=\"localValue\"\n      type=\"number\"\n      variant=\"default\"\n      size=\"md\"\n      :state=\"inputState\"\n      :placeholder=\"column.placeholder || `Enter ${column.title}`\"\n      autocomplete=\"off\"\n      class=\"ht-cell-editor-input\"\n      @update:model-value=\"handleInput\"\n      @keydown=\"handleKeydown\"\n      @blur=\"handleBlur\"\n    />\n\n    <!-- Error message -->\n    <div\n      v-if=\"hasError && errorMessage\"\n      class=\"absolute bg-[var(--ht-danger)] text-[var(--ht-text-inverse)] text-xs px-2 py-1 rounded shadow-lg z-[1001]\"\n      :style=\"{\n        left: `${cellRect.left}px`,\n        top: `${cellRect.bottom + 2}px`,\n        maxWidth: `${cellRect.width}px`,\n      }\"\n    >\n      {{ errorMessage }}\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.ht-cell-number-editor {\n  /* Ensure proper absolute positioning */\n  display: block;\n}\n\n.ht-cell-editor-input {\n  /* Override default styles for cell editing */\n  width: 100%;\n  height: 100%;\n}\n\n/* Enhance focus ring for cell editing context */\n.ht-cell-editor-input :deep(input) {\n  border-width: 2px;\n  border-color: var(--ht-primary);\n  box-shadow: 0 0 0 1px var(--ht-primary);\n  border-radius: 4px;\n  height: 100%;\n  text-align: right; /* Numbers align right */\n}\n\n.ht-cell-editor-input :deep(input:focus) {\n  outline: none;\n  box-shadow: 0 0 0 2px var(--ht-primary);\n}\n\n/* Remove number input spinners for cleaner look */\n.ht-cell-editor-input :deep(input::-webkit-outer-spin-button),\n.ht-cell-editor-input :deep(input::-webkit-inner-spin-button) {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n.ht-cell-editor-input :deep(input[type='number']) {\n  -moz-appearance: textfield;\n}\n</style>\n","<!--\n  CellNumberEditor.vue - Number Input Editor (using HtInput)\n\n  Responsibilities:\n  1. Number input with validation\n  2. Formatting and parsing\n  3. Min/max value constraints\n  4. Decimal place handling\n-->\n\n<script setup lang=\"ts\">\nimport { ref, nextTick, onMounted, computed, watch } from 'vue'\nimport type { GridAPI, ColumnDef, RowData, CellValue } from '../../../types'\nimport HtInput from '../../primitives/HtInput.vue'\n\n// Props\nconst props = defineProps<{\n  value: CellValue\n  row: RowData\n  column: ColumnDef\n  cellRect: DOMRect\n  gridAPI: GridAPI\n}>()\n\n// Emits\nconst emit = defineEmits<{\n  'update:value': [value: CellValue]\n  commit: []\n  cancel: []\n}>()\n\n// Local state\nconst inputRef = ref<InstanceType<typeof HtInput>>()\nconst localValue = ref<number | string>(formatNumber(props.value))\nconst hasError = ref(false)\nconst errorMessage = ref('')\n\n// Computed\nconst inputStyle = computed(() => ({\n  position: 'absolute' as const,\n  left: `${props.cellRect.left}px`,\n  top: `${props.cellRect.top}px`,\n  width: `${props.cellRect.width}px`,\n  height: `${props.cellRect.height}px`,\n  zIndex: 1000,\n}))\n\nconst inputState = computed(() => {\n  return hasError.value ? 'error' : 'default'\n})\n\n// Methods\nfunction formatNumber(value: any): number | string {\n  if (value === null || value === undefined || value === '') {\n    return ''\n  }\n\n  const num = Number(value)\n  if (isNaN(num)) {\n    return String(value)\n  }\n\n  // Apply decimal places if specified\n  if (props.column.decimals !== undefined) {\n    return Number(num.toFixed(props.column.decimals))\n  }\n\n  return num\n}\n\nfunction parseNumber(value: string | number): number | null {\n  if (value === '' || value === null || value === undefined) {\n    return null\n  }\n\n  const num = Number(value)\n  return isNaN(num) ? null : num\n}\n\nfunction validateNumber(value: string | number): { valid: boolean; message?: string } {\n  if (value === '') {\n    return { valid: true }\n  }\n\n  const num = Number(value)\n  if (isNaN(num)) {\n    return {\n      valid: false,\n      message: 'Must be a valid number',\n    }\n  }\n\n  if (props.column.min !== undefined && num < props.column.min) {\n    return {\n      valid: false,\n      message: `Must be at least ${props.column.min}`,\n    }\n  }\n\n  if (props.column.max !== undefined && num > props.column.max) {\n    return {\n      valid: false,\n      message: `Must be at most ${props.column.max}`,\n    }\n  }\n\n  return { valid: true }\n}\n\nconst handleInput = (value: string | number) => {\n  localValue.value = value\n\n  // Validate input\n  const validation = validateNumber(value)\n  hasError.value = !validation.valid\n  errorMessage.value = validation.message || ''\n\n  // Emit the parsed value\n  const parsedValue = parseNumber(value)\n  emit('update:value', parsedValue)\n\n  // Update plugin state\n  if (props.gridAPI?.updateCellEditValue) {\n    props.gridAPI.updateCellEditValue(parsedValue)\n  }\n}\n\nconst handleKeydown = (event: KeyboardEvent) => {\n  switch (event.key) {\n    case 'Enter':\n      if (!event.shiftKey) {\n        event.preventDefault()\n        event.stopPropagation()\n        if (!hasError.value) {\n          emit('commit')\n        }\n      }\n      break\n    case 'Escape':\n      event.preventDefault()\n      event.stopPropagation()\n      emit('cancel')\n      break\n    case 'Tab':\n      event.preventDefault()\n      event.stopPropagation()\n      if (!hasError.value) {\n        emit('commit')\n      }\n      break\n    case 'ArrowUp':\n      event.preventDefault()\n      incrementValue(1)\n      break\n    case 'ArrowDown':\n      event.preventDefault()\n      incrementValue(-1)\n      break\n  }\n}\n\nconst handleBlur = () => {\n  // Auto-commit on blur if no error\n  if (!hasError.value) {\n    emit('commit')\n  }\n}\n\nconst incrementValue = (delta: number) => {\n  const current = parseNumber(localValue.value) || 0\n  const step = props.column.step || 1\n  const newValue = current + delta * step\n\n  // Apply constraints\n  let constrainedValue = newValue\n  if (props.column.min !== undefined) {\n    constrainedValue = Math.max(constrainedValue, props.column.min)\n  }\n  if (props.column.max !== undefined) {\n    constrainedValue = Math.min(constrainedValue, props.column.max)\n  }\n\n  localValue.value = formatNumber(constrainedValue)\n  handleInput(localValue.value)\n}\n\nconst focus = () => {\n  // Focus the native input inside HtInput\n  const inputElement = inputRef.value?.$el?.querySelector('input')\n  if (inputElement) {\n    inputElement.focus()\n    inputElement.select()\n  }\n}\n\n// Watch for external value changes\nwatch(\n  () => props.value,\n  newValue => {\n    localValue.value = formatNumber(newValue)\n    hasError.value = false\n    errorMessage.value = ''\n  }\n)\n\n// Lifecycle\nonMounted(async () => {\n  await nextTick()\n  focus()\n})\n\n// Expose methods for parent\ndefineExpose({\n  focus,\n})\n</script>\n\n<template>\n  <div :style=\"inputStyle\" class=\"ht-cell-number-editor\">\n    <HtInput\n      ref=\"inputRef\"\n      :model-value=\"localValue\"\n      type=\"number\"\n      variant=\"default\"\n      size=\"md\"\n      :state=\"inputState\"\n      :placeholder=\"column.placeholder || `Enter ${column.title}`\"\n      autocomplete=\"off\"\n      class=\"ht-cell-editor-input\"\n      @update:model-value=\"handleInput\"\n      @keydown=\"handleKeydown\"\n      @blur=\"handleBlur\"\n    />\n\n    <!-- Error message -->\n    <div\n      v-if=\"hasError && errorMessage\"\n      class=\"absolute bg-[var(--ht-danger)] text-[var(--ht-text-inverse)] text-xs px-2 py-1 rounded shadow-lg z-[1001]\"\n      :style=\"{\n        left: `${cellRect.left}px`,\n        top: `${cellRect.bottom + 2}px`,\n        maxWidth: `${cellRect.width}px`,\n      }\"\n    >\n      {{ errorMessage }}\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.ht-cell-number-editor {\n  /* Ensure proper absolute positioning */\n  display: block;\n}\n\n.ht-cell-editor-input {\n  /* Override default styles for cell editing */\n  width: 100%;\n  height: 100%;\n}\n\n/* Enhance focus ring for cell editing context */\n.ht-cell-editor-input :deep(input) {\n  border-width: 2px;\n  border-color: var(--ht-primary);\n  box-shadow: 0 0 0 1px var(--ht-primary);\n  border-radius: 4px;\n  height: 100%;\n  text-align: right; /* Numbers align right */\n}\n\n.ht-cell-editor-input :deep(input:focus) {\n  outline: none;\n  box-shadow: 0 0 0 2px var(--ht-primary);\n}\n\n/* Remove number input spinners for cleaner look */\n.ht-cell-editor-input :deep(input::-webkit-outer-spin-button),\n.ht-cell-editor-input :deep(input::-webkit-inner-spin-button) {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n.ht-cell-editor-input :deep(input[type='number']) {\n  -moz-appearance: textfield;\n}\n</style>\n","<!--\n  CellSelectEditor.vue - Select/Dropdown Editor\n\n  Responsibilities:\n  1. Dropdown selection with options\n  2. Keyboard navigation (arrow keys, Enter, Escape)\n  3. Search/filter functionality (optional)\n  4. Custom option rendering\n-->\n\n<script setup lang=\"ts\">\nimport { ref, nextTick, onMounted, computed, watch } from 'vue'\nimport type { GridAPI, ColumnDef, RowData, CellValue } from '../../../types'\n\ninterface SelectOption {\n  value: CellValue\n  label: string\n  disabled?: boolean\n}\n\n// Props\nconst props = defineProps<{\n  value: CellValue\n  row: RowData\n  column: ColumnDef\n  cellRect: DOMRect\n  gridAPI: GridAPI\n}>()\n\n// Emits\nconst emit = defineEmits<{\n  'update:value': [value: CellValue]\n  commit: []\n  cancel: []\n}>()\n\n// Local state\nconst selectRef = ref<HTMLSelectElement>()\nconst dropdownRef = ref<HTMLDivElement>()\nconst localValue = ref(props.value)\nconst isOpen = ref(false)\nconst searchQuery = ref('')\nconst focusedIndex = ref(-1)\n\n// Computed\nconst selectStyle = computed(() => ({\n  position: 'absolute' as const,\n  left: `${props.cellRect.left}px`,\n  top: `${props.cellRect.top}px`,\n  width: `${props.cellRect.width}px`,\n  minWidth: `${Math.max(props.cellRect.width, 150)}px`,\n  zIndex: 1000,\n}))\n\nconst dropdownStyle = computed(() => ({\n  position: 'absolute' as const,\n  left: `${props.cellRect.left}px`,\n  top: `${props.cellRect.bottom}px`,\n  width: `${Math.max(props.cellRect.width, 150)}px`,\n  maxHeight: '200px',\n  zIndex: 1001,\n}))\n\nconst options = computed((): SelectOption[] => {\n  if (!props.column.options) {\n    return []\n  }\n\n  // Support both simple arrays and option objects\n  return props.column.options.map((opt: unknown) => {\n    if (typeof opt === 'string' || typeof opt === 'number') {\n      return { value: opt, label: String(opt) }\n    }\n    const optObj = opt as { value: CellValue; label?: string; disabled?: boolean }\n    return {\n      value: optObj.value,\n      label: optObj.label || String(optObj.value),\n      disabled: optObj.disabled || false,\n    }\n  })\n})\n\nconst filteredOptions = computed(() => {\n  if (!searchQuery.value) {\n    return options.value\n  }\n\n  const query = searchQuery.value.toLowerCase()\n  return options.value.filter(\n    opt => opt.label.toLowerCase().includes(query) || String(opt.value).toLowerCase().includes(query)\n  )\n})\n\nconst selectedOption = computed(() => {\n  return options.value.find(opt => opt.value === localValue.value)\n})\n\nconst displayValue = computed(() => {\n  return selectedOption.value?.label || String(localValue.value || '')\n})\n\nconst selectClasses = computed(() => [\n  'ht-cell-editor',\n  'ht-select-editor',\n  'px-3 py-1',\n  'border-2 border-[var(--ht-primary)]',\n  'bg-[var(--ht-bg)]',\n  'text-[var(--ht-text)]',\n  'text-sm',\n  'outline-none',\n  'rounded',\n  'shadow-md',\n  'cursor-pointer',\n  'flex items-center justify-between',\n])\n\nconst dropdownClasses = computed(() => [\n  'ht-select-dropdown',\n  'border border-[var(--ht-border)]',\n  'bg-[var(--ht-bg)]',\n  'rounded',\n  'shadow-lg',\n  'overflow-hidden',\n])\n\n// Methods\nconst openDropdown = () => {\n  isOpen.value = true\n  searchQuery.value = ''\n  focusedIndex.value = filteredOptions.value.findIndex(opt => opt.value === localValue.value)\n  if (focusedIndex.value === -1 && filteredOptions.value.length > 0) {\n    focusedIndex.value = 0\n  }\n}\n\nconst closeDropdown = () => {\n  isOpen.value = false\n  focusedIndex.value = -1\n  searchQuery.value = ''\n}\n\nconst selectOption = (option: SelectOption) => {\n  if (option.disabled) return\n\n  localValue.value = option.value\n  emit('update:value', option.value)\n\n  // Update plugin state\n  if (props.gridAPI?.updateCellEditValue) {\n    props.gridAPI.updateCellEditValue(option.value)\n  }\n\n  closeDropdown()\n  emit('commit')\n}\n\nconst handleKeydown = (event: KeyboardEvent) => {\n  switch (event.key) {\n    case 'Enter':\n      event.preventDefault()\n      event.stopPropagation()\n      if (isOpen.value && focusedIndex.value >= 0) {\n        const option = filteredOptions.value[focusedIndex.value]\n        if (option && !option.disabled) {\n          selectOption(option)\n        }\n      } else if (!isOpen.value) {\n        openDropdown()\n      }\n      break\n\n    case 'Escape':\n      event.preventDefault()\n      event.stopPropagation()\n      if (isOpen.value) {\n        closeDropdown()\n      } else {\n        emit('cancel')\n      }\n      break\n\n    case 'Tab':\n      event.preventDefault()\n      event.stopPropagation()\n      closeDropdown()\n      emit('commit')\n      break\n\n    case 'ArrowDown':\n      event.preventDefault()\n      if (!isOpen.value) {\n        openDropdown()\n      } else {\n        focusedIndex.value = Math.min(focusedIndex.value + 1, filteredOptions.value.length - 1)\n        scrollToOption(focusedIndex.value)\n      }\n      break\n\n    case 'ArrowUp':\n      event.preventDefault()\n      if (isOpen.value) {\n        focusedIndex.value = Math.max(focusedIndex.value - 1, 0)\n        scrollToOption(focusedIndex.value)\n      }\n      break\n\n    case 'Space':\n      if (!isOpen.value) {\n        event.preventDefault()\n        openDropdown()\n      }\n      break\n\n    default:\n      // Type to search\n      if (event.key.length === 1 && isOpen.value) {\n        searchQuery.value += event.key\n        // Find first matching option\n        const matchIndex = filteredOptions.value.findIndex(opt =>\n          opt.label.toLowerCase().startsWith(searchQuery.value.toLowerCase())\n        )\n        if (matchIndex >= 0) {\n          focusedIndex.value = matchIndex\n          scrollToOption(focusedIndex.value)\n        }\n      }\n      break\n  }\n}\n\nconst scrollToOption = (index: number) => {\n  if (dropdownRef.value) {\n    const optionElements = dropdownRef.value.querySelectorAll('.ht-select-option')\n    const optionElement = optionElements[index] as HTMLElement\n    if (optionElement) {\n      optionElement.scrollIntoView({ block: 'nearest' })\n    }\n  }\n}\n\nconst handleClick = () => {\n  if (isOpen.value) {\n    closeDropdown()\n  } else {\n    openDropdown()\n  }\n}\n\nconst handleClickOutside = (event: MouseEvent) => {\n  const target = event.target as HTMLElement\n  if (\n    selectRef.value &&\n    !selectRef.value.contains(target) &&\n    dropdownRef.value &&\n    !dropdownRef.value.contains(target)\n  ) {\n    closeDropdown()\n    emit('commit')\n  }\n}\n\nconst focus = () => {\n  if (selectRef.value) {\n    selectRef.value.focus()\n  }\n}\n\n// Watch for external value changes\nwatch(\n  () => props.value,\n  newValue => {\n    localValue.value = newValue\n  }\n)\n\n// Lifecycle\nonMounted(async () => {\n  await nextTick()\n  focus()\n  document.addEventListener('mousedown', handleClickOutside)\n})\n\n// Cleanup\nconst cleanup = () => {\n  document.removeEventListener('mousedown', handleClickOutside)\n}\n\n// Expose methods for parent\ndefineExpose({\n  focus,\n  cleanup,\n})\n</script>\n\n<template>\n  <div class=\"ht-select-container\">\n    <!-- Select trigger -->\n    <div\n      ref=\"selectRef\"\n      :class=\"selectClasses\"\n      :style=\"selectStyle\"\n      tabindex=\"0\"\n      role=\"combobox\"\n      :aria-expanded=\"isOpen\"\n      :aria-haspopup=\"true\"\n      @click=\"handleClick\"\n      @keydown=\"handleKeydown\"\n    >\n      <span class=\"truncate flex-1\">{{ displayValue }}</span>\n      <svg\n        class=\"w-4 h-4 ml-2 flex-shrink-0 transform transition-transform\"\n        :class=\"{ 'rotate-180': isOpen }\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        viewBox=\"0 0 24 24\"\n      >\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\" />\n      </svg>\n    </div>\n\n    <!-- Dropdown -->\n    <div v-if=\"isOpen\" ref=\"dropdownRef\" :class=\"dropdownClasses\" :style=\"dropdownStyle\" role=\"listbox\">\n      <!-- Search input (if searchable) -->\n      <div v-if=\"column.searchable\" class=\"p-2 border-b border-[var(--ht-border)]\">\n        <input\n          v-model=\"searchQuery\"\n          type=\"text\"\n          class=\"w-full px-2 py-1 text-sm border border-[var(--ht-border)] rounded outline-none\"\n          placeholder=\"Search options...\"\n          @keydown.stop\n        />\n      </div>\n\n      <!-- Options list -->\n      <div class=\"max-h-40 overflow-y-auto\">\n        <div\n          v-for=\"(option, index) in filteredOptions\"\n          :key=\"`${option.value}-${index}`\"\n          class=\"ht-select-option px-3 py-2 text-sm cursor-pointer hover:bg-[var(--ht-cell-hover)] flex items-center justify-between\"\n          :class=\"{\n            'bg-[var(--ht-primary)] text-[var(--ht-text-inverse)]': index === focusedIndex,\n            'text-[var(--ht-text-muted)] cursor-not-allowed': option.disabled,\n            'bg-[var(--ht-cell-selected)]': option.value === localValue && index !== focusedIndex,\n          }\"\n          role=\"option\"\n          :aria-selected=\"option.value === localValue\"\n          @click=\"selectOption(option)\"\n        >\n          <span class=\"truncate\">{{ option.label }}</span>\n          <svg\n            v-if=\"option.value === localValue\"\n            class=\"w-4 h-4 ml-2 flex-shrink-0\"\n            fill=\"currentColor\"\n            viewBox=\"0 0 20 20\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n              clip-rule=\"evenodd\"\n            />\n          </svg>\n        </div>\n\n        <!-- No options message -->\n        <div v-if=\"filteredOptions.length === 0\" class=\"px-3 py-2 text-sm text-[var(--ht-text-muted)] text-center\">\n          No options available\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.ht-select-editor:focus {\n  box-shadow: 0 0 0 1px var(--ht-primary);\n}\n\n.ht-select-dropdown {\n  animation: slideDown 0.1s ease-out;\n}\n\n@keyframes slideDown {\n  from {\n    opacity: 0;\n    transform: translateY(-5px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* positioning handled by ht-cell-editor utility */\n\n/* Option hover effects */\n.ht-select-option:not(.text-muted):hover {\n  background-color: var(--ht-cell-hover);\n}\n\n/* Scrollbar styling for options */\n.ht-select-dropdown .max-h-40::-webkit-scrollbar {\n  width: 6px;\n}\n\n.ht-select-dropdown .max-h-40::-webkit-scrollbar-track {\n  background: var(--ht-bg);\n}\n\n.ht-select-dropdown .max-h-40::-webkit-scrollbar-thumb {\n  background: var(--ht-border);\n  border-radius: 3px;\n}\n\n.ht-select-dropdown .max-h-40::-webkit-scrollbar-thumb:hover {\n  background: var(--ht-text-muted);\n}\n</style>\n","<!--\n  CellSelectEditor.vue - Select/Dropdown Editor\n\n  Responsibilities:\n  1. Dropdown selection with options\n  2. Keyboard navigation (arrow keys, Enter, Escape)\n  3. Search/filter functionality (optional)\n  4. Custom option rendering\n-->\n\n<script setup lang=\"ts\">\nimport { ref, nextTick, onMounted, computed, watch } from 'vue'\nimport type { GridAPI, ColumnDef, RowData, CellValue } from '../../../types'\n\ninterface SelectOption {\n  value: CellValue\n  label: string\n  disabled?: boolean\n}\n\n// Props\nconst props = defineProps<{\n  value: CellValue\n  row: RowData\n  column: ColumnDef\n  cellRect: DOMRect\n  gridAPI: GridAPI\n}>()\n\n// Emits\nconst emit = defineEmits<{\n  'update:value': [value: CellValue]\n  commit: []\n  cancel: []\n}>()\n\n// Local state\nconst selectRef = ref<HTMLSelectElement>()\nconst dropdownRef = ref<HTMLDivElement>()\nconst localValue = ref(props.value)\nconst isOpen = ref(false)\nconst searchQuery = ref('')\nconst focusedIndex = ref(-1)\n\n// Computed\nconst selectStyle = computed(() => ({\n  position: 'absolute' as const,\n  left: `${props.cellRect.left}px`,\n  top: `${props.cellRect.top}px`,\n  width: `${props.cellRect.width}px`,\n  minWidth: `${Math.max(props.cellRect.width, 150)}px`,\n  zIndex: 1000,\n}))\n\nconst dropdownStyle = computed(() => ({\n  position: 'absolute' as const,\n  left: `${props.cellRect.left}px`,\n  top: `${props.cellRect.bottom}px`,\n  width: `${Math.max(props.cellRect.width, 150)}px`,\n  maxHeight: '200px',\n  zIndex: 1001,\n}))\n\nconst options = computed((): SelectOption[] => {\n  if (!props.column.options) {\n    return []\n  }\n\n  // Support both simple arrays and option objects\n  return props.column.options.map((opt: unknown) => {\n    if (typeof opt === 'string' || typeof opt === 'number') {\n      return { value: opt, label: String(opt) }\n    }\n    const optObj = opt as { value: CellValue; label?: string; disabled?: boolean }\n    return {\n      value: optObj.value,\n      label: optObj.label || String(optObj.value),\n      disabled: optObj.disabled || false,\n    }\n  })\n})\n\nconst filteredOptions = computed(() => {\n  if (!searchQuery.value) {\n    return options.value\n  }\n\n  const query = searchQuery.value.toLowerCase()\n  return options.value.filter(\n    opt => opt.label.toLowerCase().includes(query) || String(opt.value).toLowerCase().includes(query)\n  )\n})\n\nconst selectedOption = computed(() => {\n  return options.value.find(opt => opt.value === localValue.value)\n})\n\nconst displayValue = computed(() => {\n  return selectedOption.value?.label || String(localValue.value || '')\n})\n\nconst selectClasses = computed(() => [\n  'ht-cell-editor',\n  'ht-select-editor',\n  'px-3 py-1',\n  'border-2 border-[var(--ht-primary)]',\n  'bg-[var(--ht-bg)]',\n  'text-[var(--ht-text)]',\n  'text-sm',\n  'outline-none',\n  'rounded',\n  'shadow-md',\n  'cursor-pointer',\n  'flex items-center justify-between',\n])\n\nconst dropdownClasses = computed(() => [\n  'ht-select-dropdown',\n  'border border-[var(--ht-border)]',\n  'bg-[var(--ht-bg)]',\n  'rounded',\n  'shadow-lg',\n  'overflow-hidden',\n])\n\n// Methods\nconst openDropdown = () => {\n  isOpen.value = true\n  searchQuery.value = ''\n  focusedIndex.value = filteredOptions.value.findIndex(opt => opt.value === localValue.value)\n  if (focusedIndex.value === -1 && filteredOptions.value.length > 0) {\n    focusedIndex.value = 0\n  }\n}\n\nconst closeDropdown = () => {\n  isOpen.value = false\n  focusedIndex.value = -1\n  searchQuery.value = ''\n}\n\nconst selectOption = (option: SelectOption) => {\n  if (option.disabled) return\n\n  localValue.value = option.value\n  emit('update:value', option.value)\n\n  // Update plugin state\n  if (props.gridAPI?.updateCellEditValue) {\n    props.gridAPI.updateCellEditValue(option.value)\n  }\n\n  closeDropdown()\n  emit('commit')\n}\n\nconst handleKeydown = (event: KeyboardEvent) => {\n  switch (event.key) {\n    case 'Enter':\n      event.preventDefault()\n      event.stopPropagation()\n      if (isOpen.value && focusedIndex.value >= 0) {\n        const option = filteredOptions.value[focusedIndex.value]\n        if (option && !option.disabled) {\n          selectOption(option)\n        }\n      } else if (!isOpen.value) {\n        openDropdown()\n      }\n      break\n\n    case 'Escape':\n      event.preventDefault()\n      event.stopPropagation()\n      if (isOpen.value) {\n        closeDropdown()\n      } else {\n        emit('cancel')\n      }\n      break\n\n    case 'Tab':\n      event.preventDefault()\n      event.stopPropagation()\n      closeDropdown()\n      emit('commit')\n      break\n\n    case 'ArrowDown':\n      event.preventDefault()\n      if (!isOpen.value) {\n        openDropdown()\n      } else {\n        focusedIndex.value = Math.min(focusedIndex.value + 1, filteredOptions.value.length - 1)\n        scrollToOption(focusedIndex.value)\n      }\n      break\n\n    case 'ArrowUp':\n      event.preventDefault()\n      if (isOpen.value) {\n        focusedIndex.value = Math.max(focusedIndex.value - 1, 0)\n        scrollToOption(focusedIndex.value)\n      }\n      break\n\n    case 'Space':\n      if (!isOpen.value) {\n        event.preventDefault()\n        openDropdown()\n      }\n      break\n\n    default:\n      // Type to search\n      if (event.key.length === 1 && isOpen.value) {\n        searchQuery.value += event.key\n        // Find first matching option\n        const matchIndex = filteredOptions.value.findIndex(opt =>\n          opt.label.toLowerCase().startsWith(searchQuery.value.toLowerCase())\n        )\n        if (matchIndex >= 0) {\n          focusedIndex.value = matchIndex\n          scrollToOption(focusedIndex.value)\n        }\n      }\n      break\n  }\n}\n\nconst scrollToOption = (index: number) => {\n  if (dropdownRef.value) {\n    const optionElements = dropdownRef.value.querySelectorAll('.ht-select-option')\n    const optionElement = optionElements[index] as HTMLElement\n    if (optionElement) {\n      optionElement.scrollIntoView({ block: 'nearest' })\n    }\n  }\n}\n\nconst handleClick = () => {\n  if (isOpen.value) {\n    closeDropdown()\n  } else {\n    openDropdown()\n  }\n}\n\nconst handleClickOutside = (event: MouseEvent) => {\n  const target = event.target as HTMLElement\n  if (\n    selectRef.value &&\n    !selectRef.value.contains(target) &&\n    dropdownRef.value &&\n    !dropdownRef.value.contains(target)\n  ) {\n    closeDropdown()\n    emit('commit')\n  }\n}\n\nconst focus = () => {\n  if (selectRef.value) {\n    selectRef.value.focus()\n  }\n}\n\n// Watch for external value changes\nwatch(\n  () => props.value,\n  newValue => {\n    localValue.value = newValue\n  }\n)\n\n// Lifecycle\nonMounted(async () => {\n  await nextTick()\n  focus()\n  document.addEventListener('mousedown', handleClickOutside)\n})\n\n// Cleanup\nconst cleanup = () => {\n  document.removeEventListener('mousedown', handleClickOutside)\n}\n\n// Expose methods for parent\ndefineExpose({\n  focus,\n  cleanup,\n})\n</script>\n\n<template>\n  <div class=\"ht-select-container\">\n    <!-- Select trigger -->\n    <div\n      ref=\"selectRef\"\n      :class=\"selectClasses\"\n      :style=\"selectStyle\"\n      tabindex=\"0\"\n      role=\"combobox\"\n      :aria-expanded=\"isOpen\"\n      :aria-haspopup=\"true\"\n      @click=\"handleClick\"\n      @keydown=\"handleKeydown\"\n    >\n      <span class=\"truncate flex-1\">{{ displayValue }}</span>\n      <svg\n        class=\"w-4 h-4 ml-2 flex-shrink-0 transform transition-transform\"\n        :class=\"{ 'rotate-180': isOpen }\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        viewBox=\"0 0 24 24\"\n      >\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\" />\n      </svg>\n    </div>\n\n    <!-- Dropdown -->\n    <div v-if=\"isOpen\" ref=\"dropdownRef\" :class=\"dropdownClasses\" :style=\"dropdownStyle\" role=\"listbox\">\n      <!-- Search input (if searchable) -->\n      <div v-if=\"column.searchable\" class=\"p-2 border-b border-[var(--ht-border)]\">\n        <input\n          v-model=\"searchQuery\"\n          type=\"text\"\n          class=\"w-full px-2 py-1 text-sm border border-[var(--ht-border)] rounded outline-none\"\n          placeholder=\"Search options...\"\n          @keydown.stop\n        />\n      </div>\n\n      <!-- Options list -->\n      <div class=\"max-h-40 overflow-y-auto\">\n        <div\n          v-for=\"(option, index) in filteredOptions\"\n          :key=\"`${option.value}-${index}`\"\n          class=\"ht-select-option px-3 py-2 text-sm cursor-pointer hover:bg-[var(--ht-cell-hover)] flex items-center justify-between\"\n          :class=\"{\n            'bg-[var(--ht-primary)] text-[var(--ht-text-inverse)]': index === focusedIndex,\n            'text-[var(--ht-text-muted)] cursor-not-allowed': option.disabled,\n            'bg-[var(--ht-cell-selected)]': option.value === localValue && index !== focusedIndex,\n          }\"\n          role=\"option\"\n          :aria-selected=\"option.value === localValue\"\n          @click=\"selectOption(option)\"\n        >\n          <span class=\"truncate\">{{ option.label }}</span>\n          <svg\n            v-if=\"option.value === localValue\"\n            class=\"w-4 h-4 ml-2 flex-shrink-0\"\n            fill=\"currentColor\"\n            viewBox=\"0 0 20 20\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n              clip-rule=\"evenodd\"\n            />\n          </svg>\n        </div>\n\n        <!-- No options message -->\n        <div v-if=\"filteredOptions.length === 0\" class=\"px-3 py-2 text-sm text-[var(--ht-text-muted)] text-center\">\n          No options available\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.ht-select-editor:focus {\n  box-shadow: 0 0 0 1px var(--ht-primary);\n}\n\n.ht-select-dropdown {\n  animation: slideDown 0.1s ease-out;\n}\n\n@keyframes slideDown {\n  from {\n    opacity: 0;\n    transform: translateY(-5px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* positioning handled by ht-cell-editor utility */\n\n/* Option hover effects */\n.ht-select-option:not(.text-muted):hover {\n  background-color: var(--ht-cell-hover);\n}\n\n/* Scrollbar styling for options */\n.ht-select-dropdown .max-h-40::-webkit-scrollbar {\n  width: 6px;\n}\n\n.ht-select-dropdown .max-h-40::-webkit-scrollbar-track {\n  background: var(--ht-bg);\n}\n\n.ht-select-dropdown .max-h-40::-webkit-scrollbar-thumb {\n  background: var(--ht-border);\n  border-radius: 3px;\n}\n\n.ht-select-dropdown .max-h-40::-webkit-scrollbar-thumb:hover {\n  background: var(--ht-text-muted);\n}\n</style>\n","<!--\n  CellDateEditor.vue - Date Input Editor\n\n  Responsibilities:\n  1. Date input with calendar picker\n  2. Date formatting and parsing\n  3. Min/max date constraints\n  4. Locale-aware date handling\n-->\n\n<script setup lang=\"ts\">\nimport { ref, nextTick, onMounted, computed, watch } from 'vue'\nimport type { GridAPI, ColumnDef, RowData, CellValue } from '../../../types'\nimport HtButton from '../../primitives/HtButton.vue'\n\n// Props\nconst props = defineProps<{\n  value: CellValue\n  row: RowData\n  column: ColumnDef\n  cellRect: DOMRect\n  gridAPI: GridAPI\n}>()\n\n// Emits\nconst emit = defineEmits<{\n  'update:value': [value: CellValue]\n  commit: []\n  cancel: []\n}>()\n\n// Helper function to safely convert CellValue to date input format\nfunction safeFormatDateForInput(value: CellValue): string {\n  // Only pass valid date types to formatDateForInput\n  if (value instanceof Date || typeof value === 'string' || value === null || value === undefined) {\n    return formatDateForInput(value)\n  }\n  // For other types (number, boolean), return empty string\n  return ''\n}\n\n// Local state\nconst inputRef = ref<HTMLInputElement>()\nconst localValue = ref<string>(safeFormatDateForInput(props.value))\nconst hasError = ref(false)\nconst errorMessage = ref('')\n\n// Computed\nconst inputStyle = computed(() => ({\n  position: 'absolute' as const,\n  left: `${props.cellRect.left}px`,\n  top: `${props.cellRect.top}px`,\n  width: `${props.cellRect.width}px`,\n  height: `${props.cellRect.height}px`,\n  zIndex: 1000,\n}))\n\nconst inputClasses = computed(() => [\n  'ht-cell-editor',\n  'ht-date-editor',\n  'px-3 py-1',\n  'border-2',\n  hasError.value ? 'border-[var(--ht-danger)]' : 'border-[var(--ht-primary)]',\n  'bg-[var(--ht-bg)]',\n  'text-[var(--ht-text)]',\n  'text-sm',\n  'outline-none',\n  'rounded',\n  'shadow-md',\n])\n\nconst inputProps = computed(() => {\n  const baseProps = {\n    type: 'date',\n    autocomplete: 'off',\n  }\n\n  if (props.column.minDate) {\n    ;(baseProps as Record<string, unknown>).min = formatDateForInput(props.column.minDate)\n  }\n\n  if (props.column.maxDate) {\n    ;(baseProps as Record<string, unknown>).max = formatDateForInput(props.column.maxDate)\n  }\n\n  return baseProps\n})\n\n// Methods\nfunction formatDateForInput(value: Date | string | null | undefined): string {\n  if (!value) return ''\n\n  try {\n    const date = value instanceof Date ? value : new Date(value)\n    if (isNaN(date.getTime())) return ''\n\n    // Format as YYYY-MM-DD for input[type=\"date\"]\n    return date.toISOString().split('T')[0] || ''\n  } catch {\n    return ''\n  }\n}\n\nfunction parseDate(value: string): Date | null {\n  if (!value) return null\n\n  try {\n    const date = new Date(`${value}T00:00:00`)\n    return isNaN(date.getTime()) ? null : date\n  } catch {\n    return null\n  }\n}\n\nfunction formatDateForDisplay(date: Date | null): string {\n  if (!date) return ''\n\n  try {\n    const locale = props.column.locale || 'en-US'\n    const options = props.column.dateOptions || {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n    }\n\n    return date.toLocaleDateString(locale, options)\n  } catch {\n    return date.toISOString().split('T')[0] || ''\n  }\n}\n\nfunction validateDate(value: string): { valid: boolean; message?: string } {\n  if (!value) {\n    return { valid: true }\n  }\n\n  const date = parseDate(value)\n  if (!date) {\n    return {\n      valid: false,\n      message: 'Invalid date format',\n    }\n  }\n\n  // Check min date constraint\n  if (props.column.minDate) {\n    const minDate = new Date(props.column.minDate)\n    if (date < minDate) {\n      return {\n        valid: false,\n        message: `Date must be after ${formatDateForDisplay(minDate)}`,\n      }\n    }\n  }\n\n  // Check max date constraint\n  if (props.column.maxDate) {\n    const maxDate = new Date(props.column.maxDate)\n    if (date > maxDate) {\n      return {\n        valid: false,\n        message: `Date must be before ${formatDateForDisplay(maxDate)}`,\n      }\n    }\n  }\n\n  return { valid: true }\n}\n\nconst handleInput = (event: Event) => {\n  const target = event.target as HTMLInputElement\n  localValue.value = target.value\n\n  // Validate input\n  const validation = validateDate(target.value)\n  hasError.value = !validation.valid\n  errorMessage.value = validation.message || ''\n\n  // Emit the parsed value\n  const parsedValue = parseDate(target.value)\n  emit('update:value', parsedValue)\n\n  // Update plugin state\n  if (props.gridAPI?.updateCellEditValue) {\n    props.gridAPI.updateCellEditValue(parsedValue)\n  }\n}\n\nconst handleKeydown = (event: KeyboardEvent) => {\n  switch (event.key) {\n    case 'Enter':\n      if (!event.shiftKey) {\n        event.preventDefault()\n        event.stopPropagation()\n        if (!hasError.value) {\n          emit('commit')\n        }\n      }\n      break\n    case 'Escape':\n      event.preventDefault()\n      event.stopPropagation()\n      emit('cancel')\n      break\n    case 'Tab':\n      event.preventDefault()\n      event.stopPropagation()\n      if (!hasError.value) {\n        emit('commit')\n      }\n      break\n    case 'ArrowDown':\n    case 'ArrowUp':\n      // Let browser handle date navigation\n      break\n  }\n}\n\nconst handleBlur = () => {\n  // Auto-commit on blur if no error\n  if (!hasError.value) {\n    emit('commit')\n  }\n}\n\nconst setToday = () => {\n  const today = new Date()\n  localValue.value = formatDateForInput(today)\n\n  // Trigger input handling\n  if (inputRef.value) {\n    inputRef.value.value = localValue.value\n    const event = new Event('input', { bubbles: true })\n    inputRef.value.dispatchEvent(event)\n  }\n}\n\nconst clearDate = () => {\n  localValue.value = ''\n\n  // Trigger input handling\n  if (inputRef.value) {\n    inputRef.value.value = ''\n    const event = new Event('input', { bubbles: true })\n    inputRef.value.dispatchEvent(event)\n  }\n}\n\nconst focus = () => {\n  if (inputRef.value) {\n    inputRef.value.focus()\n    // Show calendar picker on focus\n    inputRef.value.showPicker?.()\n  }\n}\n\n// Watch for external value changes\nwatch(\n  () => props.value,\n  newValue => {\n    localValue.value = safeFormatDateForInput(newValue)\n    hasError.value = false\n    errorMessage.value = ''\n  }\n)\n\n// Lifecycle\nonMounted(async () => {\n  await nextTick()\n  focus()\n})\n\n// Expose methods for parent\ndefineExpose({\n  focus,\n})\n</script>\n\n<template>\n  <div class=\"ht-date-container relative\">\n    <!-- Date input -->\n    <input\n      ref=\"inputRef\"\n      :value=\"localValue\"\n      :class=\"inputClasses\"\n      :style=\"inputStyle\"\n      :placeholder=\"column.placeholder || 'Select date'\"\n      v-bind=\"inputProps\"\n      @input=\"handleInput\"\n      @keydown=\"handleKeydown\"\n      @blur=\"handleBlur\"\n    />\n\n    <!-- Quick action buttons (optional) -->\n    <div\n      v-if=\"column.showQuickActions !== false\"\n      class=\"absolute flex gap-1 z-[1001]\"\n      :style=\"{\n        left: `${cellRect.right - 80}px`,\n        top: `${cellRect.bottom + 2}px`,\n      }\"\n    >\n      <HtButton\n        type=\"button\"\n        size=\"xs\"\n        variant=\"primary\"\n        title=\"Set to today\"\n        @click=\"setToday\"\n      >\n        Today\n      </HtButton>\n      <HtButton\n        type=\"button\"\n        size=\"xs\"\n        variant=\"secondary\"\n        title=\"Clear date\"\n        @click=\"clearDate\"\n      >\n        Clear\n      </HtButton>\n    </div>\n\n    <!-- Error message -->\n    <div\n      v-if=\"hasError && errorMessage\"\n      class=\"absolute bg-[var(--ht-danger)] text-[var(--ht-text-inverse)] text-xs px-2 py-1 rounded shadow-lg z-[1001]\"\n      :style=\"{\n        left: `${cellRect.left}px`,\n        top: `${cellRect.bottom + 2}px`,\n        maxWidth: `${cellRect.width}px`,\n      }\"\n    >\n      {{ errorMessage }}\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.ht-date-editor:focus {\n  box-shadow: 0 0 0 1px var(--ht-primary);\n}\n\n.ht-date-editor[aria-invalid='true'] {\n  border-color: var(--ht-danger);\n}\n\n/* Style the calendar icon */\n.ht-date-editor::-webkit-calendar-picker-indicator {\n  cursor: pointer;\n  opacity: 0.6;\n  transition: opacity 0.2s;\n}\n\n.ht-date-editor:hover::-webkit-calendar-picker-indicator {\n  opacity: 1;\n}\n\n/* positioning handled by ht-cell-editor utility */\n\n/* Dark mode support for date input */\n@media (prefers-color-scheme: dark) {\n  .ht-date-editor::-webkit-calendar-picker-indicator {\n    filter: invert(1);\n  }\n}\n</style>\n","<!--\n  CellDateEditor.vue - Date Input Editor\n\n  Responsibilities:\n  1. Date input with calendar picker\n  2. Date formatting and parsing\n  3. Min/max date constraints\n  4. Locale-aware date handling\n-->\n\n<script setup lang=\"ts\">\nimport { ref, nextTick, onMounted, computed, watch } from 'vue'\nimport type { GridAPI, ColumnDef, RowData, CellValue } from '../../../types'\nimport HtButton from '../../primitives/HtButton.vue'\n\n// Props\nconst props = defineProps<{\n  value: CellValue\n  row: RowData\n  column: ColumnDef\n  cellRect: DOMRect\n  gridAPI: GridAPI\n}>()\n\n// Emits\nconst emit = defineEmits<{\n  'update:value': [value: CellValue]\n  commit: []\n  cancel: []\n}>()\n\n// Helper function to safely convert CellValue to date input format\nfunction safeFormatDateForInput(value: CellValue): string {\n  // Only pass valid date types to formatDateForInput\n  if (value instanceof Date || typeof value === 'string' || value === null || value === undefined) {\n    return formatDateForInput(value)\n  }\n  // For other types (number, boolean), return empty string\n  return ''\n}\n\n// Local state\nconst inputRef = ref<HTMLInputElement>()\nconst localValue = ref<string>(safeFormatDateForInput(props.value))\nconst hasError = ref(false)\nconst errorMessage = ref('')\n\n// Computed\nconst inputStyle = computed(() => ({\n  position: 'absolute' as const,\n  left: `${props.cellRect.left}px`,\n  top: `${props.cellRect.top}px`,\n  width: `${props.cellRect.width}px`,\n  height: `${props.cellRect.height}px`,\n  zIndex: 1000,\n}))\n\nconst inputClasses = computed(() => [\n  'ht-cell-editor',\n  'ht-date-editor',\n  'px-3 py-1',\n  'border-2',\n  hasError.value ? 'border-[var(--ht-danger)]' : 'border-[var(--ht-primary)]',\n  'bg-[var(--ht-bg)]',\n  'text-[var(--ht-text)]',\n  'text-sm',\n  'outline-none',\n  'rounded',\n  'shadow-md',\n])\n\nconst inputProps = computed(() => {\n  const baseProps = {\n    type: 'date',\n    autocomplete: 'off',\n  }\n\n  if (props.column.minDate) {\n    ;(baseProps as Record<string, unknown>).min = formatDateForInput(props.column.minDate)\n  }\n\n  if (props.column.maxDate) {\n    ;(baseProps as Record<string, unknown>).max = formatDateForInput(props.column.maxDate)\n  }\n\n  return baseProps\n})\n\n// Methods\nfunction formatDateForInput(value: Date | string | null | undefined): string {\n  if (!value) return ''\n\n  try {\n    const date = value instanceof Date ? value : new Date(value)\n    if (isNaN(date.getTime())) return ''\n\n    // Format as YYYY-MM-DD for input[type=\"date\"]\n    return date.toISOString().split('T')[0] || ''\n  } catch {\n    return ''\n  }\n}\n\nfunction parseDate(value: string): Date | null {\n  if (!value) return null\n\n  try {\n    const date = new Date(`${value}T00:00:00`)\n    return isNaN(date.getTime()) ? null : date\n  } catch {\n    return null\n  }\n}\n\nfunction formatDateForDisplay(date: Date | null): string {\n  if (!date) return ''\n\n  try {\n    const locale = props.column.locale || 'en-US'\n    const options = props.column.dateOptions || {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n    }\n\n    return date.toLocaleDateString(locale, options)\n  } catch {\n    return date.toISOString().split('T')[0] || ''\n  }\n}\n\nfunction validateDate(value: string): { valid: boolean; message?: string } {\n  if (!value) {\n    return { valid: true }\n  }\n\n  const date = parseDate(value)\n  if (!date) {\n    return {\n      valid: false,\n      message: 'Invalid date format',\n    }\n  }\n\n  // Check min date constraint\n  if (props.column.minDate) {\n    const minDate = new Date(props.column.minDate)\n    if (date < minDate) {\n      return {\n        valid: false,\n        message: `Date must be after ${formatDateForDisplay(minDate)}`,\n      }\n    }\n  }\n\n  // Check max date constraint\n  if (props.column.maxDate) {\n    const maxDate = new Date(props.column.maxDate)\n    if (date > maxDate) {\n      return {\n        valid: false,\n        message: `Date must be before ${formatDateForDisplay(maxDate)}`,\n      }\n    }\n  }\n\n  return { valid: true }\n}\n\nconst handleInput = (event: Event) => {\n  const target = event.target as HTMLInputElement\n  localValue.value = target.value\n\n  // Validate input\n  const validation = validateDate(target.value)\n  hasError.value = !validation.valid\n  errorMessage.value = validation.message || ''\n\n  // Emit the parsed value\n  const parsedValue = parseDate(target.value)\n  emit('update:value', parsedValue)\n\n  // Update plugin state\n  if (props.gridAPI?.updateCellEditValue) {\n    props.gridAPI.updateCellEditValue(parsedValue)\n  }\n}\n\nconst handleKeydown = (event: KeyboardEvent) => {\n  switch (event.key) {\n    case 'Enter':\n      if (!event.shiftKey) {\n        event.preventDefault()\n        event.stopPropagation()\n        if (!hasError.value) {\n          emit('commit')\n        }\n      }\n      break\n    case 'Escape':\n      event.preventDefault()\n      event.stopPropagation()\n      emit('cancel')\n      break\n    case 'Tab':\n      event.preventDefault()\n      event.stopPropagation()\n      if (!hasError.value) {\n        emit('commit')\n      }\n      break\n    case 'ArrowDown':\n    case 'ArrowUp':\n      // Let browser handle date navigation\n      break\n  }\n}\n\nconst handleBlur = () => {\n  // Auto-commit on blur if no error\n  if (!hasError.value) {\n    emit('commit')\n  }\n}\n\nconst setToday = () => {\n  const today = new Date()\n  localValue.value = formatDateForInput(today)\n\n  // Trigger input handling\n  if (inputRef.value) {\n    inputRef.value.value = localValue.value\n    const event = new Event('input', { bubbles: true })\n    inputRef.value.dispatchEvent(event)\n  }\n}\n\nconst clearDate = () => {\n  localValue.value = ''\n\n  // Trigger input handling\n  if (inputRef.value) {\n    inputRef.value.value = ''\n    const event = new Event('input', { bubbles: true })\n    inputRef.value.dispatchEvent(event)\n  }\n}\n\nconst focus = () => {\n  if (inputRef.value) {\n    inputRef.value.focus()\n    // Show calendar picker on focus\n    inputRef.value.showPicker?.()\n  }\n}\n\n// Watch for external value changes\nwatch(\n  () => props.value,\n  newValue => {\n    localValue.value = safeFormatDateForInput(newValue)\n    hasError.value = false\n    errorMessage.value = ''\n  }\n)\n\n// Lifecycle\nonMounted(async () => {\n  await nextTick()\n  focus()\n})\n\n// Expose methods for parent\ndefineExpose({\n  focus,\n})\n</script>\n\n<template>\n  <div class=\"ht-date-container relative\">\n    <!-- Date input -->\n    <input\n      ref=\"inputRef\"\n      :value=\"localValue\"\n      :class=\"inputClasses\"\n      :style=\"inputStyle\"\n      :placeholder=\"column.placeholder || 'Select date'\"\n      v-bind=\"inputProps\"\n      @input=\"handleInput\"\n      @keydown=\"handleKeydown\"\n      @blur=\"handleBlur\"\n    />\n\n    <!-- Quick action buttons (optional) -->\n    <div\n      v-if=\"column.showQuickActions !== false\"\n      class=\"absolute flex gap-1 z-[1001]\"\n      :style=\"{\n        left: `${cellRect.right - 80}px`,\n        top: `${cellRect.bottom + 2}px`,\n      }\"\n    >\n      <HtButton\n        type=\"button\"\n        size=\"xs\"\n        variant=\"primary\"\n        title=\"Set to today\"\n        @click=\"setToday\"\n      >\n        Today\n      </HtButton>\n      <HtButton\n        type=\"button\"\n        size=\"xs\"\n        variant=\"secondary\"\n        title=\"Clear date\"\n        @click=\"clearDate\"\n      >\n        Clear\n      </HtButton>\n    </div>\n\n    <!-- Error message -->\n    <div\n      v-if=\"hasError && errorMessage\"\n      class=\"absolute bg-[var(--ht-danger)] text-[var(--ht-text-inverse)] text-xs px-2 py-1 rounded shadow-lg z-[1001]\"\n      :style=\"{\n        left: `${cellRect.left}px`,\n        top: `${cellRect.bottom + 2}px`,\n        maxWidth: `${cellRect.width}px`,\n      }\"\n    >\n      {{ errorMessage }}\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.ht-date-editor:focus {\n  box-shadow: 0 0 0 1px var(--ht-primary);\n}\n\n.ht-date-editor[aria-invalid='true'] {\n  border-color: var(--ht-danger);\n}\n\n/* Style the calendar icon */\n.ht-date-editor::-webkit-calendar-picker-indicator {\n  cursor: pointer;\n  opacity: 0.6;\n  transition: opacity 0.2s;\n}\n\n.ht-date-editor:hover::-webkit-calendar-picker-indicator {\n  opacity: 1;\n}\n\n/* positioning handled by ht-cell-editor utility */\n\n/* Dark mode support for date input */\n@media (prefers-color-scheme: dark) {\n  .ht-date-editor::-webkit-calendar-picker-indicator {\n    filter: invert(1);\n  }\n}\n</style>\n","<!--\n  CellBooleanEditor.vue - Boolean Toggle Editor (using HtCheckbox)\n\n  Responsibilities:\n  1. Toggle switch or checkbox for boolean values\n  2. Keyboard navigation (Space, Enter)\n  3. Visual feedback for state changes\n  4. Accessibility compliance\n-->\n\n<script setup lang=\"ts\">\nimport { ref, nextTick, onMounted, computed, watch } from 'vue'\nimport type { GridAPI, ColumnDef, RowData, CellValue } from '../../../types'\nimport HtCheckbox from '../../primitives/HtCheckbox.vue'\nimport HtButton from '../../primitives/HtButton.vue'\n\n// Props\nconst props = defineProps<{\n  value: CellValue\n  row: RowData\n  column: ColumnDef\n  cellRect: DOMRect\n  gridAPI: GridAPI\n}>()\n\n// Emits\nconst emit = defineEmits<{\n  'update:value': [value: CellValue]\n  commit: []\n  cancel: []\n}>()\n\n// Local state\nconst checkboxRef = ref<InstanceType<typeof HtCheckbox> | HTMLButtonElement>()\nconst localValue = ref<boolean>(Boolean(props.value))\n\n// Computed\nconst containerStyle = computed(() => ({\n  position: 'absolute' as const,\n  left: `${props.cellRect.left}px`,\n  top: `${props.cellRect.top}px`,\n  width: `${props.cellRect.width}px`,\n  height: `${props.cellRect.height}px`,\n  zIndex: 1000,\n}))\n\nconst containerClasses = computed(() => [\n  'ht-cell-editor',\n  'ht-boolean-editor',\n  'flex items-center justify-center',\n  'border-2 border-[var(--ht-primary)]',\n  'bg-[var(--ht-bg)]',\n  'rounded',\n  'shadow-md',\n])\n\nconst displayMode = computed(() => {\n  return props.column.booleanDisplay || 'checkbox' // 'checkbox', 'toggle', 'buttons'\n})\n\nconst labels = computed(() => ({\n  true: props.column.trueLabel || 'Yes',\n  false: props.column.falseLabel || 'No',\n}))\n\n// Methods\nconst toggleValue = () => {\n  const newValue = !localValue.value\n  localValue.value = newValue\n\n  emit('update:value', newValue)\n\n  // Update plugin state\n  if (props.gridAPI?.updateCellEditValue) {\n    props.gridAPI.updateCellEditValue(newValue)\n  }\n\n  // Auto-commit boolean changes unless configured otherwise\n  if (props.column.autoCommit !== false) {\n    nextTick(() => {\n      emit('commit')\n    })\n  }\n}\n\nconst setValue = (value: boolean) => {\n  localValue.value = value\n\n  emit('update:value', value)\n\n  // Update plugin state\n  if (props.gridAPI?.updateCellEditValue) {\n    props.gridAPI.updateCellEditValue(value)\n  }\n\n  // Auto-commit boolean changes\n  if (props.column.autoCommit !== false) {\n    nextTick(() => {\n      emit('commit')\n    })\n  }\n}\n\nconst handleCheckboxChange = (checked: boolean | 'indeterminate') => {\n  // Cell boolean editor doesn't use indeterminate state, convert to boolean\n  const booleanValue = checked === true\n  localValue.value = booleanValue\n\n  emit('update:value', booleanValue)\n\n  // Update plugin state\n  if (props.gridAPI?.updateCellEditValue) {\n    props.gridAPI.updateCellEditValue(booleanValue)\n  }\n\n  // Auto-commit\n  if (props.column.autoCommit !== false) {\n    nextTick(() => {\n      emit('commit')\n    })\n  }\n}\n\nconst handleKeydown = (event: KeyboardEvent) => {\n  switch (event.key) {\n    case 'Enter':\n    case ' ':\n      event.preventDefault()\n      event.stopPropagation()\n      if (displayMode.value === 'buttons') {\n        // For buttons mode, Enter/Space commits current value\n        emit('commit')\n      } else {\n        // For checkbox/toggle, toggle the value\n        toggleValue()\n      }\n      break\n    case 'Escape':\n      event.preventDefault()\n      event.stopPropagation()\n      emit('cancel')\n      break\n    case 'Tab':\n      event.preventDefault()\n      event.stopPropagation()\n      emit('commit')\n      break\n    case 'ArrowLeft':\n    case 'ArrowDown':\n      if (displayMode.value === 'buttons') {\n        event.preventDefault()\n        setValue(false)\n      }\n      break\n    case 'ArrowRight':\n    case 'ArrowUp':\n      if (displayMode.value === 'buttons') {\n        event.preventDefault()\n        setValue(true)\n      }\n      break\n  }\n}\n\nconst focus = () => {\n  // Focus the appropriate element based on display mode\n  if (displayMode.value === 'buttons') {\n    const button = checkboxRef.value as HTMLButtonElement\n    if (button) {\n      button.focus()\n    }\n  } else {\n    // For checkbox/toggle, focus the native input inside HtCheckbox\n    const checkbox = checkboxRef.value as InstanceType<typeof HtCheckbox>\n    const inputElement = checkbox?.$el?.querySelector('input')\n    if (inputElement) {\n      inputElement.focus()\n    }\n  }\n}\n\n// Watch for external value changes\nwatch(\n  () => props.value,\n  newValue => {\n    localValue.value = Boolean(newValue)\n  }\n)\n\n// Lifecycle\nonMounted(async () => {\n  await nextTick()\n  focus()\n})\n\n// Expose methods for parent\ndefineExpose({\n  focus,\n})\n</script>\n\n<template>\n  <div :class=\"containerClasses\" :style=\"containerStyle\" @keydown=\"handleKeydown\">\n    <!-- Checkbox Mode -->\n    <div v-if=\"displayMode === 'checkbox'\" class=\"flex items-center gap-2\">\n      <HtCheckbox\n        ref=\"checkboxRef\"\n        :model-value=\"localValue\"\n        variant=\"default\"\n        size=\"md\"\n        :label=\"localValue ? labels.true : labels.false\"\n        @update:model-value=\"handleCheckboxChange\"\n      />\n    </div>\n\n    <!-- Toggle Mode (using HtCheckbox styled as toggle) -->\n    <div v-else-if=\"displayMode === 'toggle'\" class=\"flex items-center gap-2\">\n      <div class=\"ht-toggle-container flex items-center gap-2\">\n        <!-- Custom toggle switch -->\n        <div\n          class=\"ht-toggle relative inline-block w-10 h-6 cursor-pointer\"\n          tabindex=\"0\"\n          role=\"switch\"\n          :aria-checked=\"localValue\"\n          @click=\"toggleValue\"\n          @keydown=\"handleKeydown\"\n        >\n          <div\n            class=\"ht-toggle-bg w-full h-full rounded-full border-2 transition-colors duration-200\"\n            :class=\"localValue ? 'bg-[var(--ht-primary)] border-[var(--ht-primary)]' : 'bg-[var(--ht-bg-subtle)] border-[var(--ht-border)]'\"\n          />\n          <div\n            class=\"ht-toggle-thumb absolute top-0.5 left-0.5 w-4 h-4 bg-[var(--color-ht-white)] rounded-full shadow-sm transform transition-transform duration-200\"\n            :class=\"{ 'translate-x-4': localValue }\"\n          />\n        </div>\n        <span class=\"text-sm text-[var(--ht-text)] select-none\">\n          {{ localValue ? labels.true : labels.false }}\n        </span>\n      </div>\n    </div>\n\n    <!-- Button Mode -->\n    <div v-else-if=\"displayMode === 'buttons'\" class=\"flex gap-1\">\n      <HtButton\n        ref=\"checkboxRef\"\n        type=\"button\"\n        size=\"xs\"\n        :variant=\"localValue ? 'primary' : 'secondary'\"\n        tabindex=\"0\"\n        @click=\"setValue(true)\"\n      >\n        {{ labels.true }}\n      </HtButton>\n      <HtButton\n        type=\"button\"\n        size=\"xs\"\n        :variant=\"!localValue ? 'primary' : 'secondary'\"\n        @click=\"setValue(false)\"\n      >\n        {{ labels.false }}\n      </HtButton>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.ht-cell-editor {\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit;\n}\n\n.ht-boolean-editor:focus-within {\n  box-shadow: 0 0 0 1px var(--ht-primary);\n}\n\n/* Toggle styling */\n.ht-toggle:focus {\n  outline: none;\n}\n\n.ht-toggle:focus .ht-toggle-bg {\n  box-shadow: 0 0 0 1px var(--ht-primary);\n}\n\n.ht-toggle-thumb {\n  transition: transform 0.2s ease-in-out;\n}\n\n/* Ensure proper positioning */\n.ht-cell-editor {\n  transform: translateZ(0);\n  backface-visibility: hidden;\n}\n\n/* Hover effects */\n.ht-toggle:hover .ht-toggle-bg {\n  opacity: 0.8;\n}\n</style>\n","<!--\n  CellBooleanEditor.vue - Boolean Toggle Editor (using HtCheckbox)\n\n  Responsibilities:\n  1. Toggle switch or checkbox for boolean values\n  2. Keyboard navigation (Space, Enter)\n  3. Visual feedback for state changes\n  4. Accessibility compliance\n-->\n\n<script setup lang=\"ts\">\nimport { ref, nextTick, onMounted, computed, watch } from 'vue'\nimport type { GridAPI, ColumnDef, RowData, CellValue } from '../../../types'\nimport HtCheckbox from '../../primitives/HtCheckbox.vue'\nimport HtButton from '../../primitives/HtButton.vue'\n\n// Props\nconst props = defineProps<{\n  value: CellValue\n  row: RowData\n  column: ColumnDef\n  cellRect: DOMRect\n  gridAPI: GridAPI\n}>()\n\n// Emits\nconst emit = defineEmits<{\n  'update:value': [value: CellValue]\n  commit: []\n  cancel: []\n}>()\n\n// Local state\nconst checkboxRef = ref<InstanceType<typeof HtCheckbox> | HTMLButtonElement>()\nconst localValue = ref<boolean>(Boolean(props.value))\n\n// Computed\nconst containerStyle = computed(() => ({\n  position: 'absolute' as const,\n  left: `${props.cellRect.left}px`,\n  top: `${props.cellRect.top}px`,\n  width: `${props.cellRect.width}px`,\n  height: `${props.cellRect.height}px`,\n  zIndex: 1000,\n}))\n\nconst containerClasses = computed(() => [\n  'ht-cell-editor',\n  'ht-boolean-editor',\n  'flex items-center justify-center',\n  'border-2 border-[var(--ht-primary)]',\n  'bg-[var(--ht-bg)]',\n  'rounded',\n  'shadow-md',\n])\n\nconst displayMode = computed(() => {\n  return props.column.booleanDisplay || 'checkbox' // 'checkbox', 'toggle', 'buttons'\n})\n\nconst labels = computed(() => ({\n  true: props.column.trueLabel || 'Yes',\n  false: props.column.falseLabel || 'No',\n}))\n\n// Methods\nconst toggleValue = () => {\n  const newValue = !localValue.value\n  localValue.value = newValue\n\n  emit('update:value', newValue)\n\n  // Update plugin state\n  if (props.gridAPI?.updateCellEditValue) {\n    props.gridAPI.updateCellEditValue(newValue)\n  }\n\n  // Auto-commit boolean changes unless configured otherwise\n  if (props.column.autoCommit !== false) {\n    nextTick(() => {\n      emit('commit')\n    })\n  }\n}\n\nconst setValue = (value: boolean) => {\n  localValue.value = value\n\n  emit('update:value', value)\n\n  // Update plugin state\n  if (props.gridAPI?.updateCellEditValue) {\n    props.gridAPI.updateCellEditValue(value)\n  }\n\n  // Auto-commit boolean changes\n  if (props.column.autoCommit !== false) {\n    nextTick(() => {\n      emit('commit')\n    })\n  }\n}\n\nconst handleCheckboxChange = (checked: boolean | 'indeterminate') => {\n  // Cell boolean editor doesn't use indeterminate state, convert to boolean\n  const booleanValue = checked === true\n  localValue.value = booleanValue\n\n  emit('update:value', booleanValue)\n\n  // Update plugin state\n  if (props.gridAPI?.updateCellEditValue) {\n    props.gridAPI.updateCellEditValue(booleanValue)\n  }\n\n  // Auto-commit\n  if (props.column.autoCommit !== false) {\n    nextTick(() => {\n      emit('commit')\n    })\n  }\n}\n\nconst handleKeydown = (event: KeyboardEvent) => {\n  switch (event.key) {\n    case 'Enter':\n    case ' ':\n      event.preventDefault()\n      event.stopPropagation()\n      if (displayMode.value === 'buttons') {\n        // For buttons mode, Enter/Space commits current value\n        emit('commit')\n      } else {\n        // For checkbox/toggle, toggle the value\n        toggleValue()\n      }\n      break\n    case 'Escape':\n      event.preventDefault()\n      event.stopPropagation()\n      emit('cancel')\n      break\n    case 'Tab':\n      event.preventDefault()\n      event.stopPropagation()\n      emit('commit')\n      break\n    case 'ArrowLeft':\n    case 'ArrowDown':\n      if (displayMode.value === 'buttons') {\n        event.preventDefault()\n        setValue(false)\n      }\n      break\n    case 'ArrowRight':\n    case 'ArrowUp':\n      if (displayMode.value === 'buttons') {\n        event.preventDefault()\n        setValue(true)\n      }\n      break\n  }\n}\n\nconst focus = () => {\n  // Focus the appropriate element based on display mode\n  if (displayMode.value === 'buttons') {\n    const button = checkboxRef.value as HTMLButtonElement\n    if (button) {\n      button.focus()\n    }\n  } else {\n    // For checkbox/toggle, focus the native input inside HtCheckbox\n    const checkbox = checkboxRef.value as InstanceType<typeof HtCheckbox>\n    const inputElement = checkbox?.$el?.querySelector('input')\n    if (inputElement) {\n      inputElement.focus()\n    }\n  }\n}\n\n// Watch for external value changes\nwatch(\n  () => props.value,\n  newValue => {\n    localValue.value = Boolean(newValue)\n  }\n)\n\n// Lifecycle\nonMounted(async () => {\n  await nextTick()\n  focus()\n})\n\n// Expose methods for parent\ndefineExpose({\n  focus,\n})\n</script>\n\n<template>\n  <div :class=\"containerClasses\" :style=\"containerStyle\" @keydown=\"handleKeydown\">\n    <!-- Checkbox Mode -->\n    <div v-if=\"displayMode === 'checkbox'\" class=\"flex items-center gap-2\">\n      <HtCheckbox\n        ref=\"checkboxRef\"\n        :model-value=\"localValue\"\n        variant=\"default\"\n        size=\"md\"\n        :label=\"localValue ? labels.true : labels.false\"\n        @update:model-value=\"handleCheckboxChange\"\n      />\n    </div>\n\n    <!-- Toggle Mode (using HtCheckbox styled as toggle) -->\n    <div v-else-if=\"displayMode === 'toggle'\" class=\"flex items-center gap-2\">\n      <div class=\"ht-toggle-container flex items-center gap-2\">\n        <!-- Custom toggle switch -->\n        <div\n          class=\"ht-toggle relative inline-block w-10 h-6 cursor-pointer\"\n          tabindex=\"0\"\n          role=\"switch\"\n          :aria-checked=\"localValue\"\n          @click=\"toggleValue\"\n          @keydown=\"handleKeydown\"\n        >\n          <div\n            class=\"ht-toggle-bg w-full h-full rounded-full border-2 transition-colors duration-200\"\n            :class=\"localValue ? 'bg-[var(--ht-primary)] border-[var(--ht-primary)]' : 'bg-[var(--ht-bg-subtle)] border-[var(--ht-border)]'\"\n          />\n          <div\n            class=\"ht-toggle-thumb absolute top-0.5 left-0.5 w-4 h-4 bg-[var(--color-ht-white)] rounded-full shadow-sm transform transition-transform duration-200\"\n            :class=\"{ 'translate-x-4': localValue }\"\n          />\n        </div>\n        <span class=\"text-sm text-[var(--ht-text)] select-none\">\n          {{ localValue ? labels.true : labels.false }}\n        </span>\n      </div>\n    </div>\n\n    <!-- Button Mode -->\n    <div v-else-if=\"displayMode === 'buttons'\" class=\"flex gap-1\">\n      <HtButton\n        ref=\"checkboxRef\"\n        type=\"button\"\n        size=\"xs\"\n        :variant=\"localValue ? 'primary' : 'secondary'\"\n        tabindex=\"0\"\n        @click=\"setValue(true)\"\n      >\n        {{ labels.true }}\n      </HtButton>\n      <HtButton\n        type=\"button\"\n        size=\"xs\"\n        :variant=\"!localValue ? 'primary' : 'secondary'\"\n        @click=\"setValue(false)\"\n      >\n        {{ labels.false }}\n      </HtButton>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.ht-cell-editor {\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit;\n}\n\n.ht-boolean-editor:focus-within {\n  box-shadow: 0 0 0 1px var(--ht-primary);\n}\n\n/* Toggle styling */\n.ht-toggle:focus {\n  outline: none;\n}\n\n.ht-toggle:focus .ht-toggle-bg {\n  box-shadow: 0 0 0 1px var(--ht-primary);\n}\n\n.ht-toggle-thumb {\n  transition: transform 0.2s ease-in-out;\n}\n\n/* Ensure proper positioning */\n.ht-cell-editor {\n  transform: translateZ(0);\n  backface-visibility: hidden;\n}\n\n/* Hover effects */\n.ht-toggle:hover .ht-toggle-bg {\n  opacity: 0.8;\n}\n</style>\n","<!--\n  CellEditorOverlay.vue - Cell Editor Overlay Container\n\n  Responsibilities:\n  1. Position and manage editor components over cells\n  2. Handle editor lifecycle (mount/unmount)\n  3. Coordinate with cell editing plugin\n  4. Event delegation and cleanup\n-->\n\n<script setup lang=\"ts\">\nimport { ref, computed, nextTick, onUnmounted, shallowRef } from 'vue'\nimport type { GridAPI, ColumnDef, RowData, CellValue } from '../../../types'\nimport { createLogger } from '../../../utils/logger'\n\nconst logger = createLogger('cell-editor-overlay')\n\n// Import editor components\nimport CellTextEditor from './CellTextEditor.vue'\nimport CellNumberEditor from './CellNumberEditor.vue'\nimport CellSelectEditor from './CellSelectEditor.vue'\nimport CellDateEditor from './CellDateEditor.vue'\nimport CellBooleanEditor from './CellBooleanEditor.vue'\n\n// Props\nconst props = defineProps<{\n  containerElement?: HTMLElement\n  gridAPI: GridAPI\n}>()\n\n// Local state\nconst activeEditor = shallowRef<typeof CellTextEditor | null>(null)\nconst editorInstance = ref<InstanceType<typeof CellTextEditor> | null>(null)\nconst editorProps = ref<Record<string, unknown>>({})\nconst isVisible = ref(false)\n\n// Editor component registry\nconst editorComponents = {\n  text: CellTextEditor,\n  number: CellNumberEditor,\n  select: CellSelectEditor,\n  date: CellDateEditor,\n  boolean: CellBooleanEditor,\n} as const\n\n// Computed\nconst currentEditorComponent = computed(() => {\n  if (!activeEditor.value) return null\n\n  const editorType = activeEditor.value.type || 'text'\n  return editorComponents[editorType as keyof typeof editorComponents] || CellTextEditor\n})\n\nconst containerElement = computed(() => {\n  return props.containerElement || document.body\n})\n\n// Methods\nconst getCellRect = (rowId: string | number, columnId: string): DOMRect | null => {\n  // Find the cell element in the DOM\n  const cellElement = document.querySelector(`[data-row-id=\"${rowId}\"][data-column-id=\"${columnId}\"]`) as HTMLElement\n\n  if (!cellElement) {\n    logger.warn(`Cell not found: row=${rowId}, column=${columnId}`)\n    return null\n  }\n\n  return cellElement.getBoundingClientRect()\n}\n\nconst showEditor = async (editState: {\n  rowId: string | number\n  columnId: string\n  value: any\n  row: RowData\n  column: ColumnDef\n}) => {\n  // Hide any existing editor first\n  hideEditor()\n\n  const cellRect = getCellRect(editState.rowId, editState.columnId)\n  if (!cellRect) {\n    return false\n  }\n\n  // Determine editor type\n  const editorType = getEditorType(editState.column)\n\n  // Prepare editor props\n  editorProps.value = {\n    value: editState.value,\n    row: editState.row,\n    column: editState.column,\n    cellRect,\n    gridAPI: props.gridAPI,\n    'onUpdate:value': handleValueUpdate,\n    onCommit: handleCommit,\n    onCancel: handleCancel,\n  }\n\n  // Set active editor\n  activeEditor.value = {\n    type: editorType,\n    rowId: editState.rowId,\n    columnId: editState.columnId,\n  } as any\n\n  isVisible.value = true\n\n  await nextTick()\n\n  // Focus the editor\n  if ((editorInstance.value as any)?.focus) {\n    ;(editorInstance.value as any).focus()\n  }\n\n  return true\n}\n\nconst hideEditor = () => {\n  if ((editorInstance.value as any)?.cleanup) {\n    ;(editorInstance.value as any).cleanup()\n  }\n\n  activeEditor.value = null\n  editorInstance.value = null\n  editorProps.value = {}\n  isVisible.value = false\n}\n\nconst handleValueUpdate = (value: any) => {\n  if (props.gridAPI.updateCellEditValue) {\n    props.gridAPI.updateCellEditValue(value)\n  }\n}\n\nconst handleCommit = async () => {\n  if (props.gridAPI.commitCellEdit) {\n    const success = await props.gridAPI.commitCellEdit()\n    if (success) {\n      hideEditor()\n    }\n  }\n}\n\nconst handleCancel = () => {\n  if (props.gridAPI.cancelCellEdit) {\n    props.gridAPI.cancelCellEdit()\n  }\n  hideEditor()\n}\n\nconst getEditorType = (column: ColumnDef): string => {\n  if (column.editor) {\n    return column.editor\n  }\n\n  // Check if custom editor is registered\n  if (column.editor && props.gridAPI.getCellEditor) {\n    const customEditor = props.gridAPI.getCellEditor(column.editor)\n    if (customEditor) {\n      return column.editor\n    }\n  }\n\n  // Default based on column dataType\n  return column.dataType || 'text'\n}\n\n// Handle keyboard events at overlay level\nconst handleOverlayKeydown = (event: KeyboardEvent) => {\n  // Let the editor handle its own keyboard events first\n  if ((editorInstance.value as any)?.handleKeydown) {\n    const handled = (editorInstance.value as any).handleKeydown(event)\n    if (handled) {\n      return\n    }\n  }\n\n  // Handle global keyboard shortcuts\n  if (props.gridAPI.handleCellEditKeydown) {\n    props.gridAPI.handleCellEditKeydown(event)\n  }\n}\n\n// Listen for cell editing events from plugin\nconst setupEventListeners = () => {\n  if (!props.gridAPI.on) return\n\n  // Listen for edit start events\n  props.gridAPI.on('cell-edit-start', (payload: { rowId: string | number; columnId: string; value: CellValue }) => {\n    // Convert the payload to the expected format\n    const rowData = props.gridAPI.getData().find(row => (row.id || row._index) === payload.rowId)\n    const columnDef = (props as any).columns?.find((col: any) => col.id === payload.columnId)\n\n    if (rowData && columnDef) {\n      showEditor({\n        row: rowData,\n        column: columnDef,\n        value: payload.value,\n        cellRect: new DOMRect(0, 0, 0, 0) // Fallback rect, will be calculated in showEditor\n      } as any)\n    }\n  })\n\n  // Listen for edit cancel events\n  props.gridAPI.on('cell-edit-cancel', () => {\n    hideEditor()\n  })\n\n  // Listen for edit complete events\n  props.gridAPI.on('cell-edit-complete', () => {\n    hideEditor()\n  })\n}\n\n// Update editor position when cell position changes\nconst updateEditorPosition = () => {\n  if (!activeEditor.value || !editorProps.value.cellRect) {\n    return\n  }\n\n  const newRect = getCellRect(activeEditor.value.rowId, activeEditor.value.columnId)\n  if (newRect) {\n    editorProps.value = {\n      ...editorProps.value,\n      cellRect: newRect,\n    }\n  }\n}\n\n// Handle scroll events to update position\nconst handleScroll = () => {\n  if (isVisible.value) {\n    updateEditorPosition()\n  }\n}\n\n// Handle resize events\nconst handleResize = () => {\n  if (isVisible.value) {\n    updateEditorPosition()\n  }\n}\n\n// Lifecycle\nsetupEventListeners()\n\n// Add global event listeners\nif (typeof window !== 'undefined') {\n  window.addEventListener('scroll', handleScroll, { passive: true })\n  window.addEventListener('resize', handleResize, { passive: true })\n  window.addEventListener('keydown', handleOverlayKeydown, { capture: true })\n}\n\nonUnmounted(() => {\n  hideEditor()\n\n  if (typeof window !== 'undefined') {\n    window.removeEventListener('scroll', handleScroll)\n    window.removeEventListener('resize', handleResize)\n    window.removeEventListener('keydown', handleOverlayKeydown, { capture: true })\n  }\n})\n\n// Expose methods for external control\ndefineExpose({\n  showEditor,\n  hideEditor,\n  updatePosition: updateEditorPosition,\n  isVisible: computed(() => isVisible.value),\n})\n</script>\n\n<template>\n  <!-- Editor overlay portal -->\n  <Teleport :to=\"containerElement\" :disabled=\"!isVisible\">\n    <div\n      v-if=\"isVisible && currentEditorComponent && activeEditor\"\n      class=\"ht-cell-editor-overlay\"\n      style=\"position: fixed; top: 0; left: 0; pointer-events: none; z-index: 1000\"\n    >\n      <component\n        :is=\"currentEditorComponent\"\n        ref=\"editorInstance\"\n        v-bind=\"editorProps\"\n        :value=\"editorProps.value as any\"\n        :row=\"editorProps.row as any\"\n        :column=\"editorProps.column as any\"\n        :cell-rect=\"editorProps.cellRect as any\"\n        :grid-a-p-i=\"editorProps.gridAPI as any\"\n        style=\"pointer-events: auto\"\n        @update:value=\"(editorProps['onUpdate:value'] as any)\"\n        @cancel=\"(editorProps.onCancel as any)\"\n        @commit=\"(editorProps.onCommit as any)\"\n      />\n    </div>\n  </Teleport>\n</template>\n\n<style scoped>\n.ht-cell-editor-overlay {\n  contain: layout style paint;\n}\n\n/* Ensure editor overlays are above all grid content */\n.ht-cell-editor-overlay > * {\n  z-index: 1000;\n}\n</style>\n","<!--\n  CellEditorOverlay.vue - Cell Editor Overlay Container\n\n  Responsibilities:\n  1. Position and manage editor components over cells\n  2. Handle editor lifecycle (mount/unmount)\n  3. Coordinate with cell editing plugin\n  4. Event delegation and cleanup\n-->\n\n<script setup lang=\"ts\">\nimport { ref, computed, nextTick, onUnmounted, shallowRef } from 'vue'\nimport type { GridAPI, ColumnDef, RowData, CellValue } from '../../../types'\nimport { createLogger } from '../../../utils/logger'\n\nconst logger = createLogger('cell-editor-overlay')\n\n// Import editor components\nimport CellTextEditor from './CellTextEditor.vue'\nimport CellNumberEditor from './CellNumberEditor.vue'\nimport CellSelectEditor from './CellSelectEditor.vue'\nimport CellDateEditor from './CellDateEditor.vue'\nimport CellBooleanEditor from './CellBooleanEditor.vue'\n\n// Props\nconst props = defineProps<{\n  containerElement?: HTMLElement\n  gridAPI: GridAPI\n}>()\n\n// Local state\nconst activeEditor = shallowRef<typeof CellTextEditor | null>(null)\nconst editorInstance = ref<InstanceType<typeof CellTextEditor> | null>(null)\nconst editorProps = ref<Record<string, unknown>>({})\nconst isVisible = ref(false)\n\n// Editor component registry\nconst editorComponents = {\n  text: CellTextEditor,\n  number: CellNumberEditor,\n  select: CellSelectEditor,\n  date: CellDateEditor,\n  boolean: CellBooleanEditor,\n} as const\n\n// Computed\nconst currentEditorComponent = computed(() => {\n  if (!activeEditor.value) return null\n\n  const editorType = activeEditor.value.type || 'text'\n  return editorComponents[editorType as keyof typeof editorComponents] || CellTextEditor\n})\n\nconst containerElement = computed(() => {\n  return props.containerElement || document.body\n})\n\n// Methods\nconst getCellRect = (rowId: string | number, columnId: string): DOMRect | null => {\n  // Find the cell element in the DOM\n  const cellElement = document.querySelector(`[data-row-id=\"${rowId}\"][data-column-id=\"${columnId}\"]`) as HTMLElement\n\n  if (!cellElement) {\n    logger.warn(`Cell not found: row=${rowId}, column=${columnId}`)\n    return null\n  }\n\n  return cellElement.getBoundingClientRect()\n}\n\nconst showEditor = async (editState: {\n  rowId: string | number\n  columnId: string\n  value: any\n  row: RowData\n  column: ColumnDef\n}) => {\n  // Hide any existing editor first\n  hideEditor()\n\n  const cellRect = getCellRect(editState.rowId, editState.columnId)\n  if (!cellRect) {\n    return false\n  }\n\n  // Determine editor type\n  const editorType = getEditorType(editState.column)\n\n  // Prepare editor props\n  editorProps.value = {\n    value: editState.value,\n    row: editState.row,\n    column: editState.column,\n    cellRect,\n    gridAPI: props.gridAPI,\n    'onUpdate:value': handleValueUpdate,\n    onCommit: handleCommit,\n    onCancel: handleCancel,\n  }\n\n  // Set active editor\n  activeEditor.value = {\n    type: editorType,\n    rowId: editState.rowId,\n    columnId: editState.columnId,\n  } as any\n\n  isVisible.value = true\n\n  await nextTick()\n\n  // Focus the editor\n  if ((editorInstance.value as any)?.focus) {\n    ;(editorInstance.value as any).focus()\n  }\n\n  return true\n}\n\nconst hideEditor = () => {\n  if ((editorInstance.value as any)?.cleanup) {\n    ;(editorInstance.value as any).cleanup()\n  }\n\n  activeEditor.value = null\n  editorInstance.value = null\n  editorProps.value = {}\n  isVisible.value = false\n}\n\nconst handleValueUpdate = (value: any) => {\n  if (props.gridAPI.updateCellEditValue) {\n    props.gridAPI.updateCellEditValue(value)\n  }\n}\n\nconst handleCommit = async () => {\n  if (props.gridAPI.commitCellEdit) {\n    const success = await props.gridAPI.commitCellEdit()\n    if (success) {\n      hideEditor()\n    }\n  }\n}\n\nconst handleCancel = () => {\n  if (props.gridAPI.cancelCellEdit) {\n    props.gridAPI.cancelCellEdit()\n  }\n  hideEditor()\n}\n\nconst getEditorType = (column: ColumnDef): string => {\n  if (column.editor) {\n    return column.editor\n  }\n\n  // Check if custom editor is registered\n  if (column.editor && props.gridAPI.getCellEditor) {\n    const customEditor = props.gridAPI.getCellEditor(column.editor)\n    if (customEditor) {\n      return column.editor\n    }\n  }\n\n  // Default based on column dataType\n  return column.dataType || 'text'\n}\n\n// Handle keyboard events at overlay level\nconst handleOverlayKeydown = (event: KeyboardEvent) => {\n  // Let the editor handle its own keyboard events first\n  if ((editorInstance.value as any)?.handleKeydown) {\n    const handled = (editorInstance.value as any).handleKeydown(event)\n    if (handled) {\n      return\n    }\n  }\n\n  // Handle global keyboard shortcuts\n  if (props.gridAPI.handleCellEditKeydown) {\n    props.gridAPI.handleCellEditKeydown(event)\n  }\n}\n\n// Listen for cell editing events from plugin\nconst setupEventListeners = () => {\n  if (!props.gridAPI.on) return\n\n  // Listen for edit start events\n  props.gridAPI.on('cell-edit-start', (payload: { rowId: string | number; columnId: string; value: CellValue }) => {\n    // Convert the payload to the expected format\n    const rowData = props.gridAPI.getData().find(row => (row.id || row._index) === payload.rowId)\n    const columnDef = (props as any).columns?.find((col: any) => col.id === payload.columnId)\n\n    if (rowData && columnDef) {\n      showEditor({\n        row: rowData,\n        column: columnDef,\n        value: payload.value,\n        cellRect: new DOMRect(0, 0, 0, 0) // Fallback rect, will be calculated in showEditor\n      } as any)\n    }\n  })\n\n  // Listen for edit cancel events\n  props.gridAPI.on('cell-edit-cancel', () => {\n    hideEditor()\n  })\n\n  // Listen for edit complete events\n  props.gridAPI.on('cell-edit-complete', () => {\n    hideEditor()\n  })\n}\n\n// Update editor position when cell position changes\nconst updateEditorPosition = () => {\n  if (!activeEditor.value || !editorProps.value.cellRect) {\n    return\n  }\n\n  const newRect = getCellRect(activeEditor.value.rowId, activeEditor.value.columnId)\n  if (newRect) {\n    editorProps.value = {\n      ...editorProps.value,\n      cellRect: newRect,\n    }\n  }\n}\n\n// Handle scroll events to update position\nconst handleScroll = () => {\n  if (isVisible.value) {\n    updateEditorPosition()\n  }\n}\n\n// Handle resize events\nconst handleResize = () => {\n  if (isVisible.value) {\n    updateEditorPosition()\n  }\n}\n\n// Lifecycle\nsetupEventListeners()\n\n// Add global event listeners\nif (typeof window !== 'undefined') {\n  window.addEventListener('scroll', handleScroll, { passive: true })\n  window.addEventListener('resize', handleResize, { passive: true })\n  window.addEventListener('keydown', handleOverlayKeydown, { capture: true })\n}\n\nonUnmounted(() => {\n  hideEditor()\n\n  if (typeof window !== 'undefined') {\n    window.removeEventListener('scroll', handleScroll)\n    window.removeEventListener('resize', handleResize)\n    window.removeEventListener('keydown', handleOverlayKeydown, { capture: true })\n  }\n})\n\n// Expose methods for external control\ndefineExpose({\n  showEditor,\n  hideEditor,\n  updatePosition: updateEditorPosition,\n  isVisible: computed(() => isVisible.value),\n})\n</script>\n\n<template>\n  <!-- Editor overlay portal -->\n  <Teleport :to=\"containerElement\" :disabled=\"!isVisible\">\n    <div\n      v-if=\"isVisible && currentEditorComponent && activeEditor\"\n      class=\"ht-cell-editor-overlay\"\n      style=\"position: fixed; top: 0; left: 0; pointer-events: none; z-index: 1000\"\n    >\n      <component\n        :is=\"currentEditorComponent\"\n        ref=\"editorInstance\"\n        v-bind=\"editorProps\"\n        :value=\"editorProps.value as any\"\n        :row=\"editorProps.row as any\"\n        :column=\"editorProps.column as any\"\n        :cell-rect=\"editorProps.cellRect as any\"\n        :grid-a-p-i=\"editorProps.gridAPI as any\"\n        style=\"pointer-events: auto\"\n        @update:value=\"(editorProps['onUpdate:value'] as any)\"\n        @cancel=\"(editorProps.onCancel as any)\"\n        @commit=\"(editorProps.onCommit as any)\"\n      />\n    </div>\n  </Teleport>\n</template>\n\n<style scoped>\n.ht-cell-editor-overlay {\n  contain: layout style paint;\n}\n\n/* Ensure editor overlays are above all grid content */\n.ht-cell-editor-overlay > * {\n  z-index: 1000;\n}\n</style>\n","import type { GridAPI } from '../../types'\nimport type { GridPlugin } from '../types'\nimport { ScopedLogger, createLogger } from '../../utils/logger'\n\n/**\n * Abstract base class for plugins to extend.\n * Provides common functionality like API access and logging.\n */\nexport abstract class BasePlugin implements GridPlugin {\n  abstract name: string\n  protected api!: GridAPI\n  protected logger: ScopedLogger\n\n  constructor() {\n    // The `name` property must be defined by the subclass,\n    // but we can provide a default logger instance here.\n    this.logger = createLogger({ module: 'Plugin', operation: 'base-plugin' })\n  }\n\n  /**\n   * Called when the plugin is installed with the grid.\n   * @param api The GridAPI instance.\n   */\n  install(api: GridAPI): void {\n    this.api = api\n    // Now that we have the definitive name from the subclass, create the specific logger.\n    this.logger = createLogger({ module: 'Plugin', operation: this.name })\n    this.logger.info(`Plugin installed: ${this.name}`)\n  }\n\n  /**\n   * Called when the plugin is cleaned up from the grid.\n   */\n  cleanup?(): void\n}\n","/**\n * Sort Configuration Presets\n *\n * Pre-configured sort options for common use cases.\n * Simplifies configuration while maintaining full flexibility.\n */\n\nimport type { SortOptions } from '../types'\n\n/**\n * Common sort configuration presets\n */\nexport const SORT_PRESETS = {\n  /**\n   * Default sorting - respects case and accents\n   * Use for: General text sorting\n   */\n  default: {\n    sensitivity: 'variant',\n  } as SortOptions,\n\n  /**\n   * Case-insensitive sorting - ignores case and accents\n   * Use for: User-friendly text sorting, search results\n   */\n  caseInsensitive: {\n    sensitivity: 'base',\n  } as SortOptions,\n\n  /**\n   * Natural sorting - smart number handling, case-insensitive\n   * Use for: File names, IDs, version numbers (e.g., v1, v2, v10)\n   */\n  natural: {\n    naturalSort: true,\n    sensitivity: 'base',\n  } as SortOptions,\n\n  /**\n   * Natural sorting (case-sensitive) - smart numbers with case distinction\n   * Use for: File systems that distinguish case\n   */\n  naturalCaseSensitive: {\n    naturalSort: true,\n    sensitivity: 'variant',\n  } as SortOptions,\n\n  /**\n   * Chinese pinyin sorting - case-insensitive\n   * Use for: Chinese text, names\n   */\n  chinese: {\n    locale: 'zh-CN',\n    sensitivity: 'base',\n  } as SortOptions,\n\n  /**\n   * Strict sorting - distinguishes all differences\n   * Use for: Code, technical data, strict ordering requirements\n   */\n  strict: {\n    sensitivity: 'variant',\n  } as SortOptions,\n\n  /**\n   * Numeric priority - numbers before text\n   * Use for: Mixed alphanumeric data\n   */\n  numericFirst: {\n    naturalSort: true,\n    sensitivity: 'base',\n  } as SortOptions,\n} as const\n\n/**\n * Locale-specific presets\n */\nexport const LOCALE_PRESETS = {\n  'en-US': { locale: 'en-US', sensitivity: 'base' } as SortOptions,\n  'zh-CN': { locale: 'zh-CN', sensitivity: 'base' } as SortOptions,\n  'ja-JP': { locale: 'ja-JP', sensitivity: 'base' } as SortOptions,\n  'ko-KR': { locale: 'ko-KR', sensitivity: 'base' } as SortOptions,\n  'de-DE': { locale: 'de-DE', sensitivity: 'base' } as SortOptions,\n  'fr-FR': { locale: 'fr-FR', sensitivity: 'base' } as SortOptions,\n  'es-ES': { locale: 'es-ES', sensitivity: 'base' } as SortOptions,\n} as const\n\n/**\n * Create custom sort options with preset as base\n */\nexport function createSortOptions(\n  preset: keyof typeof SORT_PRESETS,\n  overrides?: Partial<SortOptions>\n): SortOptions {\n  return {\n    ...SORT_PRESETS[preset],\n    ...overrides,\n  }\n}\n","/**\n * Happy Table - High-Performance Vue 3 Data Grid\n *\n * Optimized for 60FPS scrolling with 100k+ rows\n * Memory efficient with <200MB usage\n * Plugin-first architecture with capability system\n * Dual rendering system: Table (default) + Excel (plugin)\n */\n\n// Core components\nexport { default as DataGrid } from './components/DataGrid.vue'\nexport {\n  HtButton,\n  HtInput,\n  HtCheckbox,\n  HtRadio,\n  HtSelect,\n  HtSelectTrigger,\n  HtSelectValue,\n  HtSelectContent,\n  HtSelectItem,\n  HtSelectGroup,\n  HtSelectLabel,\n  HtSelectSeparator,\n} from './components/primitives'\n\n// Import types for internal use\nimport type { RowData, ColumnDef } from './types'\n\n// Keyboard navigation components\nexport { default as KeyboardShortcuts } from './components/shared/KeyboardShortcuts.vue'\nexport { default as AccessibilityAnnouncer } from './components/shared/AccessibilityAnnouncer.vue'\n\n// Single source of truth composables\nexport { useGridState } from './core/useGridState'\nexport { useHappyTable } from './core/useHappyTable'\nexport { useGridEvents } from './core/useGridEvents'\n\n// Renderer system (new in v1.1)\nexport {\n  createTableRenderer,\n  RendererRegistry,\n  createRendererRegistry,\n  switchRenderer,\n  getCurrentRenderer,\n  getAvailableRenderers,\n} from './renderers'\n\n// Renderer types\nexport type { GridRenderer, GridInteractionContract, InteractionEvent } from './renderers'\n\n// Renderer types for plugin development\nexport type {\n  RendererFactory,\n  RendererInstance,\n  RendererOptions,\n  VirtualRow,\n  InteractionPayload,\n  CoreLogicCallbacks,\n} from './renderers'\n\n// Excel renderer (stub - requires plugin)\nexport { createExcelRenderer, EXCEL_PLUGIN_INFO } from './renderers/excel/ExcelRenderer'\nexport type { ExcelInteractionContract, ExcelRendererConfig } from './renderers/excel/ExcelRenderer'\n\n// Table interactions\nexport { createTableInteractionHandler } from './renderers/table/table-interactions'\n\n// Plugin system (public API)\nexport type {\n  GridPlugin,\n  CapabilityGetter,\n  GridCapabilities,\n  DataPipelineCapability,\n} from './plugins'\n\n// Core plugins for common functionality\nexport {\n  corePlugins,\n  pluginPresets,\n  sortingPlugin,\n  enhancedSortingPlugin,\n  cellEditingPlugin,\n  keyboardNavigationPlugin,\n  selectionPlugin,\n  dragDropPlugin,\n} from './plugins/core'\n\n// Cell editing components and utilities\nexport {\n  CellTextEditor,\n  CellNumberEditor,\n  CellSelectEditor,\n  CellDateEditor,\n  CellBooleanEditor,\n  CellEditorOverlay,\n} from './components/table-renderer/overlays'\n\n// Plugin utilities for development\nexport { BasePlugin } from './plugins/utils'\n\n// Virtual scrolling\nexport { useVirtualizer, useHorizontalVirtualizer } from './utils/virtualization'\nexport { useAdvancedVirtualizer } from './utils/advanced-virtualization'\nexport { useThreePaneVirtualizer } from './utils/three-pane-virtualization'\n\n// Performance utilities\nexport { usePerformanceMonitoring, benchmarkOperation } from './utils/performance-monitoring'\nexport { useMemoryManagement } from './utils/memory-management'\nexport {\n  ElementPool,\n  DOMBatcher,\n  EventDelegator,\n  createVirtualRowFactory,\n} from './utils/dom-optimization'\n\n// Data pipeline utilities\nexport { useDataPipeline, DataPipelineUtils } from './utils/data-pipeline'\nexport type {\n  DataPipelineInterceptor,\n  DataPipelineStage,\n  DataPipelineMetrics,\n  DataPipelineOptions,\n  DataPipelineReturn,\n  DataPipelineBenchmarkResult,\n} from './utils/data-pipeline'\n\n// Browser optimizations\nexport {\n  browserOptimizations,\n  initializeBrowserOptimizations,\n  BrowserFeatures,\n} from './utils/browser-optimization'\n\n// Utility system (comprehensive)\nexport { initializeUtilities, getUtilityInfo, quickStartUtils, UtilityFeatures } from './utils'\n\n// Sort presets for simplified configuration\nexport { SORT_PRESETS, LOCALE_PRESETS, createSortOptions } from './utils/sort-presets'\n\n// Platform utilities for cross-platform compatibility\nexport {\n  detectPlatform,\n  hasModifierKey,\n  getModifierKeyText,\n  getModifierKeySymbol,\n  formatShortcut,\n  formatShortcutSymbol,\n  type PlatformInfo,\n} from './utils'\n\n// Import for local use\nimport { initializeBrowserOptimizations } from './utils/browser-optimization'\n\n// Types\nexport type {\n  RowData,\n  ColumnDef,\n  CellValue,\n  GridConfig,\n  GridAPI,\n  DataGridProps,\n  GridEvents,\n  VirtualItem,\n  VirtualizerOptions,\n  UseGridStateReturn,\n  GridStateInternal,\n  SortConfig,\n  SortField,\n  MultiSortConfig,\n  SortOptions,\n  FilterConfig,\n  GridState,\n  BorderMode,\n  SelectOption,\n  HtSelectBaseProps,\n  SelectContext,\n} from './types'\nexport { GRID_EVENT_NAMES } from './types/events'\nexport type { GridEventName, PublicEventName, PublicEventMap } from './types/events'\nexport type { UseHappyTableOptions, UseHappyTableResult } from './core/useHappyTable'\n\n// Version\nexport const version = '1.1.0-renderer-system'\n\n// Feature flags for tree shaking\nexport const features = {\n  ADVANCED_VIRTUALIZATION: true,\n  PERFORMANCE_MONITORING: true,\n  MEMORY_MANAGEMENT: true,\n  BROWSER_OPTIMIZATION: true,\n  PLUGIN_SYSTEM: true,\n  CAPABILITY_SYSTEM: true,\n  RENDERER_SYSTEM: true, // New in v1.1\n  DUAL_RENDERING: true, // New in v1.1\n  EXCEL_SUPPORT: true, // New in v1.1 (via plugin)\n  DATA_PIPELINE: true, // New utility system\n  KEYBOARD_NAVIGATION: true, // Comprehensive keyboard navigation\n  ACCESSIBILITY: true, // WCAG 2.1 AA compliance\n} as const\n\n// Initialize performance optimizations\nif (typeof window !== 'undefined') {\n  initializeBrowserOptimizations()\n}\n\n\n\n// Plugin system constants\nexport const PLUGIN_API_VERSION = '1.1.0'\nexport const RENDERER_API_VERSION = '1.0.0'\n\n/**\n * Check if a plugin is compatible with the current API version\n */\nexport function isPluginCompatible(pluginVersion?: string): boolean {\n  if (!pluginVersion) return true // Assume compatible if no version specified\n\n  // Simple version check (can be enhanced with semver)\n  return pluginVersion === PLUGIN_API_VERSION\n}\n\n/**\n * Check if a renderer is compatible with the current API version\n */\nexport function isRendererCompatible(rendererVersion?: string): boolean {\n  if (!rendererVersion) return true // Assume compatible if no version specified\n\n  // Simple version check (can be enhanced with semver)\n  return rendererVersion === RENDERER_API_VERSION\n}\n\n/**\n * Get information about the renderer system\n */\nexport function getRendererSystemInfo() {\n  return {\n    apiVersion: RENDERER_API_VERSION,\n    supportedRenderers: ['table', 'excel'],\n    defaultRenderer: 'table',\n    features: {\n      dynamicSwitching: true,\n      pluginProvided: true,\n      statePreservation: true,\n      hotSwapping: true,\n    },\n  }\n}\n\n// 样式由消费者自行选择：\n// - Tailwind 项目：import 'happy-table/style.css'（仅 tokens）\n// - 非 Tailwind 项目：import 'happy-table/auto.css'（tokens + utilities）\n\n/**\n * Quick start helper for common use cases\n */\nexport const quickStart = {\n  /**\n   * Create a basic table setup\n   */\n  table: (data: RowData[], columns: ColumnDef[]) => ({\n    data,\n    columns,\n    renderer: 'table' as const,\n    config: {\n      virtualizationThreshold: 1000,\n      enableVirtualization: true,\n    },\n  }),\n\n  /**\n   * Create an Excel-style setup (requires Excel plugin)\n   */\n  excel: (data: RowData[], columns: ColumnDef[]) => ({\n    data,\n    columns,\n    renderer: 'excel' as const,\n    config: {\n      virtualizationThreshold: 1000,\n      enableVirtualization: true,\n    },\n    // Note: Requires @happy-table/excel-plugin to be installed and registered\n  }),\n\n  /**\n   * Create a high-performance setup with all optimizations\n   */\n  highPerformance: (data: RowData[], columns: ColumnDef[]) => ({\n    data,\n    columns,\n    config: {\n      virtualizationThreshold: 100,\n      enableVirtualization: true,\n      rowHeight: 32,\n      headerHeight: 40,\n    },\n    // Automatically includes all performance utilities\n    utilities: {\n      memoryManagement: true,\n      performanceMonitoring: true,\n      dataPipeline: true,\n      browserOptimizations: true,\n    },\n  }),\n}\n"],"mappings":";;;;;;;;;;AAWA,IAAMA,WAAmC;CACvC,YAAY;CACZ,eAAe;CACf,oBAAoB;CACpB,QAAQ;CACT,EAEK,mBAAmB;CAAC;CAAK;CAAK;CAAK;CAAK;CAAK;CAAK;CAAI;AAE5D,SAAS,UAAU,GAAY;AAC7B,QAAO,KAAM;;AAGf,SAAS,cAAc,GAAqB;AAC1C,KAAI,OAAO,KAAM,UAAW,QAAO;AACnC,KAAI,OAAO,KAAM,SAAU,QAAO,MAAM,KAAK,MAAM;AACnD,KAAI,OAAO,KAAM,UAAU;EACzB,IAAM,IAAI,EAAE,MAAM,CAAC,aAAa;AAChC,SAAO,MAAM,UAAU,MAAM;;AAE/B,QAAO;;AAGT,SAAS,iBAAiB,GAAqB;AAC7C,KAAI,OAAO,KAAM,SAAU,QAAO;CAClC,IAAM,IAAI,EAAE,MAAM;AAClB,KAAI,CAAC,EAAE,SAAS,IAAI,CAAE,QAAO;CAC7B,IAAM,IAAM,EAAE,MAAM,GAAG,GAAG,CAAC,QAAQ,UAAU,GAAG;AAChD,QAAO,EAAI,SAAS,KAAK,CAAC,MAAM,OAAO,EAAI,CAAC;;AAG9C,SAAS,eAAe,GAAqB;AAC3C,KAAI,OAAO,KAAM,SAAU,QAAO;CAClC,IAAM,IAAI,EAAE,MAAM;AAGlB,KAFI,CAAC,KAED,CADc,iBAAiB,MAAK,MAAO,EAAE,SAAS,EAAI,CAAC,CAC/C,QAAO;CACvB,IAAM,IAAM,EAAE,QAAQ,iBAAiB,GAAG;AAC1C,QAAO,EAAI,SAAS,KAAK,CAAC,MAAM,OAAO,EAAI,CAAC;;AAG9C,SAAS,aAAa,GAAqB;AACzC,KAAI,OAAO,KAAM,SAAU,QAAO,OAAO,SAAS,EAAE;AACpD,KAAI,OAAO,KAAM,UAAU;EACzB,IAAM,IAAI,EAAE,MAAM;AAClB,MAAI,CAAC,EAAG,QAAO;EAEf,IAAM,IAAa,EAAE,QAAQ,MAAM,GAAG;AACtC,SAAO,EAAW,SAAS,KAAK,CAAC,MAAM,OAAO,EAAW,CAAC;;AAE5D,QAAO;;AAGT,SAAS,gBAAgB,GAAqD;CAE5E,IAAM,IAAI,EAAE,MAAM;AAOlB,QALiB,sBACJ,KAAK,EAAE,GAAS;EAAE,QAAQ;EAAM,YAAY;EAAO,GAE/C,8CACJ,KAAK,EAAE,GAAS;EAAE,QAAQ;EAAO,YAAY;EAAM,GACzD;EAAE,QAAQ;EAAO,YAAY;EAAO;;AAG7C,SAAS,WAAW,GAA0C;AAC5D,KAAI,aAAa,QAAQ,CAAC,MAAM,EAAE,SAAS,CAAC,CAE1C,QAAO;AAET,KAAI,OAAO,KAAM,UAAU;EACzB,IAAM,EAAE,WAAQ,kBAAe,gBAAgB,EAAE;AACjD,MAAI,KAAU,EAAY,QAAO,IAAS,SAAS;EAEnD,IAAM,IAAc,iBAAiB,EAAE;AACvC,MAAI,MAAgB,OAAQ,QAAO;EAEnC,IAAM,IAAI,IAAI,KAAK,EAAE;AACrB,MAAI,CAAC,MAAM,EAAE,SAAS,CAAC,EAAE;GACvB,IAAM,IAAU,EAAE,aAAa;AAE/B,UADoB,EAAQ,SAAS,IAAI,IAAI,cAAc,KAAK,EAAQ,GACnD,aAAa;;;AAGtC,QAAO;;AAIT,SAAS,iBAAiB,GAAW,GAAmD;CACtF,IAAM,IAAM,EAAE,MAAM;AACpB,KAAI,CAAC,EAAK,QAAO;AAIjB,KADW,iEACJ,KAAK,EAAI,CACd,QAAO,EAAI,SAAS,IAAI,GAAG,aAAa;AAK1C,KADY,uEACJ,KAAK,EAAI,CACf,QAAO,gBAAgB,KAAK,EAAI,GAAG,aAAa;CAKlD,IAAM,IAAI,EAAI,MADG,2EACY;AAC7B,KAAI,GAAG;EACL,IAAM,IAAI,SAAS,EAAE,IAAK,GAAG,EACvB,IAAI,SAAS,EAAE,IAAK,GAAG,EACvB,IAAO,SAAS,EAAE,IAAK,GAAG,EAC1B,IAAU,gBAAgB,KAAK,EAAI;AAGzC,MADI,IAAI,MAAM,KAAK,MACf,IAAI,MAAM,KAAK,GAAI,QAAO,IAAU,aAAa;AAErD,MAAI,GAAY;GACd,IAAM,IAAI,EAAW,aAAa;AAElC,OADI,EAAE,SAAS,QAAQ,IACnB,EAAE,SAAS,QAAQ,IAAI,EAAE,SAAS,QAAQ,IAAI,EAAE,SAAS,KAAK,IAAI,EAAE,SAAS,KAAK,IAAI,EAAE,SAAS,KAAK,CACxG,QAAO,IAAU,aAAa;;AAIlC,MAAI,KAAQ,QAAQ,KAAQ,QAAQ,KAAK,KAAK,KAAK,MAAM,KAAK,KAAK,KAAK,GACtE,QAAO,IAAU,aAAa;;AAIlC,QAAO;;AAGT,SAAgB,cAAc,GAAmB,IAAqB,EAAE,EAAoB;CAC1F,IAAM,EAAE,eAAY,kBAAe,0BAAuB;EAAE,GAAG;EAAU,GAAG;EAAM,EAC5EC,IAAoB,EAAE;AAE5B,MAAK,IAAI,IAAI,GAAG,IAAI,EAAO,UAAU,EAAO,SAAS,GAAY,IAC/D,GAAO,KAAK,EAAO,GAAG;CAGxB,IAAI,IAAU,GACV,IAAY,GACZ,IAAa,GACb,IAAc,GACd,IAAe,GACf,IAAW,GACX,IAAW,GACX,IAAW,GACX,IAAe,GACf,IAAW,GACX,IAAc,GACd,IAAiB,GACf,oBAAS,IAAI,KAAa;AAEhC,MAAK,IAAM,KAAK,GAAQ;AACtB,MAAI,UAAU,EAAE,CAAE;AAUlB,MATA,KAGA,EAAO,IAAI,OAAO,EAAE,CAAC,EAEjB,cAAc,EAAE,IAAE,KAClB,iBAAiB,EAAE,IAAE,KACrB,eAAe,EAAE,IAAE,KACnB,OAAO,KAAM,YAAY,KAAc,EAAE,aAAa,SAAO,KAC7D,OAAO,KAAM,UAAU;AACzB;GACA,IAAM,IAAI;AACV,IAAI,EAAE,SAAS,KAAK,IAAI,EAAE,SAAS,KAAK,KAAE;GAE1C,IAAM,IAAI,EAAE,MAAM;AAClB,OAAK,EAAE,WAAW,IAAI,IAAI,EAAE,SAAS,IAAI,IAAM,EAAE,WAAW,IAAI,IAAI,EAAE,SAAS,IAAI,EAAG;IACpF,IAAI,IAAW;AACf,QAAI;AAEF,KADA,KAAK,MAAM,EAAE,EACb,IAAW;YACE;AACb,SAAW;;AAEb,IAAI,KAAU;;AAEhB,GAAI,aAAa,EAAE,IAAE;SAEjB,aAAa,EAAE,IAAE;AAGvB,MAAI,OAAO,KAAM,UAAU;GACzB,IAAM,IAAI,EAAE,MAAM;AAElB,OAAI,oEAAoE,KAAK,EAAE,CAC7E;YACS,mFAAmF,KAAK,EAAE,CACnG;QACK;IACL,IAAM,IAAI,EAAE,MAAM,mEAAmE;AACrF,QAAI,GAAG;KACL,IAAM,IAAK,SAAS,EAAE,IAAK,GAAG,EACxB,IAAK,SAAS,EAAE,IAAK,GAAG,EACxB,IAAK,EAAE,KAAK,SAAS,EAAE,IAAK,GAAG,GAAG;AACxC,KAAI,KAAM,MAAM,KAAM,MAAM,KAAM,KAChC,MAEA;;;;EAMR,IAAM,IAAI,OAAO,KAAM,YAAY,iBAAiB,GAAG,EAAK,OAAO,IAAqB,WAAW,EAAE;AAErG,EADI,MAAM,UAAQ,KACd,MAAM,cAAY;;AAGxB,KAAI,MAAY,EAAG,QAAO;CAG1B,IAAM,KAAQ,IAAY,GACpB,IAAO,IAAa,GACpB,IAAO,IAAc,GACrB,IAAO,IAAe,GACtB,KAAS,IAAW,KAAY,GAChC,IAAQ,IAAW,GACnB,IAAY,IAAe,GAC3B,IAAQ,IAAW,GACnB,IAAS,IAAc,IAAI,IAAiB,IAAc;AAGhE,KAAI,MAAS,IAAM,QAAO;AAE1B,KAAI,KAAQ,GAAK,QAAO;AACxB,KAAI,KAAQ,GAAK,QAAO;AAGxB,KAAI,KAAS,GAAK,QAAO;AAEzB,KAAI,KAAS,GAGX,QADc,KAAY,IAAW,MACrB,KAAM,aAAa;AAGrC,KAAI,KAAS,GAAK,QAAO;AACzB,KAAI,KAAa,GAAK,QAAO;AAE7B,KAAI,KAAQ,IAAM,QAAO;CAGzB,IAAM,IAAc,EAAO,MACrB,IAAc,IAAc;AASlC,QARI,IAAc,KAAK,KAAe,KAAiB,KAAe,KAAsB,KAAW,KAC9F,SAIL,KAAU,KAAY,cAGnB;;AAGT,SAAgB,uBACd,GACA,GACA,IAAqB,EAAE,EACL;AAGlB,KADoB,EAAe,WAAW,MAAM,QAAS,EAAe,QAAQ,CACpE,QAAO;CAEvB,IAAMC,IAAoB,EAAE,EACtB,IAAQ,EAAO,OACf,EAAE,gBAAa,SAAS,eAAe;AAC7C,MAAK,IAAI,IAAI,GAAG,IAAI,EAAK,UAAU,EAAO,SAAS,GAAY,IAC7D,GAAO,KAAM,EAAK,KAAa,GAAO;CAExC,IAAM,IAAS,EAAK,UAAU,EAAO;AACrC,QAAO,cAAc,GAAQ;EAAE,GAAG;EAAM;EAAQ,CAAC;;ACjNnD,IAAa,qBAAb,MAAgC;CAC9B,SAAiB,aAAa,qBAAqB;CACnD,0BAAkB,IAAI,KAAyB;CAC/C,YAA8B,EAAE;CAChC,6BAAqB,IAAI,KAAuC;CAChE;CAEA,YAAY,GAAc;AACxB,OAAK,MAAM;;CAIb,MAAM,SAAS,GAAoD;AACjE,MAAI;AAEF,OAAI,CAAC,EAAO,QAAQ,OAAO,EAAO,WAAY,WAC5C,OAAU,MAAM,mDAAmD;AAGrE,OAAI,KAAK,QAAQ,IAAI,EAAO,KAAK,CAC/B,OAAU,MAAM,WAAW,EAAO,KAAK,yBAAyB;AAYlE,UARA,KAAK,QAAQ,IAAI,EAAO,MAAM,EAAO,EAGrC,MAAM,KAAK,cAAc,EAAO,EAGhC,KAAK,UAAU,KAAK,EAAO,KAAK,EAEzB,EAAE,SAAS,IAAM;WACjB,GAAO;GACd,IAAMC,IAA2B;IAC/B,MAAM;IACN,SAAS,aAAiB,QAAQ,EAAM,UAAU;IAClD,MAAM,aAAiB,QAAQ,EAAM,OAAO;IAC5C,WAAW,KAAK,KAAK;IACrB,OAAO,aAAiB,QAAQ,EAAM,QAAQ,KAAA;IAC/C;AAKD,UAFA,KAAK,iBAAiB,gBAAgB;IAAE,QAAQ,EAAO;IAAM,OAAO;IAAa,CAAC,EAE3E;IAAE,SAAS;IAAO,OAAO;IAAa;;;CAIjD,MAAM,WAAW,GAAoD;EACnE,IAAM,IAAS,KAAK,QAAQ,IAAI,EAAW;AAC3C,MAAI,CAAC,EACH,QAAO;GACL,SAAS;GACT,OAAO;IACL,MAAM;IACN,SAAS,WAAW,EAAW;IAC/B,MAAM;IACN,WAAW,KAAK,KAAK;IACtB;GACF;AAGH,MAAI;AAaF,UAXI,EAAO,WACT,MAAM,EAAO,SAAS,EAIxB,KAAK,QAAQ,OAAO,EAAW,EAC/B,KAAK,YAAY,KAAK,UAAU,QAAO,MAAQ,MAAS,EAAW,EAGnE,KAAK,iBAAiB,uBAAuB,EAAE,QAAQ,GAAY,CAAC,EAE7D,EAAE,SAAS,IAAM;WACjB,GAAO;AASd,UAAO;IAAE,SAAS;IAAO,OARQ;KAC/B,MAAM;KACN,SAAS,aAAiB,QAAQ,EAAM,UAAU;KAClD,MAAM,aAAiB,QAAQ,EAAM,OAAO;KAC5C,WAAW,KAAK,KAAK;KACrB,OAAO,aAAiB,QAAQ,EAAM,QAAQ,KAAA;KAC/C;IAE4C;;;CAIjD,IAAI,GAA4C;AAC9C,SAAO,KAAK,QAAQ,IAAI,EAAW;;CAGrC,OAAqB;AACnB,SAAO,MAAM,KAAK,KAAK,QAAQ,QAAQ,CAAC;;CAG1C,eAAyB;AACvB,SAAO,CAAC,GAAG,KAAK,UAAU;;CAI5B,IAAI,GAA2C;AAS7C,SARI,KAAK,WAAW,IAAI,EAAU,KAAK,IACrC,KAAK,OAAO,KAAK,cAAc,EAAU,KAAK,wBAAwB,EAC/D,SAGT,KAAK,WAAW,IAAI,EAAU,MAAM,EAAU,EAC9C,EAAU,QAAQ,KAAK,EAEhB;;CAGT,MAAM,GAA6B;EACjC,IAAM,IAAY,KAAK,WAAW,IAAI,EAAc;AAKpD,SAJI,MACF,EAAU,aAAa,EACvB,KAAK,WAAW,OAAO,EAAc,GAEhC;;CAIT,aAAiD,GAA6B;AAC5E,SAAO,KAAK,WAAW,IAAI,EAAK;;CAIlC,MAAc,cAAc,GAAmC;EAE7D,IAAM,IAAgB,KAAK,aAAkC,eAAe,EACtEC,IAAqC,IACvC,EAAc,cAAc,SACtB,KAAA;AAGV,QAAM,EAAO,QAAQ,KAAK,KAAK,EAAiB;;CAGlD,iBAAyB,GAAe,GAAiB;AACvD,OAAK,WAAW,SAAQ,MAAa;AACnC,OAAI;AACF,IAAI,aAAa,KAAa,OAAO,EAAU,WAAY,cACvD,EAAU,QAA+C,GAAO,EAAK;YAElE,GAAO;AACd,SAAK,OAAO,KAAK,cAAc,EAAU,KAAK,oBAAoB,EAAM,KAAK,EAAM;;IAErF;;CAIJ,MAAM,UAAyB;EAE7B,IAAM,IAAc,CAAC,GAAG,KAAK,UAAU,CAAC,SAAS;AACjD,OAAK,IAAM,KAAQ,EACjB,OAAM,KAAK,WAAW,EAAK;AAI7B,OAAK,IAAM,KAAa,KAAK,WAAW,QAAQ,CAC9C,GAAU,aAAa;AAEzB,OAAK,WAAW,OAAO;;GAOd,sBAAb,MAAqE;CACnE,OAAO;CACP,+BAAuB,IAAI,KAAkC;CAC7D,SAAiB,aAAa,sBAAsB;CAEpD,QAAQ,GAAqC;AAE3C,OAAK,+BAA+B;;CAGtC,YAAkB;AAChB,OAAK,aAAa,OAAO;;CAG3B,SAA2C,GAAS,GAAuC;AACzF,OAAK,aAAa,IAAI,GAAM,EAAW;;CAGzC,IAAsC,GAA0C;AAC9E,SAAO,KAAK,aAAa,IAAI,EAAK;;CAGpC,OAAmC;AACjC,SAAO,MAAM,KAAK,KAAK,aAAa,MAAM,CAAC;;CAG7C,eAAiC;AAC/B,UAA0C,MAAY,KAAK,IAAI,EAAK;;CAGtE,gCAA8C;AAK5C,EAHA,KAAK,kCAAkC,EACvC,KAAK,gCAAgC,EACrC,KAAK,+BAA+B,EACpC,KAAK,wBAAwB;;CAG/B,mCAAiD;EAC/C,IAAM,oBAAe,IAAI,KAAoB;AAE7C,OAAK,SAAS,iBAAiB;GAC7B,0BAA0B,GAAc,MAAqB;AAC3D,IAAK,EAAa,IAAI,EAAK,IACzB,EAAa,IAAI,GAAM,EAAE,CAAC;IAE5B,IAAM,IAAmB,EAAa,IAAI,EAAK,EACzC,IAAW,EAAiB,WAAU,MAAK,EAAE,SAAS,EAAY,KAAK;AAE7E,IAAI,MAAa,MAGf,EAAiB,KAAK,EAAY,EAClC,EAAiB,MAAM,GAAG,MAAM,EAAE,WAAW,EAAE,SAAS,IAHxD,EAAiB,KAAY;;GAOjC,wBAAwB,GAAc,MAAiB;IACrD,IAAM,IAAmB,EAAa,IAAI,EAAK;AAC/C,QAAI,GAAkB;KACpB,IAAM,IAAQ,EAAiB,WAAU,MAAK,EAAE,SAAS,EAAK;AAC9D,KAAI,MAAU,MACZ,EAAiB,OAAO,GAAO,EAAE;;;GAKvC,uBAAuB;IACrB,IAAMC,IAAyB,EAAE;AACjC,SAAK,IAAM,CAAC,GAAG,MAAqB,EAClC,GAAgB,KAAK,GAAG,EAAiB;AAE3C,WAAO;;GAGT,cAAc,GAAa,MAAiB;IAC1C,IAAM,IAAmB,EAAa,IAAI,EAAK;AAC/C,QAAI,CAAC,KAAoB,EAAiB,WAAW,EACnD,QAAO;IAGT,IAAI,IAAgB;AACpB,SAAK,IAAM,KAAe,EACxB,KAAI,EAAY,YAAY,GAC1B,KAAI;AACF,SAAgB,EAAY,UAAU,EAAc;aAC7C,GAAO;AACd,UAAK,OAAO,MAAM,wBAAwB,EAAY,KAAK,IAAI,EAAM;;AAI3E,WAAO;;GAGT,gBAAgB,MAAkB;AAChC,IAAI,IACF,EAAa,OAAO,EAAK,GAEzB,EAAa,OAAO;;GAGzB,CAAC;;CAGJ,iCAA+C;EAC7C,IAAM,oBAAQ,IAAI,KAAyB,EACvC,IAAgB;AAEpB,OAAK,SAAS,eAAe;GAC3B,mBAAmB,OAAO,MAAc;IACtC,IAAM,IAAS,QAAQ,EAAE,EAAc,GAAG,KAAK,KAAK,IAC9CC,IAAyB;KAC7B,IAAI;KACJ,MAAM,EAAK;KACX,QAAQ;KACR,WAAW,KAAK,KAAK;KACtB;AAsBD,WApBA,EAAM,IAAI,GAAQ,EAAW,EAG7B,WACE,YAAY;AACV,SAAI;AACF,QAAW,SAAS;MACpB,IAAM,IAAS,MAAM,EAAK,SAAS;AAGnC,MAFA,EAAW,SAAS,aACpB,EAAW,SAAS,GACpB,EAAW,UAAU,KAAK,KAAK;cACxB,GAAO;AAGd,MAFA,EAAW,SAAS,UACpB,EAAW,QAAQ,GACnB,EAAW,UAAU,KAAK,KAAK;;OAGnC,EAAK,aAAa,SAAS,IAAI,GAChC,EAEM;;GAGT,aAAa,MAAmB;IAC9B,IAAM,IAAO,EAAM,IAAI,EAAO;AAM9B,WALI,MAAS,EAAK,WAAW,aAAa,EAAK,WAAW,cACxD,EAAK,SAAS,aACd,EAAK,UAAU,KAAK,KAAK,EAClB,MAEF;;GAGT,gBAAgB,MAEZ,EAAM,IAAI,EAAO,IAChB;IACC,IAAI;IACJ,MAAM;IACN,QAAQ;IACR,OAAO,gBAAI,MAAM,iBAAiB;IACnC;GAIL,mBAAmB,IAAI,IAAI,EAAM;GAEjC,sBAAsB;GACtB,mBAAmB;GACnB,2BAA2B;AACzB,SAAK,IAAM,CAAC,GAAQ,MAAS,EAC3B,CAAI;KAAC;KAAa;KAAU;KAAY,CAAC,SAAS,EAAK,OAAO,IAC5D,EAAM,OAAO,EAAO;;GAI3B,CAAC;;CAGJ,gCAA8C;AAC5C,OAAK,SAAS,aAAa;GACzB,SAAS,aAEA;IACL,IAAI,MAAM,KAAK,KAAK;IACpB,KAAK;IACL,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,wBAAwB;IACxB,2BAA2B;IAC5B;GAEH,kBAAkB;GAClB,uBAAuB;GACvB,mBAAmB;GACnB,iBAAiB;GACjB,qBAAqB;GACrB,0BAA0B;GAC3B,CAAC;;CAGJ,yBAAuC;AACrC,OAAK,SAAS,MAAM;GAClB,aAAa,aAAa;IACxB,SAAS;IACT,UAAU,EAAE;IACZ,iBAAiB,EAAE;IACnB,YAAY;KAAE,cAAc;KAAG,QAAQ,EAAE;KAAE;IAC3C,YAAY;IACb;GACD,iBAAiB,YAAY,EAAE;GAC/B,sBAAsB,YAAY,EAAE;GACpC,iBAAiB,aAAa;IAC5B,aAAa;IACb,gBAAgB,EAAE;IAClB,UAAU,EAAE;IACZ,SAAS;KAAE,cAAc;KAAG,aAAa;KAAG,UAAU;KAAG;IAC1D;GACD,eAAe,OAAO,GAAc,OAAmB;IACrD;IACA,aAAa,EAAE;IACf,OAAO;IACP,UAAU;IACX;GACD,cAAc,OAAO,GAAc,OAAmB;IACpD;IACA,YAAY,EAAE;IACd,YAAY;IACb;GACF,CAAC;;GAOO,yBAAb,MAAwE;CACtE,OAAO;CACP,yBAAiB,IAAI,KAA0B;CAC/C,OAA6C;CAC7C;CACA,SAAiB,aAAa,yBAAyB;CAEvD,YACE,IAGI,EAAE,EACN;AAEA,EADA,KAAK,OAAO,EAAQ,QAAQ,cAC5B,KAAK,kBAAkB,EAAQ;;CAGjC,QAAQ,GAAqC;CAI7C,QAAQ,GAAe,GAAiB;AACtC,EAAI,MAAU,kBACZ,KAAK,YAAY,EAAK,OAAO,EAAK,OAAO;;CAI7C,YAAoB,GAAoB,GAA0B;AAGhE,MAFA,KAAK,OAAO,IAAI,GAAY,EAAM,EAE9B,KAAK,SAAS,cAGhB,OADA,KAAK,OAAO,MAAM,mBAAmB,EAAW,IAAI,EAAM,EAChD,MAAM,WAAW,EAAW,YAAY,EAAM,UAAU;AAIlE,EADA,KAAK,OAAO,KAAK,mBAAmB,EAAW,IAAI,EAAM,QAAQ,EACjE,KAAK,kBAAkB,GAAO,EAAW;;CAI7C,YAAsC;AACpC,SAAO,IAAI,IAAI,KAAK,OAAO;;CAG7B,cAAoB;AAClB,OAAK,OAAO,OAAO;;CAGrB,MAAM,QAAQ,GAAsC;AAGlD,SADA,KAAK,OAAO,OAAO,EAAW,EACvB;;GAOE,sBAAb,MAAqE;CACnE,OAAO;CACP,6BAAqB,IAAI,KAA2B;CACpD,UAAkB;EAChB,iBAAiB;EACjB,sBAAsB;EACtB,kBAAkB;EAClB,sBAAsB;EACvB;CAED,QAAQ,GAAqC;CAI7C,QAAQ,GAAe,GAAiB;AACtC,EAAI,MAAU,iBACZ,KAAK,YAAY,EAAK,OAAO,GACpB,MAAU,yBACnB,KAAK,eAAe;;CAIxB,YAAoB,GAA0B;EAC5C,IAAM,IAAS,KAAK,WAAW,IAAI,EAAW,IAAI;GAChD;GACA,SAAS;GACT,YAAY;GACZ,aAAa;GACb,kBAAkB;GACnB;AAOD,EALA,EAAO,cACP,EAAO,UAAU,EAAO,aAAa,GACrC,EAAO,cAAc,KAAK,IAAI,GAAG,MAAM,EAAO,aAAa,GAAG,EAE9D,KAAK,WAAW,IAAI,GAAY,EAAO,EACvC,KAAK,QAAQ;;CAGf,gBAA8B;AAC5B,OAAK,QAAQ;;CAGf,UAAU,GAAkD;AAC1D,MAAI,EACF,QACE,KAAK,WAAW,IAAI,EAAW,IAAI;GACjC;GACA,SAAS;GACT,YAAY;GACZ,aAAa;GACb,kBAAkB;GACnB;EAKL,IAAM,IAAY,MAAM,KAAK,KAAK,WAAW,QAAQ,CAAC,EAChD,IAAiB,EAAU,QAAO,MAAK,EAAE,QAAQ,CAAC,QAClD,IAAe,EAAU;AAE/B,SAAO;GACL,eAAe,IAAe,IAAK,IAAiB,IAAgB,MAAM;GAC1E;GACA;GACA,gBAAgB,EAAU,QAAO,MAAK,EAAE,cAAc,GAAG,CAAC;GAC1D,iBAAiB,KAAK,wBAAwB,EAAU;GACzD;;CAGH,wBAAgC,GAAsC;EACpE,IAAMgC,IAA4B,EAAE,EAE9B,IAAkB,EAAW,QAAO,MAAK,EAAE,cAAc,GAAG;AAKlE,SAJI,EAAgB,SAAS,KAC3B,EAAgB,KAAK,GAAG,EAAgB,OAAO,mCAAmC,EAG7E;;;AAOX,SAAgB,4BACd,GACA,IAAwC,EAAE,EACtB;CACpB,IAAM,IAAW,IAAI,mBAAmB,EAAI,EAGtC,IACJ,EAAQ,SAAS,SAAA,QAAA,IAAA,aACY,gBACvB,gBACA,eACF,EAAQ,QAAQ;AAsBtB,QAnBI,EAAQ,uBAAuB,MACjC,EAAS,IAAI,IAAI,qBAAqB,CAAC,EAIrC,EAAQ,wBAAwB,MAClC,EAAS,IACP,IAAI,uBAAuB;EACzB;EACA,SAAS,EAAQ;EAClB,CAAC,CACH,EAIC,EAAQ,qBAAqB,MAC/B,EAAS,IAAI,IAAI,qBAAqB,CAAC,EAGlC;;AA6BT,MAAa,uBAAuB;ACnqBpC,SAAgB,eAAe,GAAgD;CAC7E,IAAM,EAAE,UAAO,gBAAa,cAAW,GAAG,aAAU,IAAI,GAAK,KAAK,GAG5D,IAAgB,IAAwB,KAAK,EAC7C,IAAgB,IAAI;EAAE,QAAQ;EAAG,OAAO;EAAG,CAAC,EAC5C,IAAY,IAAI,EAAE,EAIlB9B,IAAoC,EAAE,EACtCC,IAAsC,EAAE,EAExC,UAAwB;AAE5B,EADA,EAAU,SAAS,GACnB,EAAY,SAAS;IAGjB,KAAgB,GAAe,MAAiB;EACpD,IAAM,IAAW,EAAU;AAE3B,EADA,EAAU,KAAS,GACf,MAAa,MACf,EAAY,SAAS,KAAK,IAAI,EAAY,QAAQ,EAAM;IAItD,KAAwB,MAA0B;AACtD,MAAI,IAAQ,EAAG,QAAO;EACtB,IAAM,IAAS,EAAU;AACzB,MAAI,MAAW,KAAA,EACb,QAAO;EAGT,IAAM,IAAO,EAAY,EAAM;AAE/B,SADA,EAAa,GAAO,EAAK,EAClB;IAGH,KAAgB,MAA0B;AAC9C,MAAI,IAAQ,EAAG,QAAO;EAEtB,IAAM,IAAS,EAAY;AAC3B,MAAI,MAAW,KAAA,EACb,QAAO;EAGT,IAAI,IAAS;AACb,SAAO,KAAU,KAAK,EAAY,OAAY,KAAA,GAC5C;EAGF,IAAI,IAAQ,KAAU,IAAI,EAAY,KAAW;AACjD,OAAK,IAAI,IAAI,IAAS,GAAG,KAAK,GAAO,IAEnC,CADA,KAAS,EAAqB,EAAE,EAChC,EAAY,KAAK;AAGnB,SAAO,EAAY;IAGf,KAAwB,MAA0B,EAAa,IAAQ,EAAE,EACzE,KAAsB,MAA0B,EAAa,EAAM;AAGzE,OAAM,SAAa;AACjB,KAAiB;GACjB;CAEF,IAAM,KAA8B,MAA2B;EAC7D,IAAM,IAAa,EAAM;AACzB,MAAI,MAAe,EAAG,QAAO;EAE7B,IAAM,IAAS,KAAK,IAAI,GAAG,EAAO,EAC9B,IAAO,GACP,IAAQ,IAAa,GACrB,IAAS,IAAa;AAE1B,SAAO,KAAQ,IAAO;GACpB,IAAM,IAAM,KAAK,OAAO,IAAO,KAAS,EAAE;AAG1C,GAFgB,EAAmB,EAAI,GAEzB,KACZ,IAAS,GACT,IAAQ,IAAM,KAEd,IAAO,IAAM;;AAIjB,SAAO;IAGH,KAAoC,MAA2B;EACnE,IAAM,IAAa,EAAM;AACzB,MAAI,MAAe,EAAG,QAAO;EAE7B,IAAM,IAAS,KAAK,IAAI,GAAG,EAAO,EAC9B,IAAO,GACP,IAAQ,IAAa,GACrB,IAAS;AAEb,SAAO,KAAQ,IAAO;GACpB,IAAM,IAAM,KAAK,OAAO,IAAO,KAAS,EAAE;AAG1C,GAFkB,EAAqB,EAAI,IAE1B,KACf,IAAS,GACT,IAAQ,IAAM,KAEd,IAAO,IAAM;;AAIjB,SAAO;IAIH,IAAY,eACZ,EAAM,UAAU,IAAU,IACvB,EAAa,EAAM,QAAQ,EAAE,CACpC,EAGI,IAAe,eAAe;EAClC,IAAM,IAAa,EAAM;AAEzB,MAAI,MAAe,EACjB,QAAO;GACL,OAAO;GACP,KAAK;GACN;AAGH,MAAI,CAAC,EAAQ,SAAS,EAAc,MAAM,WAAW,EACnD,QAAO;GACL,OAAO;GACP,KAAK,IAAa;GACnB;EAGH,IAAM,IAAQ,EAA2B,EAAU,MAAM,EACnD,IAAiB,EAAU,QAAQ,EAAc,MAAM,QACvD,IAAqB,EAAiC,EAAe,EAErE,IACJ,KAAsB,IAClB,IAAa,IACb,KAAK,IAAI,GAAO,KAAK,IAAI,IAAqB,GAAG,EAAM,CAAC,EAG1D,IAAkB;AAEtB,EAAI,IAAiB,IACnB,IAAkB,KAAK,IAAI,IAAW,GAAG,GAAG,GACnC,IAAiB,OAC1B,IAAkB,KAAK,IAAI,IAAW,GAAG,GAAG;EAG9C,IAAM,IAAgB,KAAK,IAAI,GAAG,IAAQ,EAAgB,EACpD,IAAc,KAAK,IAAI,IAAa,GAAG,IAAU,EAAgB;AAEvE,SAAO;GACL,OAAO;GACP,KAAK;GACN;GACD,EAGI,IAAe,eAA8B;EACjD,IAAM,IAAa,EAAM;AAEzB,MAAI,MAAe,EACjB,QAAO,EAAE;AAGX,MAAI,CAAC,EAAQ,OAAO;GAClB,IAAMC,IAAuB,EAAE;AAC/B,QAAK,IAAI,IAAI,GAAG,IAAI,GAAY,KAAK;IACnC,IAAM,IAAQ,EAAqB,EAAE,EAC/B,IAAO,EAAqB,EAAE;AACpC,MAAM,KAAK;KACT,OAAO;KACP,OAAA;KACA;KACA,KAAK,IAAQ;KACd,CAAC;;AAEJ,UAAO;;EAGT,IAAMA,IAAuB,EAAE,EACzB,EAAE,UAAO,WAAQ,EAAa;AAEpC,MAAI,IAAQ,KAAK,IAAM,EACrB,QAAO;AAGT,OAAK,IAAI,IAAI,GAAO,KAAK,GAAK,KAAK;GACjC,IAAM,IAAc,EAAqB,EAAE,EACrC,IAAO,EAAqB,EAAE;AACpC,KAAM,KAAK;IACT,OAAO;IACP,OAAO;IACP;IACA,KAAK,IAAc;IACpB,CAAC;;AAGJ,SAAO;GACP,EAGI,IAAa,eAAe,EAAa,MAAM,IAAI,SAAS,EAAE,EAC9D,IAAW,eAAe,EAAa,MAAM,EAAa,MAAM,SAAS,IAAI,SAAS,EAAE,EAG1FC,IAA2B,MAC3B,IAAgB,GAChB,IAAiB,GACjB,IAAiB,GAEf,KAAgB,MAAiB;EACrC,IAAM,IAAS,EAAM,QACf,IAAc,YAAY,KAAK,EAC/B,IAAmB,EAAO,WAG1B,IAAY,IAAc;AAchC,EAbI,IAAY,MAEd,IADoB,KAAK,IAAI,IAAmB,EAAc,GAC/B,IAGjC,IAAgB,GAChB,IAAiB,GAGb,KACF,qBAAqB,EAAU,EAGjC,IAAY,4BAA4B;AAEtC,GADA,EAAU,QAAQ,GAClB,IAAY;IACZ;IAIE,KAAiB,GAAe,IAAoC,YAAY;AACpF,MAAI,CAAC,EAAc,SAAS,CAAC,EAAQ,SAAS,EAAM,UAAU,EAAG;EAEjE,IAAM,IAAa,EAAM,OACnB,IAAe,KAAK,IAAI,KAAK,IAAI,GAAO,EAAE,EAAE,IAAa,EAAE,EAC7D,IAAkB,EAAqB,EAAa,EAClD,IAAW,EAAqB,EAAa,EAC7C,IAAkB,EAAc,MAAM;AAE5C,UAAQ,GAAR;GACE,KAAK;AACH,UAAoB,IAAkB,KAAY;AAClD;GACF,KAAK;AACH,SAAmB,IAAkB;AACrC;GACF,KAAK;GACL,QACE;;EAGJ,IAAM,IAAe,KAAK,IAAI,GAAG,EAAU,QAAQ,EAAgB;AAGnE,EAFA,IAAkB,KAAK,IAAI,GAAG,KAAK,IAAI,GAAiB,EAAa,CAAC,EAEtE,EAAc,MAAM,YAAY;IAG5B,KAAoB,MAA4C;AACpE,IAAc,QAAQ;;AAoBxB,CAfA,MACE,IACC,GAAY,MAAe;AAK1B,EAJI,KACF,EAAW,oBAAoB,UAAU,EAAa,EAGpD,KACF,EAAW,iBAAiB,UAAU,GAAc,EAAE,SAAS,IAAM,CAAC;IAG1E,EAAE,WAAW,IAAM,CACpB,EAGD,kBAAkB;AAUhB,EATI,EAAc,SAChB,EAAc,MAAM,oBAAoB,UAAU,EAAa,EAE7D,KACF,qBAAqB,EAAU,EAE7B,KACF,aAAa,EAAW,EAE1B,GAAiB;GACjB;CAGF,IAAIC,IAA4B;AAyBhC,QAAO;EACL;EACA;EACA;EACA;EACA;EACA;EACA;EACA,uBAZ4B,MAAyB;AACrD,KAAU,QAAQ;;EAYnB;;AAmDH,SAAS,yBACP,GACA,GACA,IAAsB,IACd;CAER,IAAM,IAAkB,KAAK,IAAI,KAAK,IAAI,EAAY,GAAG,IAAI,EAAE,EAGzD,IAAkB,KAAK,MAAM,IAAgB,KAAmB,IAAc,GAAe;AAEnG,QAAO,KAAK,IAAI,GAAiB,EAAY;;AAG/C,SAAgB,yBAAyB,GAAoE;CAC3G,IAAM,EAAE,YAAS,mBAAgB,cAAW,GAAG,aAAU,IAAI,GAAK,KAAK,GAGjE,IAAgB,IAAwB,KAAK,EAC7C,IAAgB,IAAI;EAAE,OAAO;EAAG,QAAQ;EAAG,CAAC,EAC5C,IAAa,IAAI,EAAE,EAGnB,IAAqB,IAAI,EAAE,EAC3B,IAAc,IAAI,EAAE,EAGpBC,IAAqC,EAAE,EACvCC,IAA2C,EAAE,EAE7C,UAAyB;AAE7B,EADA,EAAW,SAAS,GACpB,EAAiB,SAAS;IAGtB,KAAiB,GAAe,MAAkB;EACtD,IAAM,IAAW,EAAW;AAE5B,EADA,EAAW,KAAS,GAChB,MAAa,MACf,EAAiB,SAAS,KAAK,IAAI,EAAiB,QAAQ,EAAM;IAIhE,KAA2B,MAA0B;AACzD,MAAI,IAAQ,EAAG,QAAO;EAEtB,IAAM,IAAS,EAAW;AAC1B,MAAI,MAAW,KAAA,EACb,QAAO;EAGT,IAAM,IAAQ,EAAe,EAAM;AAEnC,SADA,EAAc,GAAO,EAAM,EACpB;IAGH,KAAsB,MAA0B;AACpD,MAAI,IAAQ,EAAG,QAAO;EAEtB,IAAM,IAAS,EAAiB;AAChC,MAAI,MAAW,KAAA,EACb,QAAO;EAGT,IAAI,IAAS;AACb,SAAO,KAAU,KAAK,EAAiB,OAAY,KAAA,GACjD;EAGF,IAAI,IAAQ,KAAU,IAAI,EAAiB,KAAW;AACtD,OAAK,IAAI,IAAI,IAAS,GAAG,KAAK,GAAO,IAEnC,CADA,KAAS,EAAwB,EAAE,EACnC,EAAiB,KAAK;AAGxB,SAAO,EAAiB;IAGpB,KAA0B,MAA0B,EAAmB,IAAQ,EAAE,EACjF,KAAwB,MAA0B,EAAmB,EAAM;AAGjF,OAAM,SAAe;AACnB,KAAkB;IACjB,EAAE,MAAM,IAAM,CAAC;CAElB,IAAM,KAA+B,MAA2B;EAC9D,IAAM,IAAc,EAAQ,MAAM;AAClC,MAAI,MAAgB,EAAG,QAAO;EAE9B,IAAM,IAAS,KAAK,IAAI,GAAG,EAAO,EAC9B,IAAO,GACP,IAAQ,IAAc,GACtB,IAAS,IAAc;AAE3B,SAAO,KAAQ,IAAO;GACpB,IAAM,IAAM,KAAK,OAAO,IAAO,KAAS,EAAE;AAG1C,GAFkB,EAAqB,EAAI,GAE3B,KACd,IAAS,GACT,IAAQ,IAAM,KAEd,IAAO,IAAM;;AAIjB,SAAO;IAGH,KAAqC,MAA2B;EACpE,IAAM,IAAc,EAAQ,MAAM;AAClC,MAAI,MAAgB,EAAG,QAAO;EAE9B,IAAM,IAAS,KAAK,IAAI,GAAG,EAAO,EAC9B,IAAO,GACP,IAAQ,IAAc,GACtB,IAAS;AAEb,SAAO,KAAQ,IAAO;GACpB,IAAM,IAAM,KAAK,OAAO,IAAO,KAAS,EAAE;AAG1C,GAFoB,EAAuB,EAAI,IAE5B,KACjB,IAAS,GACT,IAAQ,IAAM,KAEd,IAAO,IAAM;;AAIjB,SAAO;IAIH,IAAa,eAAe;EAChC,IAAM,IAAc,EAAQ,MAAM;AAElC,SADI,MAAgB,IAAU,IACvB,EAAmB,IAAc,EAAE;GAC1C,EAGI,IAAe,eAAe;EAClC,IAAM,IAAc,EAAQ,MAAM;AAElC,MAAI,MAAgB,EAClB,QAAO;GACL,OAAO;GACP,KAAK;GACN;AAGH,MAAI,CAAC,EAAQ,SAAS,EAAc,MAAM,UAAU,EAClD,QAAO;GACL,OAAO;GACP,KAAK,IAAc;GACpB;EAGH,IAAM,IAAQ,EAA4B,EAAW,MAAM,EACrD,IAAgB,EAAW,QAAQ,EAAc,MAAM,OACvD,IAAqB,EAAkC,EAAc,EAErE,IACJ,KAAsB,IAClB,IAAc,IACd,KAAK,IAAI,GAAO,KAAK,IAAI,IAAqB,GAAG,EAAM,CAAC,EAExD,IAAkB,yBAAyB,GAAU,EAAY,MAAM,EACvE,IAAgB,KAAK,IAAI,GAAG,IAAQ,EAAgB,EACpD,IAAc,KAAK,IAAI,IAAc,GAAG,IAAU,EAAgB;AAExE,SAAO;GACL,OAAO;GACP,KAAK;GACN;GACD,EAGI,IAAiB,eAAgC;EACrD,IAAM,IAAc,EAAQ,MAAM;AAElC,MAAI,MAAgB,EAClB,QAAO,EAAE;AAGX,MAAI,CAAC,EAAQ,OAAO;GAClB,IAAMC,IAAyB,EAAE;AACjC,QAAK,IAAI,IAAI,GAAG,IAAI,GAAa,KAAK;IACpC,IAAM,IAAQ,EAAuB,EAAE,EACjC,IAAO,EAAwB,EAAE;AACvC,MAAM,KAAK;KACT,OAAO;KACP,OAAA;KACA;KACA,KAAK,IAAQ;KACd,CAAC;;AAEJ,UAAO;;EAGT,IAAMA,IAAyB,EAAE,EAC3B,EAAE,UAAO,WAAQ,EAAa;AAEpC,MAAI,IAAQ,KAAK,IAAM,EACrB,QAAO;AAGT,OAAK,IAAI,IAAI,GAAO,KAAK,GAAK,KAAK;GACjC,IAAM,IAAc,EAAuB,EAAE,EACvC,IAAO,EAAwB,EAAE;AACvC,KAAM,KAAK;IACT,OAAO;IACP,OAAO;IACP;IACA,KAAK,IAAc;IACpB,CAAC;;AAGJ,SAAO;GACP,EAGI,IAAa,eAAe,EAAe,MAAM,IAAI,SAAS,EAAE,EAChE,IAAW,eAAe,EAAe,MAAM,EAAe,MAAM,SAAS,IAAI,SAAS,EAAE,EAG9FJ,IAA2B,MACzB,KAAgB,MAAiB;EACrC,IAAM,IAAS,EAAM;AAOrB,EAJI,KACF,qBAAqB,EAAU,EAGjC,IAAY,4BAA4B;GACtC,IAAM,IAAgB,EAAO;AAO7B,GAJA,EAAY,QAAQ,IAAgB,EAAmB,OACvD,EAAmB,QAAQ,GAE3B,EAAW,QAAQ,GACnB,IAAY;IACZ;IAIE,KAAkB,GAAe,IAAoC,YAAY;AACrF,MAAI,CAAC,EAAc,SAAS,CAAC,EAAQ,SAAS,EAAQ,MAAM,WAAW,EAAG;EAE1E,IAAM,IAAc,EAAQ,MAAM,QAC5B,IAAe,KAAK,IAAI,KAAK,IAAI,GAAO,EAAE,EAAE,IAAc,EAAE,EAC9D,IAAmB,EAAuB,EAAa,EACrD,IAAc,EAAwB,EAAa,EACnD,IAAiB,EAAc,MAAM;AAE3C,UAAQ,GAAR;GACE,KAAK;AACH,UAAqB,IAAiB,KAAe;AACrD;GACF,KAAK;AACH,SAAoB,IAAiB;AACrC;GACF,KAAK;GACL,QACE;;EAGJ,IAAM,IAAgB,KAAK,IAAI,GAAG,EAAW,QAAQ,EAAe;AAGpE,EAFA,IAAmB,KAAK,IAAI,GAAG,KAAK,IAAI,GAAkB,EAAc,CAAC,EAEzE,EAAc,MAAM,aAAa;IAG7B,KAAoB,MAA4C;AACpE,IAAc,QAAQ;;AAoBxB,CAfA,MACE,IACC,GAAY,MAAe;AAK1B,EAJI,KACF,EAAW,oBAAoB,UAAU,EAAa,EAGpD,KACF,EAAW,iBAAiB,UAAU,GAAc,EAAE,SAAS,IAAM,CAAC;IAG1E,EAAE,WAAW,IAAM,CACpB,EAGD,kBAAkB;AAUhB,EATI,EAAc,SAChB,EAAc,MAAM,oBAAoB,UAAU,EAAa,EAE7D,KACF,qBAAqB,EAAU,EAE7B,KACF,aAAa,EAAW,EAE1B,GAAkB;GAClB;CAGF,IAAIC,IAA4B;AAyBhC,QAAO;EACL;EACA;EACA;EACA;EACA;EACA;EACA;EACA,uBAZ4B,MAA0B;AACtD,KAAW,QAAQ;;EAYpB;;AChsBH,SAAgB,uBACd,GAC2B;CAC3B,IAAM,EACJ,UACA,gBACA,mBAAgB,GAChB,2BAAwB,IACxB,oBAAiB,KACjB,cAAU,MAAS,GACnB,aAAU,IAAI,GAAK,KACjB,GAGE,IAAgB,IAAwB,KAAK,EAC7C,IAAgB,IAAI;EAAE,QAAQ;EAAG,OAAO;EAAG,CAAC,EAC5C,IAAY,IAAI,EAAE,EAClB,IAAa,IAAI,EAAE,EACnB,IAAc,IAAI,GAAM,EACxB,IAAiB,IAAI,EAAE,EAGvB,IAAU,IAAwB;EACtC,gBAAgB;EAChB,YAAY;EACZ,cAAc;EACd,aAAa;EACb,gBAAgB;EACjB,CAAC,EAGE,IAAiB,GACjB,IAAgB,GAChBI,IAAkC,MAGhC,KAAgB,MAAiB;EACrC,IAAM,IAAS,EAAM,QACf,IAAM,YAAY,KAAK,EAGvB,IAAmB,EAAO;AAEhC,EADA,EAAU,QAAQ,GAClB,EAAW,QAAQ,EAAO;EAG1B,IAAM,IAAY,IAAM,GAClB,IAAc,KAAK,IAAI,IAAmB,EAAc;AAmB9D,EAjBI,IAAY,MACd,EAAe,QAAQ,IAAc,GACrC,EAAQ,MAAM,iBAAiB,EAAe,QAGhD,IAAiB,GACjB,IAAgB,GAGhB,EAAY,QAAQ,IAGhB,KACF,aAAa,EAAiB,EAIhC,IAAmB,OAAO,iBAAiB;AAEzC,GADA,EAAY,QAAQ,IACpB,EAAe,QAAQ;KACtB,EAAe;;CAIpB,MAAM,EAAc;EAClB,wBAAgB,IAAI,KAAqB;EACzC,cAAgC,EAAE;EAClC,UAA2B;EAE3B,IAAI,GAAmC;AACrC,OAAI,KAAK,MAAM,IAAI,EAAM,EAAE;IAEzB,IAAM,IAAM,KAAK,YAAY,QAAQ,EAAM;AAK3C,WAJI,IAAM,MACR,KAAK,YAAY,OAAO,GAAK,EAAE,EAEjC,KAAK,YAAY,KAAK,EAAM,EACrB,KAAK,MAAM,IAAI,EAAM;;;EAKhC,IAAI,GAAe,GAAoB;AACrC,OAAI,KAAK,MAAM,IAAI,EAAM,EAAE;AACzB,SAAK,MAAM,IAAI,GAAO,EAAK;AAC3B;;AAIF,OAAI,KAAK,MAAM,QAAQ,KAAK,SAAS;IACnC,IAAM,IAAM,KAAK,YAAY,OAAO;AACpC,IAAI,MAAQ,KAAA,KACV,KAAK,MAAM,OAAO,EAAI;;AAK1B,GADA,KAAK,MAAM,IAAI,GAAO,EAAK,EAC3B,KAAK,YAAY,KAAK,EAAM;;EAG9B,QAAc;AAEZ,GADA,KAAK,MAAM,OAAO,EAClB,KAAK,cAAc,EAAE;;;CAIzB,IAAM,IAAgB,IAAI,GAAe,EAGnC,KAAwB,MAA0B;EACtD,IAAI,IAAO,EAAc,IAAI,EAAM;AAOnC,SALI,MAAS,KAAA,MACX,IAAO,EAAY,EAAM,EACzB,EAAc,IAAI,GAAO,EAAK,GAGzB;IAIH,UAAmC;AACvC,MAAI,CAAC,EAAuB,QAAO;EAGnC,IAAM,IAAqB,KAAK,IAAI,EAAe,QAAQ,IAAI,EAAE;AACjE,SAAO,KAAK,KAAK,KAAiB,IAAI,GAAoB;IAItD,IAAY,eAAe;AAC/B,MAAI,CAAC,EAAQ,SAAS,EAAM,UAAU,EAAG,QAAO;EAEhD,IAAM,IAAY,YAAY,KAAK,EAC/B,IAAO;AAEX,OAAK,IAAI,IAAI,GAAG,IAAI,EAAM,OAAO,IAC/B,MAAQ,EAAqB,EAAE;AAMjC,SAHA,EAAQ,MAAM,aAAa,YAAY,KAAK,GAAG,GAC/C,EAAQ,MAAM,cAAc,GAErB;GACP,EAGI,IAAe,eAAe;AAClC,MAAI,CAAC,EAAQ,SAAS,EAAM,UAAU,KAAK,EAAc,MAAM,WAAW,EACxE,QAAO;GAAE,OAAO;GAAG,KAAK,EAAM,QAAQ;GAAG;EAG3C,IAAM,IAAkB,EAAc,MAAM,QACtC,IAAmB,EAAU,OAG/B,IAAQ,GACR,IAAM,EAAM,QAAQ;AAGxB,SAAO,KAAS,IAAK;GACnB,IAAM,IAAM,KAAK,OAAO,IAAQ,KAAO,EAAE,EACrC,IAAY;AAEhB,QAAK,IAAI,IAAI,GAAG,KAAK,GAAK,IACxB,MAAa,EAAqB,EAAE;AAGtC,GAAI,KAAa,IACf,IAAQ,IAAM,IAEd,IAAM,IAAM;;EAIhB,IAAM,IAAa,KAAK,IAAI,GAAG,IAAQ,EAAE,EAGrC,IAAgB,GAChB,IAAW;AAEf,OAAK,IAAI,IAAI,GAAY,IAAI,EAAM,OAAO,KAAK;AAE7C,OADA,KAAiB,EAAqB,EAAE,EACpC,KAAiB,GAAiB;AACpC,QAAW;AACX;;AAEF,OAAW;;EAIb,IAAM,IAAkB,GAAoB,EACtC,IAAgB,KAAK,IAAI,GAAG,IAAa,EAAgB,EACzD,IAAc,KAAK,IAAI,EAAM,QAAQ,GAAG,IAAW,EAAgB;AAEzE,SAAO;GAAE,OAAO;GAAe,KAAK;GAAa;GACjD,EAGI,IAAe,eAAsC;EACzD,IAAM,IAAY,YAAY,KAAK;AAEnC,MAAI,CAAC,EAAQ,SAAS,EAAM,UAAU,GAAG;GAEvC,IAAME,IAA+B,EAAE,EACnC,IAAQ;AAEZ,QAAK,IAAI,IAAI,GAAG,IAAI,EAAM,OAAO,KAAK;IACpC,IAAM,IAAO,EAAqB,EAAE;AAQpC,IAPA,EAAM,KAAK;KACT,OAAO;KACP,OAAA;KACA;KACA,KAAK,IAAQ;KACb,KAAK,EAAQ,EAAE;KAChB,CAAC,EACF,KAAS;;AAIX,UADA,EAAQ,MAAM,eAAe,EAAM,QAC5B;;EAGT,IAAMA,IAA+B,EAAE,EACjC,EAAE,UAAO,WAAQ,EAAa,OAChC,IAAe;AAGnB,OAAK,IAAI,IAAI,GAAG,IAAI,GAAO,IACzB,MAAgB,EAAqB,EAAE;AAIzC,OAAK,IAAI,IAAI,GAAO,KAAK,GAAK,KAAK;GACjC,IAAM,IAAO,EAAqB,EAAE;AAQpC,GAPA,EAAM,KAAK;IACT,OAAO;IACP,OAAO;IACP;IACA,KAAK,IAAe;IACpB,KAAK,EAAQ,EAAE;IAChB,CAAC,EACF,KAAgB;;AAOlB,SAJA,EAAQ,MAAM,eAAe,EAAM,QACnC,EAAQ,MAAM,aAAa,YAAY,KAAK,GAAG,GAC/C,EAAQ,MAAM,iBAAiB,YAAY,KAAK,EAEzC;GACP,EAGI,IAAa,eAAe,EAAa,MAAM,IAAI,SAAS,EAAE,EAC9D,IAAW,eAAe,EAAa,MAAM,EAAa,MAAM,SAAS,IAAI,SAAS,EAAE;AAsF9F,QAjCA,MACE,IACC,GAAY,MAAe;AAK1B,EAJI,KACF,EAAW,oBAAoB,UAAU,EAAa,EAGpD,KACF,EAAW,iBAAiB,UAAU,GAAc,EAAE,SAAS,IAAM,CAAC;IAG1E,EAAE,WAAW,IAAM,CACpB,EAGD,MAAM,SAAa;AACjB,IAAc,OAAO;GACrB,EAGF,kBAAkB;AAUhB,EATI,EAAc,SAChB,EAAc,MAAM,oBAAoB,UAAU,EAAa,EAE7D,KACF,aAAa,EAAiB,EAKhC,EAAc,OAAO;GACrB,EAEK;EACL;EACA;EACA;EACA;EACA;EACA,aAAa,eAAe,EAAY,MAAM;EAC9C,SAAS,eAAe,EAAQ,MAAM;EACtC,gBA3FqB,GAAe,IAAoC,YAAY;AACpF,OAAI,CAAC,EAAc,SAAS,CAAC,EAAQ,MAAO;GAE5C,IAAI,IAAkB;AAGtB,QAAK,IAAI,IAAI,GAAG,IAAI,GAAO,IACzB,MAAmB,EAAqB,EAAE;GAI5C,IAAM,IAAW,EAAqB,EAAM,EACtC,IAAkB,EAAc,MAAM;AAE5C,WAAQ,GAAR;IACE,KAAK;AACH,WAAoB,IAAkB,KAAY;AAClD;IACF,KAAK;AACH,UAAmB,IAAkB;AACrC;IACF,KAAK;IACL,QACE;;AAOJ,GAHA,IAAkB,KAAK,IAAI,GAAG,KAAK,IAAI,GAAiB,EAAU,QAAQ,EAAgB,CAAC,EAG3F,EAAc,MAAM,SAAS;IAC3B,KAAK;IACL,UAAU;IACX,CAAC;;EA2DF,iBAxDsB,MAAmB;AACpC,KAAc,SAEnB,EAAc,MAAM,SAAS;IAC3B,KAAK;IACL,UAAU;IACX,CAAC;;EAmDF,mBAhDwB,MAA4C;AACpE,KAAc,QAAQ;;EAgDvB;;AC9TH,SAAgB,wBACd,GAC4B;CAC5B,IAAM,EACJ,eACA,aACA,eACA,kBACA,YACA,cAAW;EAAE,MAAM;EAAG,SAAS;EAAG,KAChC,GAME,IAAa,IAAI,EAAE,EACnB,IAAY,IAAI,EAAE,EAOlB,IAAiB,eAAe;EACpC,OAAO;EACP,aAAa;EACb,UAAU,EAAS,QAAQ;EAC3B,SAAS,eAAe,EAAS,QAAQ,GAAG;EAC7C,CAAC,EAOI,oBAAkB,IAAI,KAAqB,EAE3C,KAAiB,MAA8B;EACnD,IAAM,IAAW,EAAO;AACxB,MAAI,EAAgB,IAAI,EAAS,CAC/B,QAAO,EAAgB,IAAI,EAAS;EAGtC,IAAM,IAAO,EAAO,SAAA;AAEpB,SADA,EAAgB,IAAI,GAAU,EAAK,EAC5B;;AAIT,aACQ,EAAW,MAAM,OAAO,eACxB;AACJ,IAAgB,OAAO;IAEzB,EAAE,MAAM,IAAM,CACf;CAGD,IAAM,IAAuB,eACpB,EAAW,MAAM,OAAO,QAAQ,QACpC,GAAK,MAAQ,IAAM,EAAc,EAAI,EACtC,EACD,CACD,EAGI,IAAoB,eAAe;EACvC,IAAM,IAAU,EAAW,MAAM,OAAO,SAClC,IAAiB,EAAc,MAAM,OACrC,IAAgB,EAAW,MAAM,KAAK,OACtC,IAAiB,EAAW,MAAM,MAAM,OACxC,IAAiB,IAAiB,IAAgB;AAExD,MAAI,EAAQ,WAAW,KAAK,KAAkB,EAC5C,QAAO;GAAE,OAAO;GAAG,KAAK;GAAI;EAG9B,IAAI,IAAQ,GACR,IAAmB;AAGvB,OAAK,IAAI,IAAI,GAAG,IAAI,EAAQ,QAAQ,KAAK;GACvC,IAAM,IAAS,EAAQ;AACvB,OAAI,CAAC,EAAQ;GAEb,IAAM,IAAa,EAAc,EAAO;AAExC,OAAI,IAAmB,IAAa,EAAW,OAAO;AACpD,QAAQ;AACR;;AAGF,QAAoB;;EAItB,IAAI,IAAM,GACN,IAAe;AAEnB,OAAK,IAAI,IAAI,GAAO,IAAI,EAAQ,QAAQ,KAAK;GAC3C,IAAM,IAAS,EAAQ;AACvB,OAAI,CAAC,EAAQ;GAEb,IAAM,IAAa,EAAc,EAAO;AAIxC,OAHA,KAAgB,GAChB,IAAM,GAEF,KAAgB,EAClB;;EAKJ,IAAM,IAAgB,KAAK,IAAI,GAAG,KAAS,EAAS,WAAW,GAAG,EAC5D,IAAc,KAAK,IAAI,EAAQ,SAAS,GAAG,KAAO,EAAS,WAAW,GAAG;AAE/E,SAAO;GACL,OAAO;GACP,KAAK;GACN;GACD,EAGI,IAAuB,eAAgC;EAC3D,IAAM,IAAU,EAAW,MAAM,OAAO,SAClC,EAAE,UAAO,WAAQ,EAAkB;AAEzC,MAAI,IAAQ,EAAK,QAAO,EAAE;EAE1B,IAAME,IAAkC,EAAE,EACtC,IAAe;AAGnB,OAAK,IAAI,IAAI,GAAG,IAAI,GAAO,KAAK;GAC9B,IAAM,IAAS,EAAQ;AACvB,GAAI,MACF,KAAgB,EAAc,EAAO;;AAKzC,OAAK,IAAI,IAAI,GAAO,KAAK,GAAK,KAAK;GACjC,IAAM,IAAS,EAAQ;AACvB,OAAI,CAAC,EAAQ;GAEb,IAAM,IAAO,EAAc,EAAO;AAUlC,GARA,EAAe,KAAK;IAClB,OAAO;IACP,OAAO;IACP;IACA,KAAK,IAAe;IACpB;IACD,CAAC,EAEF,KAAgB;;AAGlB,SAAO;GACP,EAOI,IAAW,gBAAiC;EAChD,SAAS,EAAW,MAAM,KAAK;EAC/B,MAAM,EAAe,aAAa;EAClC,OAAO,EAAW,MAAM,KAAK;EAC9B,EAAE,EAGG,IAAY,gBAAiC;EACjD,SAAS,EAAW,MAAM,MAAM;EAChC,MAAM,EAAe,aAAa;EAClC,OAAO,EAAW,MAAM,MAAM;EAC/B,EAAE,EAGG,IAAa,eAAsC;EACvD,IAAM,IAAiB,EAAqB,OACtC,IAAc,EAAe,aAAa,OAC1C,IAAO,EAAQ,OAGfC,IAAgC,EAAE;AAExC,OAAK,IAAM,KAAW,GAAa;GACjC,IAAM,IAAW,EAAQ,OACnB,IAAM,EAAK,IACXC,IAA0B,EAAE;AAElC,QAAK,IAAM,KAAW,GAAgB;IACpC,IAAM,IAAc,EAAQ,OACtB,IAAS,EAAQ;AAEvB,MAAS,KAAK;KACZ;KACA;KACA;KACA,OAAO,IAAM,EAAO;KACpB,SAAS,KAAO,EAAE;KACnB,CAAC;;AAGJ,KAAa,KAAK,EAAS;;AAG7B,SAAO;GACL;GACA;GACA;GACA,OAAO,EAAW,MAAM,OAAO;GAC/B,YAAY,EAAqB;GAClC;GACD,EAOI,IAAmB,eAAe,EAAW,MAAM,EAGnD,IAAkB,gBAAgB;EACtC,OAAO,EAAqB;EAC5B,QAAQ,EAAe,UAAU;EAClC,EAAE,EAMG,KAAgB,GAAa,MAAmB;AAEpD,IAAe,cAAc,GAAK,QAAQ;EAG1C,IAAM,IAAgB,EAAW,MAAM,OAAO;AAC9C,EAAI,KAAU,KAAK,IAAS,EAAc,UACxC,EAAe,GAAQ,QAAQ;IAI7B,KAAkB,GAAgB,IAAoC,YAAY;EACtF,IAAM,IAAU,EAAW,MAAM,OAAO;AACxC,MAAI,IAAS,KAAK,KAAU,EAAQ,OAAQ;EAE5C,IAAM,IAAiB,EAAc,MAAM,OACrC,IAAgB,EAAW,MAAM,KAAK,OACtC,IAAiB,EAAW,MAAM,MAAM,OACxC,IAAiB,IAAiB,IAAgB,GAEpD,IAAmB;AAGvB,OAAK,IAAI,IAAI,GAAG,IAAI,GAAQ,KAAK;GAC/B,IAAM,IAAM,EAAQ;AACpB,GAAI,MACF,KAAoB,EAAc,EAAI;;EAK1C,IAAM,IAAe,EAAQ;AAC7B,MAAI,CAAC,EAAc;EAEnB,IAAM,IAAa,EAAc,EAAa;AAE9C,UAAQ,GAAR;GACE,KAAK;AACH,UAAqB,IAAiB,KAAc;AACpD;GACF,KAAK;AACH,SAAoB,IAAiB;AACrC;GACF,KAAK;GACL,QAEE;;EAIJ,IAAM,IAAgB,KAAK,IAAI,GAAG,EAAqB,QAAQ,EAAe;AAG9E,EAFA,IAAmB,KAAK,IAAI,GAAG,KAAK,IAAI,GAAkB,EAAc,CAAC,EAEzE,EAAW,QAAQ;;AAoCrB,QApBA,MACE,IACC,MAAS;AACR,IAAe,iBAAiB,EAAK;IAEvC,EAAE,WAAW,IAAM,CACpB,EAMD,kBAAkB;AAChB,IAAgB,OAAO;GACvB,EAMK;EACL;EACA;EACA;EACA;EACA;EACA,uBAvC4B,MAA0C;AAKtE,GAJA,EAAU,QAAQ,EAAO,KACzB,EAAW,QAAQ,EAAO,MAG1B,EAAe,qBAAqB,EAAO,IAAI;;EAmC/C;EACA;EACA;EACA;EACD;;ACjaH,IAAM,WAAS,aAAa,mBAAmB,EAwBlC,kBAAb,MAA6B;CAC3B,4BAAoB,IAAI,KAAiB;CACzC,yBAAiB,IAAI,KAAa;CAClC,4BAAoB,IAAI,KAAa;CACrC,4BAAoB,IAAI,KAGrB;CAGH,SAAS,GAA2B;AAClC,OAAK,UAAU,IAAI,EAAQ;;CAI7B,WAAW,GAAsB,GAAuB;EACtD,IAAM,IAAK,OAAO,WAAW,GAAU,EAAM;AAE7C,SADA,KAAK,OAAO,IAAI,EAAG,EACZ;;CAIT,YAAY,GAAsB,GAA0B;EAC1D,IAAM,IAAK,OAAO,YAAY,GAAU,EAAS;AAEjD,SADA,KAAK,UAAU,IAAI,EAAG,EACf;;CAIT,iBACE,GACA,GACA,GACA,GACM;AAON,EANA,EAAO,iBAAiB,GAAO,GAAS,EAAQ,EAE3C,KAAK,UAAU,IAAI,EAAO,IAC7B,KAAK,UAAU,IAAI,GAAQ,EAAE,CAAC,EAGhC,KAAK,UAAU,IAAI,EAAO,CAAE,KAAK;GAAE;GAAO;GAAS;GAAS,CAAC;;CAI/D,aAAa,GAAkB;AAE7B,EADA,aAAa,EAAG,EAChB,KAAK,OAAO,OAAO,EAAG;;CAIxB,cAAc,GAAkB;AAE9B,EADA,cAAc,EAAG,EACjB,KAAK,UAAU,OAAO,EAAG;;CAI3B,UAAgB;AA2Bd,EAzBA,KAAK,UAAU,SAAQ,MAAW;AAChC,OAAI;AACF,OAAS;YACF,GAAO;AACd,aAAO,KAAK,yBAAyB,EAAE,QAAQ,oBAAoB,EAAE,EAAM;;IAE7E,EAGF,KAAK,OAAO,SAAQ,MAAM,aAAa,EAAG,CAAC,EAG3C,KAAK,UAAU,SAAQ,MAAM,cAAc,EAAG,CAAC,EAG/C,KAAK,UAAU,SAAS,GAAW,MAAW;AAC5C,KAAU,SAAS,EAAE,UAAO,YAAS,iBAAc;AACjD,MAAO,oBAAoB,GAAO,GAAS,EAAQ;KACnD;IACF,EAGF,KAAK,UAAU,OAAO,EACtB,KAAK,OAAO,OAAO,EACnB,KAAK,UAAU,OAAO,EACtB,KAAK,UAAU,OAAO;;GAKb,gBAAb,MAA2B;CACzB,eAAkF,EAAE;CACpF;CACA;CACA;CAEA,YAAY,IAAqB,KAAM,IAAsB,KAAK;AAEhE,EADA,KAAK,YAAY,IAAc,OAAO,MACtC,KAAK,WAAW,kBAAkB;AAChC,QAAK,SAAS;KACb,EAAW;;CAGhB,UAAwB;AACtB,MAAI,YAAY,aAAa;GAC3B,IAAM,IAAU,YAAoB,QAC9B,IAAc;IAClB,WAAW,KAAK,KAAK;IACrB,MAAM,EAAO;IACb,OAAO,EAAO;IACf;AAUD,GARA,KAAK,aAAa,KAAK,EAAY,EAG/B,KAAK,aAAa,SAAS,MAC7B,KAAK,aAAa,OAAO,EAIvB,KAAK,eAAe,EAAY,OAAO,KAAK,aAC9C,KAAK,YAAY,EAAY,QAAQ,OAAO,MAAM;;;CAKxD,kBAAkB,GAA2C;AAC3D,OAAK,cAAc;;CAGrB,kBAA0D;AACxD,MAAI,YAAY,aAAa;GAC3B,IAAM,IAAU,YAAoB;AACpC,UAAO;IACL,MAAM,EAAO,kBAAkB,OAAO;IACtC,OAAO,EAAO,mBAAmB,OAAO;IACzC;;AAEH,SAAO;;CAGT,aAAwE;AACtE,SAAO,CAAC,GAAG,KAAK,aAAa;;CAG/B,UAAgB;AAGd,EAFA,cAAc,KAAK,SAAS,EAC5B,KAAK,eAAe,EAAE,EACtB,KAAK,cAAc,KAAA;;;AA2IvB,SAAgB,sBAAsB;CAEpC,IAAM,IAAkB,IAAI,iBAAiB,EACvC,IAAgB,IAAI,eAAe,EACnC,IAAc,IAA4C,KAAK,EAC/D,IAAgB,IAAI,GAAM;AAahC,CAVA,EAAc,mBAAkB,MAAS;AAEvC,EADA,EAAc,QAAQ,IACtB,SAAO,KAAK,+BAA+B,EAAM,QAAQ,EAAE,CAAC,IAAI;GAChE,EAOF,EAAgB,kBAJgB;AAC9B,IAAY,QAAQ,EAAc,iBAAiB;IAGN,IAAK;CAGpD,IAAM,IAAc,MAAM,IAAe,MAAW;AAClD,MAAI,GAAS;AAEX,OAAI,QAAQ,OACV,KAAI;AACA,WAAe,IAAI;WACN;AACf,aAAO,KAAK,mBAAmB;;AAKnC,KAAgB,iBAAiB;AAC/B,MAAc,QAAQ;MACrB,IAAM;;GAEX;AASF,QANA,kBAAkB;AAGhB,EAFA,GAAa,EACb,EAAgB,SAAS,EACzB,EAAc,SAAS;GACvB,EAEK;EACL;EACA;EACA;EACA,6BAA6B,EAAc,iBAAiB;EAC5D,wBAAwB,EAAc,YAAY;EAClD,oBAAoB;AAElB,OADA,EAAgB,SAAS,EACrB,QAAQ,OACV,KAAI;AACA,WAAe,IAAI;WACN;AACf,aAAO,KAAK,mBAAmB;;;EAItC;;ACnXH,IAAM,WAAS,aAAa,wBAAwB,EAgBvC,aAAb,MAAwB;CACtB,SAAiB;CACjB,WAAmB,YAAY,KAAK;CACpC,MAAc;CACd,4BAAoB,IAAI,KAA4B;CACpD,QAA+B;CAC/B,YAAoB;CAEpB,QAAc;AACR,OAAK,cAET,KAAK,YAAY,IACjB,KAAK,WAAW,YAAY,KAAK,EACjC,KAAK,SAAS,GACd,KAAK,MAAM;;CAGb,OAAa;AAEX,EADA,KAAK,YAAY,IACjB,AAEE,KAAK,WADL,qBAAqB,KAAK,MAAM,EACnB;;CAIjB,SAAS,GAA6C;AAEpD,SADA,KAAK,UAAU,IAAI,EAAS,QACf,KAAK,UAAU,OAAO,EAAS;;CAG9C,IAAI,aAAqB;AACvB,SAAO,KAAK;;CAGd,OAAqB;AACnB,MAAI,CAAC,KAAK,UAAW;AAErB,OAAK;EACL,IAAM,IAAM,YAAY,KAAK;AAU7B,EARI,IAAM,KAAK,YAAY,QACzB,KAAK,MAAM,KAAK,MAAO,KAAK,SAAS,OAAS,IAAM,KAAK,UAAU,EACnE,KAAK,SAAS,GACd,KAAK,WAAW,GAEhB,KAAK,UAAU,SAAQ,MAAY,EAAS,KAAK,IAAI,CAAC,GAGxD,KAAK,QAAQ,4BAA4B,KAAK,MAAM,CAAC;;GAK5C,iBAAb,MAA4B;CAC1B,eAAqF,EAAE;CACvF,+BAAuB,IAAI,KAAqB;CAChD,kBAA0B;CAE1B,MAAM,GAAoB;AACxB,OAAK,aAAa,IAAI,GAAM,YAAY,KAAK,CAAC;;CAGhD,IAAI,GAAsB;EACxB,IAAM,IAAY,KAAK,aAAa,IAAI,EAAK;AAC7C,MAAI,CAAC,EAEH,QADA,SAAO,KAAK,wCAAwC,IAAO,EACpD;EAGT,IAAM,IAAW,YAAY,KAAK,GAAG;AAcrC,SAbA,KAAK,aAAa,OAAO,EAAK,EAE9B,KAAK,aAAa,KAAK;GACrB;GACA;GACA,WAAW,KAAK,KAAK;GACtB,CAAC,EAGE,KAAK,aAAa,SAAS,KAAK,mBAClC,KAAK,aAAa,OAAO,EAGpB;;CAGT,WAAW,GAAc,IAAkB,IAAY;EACrD,IAAM,IAAS,KAAK,aAAa,QAAO,MAAK,EAAE,SAAS,EAAK,CAAC,MAAM,CAAC,EAAQ;AAI7E,SAFI,EAAO,WAAW,IAAU,IAEzB,EAAO,QAAQ,GAAK,MAAM,IAAM,EAAE,UAAU,EAAE,GAAG,EAAO;;CAGjE,SAAuE;AACrE,SAAO,CAAC,GAAG,KAAK,aAAa;;CAG/B,QAAc;AAEZ,EADA,KAAK,eAAe,EAAE,EACtB,KAAK,aAAa,OAAO;;GAKhB,2BAAb,MAAsC;CACpC,eAAuE,EAAE;CACzE,aAAqB;CACrB,YAAoB,YAAY,KAAK;CACrC,aAAqB;CAErB,QAAc;AAIZ,EAHA,KAAK,aAAa,IAClB,KAAK,eAAe,EAAE,EACtB,KAAK,aAAa,GAClB,KAAK,YAAY,YAAY,KAAK;;CAGpC,aAAa,GAAwB;AAC9B,OAAK,eAEV,KAAK,aAAa,KAAK;GACrB,WAAW,YAAY,KAAK;GAC5B;GACD,CAAC,EAEF,KAAK;;CAGP,OAAqE;AACnE,MAAI,CAAC,KAAK,WAAY,QAAO;GAAE,QAAQ;GAAG,eAAe;GAAG,WAAW;GAAG;AAE1E,OAAK,aAAa;EAGlB,IAAM,IADM,YAAY,KAAK,GACN,KAAK,WACtB,IAAU,KAAK,aAAa,MAAQ,GAGtC,IAAe,GACf,IAAY;AAEhB,OAAK,IAAI,IAAI,GAAG,IAAI,KAAK,aAAa,QAAQ,KAAK;GACjD,IAAM,IAAU,KAAK,aAAa,GAAI,YAAY,KAAK,aAAa,IAAI,GAAI;AAI5E,GAHA,KAAgB,GAGZ,IAAU,SACZ;;EAIJ,IAAM,IAAgB,KAAgB,KAAK,aAAa,SAAS,MAAM;AAEvE,SAAO;GACL,QAAQ,KAAK,MAAM,EAAO;GAC1B,eAAe,KAAK,MAAM,IAAgB,IAAI,GAAG;GACjD;GACD;;GAKQ,mBAAb,MAA8B;CAC5B,UAAkB,IAMf;EACD,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,MAAM;EACP,CAAC;CAEF,cAAc;AACZ,OAAK,sBAAsB;;CAG7B,uBAAqC;AAEnC,MAAI,yBAAyB,OAC3B,KAAI;AA+BkB,GA9BA,IAAI,qBAAoB,MAAQ;IAClD,IAAM,IAAU,EAAK,YAAY,EAC3B,IAAY,EAAQ,EAAQ,SAAS;AAC3C,SAAK,QAAQ,MAAM,MAAM,EAAU;KACnC,CACU,QAAQ,EAAE,YAAY,CAAC,2BAA2B,EAAE,CAAC,EAG7C,IAAI,qBAAoB,MAAQ;IAElD,IAAM,IADU,EAAK,YAAY,CACR,MAAK,MAAS,EAAM,SAAS,yBAAyB;AAC/E,IAAI,MACF,KAAK,QAAQ,MAAM,MAAM,EAAS;KAEpC,CACU,QAAQ,EAAE,YAAY,CAAC,QAAQ,EAAE,CAAC,EAG1B,IAAI,qBAAoB,MAAQ;IAClD,IAAI,IAAW;AACf,SAAK,IAAM,KAAS,EAAK,YAAY,CACnC,CAAK,EAAM,mBACT,KAAY,EAAM;AAGtB,SAAK,QAAQ,MAAM,MAAM;KACzB,CACU,QAAQ,EAAE,YAAY,CAAC,eAAe,EAAE,CAAC,EAGjC,IAAI,qBAAoB,MAAQ;IAElD,IAAM,IADU,EAAK,YAAY,CACN;AAC3B,IAAI,MACF,KAAK,QAAQ,MAAM,MAAM,EAAW,kBAAkB,EAAW;KAEnE,CACU,QAAQ,EAAE,YAAY,CAAC,cAAc,EAAE,CAAC;WAC7C,GAAO;AACd,YAAO,KAAK,6CAA6C,EAAE,QAAQ,yBAAyB,EAAE,EAAM;;AAKxG,MAAI,iBAAiB,UAAU,YAAY,aAAa;GACtD,IAAM,IAAS,YAAY;AAC3B,QAAK,QAAQ,MAAM,OAAO,EAAO,gBAAgB,EAAO;;;CAI5D,aAAa;AACX,SAAO,KAAK;;GAKH,uBAAb,MAAkC;CAChC,wBAAgB,IAAI,KAAgD;CACpE,UAA6F,EAAE;CAE/F,QAAQ,GAAc,GAA+C;AACnE,OAAK,MAAM,IAAI,GAAM,EAAK;;CAG5B,MAAM,SAEJ;AACA,OAAK,UAAU,EAAE;AAEjB,OAAK,IAAM,CAAC,GAAU,MAAS,KAAK,MAAM,SAAS,CACjD,KAAI;GACF,IAAM,IAAU,MAAM,GAAM,EACtB,IAAS,KAAK,oBAAoB,EAAQ;AAEhD,QAAK,QAAQ,KAAK;IAChB;IACA;IACA;IACD,CAAC;WACK,GAAO;AAEd,GADA,SAAO,MAAM,4BAA4B,KAAY,EAAE,QAAQ,yBAAyB,EAAE,EAAM,EAChG,KAAK,QAAQ,KAAK;IAChB;IACA,SAAS,KAAK,mBAAmB;IACjC,QAAQ;IACT,CAAC;;AAIN,SAAO,KAAK;;CAGd,oBAA4B,GAAsC;EAEhE,IAAM,IAAa;GACjB,KAAK;GACL,eAAe;GACf,aAAa;GACb,eAAe;GACf,oBAAoB;GACrB;AAED,SACE,EAAQ,OAAO,EAAW,OAC1B,EAAQ,iBAAiB,EAAW,iBACpC,EAAQ,eAAe,EAAW,eAClC,EAAQ,iBAAiB,EAAW,iBACpC,EAAQ,sBAAsB,EAAW;;CAI7C,oBAAgD;AAC9C,SAAO;GACL,KAAK;GACL,eAAe;GACf,aAAa;GACb,eAAe;GACf,sBAAsB;GACtB,wBAAwB;GACxB,uBAAuB;GACvB,oBAAoB;GACpB,WAAW,KAAK,KAAK;GACtB;;CAGH,aAAa;AACX,SAAO,KAAK;;CAGd,iBAAyB;EACvB,IAAM,IAAS,KAAK,QAAQ,QAAO,MAAK,EAAE,OAAO,CAAC,QAC5C,IAAQ,KAAK,QAAQ,QAEvB,IAAS;AAab,SAZA,KAAU,8BACV,KAAU,WAAW,EAAO,GAAG,EAAM,OAErC,KAAK,QAAQ,SAAQ,MAAU;GAC7B,IAAM,IAAS,EAAO,SAAS,MAAM;AAKrC,GAJA,KAAU,GAAG,EAAO,GAAG,EAAO,SAAS,KACvC,KAAU,WAAW,EAAO,QAAQ,IAAI,KACxC,KAAU,mBAAmB,EAAO,QAAQ,cAAc,QAAQ,EAAE,CAAC,OACrE,KAAU,cAAc,EAAO,QAAQ,YAAY,QAAQ,EAAE,CAAC,OAC9D,KAAU,sBAAsB,EAAO,QAAQ,cAAc,QAAQ,EAAE,CAAC;IACxE,EAEK;;;AAKX,SAAgB,2BAA2B;CAEzC,IAAM,IAAa,IAAI,YAAY,EAC7B,IAAiB,IAAI,gBAAgB,EACrC,IAAgB,IAAI,0BAA0B,EAC9C,IAAY,IAAI,kBAAkB,EAElC,IAAa,IAAI,GAAG,EACpB,IAAe,IAAI,GAAM,EAE3BG,IAAsC,MAGpC,UAAwB;AACxB,IAAa,UAEjB,EAAa,QAAQ,IACrB,EAAW,OAAO,EAGlB,IAAiB,EAAW,UAAS,MAAO;AAC1C,KAAW,QAAQ;IACnB;IAGE,UAAuB;AAG3B,EAFA,EAAa,QAAQ,IACrB,EAAW,MAAM,EACjB,AAEE,OADA,GAAgB,EACC;IAKf,IAAgB,OAAO,GAAc,OACzC,EAAe,MAAM,EAAK,EAC1B,MAAM,GAAU,EACC,EAAe,IAAI,EAAK,GAKrC,UAAyB,EAAc,OAAO,EAC9C,KAAoB,MAAqB,EAAc,aAAa,EAAS,EAC7E,UAAuB,EAAc,MAAM,EAG3C,UAAuC;EAC3C,IAAM,IAAS,YAAY,cAAe,YAAoB,SAAS;AAEvE,SAAO;GACL,KAAK,EAAW;GAChB,eAAe,EAAe,WAAW,SAAS;GAClD,aAAa,IAAS,EAAO,kBAAkB,OAAO,QAAQ;GAC9D,eAAe;GACf,sBAAsB,EAAU,YAAY,CAAC,MAAM,OAAO;GAC1D,wBAAwB,EAAU,YAAY,CAAC,MAAM,OAAO;GAC5D,uBAAuB,EAAU,YAAY,CAAC,MAAM,OAAO;GAC3D,oBAAoB,EAAU,YAAY,CAAC,MAAM,OAAO;GACxD,WAAW,KAAK,KAAK;GACtB;;AA4BH,QALA,kBAAkB;AAEhB,EADA,GAAgB,EAChB,EAAe,OAAO;GACtB,EAEK;EAEL;EACA;EACA,kBAAkB,EAAU,YAAY;EAGxC;EACA;EAGA;EACA;EACA;EACA;EAGA;EACA,sBAAsB,EAAe,QAAQ;EAG7C,wBA7C6B,GAAe,MACrC,YAAyC;GAC9C,IAAM,IAAY,YAAY,KAAK;AAGnC,GADA,MAAM,GAAQ,EACd,MAAM,UAAU;GAEhB,IAAM,IAAU,YAAY,KAAK;AAGjC,UAAO;IACL,GAHiB,GAAY;IAI7B,eAAe,IAAU;IACzB,WAAW,KAAK,KAAK;IACtB;;EAkCH,uBAAuB,IAAI,sBAAsB;EAClD;;AAIH,eAAsB,mBACpB,GACA,GACA,IAAqB,KAC4E;CACjG,IAAMM,IAAkB,EAAE;AAE1B,MAAK,IAAI,IAAI,GAAG,IAAI,GAAY,KAAK;EACnC,IAAM,IAAQ,YAAY,KAAK;AAC/B,QAAM,GAAW;EACjB,IAAM,IAAM,YAAY,KAAK;AAC7B,IAAM,KAAK,IAAM,EAAM;;CAGzB,IAAM,IAAY,EAAM,QAAQ,GAAK,MAAS,IAAM,GAAM,EAAE,EACtD,IAAU,IAAY,GACtB,IAAU,KAAK,IAAI,GAAG,EAAM,EAC5B,IAAU,KAAK,IAAI,GAAG,EAAM;AAElC,QAAO;EACL;EACA,SAAS,KAAK,MAAM,IAAU,IAAI,GAAG;EACrC,SAAS,KAAK,MAAM,IAAU,IAAI,GAAG;EACrC,SAAS,KAAK,MAAM,IAAU,IAAI,GAAG;EACrC,WAAW,KAAK,MAAM,IAAY,IAAI,GAAG;EAC1C;;ACjfH,IAAa,cAAb,MAA8D;CAC5D,OAAoB,EAAE;CACtB,iCAAyB,IAAI,KAAQ;CACrC;CACA;CACA;CAEA,YACE,GACA,UAA2C,IAC3C,IAAsB,KACtB;AAGA,EAFA,KAAK,gBAAgB,GACrB,KAAK,eAAe,GACpB,KAAK,cAAc;;CAGrB,UAAa;EACX,IAAI,IAAU,KAAK,KAAK,KAAK;AAO7B,SALA,AACE,MAAU,KAAK,eAAe,EAGhC,KAAK,eAAe,IAAI,EAAQ,EACzB;;CAGT,QAAQ,GAAkB;AACnB,OAAK,eAAe,IAAI,EAAQ,KAErC,KAAK,eAAe,OAAO,EAAQ,EACnC,KAAK,aAAa,EAAQ,EAEtB,KAAK,KAAK,SAAS,KAAK,eAC1B,KAAK,KAAK,KAAK,EAAQ;;CAI3B,QAAc;AAEZ,EADA,KAAK,OAAO,EAAE,EACd,KAAK,eAAe,OAAO;;CAG7B,IAAI,QAAQ;AACV,SAAO;GACL,UAAU,KAAK,KAAK;GACpB,gBAAgB,KAAK,eAAe;GACpC,eAAe,KAAK,KAAK,SAAS,KAAK,eAAe;GACvD;;;AAKL,SAAgB,2BAA2B,GAA4B;AAErE,CADA,EAAQ,MAAM,YAAY,iBAC1B,EAAQ,MAAM,aAAa;;AAS7B,SAAgB,oBACd,GACA,IAAkB;CAAC;CAAU;CAAS;CAAQ,EACxC;AACN,GAAQ,MAAM,UAAU,EAAM,KAAK,IAAI;;AAIzC,IAAa,aAAb,MAAwB;CACtB,UAAqC,EAAE;CACvC,QAA+B;CAE/B,IAAI,GAA6B;AAE/B,EADA,KAAK,QAAQ,KAAK,EAAU,EAC5B,KAAK,UAAU;;CAGjB,WAAyB;AACnB,EAEJ,KAAK,UAAQ,4BAA4B;AAGvC,GAFmB,KAAK,QAAQ,OAAO,EAAE,CAC9B,SAAQ,MAAM,GAAI,CAAC,EAC9B,KAAK,QAAQ;IACb;;CAGJ,QAAc;AAMO,EALnB,AAEE,KAAK,WADL,qBAAqB,KAAK,MAAM,EACnB,OAGI,KAAK,QAAQ,OAAO,EAAE,CAC9B,SAAQ,MAAM,GAAI,CAAC;;CAGhC,QAAc;AAKZ,EAJA,AAEE,KAAK,WADL,qBAAqB,KAAK,MAAM,EACnB,OAEf,KAAK,UAAU,EAAE;;GAKR,iBAAb,MAA4B;CAC1B,4BAAoB,IAAI,KAA2D;CACnF;CACA;CAEA,YAAY,GAAwB;AAMlC,EALA,KAAK,YAAY,GACjB,KAAK,eAAe,KAAK,YAAY,KAAK,KAAK,EAC/C,KAAK,UAAU,iBAAiB,SAAS,KAAK,cAAc,EAAE,SAAS,IAAM,CAAC,EAC9E,KAAK,UAAU,iBAAiB,YAAY,KAAK,cAAc,EAAE,SAAS,IAAM,CAAC,EACjF,KAAK,UAAU,iBAAiB,aAAa,KAAK,cAAc,EAAE,SAAS,IAAM,CAAC,EAClF,KAAK,UAAU,iBAAiB,WAAW,KAAK,cAAc,EAAE,SAAS,IAAM,CAAC;;CAGlF,GAAG,GAAmB,GAAkB,GAAwD;EAC9F,IAAM,IAAM,GAAG,EAAU,GAAG;AAI5B,EAHK,KAAK,UAAU,IAAI,EAAI,IAC1B,KAAK,UAAU,IAAI,mBAAK,IAAI,KAAK,CAAC,EAEpC,KAAK,UAAU,IAAI,EAAI,CAAE,IAAI,EAAQ;;CAGvC,IAAI,GAAmB,GAAkB,GAAwD;EAC/F,IAAM,IAAM,GAAG,EAAU,GAAG,KACtB,IAAW,KAAK,UAAU,IAAI,EAAI;AACxC,EAAI,MACF,EAAS,OAAO,EAAQ,EACpB,EAAS,SAAS,KACpB,KAAK,UAAU,OAAO,EAAI;;CAKhC,YAAoB,GAAoB;EACtC,IAAM,IAAS,EAAM;AAChB,QAEL,MAAK,IAAM,CAAC,GAAK,MAAa,KAAK,UAAU,SAAS,EAAE;GACtD,IAAM,CAAC,GAAW,KAAY,EAAI,MAAM,IAAI;AAC5C,OAAI,EAAM,SAAS,KAAa,GAAU;IACxC,IAAM,IAAiB,EAAO,QAAQ,EAAS;AAC/C,IAAI,KAAkB,KAAK,UAAU,SAAS,EAAe,IAC3D,EAAS,SAAQ,MAAW,EAAQ,GAAO,EAAe,CAAC;;;;CAMnE,UAAgB;AAKd,EAJA,KAAK,UAAU,oBAAoB,SAAS,KAAK,aAAa,EAC9D,KAAK,UAAU,oBAAoB,YAAY,KAAK,aAAa,EACjE,KAAK,UAAU,oBAAoB,aAAa,KAAK,aAAa,EAClE,KAAK,UAAU,oBAAoB,WAAW,KAAK,aAAa,EAChE,KAAK,UAAU,OAAO;;GAmDb,eAAb,MAA0B;CACxB,0BAAkB,IAAI,KAA0C;CAChE,QAA+B;CAE/B,SAAS,GAAsB,GAAkB,GAAqB;AAMpE,EALK,KAAK,QAAQ,IAAI,EAAQ,IAC5B,KAAK,QAAQ,IAAI,GAAS,EAAE,CAAC,EAG/B,KAAK,QAAQ,IAAI,EAAQ,CAAE,KAAY,GACvC,KAAK,UAAU;;CAGjB,UAAU,GAAsB,GAAsC;AAMpE,EALK,KAAK,QAAQ,IAAI,EAAQ,IAC5B,KAAK,QAAQ,IAAI,GAAS,EAAE,CAAC,EAG/B,OAAO,OAAO,KAAK,QAAQ,IAAI,EAAQ,EAAG,EAAO,EACjD,KAAK,UAAU;;CAGjB,WAAyB;AACnB,EAEJ,KAAK,UAAQ,4BAA4B;AACvC,QAAK,IAAM,CAAC,GAAS,MAAW,KAAK,QAAQ,SAAS,CACpD,QAAO,OAAO,EAAQ,OAAO,EAAO;AAGtC,GADA,KAAK,QAAQ,OAAO,EACpB,KAAK,QAAQ;IACb;;CAGJ,QAAc;AACZ,EAEE,KAAK,WADL,qBAAqB,KAAK,MAAM,EACnB;AAGf,OAAK,IAAM,CAAC,GAAS,MAAW,KAAK,QAAQ,SAAS,CACpD,QAAO,OAAO,EAAQ,OAAO,EAAO;AAEtC,OAAK,QAAQ,OAAO;;;AAKxB,SAAgB,0BAA0B;CACxC,IAAM,IAAU,IAAI,kBACZ;EACJ,IAAM,IAAM,SAAS,cAAc,MAAM;AAIzC,SAHA,EAAI,YAAY,kBAChB,oBAAoB,EAAI,EACxB,2BAA2B,EAAI,EACxB;KAET,MAAO;AAKL,EAHA,EAAI,MAAM,YAAY,IACtB,EAAI,MAAM,SAAS,IACnB,EAAI,YAAY,IAChB,EAAI,YAAY;GAEnB,EAEK,IAAW,IAAI,kBACb;EACJ,IAAM,IAAO,SAAS,cAAc,MAAM;AAE1C,SADA,EAAK,YAAY,mBACV;KAET,MAAQ;AAIN,EAFA,EAAK,YAAY,IACjB,EAAK,YAAY,mBACjB,EAAK,MAAM,QAAQ;GAEtB,EAEK,IAAe,IAAI,cAAc;AAEvC,QAAO;EACL,kBAAkB,EAAQ,SAAS;EACnC,aAAa,MAAwB,EAAQ,QAAQ,EAAsB;EAC3E,mBAAmB,EAAS,SAAS;EACrC,cAAc,MAAyB,EAAS,QAAQ,EAAuB;EAC/E,aAAa,GAAsB,MAAmC;AACpE,KAAa,UAAU,GAAS,EAAO;;EAEzC,mBAAmB,EAAa,OAAO;EACvC,iBAAiB;GACf,MAAM,EAAQ;GACd,OAAO,EAAS;GACjB;EACD,eAAe;AAGb,GAFA,EAAQ,OAAO,EACf,EAAS,OAAO,EAChB,EAAa,OAAO;;EAEvB;;ACnPH,IAAM,sBAAN,MAA0B;CACxB;CACA;CAEA,YAAY,IAAoB,KAAM;AACpC,OAAK,YAAY;;CAGnB,MAAM,eACJ,GACA,GACA,GACc;AACd,MAAI,EAAK,UAAU,KAAK,UACtB,QAAO,MAAM,EAAU,GAAM,EAAE;EAGjC,IAAMH,IAAc,EAAE,EAChB,IAAU,KAAK,KAAK,EAAK,SAAS,KAAK,UAAU;AAEvD,OAAK,IAAI,IAAI,GAAG,IAAI,GAAS,KAAK;AAChC,OAAI,GAAQ,QACV,OAAU,MAAM,qBAAqB;GAGvC,IAAM,IAAQ,IAAI,KAAK,WACjB,IAAM,KAAK,KAAK,IAAI,KAAK,KAAK,WAAW,EAAK,OAAO,EACrD,IAAQ,EAAK,MAAM,GAAO,EAAI,EAE9B,IAAY,MAAM,EAAU,GAAO,EAAE;AAI3C,GAHA,EAAO,KAAK,GAAG,EAAU,EAGrB,IAAI,IAAU,KAChB,MAAM,IAAI,SAAQ,MAAW,WAAW,GAAS,EAAE,CAAC;;AAIxD,SAAO;;CAGT,QAAc;AACZ,EAAI,KAAK,mBACP,KAAK,gBAAgB,OAAO;;GAM5B,mBAAN,MAAuB;CACrB,+BAAuB,IAAI,KAAuB;CAClD,kBAAmC;CAEnC,MAAM,GAAiC;EACrC,IAAM,IAAY,YAAY,KAAK;AAEnC,eAAqB;GACnB,IAAM,IAAW,YAAY,KAAK,GAAG;AAErC,UADA,KAAK,kBAAkB,GAAW,EAAS,EACpC;;;CAIX,kBAA0B,GAAmB,GAAwB;AACnE,EAAK,KAAK,aAAa,IAAI,EAAU,IACnC,KAAK,aAAa,IAAI,GAAW,EAAE,CAAC;EAGtC,IAAM,IAAe,KAAK,aAAa,IAAI,EAAU;AAIrD,EAHA,EAAa,KAAK,EAAS,EAGvB,EAAa,SAAS,KAAK,mBAC7B,EAAa,OAAO;;CAIxB,eAAe,GAA2B;EACxC,IAAM,IAAe,KAAK,aAAa,IAAI,EAAU;AAGrD,SAFI,CAAC,KAAgB,EAAa,WAAW,IAAU,IAEhD,EAAa,QAAQ,GAAK,MAAS,IAAM,GAAM,EAAE,GAAG,EAAa;;CAG1E,WAAW,GAA6E;EACtF,IAAM,IAAe,KAAK,aAAa,IAAI,EAAU,IAAI,EAAE;AAM3D,SAJI,EAAa,WAAW,IACnB;GAAE,KAAK;GAAG,KAAK;GAAG,KAAK;GAAG,OAAO;GAAG,GAGtC;GACL,KAAK,EAAa,QAAQ,GAAK,MAAS,IAAM,GAAM,EAAE,GAAG,EAAa;GACtE,KAAK,KAAK,IAAI,GAAG,EAAa;GAC9B,KAAK,KAAK,IAAI,GAAG,EAAa;GAC9B,OAAO,EAAa;GACrB;;CAGH,QAAc;AACZ,OAAK,aAAa,OAAO;;;AAK7B,SAAgB,gBACd,GACA,IAA+B,EAAE,EACb;CAEpB,IAAM,IAAS,aAAa,eAAe,EAErC,EACJ,mBAAgB,IAChB,kBAAe,KACf,qBAAkB,IAClB,mBAAgB,OAChB,gBAAa,OACX,GAGE,IAAe,IAA+B,EAAE,CAAC,EACjD,IAAe,IAAI,GAAM,EACzB,IAAY,IAAkB,KAAK,EACnC,IAAU,IAAyB;EACvC,kBAAkB;EAClB,iBAAiB;EACjB,gBAAgB;EAChB,YAAY;EACZ,aAAa;EACb,qBAAqB;EACtB,CAAC,EAGI,IAAkB,IAAI,oBAAoB,EAAa,EACvD,IAAW,IAAgB,IAAI,kBAAkB,GAAG,MACtDC,IAAiC,MAG/B,IAAS,eACyC;EACpD;EACA;EACA;EACA;EACA;EACD,CAEiB,KAAI,MAAQ;EAC5B,IAAM,IAAoB,EAAa,MACpC,QAAO,MAAK,EAAE,SAAS,KAAQ,EAAE,QAAQ,CACzC,MAAM,GAAG,MAAM,EAAE,WAAW,EAAE,SAAS,EAEpC,IAAe,GAAU,WAAW,EAAK,IAAI;GAAE,KAAK;GAAG,KAAK;GAAG,KAAK;GAAG,OAAO;GAAG;AAEvF,SAAO;GACL,MAAM;GACN,cAAc;GACd,SAAS;IACP,gBAAgB,EAAa;IAC7B,aAAa,EAAa;IAC1B,iBAAiB,EAAa;IAC9B,YAAY;IACb;GACF;GACD,CACF,EAGI,IAAc,OAAO,GAAiB,MAA0C;AACpF,MAAI,EAAa,MAEf,QADA,EAAO,KAAK,2CAA2C,EAChD;AAIT,EADA,EAAa,QAAQ,IACrB,EAAU,QAAQ;EAElB,IAAM,IAAY,YAAY,KAAK,EAC/B,IAAc,CAAC,GAAG,EAAK,EACvB,IAAkB;AAEtB,MAAI;AAUF,QAAK,IAAM,KAR2C;IACpD;IACA;IACA;IACA;IACA;IACD,EAEmC;IAClC,IAAM,IAAoB,EAAa,MACpC,QAAO,MAAK,EAAE,SAAS,KAAa,EAAE,QAAQ,CAC9C,MAAM,GAAG,MAAM,EAAE,WAAW,EAAE,SAAS;AAE1C,QAAI,EAAkB,WAAW,EAAG;IAEpC,IAAM,IAAgB,GAAU,MAAM,EAAU;AAEhD,QAAI;AAEF,UAAK,IAAM,KAAe,GAAmB;MAC3C,IAAM,IAAsB,GAAU,MAAM,GAAG,EAAU,GAAG,EAAY,OAAO;AAE/E,UAAI,KAAmB,EAAY,SAAS,EAE1C,KAAc,MAAM,EAAgB,eAAe,GAAa,OAAM,MAAS;OAC7E,IAAM,IAAS,MAAM,EAAY,QAAQ,GAAO,EAAQ;AACxD,cAAO,MAAM,QAAQ,EAAO,GAAG,IAAU,CAAC,EAAO;QACjD;WACG;OAEL,IAAM,IAAS,MAAM,EAAY,QAAQ,GAAa,EAAQ;AAC9D,WAAc,MAAM,QAAQ,EAAO,GAAG,IAAU,CAAC,EAAO;;AAG1D,WAAuB;;AAGzB;aACO,GAAO;AAGd,SAFA,EAAO,MAAM,YAAY,EAAU,UAAU;MAAE,QAAQ;MAAgB,OAAO;MAAW,EAAE,EAAM,EAE7F,MAAkB,QACpB,OAAM;AAGR,KAAI,MAAkB,UACpB,EAAU,QAAQ,GAClB,EAAQ,MAAM;;AAIlB,SAAiB;;GAInB,IAAM,IAAY,YAAY,KAAK,GAAG;AAsBtC,UArBI,MACF,EAAQ,QAAQ;IACd,kBAAkB;IAClB;IACA,gBAAgB,EAAY;IAC5B,YAAY,EAAQ,MAAM;IAC1B,aAAa,KAAK,KAAK;IACvB,qBAAqB,EAAY,UAAU,IAAY;IACxD,GAIC,KACF,EAAI,OAAO,0BAA0B;IACnC,eAAe,EAAK;IACpB,gBAAgB,EAAY;IAC5B,gBAAgB;IAChB;IACD,CAAC,EAGG;WACA,GAAO;AAQd,OAPA,EAAU,QAAQ,GAClB,EAAQ,MAAM,cAEV,KACF,EAAI,OAAO,uBAAuB;IAAE;IAAO,OAAO;IAAiB,CAAC,EAGlE,MAAkB,QACpB,OAAM;AAIR,UAAO;YACC;AACR,KAAa,QAAQ;;IAKnB,KAAwB,GAAiB,MACtC,IAAI,SAAS,GAAS,MAAW;AAKtC,EAJI,KACF,aAAa,EAAgB,EAG/B,IAAkB,OAAO,WAAW,YAAY;AAC9C,OAAI;IACF,IAAM,IAAS,MAAM,EAAY,GAAM,EAAQ;AAC/C,MAAQ,EAAO;YACR,GAAO;AACd,MAAO,EAAM;;KAEd,EAAW;GACd,EAIE,KAAkB,MAA+C;AAErE,MAAI,CAAC,EAAY,QAAQ,CAAC,EAAY,QACpC,OAAU,MAAM,8DAA8D;AAShF,EALA,EAAkB,EAAY,KAAK,EAGnC,EAAa,MAAM,KAAK,EAAE,GAAG,GAAa,CAAC,EAEvC,MAEF,EAAI,OAAO,0BAA0B;GAAE,MAAM,EAAY;GAAM,MAAM,EAAY;GAAM,CAAC,EAExF,EAAI,OAAO,+BAA+B;GAAE,MAAM,EAAY;GAAM;GAAa,CAAC;IAIhF,KAAqB,MAAuB;EAChD,IAAM,IAAQ,EAAa,MAAM,WAAU,MAAK,EAAE,SAAS,EAAK;AAChE,MAAI,MAAU,IAAI;GAChB,IAAM,IAAU,EAAa,MAAM,OAAO,GAAO,EAAE,CAAC;AAEpD,GAAI,KAAO,KACT,EAAI,OAAO,4BAA4B;IAAE;IAAM,MAAM,EAAQ;IAAM,CAAC;;;AA4F1E,QATA,kBAAkB;AAMhB,EALI,KACF,aAAa,EAAgB,EAE/B,EAAgB,OAAO,EACvB,EAAa,QAAQ,EAAE,EACvB,GAAU,OAAO;GACjB,EAEK;EAEL,cAAc,eAAe,EAAa,MAAM;EAChD,SAAS,eAAe,EAAQ,MAAM;EACtC;EACA;EAGA,aAAa,IAAa,IAAI,IAAuB;EAGrD;EACA;EACA,oBApGyB,MAAuB;GAChD,IAAM,IAAc,EAAa,MAAM,MAAK,MAAK,EAAE,SAAS,EAAK;AACjE,GAAI,MACF,EAAY,UAAU;;EAkGxB,qBA9F0B,MAAuB;GACjD,IAAM,IAAc,EAAa,MAAM,MAAK,MAAK,EAAE,SAAS,EAAK;AACjE,GAAI,MACF,EAAY,UAAU;;EA4FxB,kBAxFuB,MACnB,IACK,EAAa,MAAM,QAAO,MAAK,EAAE,SAAS,EAAK,GAEjD,CAAC,GAAG,EAAa,MAAM;EAuF9B,gBAnFqB,MAAiD;AAOtE,GANI,IACF,EAAa,QAAQ,EAAa,MAAM,QAAO,MAAK,EAAE,SAAS,EAAK,GAEpE,EAAa,QAAQ,EAAE,EAGrB,KACF,EAAI,OAAO,yBAAyB,EAAE,SAAM,CAAC;;EA4E/C,oBAxE+B;AAU/B,GATA,EAAQ,QAAQ;IACd,kBAAkB;IAClB,iBAAiB;IACjB,gBAAgB;IAChB,YAAY;IACZ,aAAa;IACb,qBAAqB;IACtB,EAED,GAAU,OAAO;;EAiEjB,WA7DgB,OAChB,GACA,IAAqB,OACoB;GACzC,IAAME,IAAkB,EAAE;AAE1B,QAAK,IAAI,IAAI,GAAG,IAAI,GAAY,KAAK;IACnC,IAAM,IAAQ,YAAY,KAAK;AAC/B,UAAM,EAAY,EAAK;IACvB,IAAM,IAAM,YAAY,KAAK;AAC7B,MAAM,KAAK,IAAM,EAAM;;GAGzB,IAAM,IAAY,EAAM,QAAQ,GAAK,MAAS,IAAM,GAAM,EAAE,EACtD,IAAc,IAAY,GAC1B,IAAU,KAAK,IAAI,GAAG,EAAM,EAC5B,IAAU,KAAK,IAAI,GAAG,EAAM,EAC5B,IAAa,EAAK,UAAU,IAAc;AAEhD,UAAO;IACL;IACA;IACA;IACA;IACA;IACA;IACD;;EAoCF;;AAIH,MAAa,oBAAoB;CAE/B,0BACE,GACA,GACA,IAAmB,OACU;EAC7B,MAAM;EACN;EACA;EACA,SAAS;EACT,UAAU,MAAoB,EAAK,OAAO,EAAS;EACpD;CAGD,wBACE,GACA,GACA,IAAmB,OACU;EAC7B,MAAM;EACN;EACA;EACA,SAAS;EACT,UAAU,MAAoB,CAAC,GAAG,EAAK,CAAC,KAAK,EAAO;EACrD;CAGD,6BACE,GACA,GACA,IAAmB,OACU;EAC7B,MAAM;EACN;EACA;EACA,SAAS;EACT,UAAU,MAAoB,EAAK,IAAI,EAAY;EACpD;CAGD,yBACE,GACA,GACA,GACA,IAAmB,OACU;EAC7B;EACA;EACA;EACA,SAAS;EACT,SAAS,OAAO,MACP,MAAM,EAAa,IAAO,MAAc,GAG7C;EAEL;CACF;ACrjBD,SAAgB,iBAA+B;AAE7C,KAAI,OAAO,YAAc,IACvB,QAAO;EACL,OAAO;EACP,WAAW;EACX,SAAS;EACT,UAAU;EACV,aAAa;EACb,gBAAgB;EACjB;CAGH,IAAM,IAAY,UAAU,WACtB,IAAW,UAAU,UAGrB,IAAQ,uBAAuB,KAAK,EAAS,IACnC,UAAkB,eAAe,aAAa,WAChD,mCAAmC,KAAK,EAAS,EAGzD,IAAY,MAAM,KAAK,EAAS,IAClB,UAAkB,eAAe,aAAa,aAChD,UAAU,KAAK,EAAU,EAGrC,IAAU,QAAQ,KAAK,EAAS,IACpB,UAAkB,eAAe,aAAa,WAChD,MAAM,KAAK,EAAS,EAG9B,IAAW,gBAAgB,KAAK,EAAU,IAC/B,mBAAmB,KAAK,EAAS,IAC/B,UAAkB,eAAe,WAAW;AAE/D,QAAO;EACL;EACA;EACA;EACA;EACA,aAAa,IAAQ,QAAQ;EAC7B,gBAAgB,IAAQ,MAAM;EAC/B;;AAMH,SAAgB,eAAe,GAA4C;AACzE,QAAO,EAAM,WAAW,EAAM;;AAMhC,SAAgB,qBAA6B;AAC3C,QAAO,gBAAgB,CAAC;;AAM1B,SAAgB,uBAA+B;AAC7C,QAAO,gBAAgB,CAAC;;AAM1B,SAAgB,eAAe,GAAa,IAAwB,IAAc;CAChF,IAAM,IAAW,gBAAgB;AAMjC,QAJK,IAIE,GAAG,EAAS,YAAY,GAAG,MAHzB;;AASX,SAAgB,qBAAqB,GAAa,IAAwB,IAAc;CACtF,IAAM,IAAW,gBAAgB;AAMjC,QAJK,IAIE,GAAG,EAAS,eAAe,GAAG,MAH5B;;ACrGX,IAAI,UAAU,GACR,aAAa,KAAK,QAAQ,CAAC,SAAS,GAAG,CAAC,MAAM,GAAG,EAAE;AAUzD,SAAgB,oBAAoB,GAAwB;AAC1D,YAAW,UAAU,KAAK;CAC1B,IAAM,IAAY,KAAK,KAAK,CAAC,SAAS,GAAG;AACzC,QAAO,GAAG,EAAO,GAAG,QAAQ,GAAG,aAAa;;AAe9C,SAAgB,gBACd,GACA,GACmB;CACnB,IAAM,IAAS,oBAAoB,EAAO,EACpC,IAAS,EAAE;AAEjB,MAAK,IAAM,KAAO,EAChB,GAAO,KAAO,GAAG,EAAO,GAAG;AAG7B,QAAO;;ACjDT,IAAMC,uBAAsD;CAAC;CAAQ;CAAS;CAAS;AAEvF,SAAS,wBAAwB,GAA4C;AAI3E,QAHI,MAAU,UAAU,MAAU,UACzB,IAEF;;AAMT,SAAgB,oBACd,GACA,GACS;AAKT,KAJI,CAAC,KAAe,CAAC,KAIjB,EAAY,aAAa,EAAa,GACxC,QAAO;CAGT,IAAM,IAAe,wBAAwB,EAAa,OAAO;AACjE,QAAO,EAAY,WAAW;;AAMhC,SAAgB,wBAAwB,GAAsD;AAC5F,KAAI,CAAC,EACH,QAAO;CAGT,IAAM,IAAa,wBAAwB,EAAO,OAAO;AACzD,QAAO,qBAAqB,SAAS,EAAW,GAAG,IAAa;;ACblE,SAAgB,uBAAuB,GASpC;CACD,IAAM,EAAE,aAAU,gBAAa,mBAAgB,KAAK,mBAAgB,OAAS,GAEzEC,IAAuB,MACvBC,IAA+B,MAC/BC,IAA4B,MAC5B,IAAc,IAGd,IAAiB,GACjB,IAAgB,GAChB,IAAiB,GACjBC,IAAkC;EAAE,YAAY;EAAG,UAAU;EAAG,WAAW;EAAG,EAE5E,KAAqB,MAAiC;AAC1D,MAAI,CAAC,EACH,QAAO;GAAE,YAAY;GAAG,UAAU;GAAG,WAAW;GAAG;EAGrD,IAAM,IAAS,EAAM,QACf,IAAc,YAAY,KAAK,EAC/B,IAAoB,EAAO,cAAc,GACzC,IAAmB,EAAO,aAAa,GAEvC,IAAY,IAAc;AAChC,MAAI,IAAY,GAAG;GACjB,IAAM,IAAkB,KAAK,IAAI,IAAoB,EAAe,EAC9D,IAAiB,KAAK,IAAI,IAAmB,EAAc,EAE3D,IAAqB,IAAkB,GACvC,IAAmB,IAAiB,GACpC,IAAY,KAAK,KAAK,KAAsB,IAAI,KAAoB,EAAE;AAE5E,OAAkB;IAChB,YAAY;IACZ,UAAU;IACV;IACD;;AAOH,SAJA,IAAiB,GACjB,IAAgB,GAChB,IAAiB,GAEV;IAGH,UAAoB;AACpB,OAAe,CAAC,MAEpB,IAAc,IACd,IAAQ,4BAA4B;AAKlC,GAJA,AAEE,OADA,EAAS,GAAa,EAAgB,EACxB,OAEhB,IAAc;IACd;;AA0CJ,QAAO;EACL,eAxCoB,MAAiB;AAWrC,GATA,EAAkB,EAAM,EAGxB,IAAc,GAGd,GAAa,EAGT,MACE,MAAkB,QACpB,aAAa,EAAc,EAE7B,IAAgB,OAAO,iBAAiB;AAItC,IAHA,EAAY,EAAM,EAClB,IAAgB,MAEhB,IAAkB;KAAE,YAAY;KAAG,UAAU;KAAG,WAAW;KAAG;MAC7D,EAAc;;EAqBnB,eAjBoB;AAUpB,GATI,MAAU,SACZ,qBAAqB,EAAM,EAC3B,IAAQ,OAEN,MAAkB,SACpB,aAAa,EAAc,EAC3B,IAAgB,OAElB,IAAc,MACd,IAAc;;EAQd,mBALwB;EAMzB;;AAMH,SAAgB,aAAa,GAK1B;CACD,IAAM,IAAU,uBAAuB,EAAQ;AAG/C,KAAI,OAAO,SAAW,OAAe,iBAAiB,YAAY;EAChE,IAAM,EAAE,aAAA,MAAgB;AACxB,UAAkB,EAAQ,SAAS,CAAC;;AAGtC,QAAO;;ACvBT,MAGa,kBAAkB;CAC7B,yBAAyB;CACzB,8BAA8B;CAC9B,mBAAmB;CACnB,wBAAwB;CACxB,kBAAkB;CAClB,sBAAsB;CACtB,eAAe;CACf,uBAAuB,OAAO,MAAQ,OAAe,IAAI,SAAS,aAAa,gBAAgB;CAC/F,uBAAuB,OAAO,uBAAyB;CACvD,iBAAiB,OAAO,iBAAmB;CAC3C,sBAAsB,OAAO,sBAAwB;CACrD,aAAa,OAAO,SAAW;CAC/B,kBAAkB,OAAO,kBAAoB;CAC9C;AAMD,eAAsB,sBAAqC;AAEzD,KAAI,OAAO,SAAW,KAAa;EACjC,IAAM,EAAE,gCAAA,MAAmC,MAAM,OAAO;AACxD,KAAgC;;;AAOpC,SAAgB,iBAAiB;AAC/B,QAAO;EACL,SAAS;EACT,UAAU;EACV,SAAS;GACP,gBAAgB;GAChB,wBAAwB;GACxB,6BAA6B;GAC7B,yBAAyB;GACzB,kBAAkB;GAClB,uBAAuB;GACvB,iBAAiB;GACjB,qBAAqB;GACrB,cAAc;GACf;EACF;;AAMH,MAAa,kBAAkB;CAI7B,sBAAsB,GAAe,IAAqB,QAAQ;EAChE;EACA,mBAAmB;EACnB,UAAU;EACV,SAAS;EACV;CAKD,gCAAgC,GAAe,IAAqB,QAAQ;EAC1E;EACA,mBAAmB;EACnB,eAAe;EACf,uBAAuB;EACvB,gBAAgB;EACjB;CAKD,8BAA8B,GAAkB,IAAoB,IAAI,IAAsB,SAAS;EACrG;EACA,kBAAkB;EAClB,SAAS,EAAE;EACX,sBAAsB;EACtB,UAAU;GAAE,MAAM;GAAG,SAAS;GAAG;EACjC,SAAS;GAAE,UAAU;GAAM,YAAY;GAAM;EAC9C;CAKD,2BAA2B;EACzB,UAAU;EACV,UAAU;EACV,WAAW;EACX,iBAAiB;EAClB;CAKD,4BAA4B;EAC1B,WAAW;EACX,uBAAuB;EACvB,sBAAsB;EACtB,iBAAiB;EAClB;CACF;AChOD,IAAa,mBAAb,MAA8B;CAC5B,4BAAoB,IAAI,KAA8B;CACtD,4BAAoB,IAAI,KAA+B;CACvD,kBAAyC;CACzC,SAAiB,aAAa,mBAAmB;CAKjD,SAAS,GAAc,GAAgC;AACrD,OAAK,UAAU,IAAI,GAAM,EAAQ;;CAMnC,WAAW,GAAoB;EAE7B,IAAM,IAAW,KAAK,UAAU,IAAI,EAAK;AASzC,EARI,KACF,EAAS,SAAS,SAAS,EAG7B,KAAK,UAAU,OAAO,EAAK,EAC3B,KAAK,UAAU,OAAO,EAAK,EAGvB,KAAK,oBAAoB,MAC3B,KAAK,kBAAkB;;CAO3B,eAAyB;AACvB,SAAO,MAAM,KAAK,KAAK,UAAU,MAAM,CAAC;;CAM1C,IAAI,GAAuB;AACzB,SAAO,KAAK,UAAU,IAAI,EAAK;;CAMjC,YACE,GACA,GACA,GACA,GACyB;EAEzB,IAAM,IAAU,KAAK,UAAU,IAAI,EAAK;AACxC,MAAI,CAAC,EAEH,QADA,KAAK,OAAO,MAAM,aAAa,EAAK,qBAAqB,EAClD;EAIT,IAAI,IAAW,KAAK,UAAU,IAAI,EAAK;AACvC,MAAI,EAKF,QAHI,KAAW,EAAS,SAAS,gBAC/B,EAAS,SAAS,aAAa,EAAQ,EAElC;AAIT,MAAI;AAcF,UAZA,IAAW;IACT,UAFe,EAAQ,EAAQ;IAG/B;IACA,SAAS,KAAW,EAAE;IACtB,UAAU;KACR,2BAAW,IAAI,MAAM;KACrB,0BAAU,IAAI,MAAM;KACpB,aAAa;KACd;IACF,EAED,KAAK,UAAU,IAAI,GAAM,EAAS,EAC3B;WACA,GAAO;AAEd,UADA,KAAK,OAAO,MAAM,8BAA8B,EAAK,KAAK,EAAM,EACzD;;;CAOX,MAAM,SACJ,GACA,GACA,GACA,GACkC;AAClC,MAAI;AAEF,OAAI,KAAK,iBAAiB;IACxB,IAAM,IAAU,KAAK,UAAU,IAAI,KAAK,gBAAgB;AACxD,IAAI,KACF,MAAM,EAAQ,SAAS,SAAS;;GAKpC,IAAM,IAAc,KAAK,YAAY,GAAM,GAAM,GAAK,EAAQ;AAC9D,OAAI,CAAC,EACH,QAAO;AAKT,GADA,MAAM,EAAY,SAAS,MAAM,GAAM,EAAI,EAC3C,EAAY,SAAS,2BAAW,IAAI,MAAM;GAG1C,IAAM,IAAQ,EAAI,UAAU;AAC5B,OAAI,GAAO;IACT,IAAM,IAAc,KAAK,iBAAiB,GAAO,EAAM,QAAQ,EAAE,CAAC;AAElE,IADA,EAAY,SAAS,OAAO,GAAO,EAAM,WAAW,EAAE,EAAE,EAAY,EACpE,EAAY,SAAS;;AAIvB,UADA,KAAK,kBAAkB,GAChB;WACA,GAAO;AAEd,UADA,KAAK,OAAO,MAAM,iCAAiC,EAAK,KAAK,EAAM,EAC5D;;;CAOX,aAAsC;AAEpC,SADK,KAAK,mBACH,KAAK,UAAU,IAAI,KAAK,gBAAgB,IADb;;CAOpC,iBAAgC;AAC9B,SAAO,KAAK;;CAMd,OAAO,GAAkB,GAAsB,GAAuB;EACpE,IAAM,IAAU,KAAK,YAAY;AACjC,MAAI,GAAS;GACX,IAAM,IAAc,KAAK,iBAAiB,GAAO,EAAK;AAEtD,GADA,EAAQ,SAAS,OAAO,GAAO,GAAS,EAAY,EACpD,EAAQ,SAAS;;;CAOrB,WAAW,GAAe,GAAsB;EAC9C,IAAM,IAAU,KAAK,YAAY;AACjC,EAAI,KAAW,EAAQ,SAAS,UAC9B,EAAQ,SAAS,OAAO,GAAO,EAAO;;CAO1C,UAAgB;AACd,OAAK,IAAM,CAAC,GAAM,MAAa,KAAK,UAClC,KAAI;AACF,KAAS,SAAS,SAAS;WACpB,GAAO;AACd,QAAK,OAAO,MAAM,+BAA+B,EAAK,KAAK,EAAM;;AAKrE,EADA,KAAK,UAAU,OAAO,EACtB,KAAK,kBAAkB;;CAMzB,WAUE;EACA,IAAM,IAAY,MAAM,KAAK,KAAK,UAAU,MAAM,CAAC,CAAC,KAAI,MAAQ;GAC9D,IAAM,IAAW,KAAK,UAAU,IAAI,EAAK;AACzC,UAAO;IACL;IACA,aAAa,CAAC,CAAC;IACf,aAAa,GAAU,SAAS,eAAe;IAC/C,UAAU,GAAU,SAAS;IAC9B;IACD;AAEF,SAAO;GACL,YAAY,KAAK,UAAU;GAC3B,WAAW,KAAK,UAAU;GAC1B,SAAS,KAAK;GACd;GACD;;CAGH,iBAAyB,GAAkB,GAA+B;EACxE,IAAM,IAAY,GAAO,QAAQ,aAAa;AAE9C,SAAO,EAAK,KAAK,GAAK,MAAU;GAC9B,IAAM,IAAQ,GAAK;AAGnB,UAAO;IACL,IAHS,OAAO,KAAU,YAAY,OAAO,KAAU,WAAW,IAAQ;IAI1E;IACA,MAAM;IACN,KAAK,IAAQ;IACb,QAAQ;IACR,SAAS;IACV;IACD;;;AAON,MAAa,mBAAmB,IAAI,kBAAkB;AA4HtD,SAAgB,yBAA2C;AACzD,QAAO,IAAI,kBAAkB;;AAM/B,SAAgB,eACd,GACA,GACA,GACA,GACkC;AAClC,QAAO,iBAAiB,SAAS,GAAM,GAAM,GAAK,EAAQ;;AAM5D,SAAgB,qBAA8C;AAC5D,QAAO,iBAAiB,YAAY;;AAMtC,SAAgB,wBAAkC;AAChD,QAAO,iBAAiB,cAAc;;ACvPxC,SAAgB,mBAAmB,GAAyE;AAC1G,QAAO,UAAU,MACd,EAAe,SAAS,SACxB,EAAe,SAAS,cACxB,EAAe,SAAS,WACxB,EAAe,SAAS,UACxB,EAAe,SAAS;;AAO7B,MAAa,6BAA6B;CACxC,KAAK;EACH,OAAO;EACP,UAAU;EACV,QAAQ;EACT;CACD,UAAU;EACR,OAAO;EACP,UAAU;EACV,QAAQ;EACT;CACD,OAAO;EACL,OAAO;EACP,UAAU;EACV,QAAQ;EACT;CACD,MAAM;EACJ,OAAO;EACP,UAAU;EACV,QAAQ;EACT;CACD,SAAS;EACP,OAAO;EACP,UAAU;EACV,QAAQ;EACT;CACF,EAKYG,gCAAwD;CACnE;CACA;CACA;CACA;CACD;ACnMD,SAAgB,2BAA2B,GAA4B,IAAgB,GAAW;AAChG,QAAO,gBAAgB,EAAK,GAAG;;AAMjC,SAAgB,0BACd,GACA,IAAgB,GACG;CACnB,IAAM,IAAW,2BAA2B,EAAI;AAEhD,QAAO;EACL,GAAG;EACH,IAAI,EAAI,MAAM,2BAA2B,EAAI,MAAM,EAAM;EACzD,OAAO,EAAI,SAAS,gBAAgB,EAAI;EACxC,OAAO,EAAI,SAAS;EACpB,QAAQ,EAAI,UAAU,EAAS;EAC/B,OAAO,EAAI,SAAS,EAAS;EAC7B,UAAU,EAAI,YAAY,EAAS;EACnC,WAAW,EAAI,aAAa;EAC5B,aAAa,EAAI,eAAe;EAChC,UAAU;EACV,YAAY;EACZ,SAAS,EAAI,WAAW;EACzB;;AAsEH,SAAgB,sBAAsB,GAAmD;CACvF,IAAM,IAAa,EAAQ,OAAO,mBAAmB,EAC/C,IAAgB,EAAQ,QAAO,MAAK,CAAC,mBAAmB,EAAE,CAAC,EAE3D,IAAiB,EACpB,QAAO,MAAK,EAAE,WAAW,OAAO,CAChC,MAAM,GAAG,MAAM;EACd,IAAM,IAAS,EAAU,MACnB,IAAS,EAAU,MACnB,IAAS,8BAA8B,QAAQ,EAAM,EACrD,IAAS,8BAA8B,QAAQ,EAAM;AAC3D,UAAQ,MAAW,KAAK,MAAM,MAAW,MAAW,KAAK,MAAM;GAC/D,EAEE,IAAkB,EAAW,QAAO,MAAK,EAAE,WAAW,QAAQ;AAEpE,QAAO;EACL,GAAG;EACH,GAAG;EACH,GAAG;EACJ;;AASH,SAAgB,kCAAkC,GAAmD;CACnG,IAAI,IAAgB;AACpB,QAAO,EAAQ,QAAO,MAAO;AAC3B,MAAI,CAAC,mBAAmB,EAAI,CAAE,QAAO;EACrC,IAAM,IAAK,EAAY;AAMvB,SALI,MAAM,cAAc,MAAM,UACxB,IAAsB,MAC1B,IAAgB,IACT,MAEF;GACP;;AC7HJ,IAAM,qBAAN,MAAyB;CACvB,4BAAoB,IAAI,KAAsB;CAC9C,4BAAoB,IAAI,KAAiB;CAEzC,IAAI,GAA8B;AAIhC,SAHI,KAAK,UAAU,IAAI,EAAG,GAAS,MACnC,KAAK,UAAU,IAAI,EAAG,EACtB,KAAK,cAAc,EACZ;;CAGT,OAAO,GAA8B;AAInC,SAHK,KAAK,UAAU,IAAI,EAAG,IAC3B,KAAK,UAAU,OAAO,EAAG,EACzB,KAAK,cAAc,EACZ,MAH6B;;CAMtC,QAAc;AACR,OAAK,UAAU,SAAS,MAC5B,KAAK,UAAU,OAAO,EACtB,KAAK,cAAc;;CAGrB,IAAI,GAA8B;AAChC,SAAO,KAAK,UAAU,IAAI,EAAG;;CAG/B,UAA+B;AAC7B,SAAO,MAAM,KAAK,KAAK,UAAU;;CAGnC,IAAI,OAAe;AACjB,SAAO,KAAK,UAAU;;CAGxB,eAA6B;AAC3B,OAAK,UAAU,SAAQ,MAAY,GAAU,CAAC;;CAGhD,UAAU,GAAkC;AAE1C,SADA,KAAK,UAAU,IAAI,EAAS,QACf,KAAK,UAAU,OAAO,EAAS;;;AAKhD,SAAS,gBACP,GACA,GAC4B;CAC5B,IAAIE,IAA2B,MAEzB,MAAc,GAAG,MAAwB;AAI7C,EAHI,KACF,aAAa,EAAU,EAEzB,IAAY,OAAO,iBAAiB;AAClC,KAAG,GAAG,EAAK;KACV,EAAM;;AAUX,QAPA,EAAU,eAAe;AACvB,EAEE,OADA,aAAa,EAAU,EACX;IAIT;;AAIT,IAAM,gBAAN,MAAuB;CACrB,wBAAgB,IAAI,KAA8C;CAClE;CAEA,YAAY,IAAc,KAAO;AAC/B,OAAK,MAAM;;CAGb,IAAI,GAA4B;EAC9B,IAAM,IAAS,KAAK,MAAM,IAAI,EAAI;AAC7B,SAEL;OAAI,KAAK,KAAK,GAAG,EAAO,YAAY,KAAK,KAAK;AAC5C,SAAK,MAAM,OAAO,EAAI;AACtB;;AAGF,UAAO,EAAO;;;CAGhB,IAAI,GAAa,GAAgB;AAC/B,OAAK,MAAM,IAAI,GAAK;GAClB;GACA,WAAW,KAAK,KAAK;GACtB,CAAC;;CAGJ,QAAc;AACZ,OAAK,MAAM,OAAO;;CAGpB,UAAgB;EACd,IAAM,IAAM,KAAK,KAAK;AACtB,OAAK,IAAM,CAAC,GAAK,EAAE,mBAAgB,KAAK,MAAM,SAAS,CACrD,CAAI,IAAM,IAAY,KAAK,OACzB,KAAK,MAAM,OAAO,EAAI;;GAkCxB,eAAN,MAAmB;CACjB,4BAAoB,IAAI,KAAgD;CACxE,SAAiB,aAAa;EAAE,QAAQ;EAAgB,WAAW;EAAgB,CAAC;CAEpF,GAAG,GAAe,GAAmD;AACnE,EAAK,KAAK,UAAU,IAAI,EAAM,IAC5B,KAAK,UAAU,IAAI,mBAAO,IAAI,KAAK,CAAC;EAEtC,IAAM,IAAY,KAAK,UAAU,IAAI,EAAM;AAK3C,SAJI,KACF,EAAU,IAAI,EAAQ,QAGX;AACX,QAAK,UAAU,IAAI,EAAM,EAAE,OAAO,EAAQ;;;CAI9C,IAAI,GAAe,GAA6C;AAC9D,OAAK,UAAU,IAAI,EAAM,EAAE,OAAO,EAAQ;;CAG5C,KAAK,GAAe,GAAG,GAAuB;EAC5C,IAAM,IAAiB,KAAK,UAAU,IAAI,EAAM;AAChD,EAAI,KACF,EAAe,SAAQ,MAAW;AAChC,OAAI;AACF,MAAQ,GAAG,EAAK;YACT,GAAO;AACd,SAAK,OAAO,MAAM,+BAA+B,EAAM,KAAK;KAAE,QAAQ;KAAgB;KAAO,EAAE,EAAM;;IAEvG;;CAIN,QAAc;AACZ,OAAK,UAAU,OAAO;;;AAY1B,SAAS,eACP,GACA,GACA,GACqB;CACrB,IAAMC,IAAwC,EAAQ,KAAK,GAAK,MAAU;AAExE,MAAI,mBAAmB,EAAI,EAAE;GAE3B,IAAM,IAAa,0BAA0B,GAA4B,EAAM;AAe/E,UAZK,EAAmB,SAAS,WACP,KAAY,EAAU,YAAY,KAItD,EAAmB,oBAAoB;IACvC,GAFY,EAAmB,qBAAqB,EAAE;IAGtD,uBAAuB;KAAE,UAAU;KAAM,QAAQ;KAAkC;IACpF,IAIE;;EAIT,IAAM,IAAe,EAAI,aAAa,KAAa,EAAU,SAAS,IAAI,uBAAuB,GAAW,EAAI,GAAG,KAAA;AACnH,SAAO;GACL,GAAG;GACH,UAAU,KAAgB,EAAI;GAC9B,OAAO,EAAI,SAAA;GACX,UAAU,EAAI,YAAA;GACd,UAAU,EAAI,YAAA;GACd,cAAc;GACd,oBAAoB;GACrB;GACD,EAGI,IAAmB,kCAAkC,EAAiB,EAGtE,IAAgB,sBAAsB,EAAiB,EAGvD,IAAa,EAAc,QAAO,MAAK,EAAE,WAAW,OAAO,EAC3D,IAAc,EAAc,QAAO,MAAK,EAAE,WAAW,QAAQ;AAEnE,KAAI,EAAW,SAAS,GAAG;EACzB,IAAM,IAAiB,EAAW,EAAW,SAAS;AACtD,EAAI,MACF,EAAe,eAAe;;AAQlC,QAJI,EAAY,SAAS,KAAK,EAAY,OACxC,EAAY,GAAG,qBAAqB,KAG/B;;AAGT,SAAgB,aACd,IAAqC,EAAE,EACvC,IAA+B,EAAE,EACjC;CAEA,IAAM,IAAS,aAAa,eAAe,EAIrC,IAAmB,IAAI,oBAAoB,EAC3C,IAAmB,IAAI,EAAE,EAGzB,IAAuB,EAAiB,gBAAgB;AAC5D,IAAiB;GACjB,EAGI,IAAgB,IAAI,cAA4C,IAAM,EAGtE,IAAe,IAAI,cAAc,EAGjC,oBAAmB,IAAI,KAAiB,EAGxC,oBAAgB,IAAI,KAAsB,EAG1CC,IAAqC,wBAAwB,EAC/DC,IAAoC,MAIlC,IAAQ,SAA4B;EAExC,gBAAgB;GAAE,KAAK;GAAG,MAAM;GAAG;EACnC,aAAa;EAGb,SAAS,EAAE;EACX,eAAe,EAAE;EAGjB,SAAS,EAAE;EACX,QAAQ;GACN,WAAW;GACX,cAAc;GACd,yBAAyB;GACzB,sBAAsB;GACtB,GAAG;GACJ;EAGD,SAAS;EACT,OAAO;EACP,uBAAuB;EAGvB,eAAe;GACb,gBAAgB;GAChB,eAAe;GACf,aAAa;GACd;EACF,CAAC,EAIIC,IAAe;EAEnB,UAAU,MAAoB;GAE5B,IAAM,IAAa,QAAQ,CAAC,GAAG,EAAK,CAAC;AAwBrC,GAvBA,EAAM,UAAU,GAGZ,EAAK,UAAU,EAAM,OAAO,4BAC9B,EAAM,wBAAwB,KAIhC,EAAc,OAAO,EAGrB,EAA2B,EAAW,EAGlC,EAAM,WAAW,EAAM,QAAQ,SAAS,KACnB,EAAM,QAAQ,MAAK,MAAO,CAAC,EAAI,SAAS,KAE7D,EAAM,UAAU,eAAe,EAAM,UAAoC,MAAiB,CAAC,CAAC,EAAe,IAAI,EAAK,EAAE,EAAM,QAAQ,EACpI,EAAa,KAAK,mBAAmB,EAAM,QAAQ,GAKvD,EAAa,KAAK,gBAAgB,EAAW;;EAG/C,eAAe,EAAM;EACrB,uBAAuB,EAAM;EAG7B,YAAY,MAA2B;AACrC,KAAiB,IAAI,EAAM;;EAG7B,aAAa,MAAgC;AAC3C,KAAO,SAAQ,MAAM,EAAiB,IAAI,EAAG,CAAC;;EAGhD,sBAAsB;AACpB,KAAiB,OAAO;;EAI1B,aAAa,MAAyB;AAGpC,GAFA,EAAM,UAAU,eAAe,IAAU,MAAiB,CAAC,CAAC,EAAe,IAAI,EAAK,EAAE,EAAM,QAAQ,EACpG,EAAa,KAAK,mBAAmB,EAAM,QAAQ,EACnD,EAAI,4BAA4B;;EAGlC,eAAe,GAAkB,MAAgC;GAC/D,IAAM,IAAQ,EAAM,QAAQ,WAAU,MAAO,EAAI,OAAO,EAAS;AACjE,OAAI,MAAU,IAAI;IAChB,IAAM,IAAiB,EAAM,QAAQ;AACrC,QAAI,CAAC,EAAgB;IAErB,IAAMC,IAAmC;KACvC,GAAG;KACH,GAAG;KACH,IAAI,EAAe;KACnB,OAAO,EAAQ,SAAS,EAAe;KACxC,EAEK,IAAa,CAAC,GAAG,EAAM,QAAQ;AAKrC,IAJA,EAAW,KAAS,GAEpB,EAAM,UAAU,eAAe,IAAa,MAAiB,CAAC,CAAC,EAAe,IAAI,EAAK,EAAE,EAAM,QAAQ,EACvG,EAAa,KAAK,kBAAkB;KAAE;KAAU;KAAS,CAAC,EAC1D,EAAI,4BAA4B;;;EAKpC,iBAA+C;GAC7C,MAAM,EAAM;GACZ,SAAS,EAAM;GACf,QAAQ,EAAM;GACd,cAAc,IAAI,IAAI,EAAiB,SAAS,CAAC;GACjD,aAAa,EAAM;GACnB,gBAAgB,EAAM;GACtB,SAAS,EAAM;GACf,OAAO,EAAM;GACd;EAGD,eAAe,MAAiC;AAY9C,GAXA,EAAM,SAAS;IAAE,GAAG,EAAM;IAAQ,GAAG;IAAS,EAG9C,EAAc,OAAO,EAGjB,EAAM,QAAQ,SAAS,KACzB,EAA2B,EAAM,QAAQ,EAI3C,EAAa,KAAK,kBAAkB,EAAM,OAAO;;EAInD,OAAsD,GAAU,MAA8C;AAC5G,KAAa,KAAK,GAAO,EAAmB;;EAG9C,KAAoD,GAAU,MACrD,EAAa,GAAG,GAAO,EAAwC;EAGxE,MAAqD,GAAU,MAAiE;AAC9H,KAAa,IAAI,GAAO,EAAwC;;EAIlE,YAAY,OAAO,OACF,MAAM,EAAe,SAAS,EAAO,EACtC;EAGhB,cAAc,OAAO,OACJ,MAAM,EAAe,WAAW,EAAW,EAC5C;EAGhB,YAAY,MACH,EAAe,IAAI,EAAW;EAGvC,mBACS,EAAe,MAAM;EAG9B,uBACmB,EAAe,aAAqC,iBAAiB,EACrE,WAAW,oBAAI,IAAI,KAAK;EAI3C,uBAAuB,GAAc,MAAuB;AAE1D,GADA,EAAc,IAAI,GAAM,EAAU,EAClC,EAAa,KAAK,4BAA4B;IAAE;IAAM;IAAW,CAAC;;EAGpE,yBAAyB,MAAiB;AAExC,GADA,EAAc,OAAO,EAAK,EAC1B,EAAa,KAAK,8BAA8B,EAAE,SAAM,CAAC;;EAI3D,mBAAmB,GAAc,MAA6B;AAE5D,GADA,EAAiB,SAAS,GAAM,EAAQ,EACxC,EAAa,KAAK,uBAAuB;IAAE;IAAM;IAAS,CAAC;;EAG7D,aAAa,OAAO,MAAiB;AACnC,KAAO,MAAM,0BAA0B,IAAO;GAG9C,IAAM,IAAY,EAAiB,cAAc;AAMjD,UALI,EAAU,SAAS,EAAK,IAC1B,EAAa,KAAK,oBAAoB,EAAE,SAAM,CAAC,EACxC,OAET,EAAO,KAAK,aAAa,EAAK,+BAA+B,EAAU,KAAK,KAAK,GAAG,EAC7E;;EAGT,mBACS,EAAiB,gBAAgB,IAAI;EAI9C,gCAAgC;GAC9B,IAAM,UAAsB;AAE1B,QAAI,CADY,EAAiB,YAAY,CAE3C;IAGF,IAAM,IAAe,EAAI,UAAU;AAEnC,IADA,EAAiB,OAAO,GAAc,EAAM,SAAS,EAAM,cAAc,EACzE,EAAO,MAAM,gCAAgC;;AAG/C,OAAI,OAAO,SAAW,OAAsB,OAAO,0BAA0B,QAAa;AACxF,OAAe;AACf;;AAGE,SAAuB,SAI3B,IAAqB,OAAO,4BAA4B;AAEtD,IADA,IAAqB,MACrB,GAAe;KACf;;EAGJ,oBAAoB,OAAO,MAA6B;AACtD,OAAI;IAEF,IAAM,IAAe,EAAM,OAAO,YAAY;AAK9C,QAHA,EAAO,MAAM,0BAA0B,IAAe,EAGlD,CAAC,EAAiB,IAAI,EAAa,CACrC,OAAU,MAAM,aAAa,EAAa,qBAAqB;AAMjE,QAAI,CAFa,MAAM,EAAiB,SAAS,GAAc,GAAa,GAAK,EAAM,OAAO,CAG5F,OAAU,MAAM,kCAAkC,EAAa,GAAG;AAIpE,WADA,EAAO,MAAM,aAAa,EAAa,4BAA4B,EAC5D;YACA,GAAO;AAEd,WADA,EAAO,MAAM,mCAAmC,EAAE,QAAQ,gBAAgB,EAAE,EAAM,EAC3E;;;EAIX,iBAAiB,GAAe,MAAmB;AAEjD,GADA,EAAiB,WAAW,GAAO,EAAO,EAC1C,EAAO,MAAM,uBAAuB,EAAM,GAAG,IAAS;;EAGxD,6BACS,EAAiB,cAAc;EAGxC,iCACS,EAAiB,YAAY;EAItC,wBAAwB,MAAwB;AAC9C,KAAiB,IAAI,EAAQ;;EAEhC,EAGKC,IAAwC,qBAAqB,EAAI;CAGvE,SAAS,IAA4B;AAEnC,SADsB,EAAe,aAAkC,eAAe,EAChE,IAAI,gBAAgB;;CAK5C,SAAS,EAA2B,GAAuB;EACzD,IAAM,IAAyB,GAA2B;AAE1D,MAAI,CAAC,GAAwB;AAE3B,KAAM,gBAAgB,QAAQ,CAAC,GAAG,EAAK,CAAC;AACxC;;EAGF,IAAM,IAAS,OAAO,cAAgB,OAAe,YAAY,MAAO,YAAY,KAAK,GAAG,KAAK,KAAK,EAClG,IAAa;AAEjB,MAAI;GAEF,IAAI,IAAgB;AAuBpB,GApBA,IAAa,GACb,IAAgB,EAAuB,YAAY,GAAe,SAAS,EAG3E,IAAa,GACb,IAAgB,EAAuB,YAAY,GAAe,OAAO,EAGzE,IAAa,GACb,IAAgB,EAAuB,YAAY,GAAe,YAAY,EAG9E,IAAa,GACb,IAAgB,EAAuB,YAAY,GAAe,WAAW,EAG7E,IAAa,GACb,IAAgB,EAAuB,YAAY,GAAe,cAAc,EAGhF,EAAM,gBAAgB,QAAQ,EAAc;GAG5C,IAAM,IAAO,OAAO,cAAgB,OAAe,YAAY,MAAO,YAAY,KAAK,GAAG,KAAK,KAAK;AACpG,KAAa,KAAK,0BAA0B;IAC1C,eAAe,EAAK;IACpB,gBAAgB,EAAM,cAAc;IACpC,gBAAgB,IAAM;IACtB,iBAAiB;IAClB,CAAQ;WACF,GAAO;AAId,GAHA,EAAO,MAAM,2CAA2C,EAAE,QAAQ,gBAAgB,EAAE,EAAM,EAE1F,EAAM,gBAAgB,QAAQ,CAAC,GAAG,EAAK,CAAC,EACxC,EAAa,KAAK,uBAAuB;IAAE;IAAO,OAAO;IAAY,CAAQ;;;CAKjF,IAAMC,IAKD,eAAe;EAClB,IAAM,IAAO,EAAM,eACb,EAAE,iBAAc,EAAM,QAGtB,IAAS;GACb,aAAa;GACb,YAAY;GACZ,UAAU,EAAK,SAAS;GACxB,aAAa,EAAK,SAAS;GAC5B;AAKD,SAFA,EAAa,KAAK,kBAAkB;GAAE,OAAO;GAAkB,MAAM,EAAO;GAAa,CAAC,EAEnF;GACP,EAII,IAAsB,sBAAsB;AAChD,EAAI,EAAM,QAAQ,SAAS,KACzB,EAA2B,EAAM,QAAQ;IAE1C,GAAG,EAIAC,IAA2B,EAAE;AAgDnC,CA7CA,EAAS,KACP,YACQ,EAAM,eACN;AACJ,KAAqB;IAEvB,EAAE,OAAO,QAAQ,CAClB,CACF,EAGD,EAAS,KACP,YACQ,CAAC,EAAM,OAAO,MAAM,EAAM,OAAO,QAAQ,QACzC;AACJ,KAAqB;IAEvB;EAAE,OAAO;EAAQ,MAAM;EAAM,CAC9B,CACF,EAGD,EAAS,KACP,MACE,OAAO,EAAM,cAAc,cAAc,EAAM,OAAO,wBAAwB,GAC7E,CAAC,GAAY,OAAe;AAC3B,IAAM,wBAAwB,KAAc;GAE/C,CACF,EAGD,EAAa,GAAG,qCAAqC;AACnD,KAAqB;GACrB,EAEF,EAAa,GAAG,kCAAkC;AAChD,KAAqB;GACrB,EAEF,EAAa,GAAG,gCAAgC;AAC9C,KAAqB;GACrB,EAGF,EAAa,GAAG,gCAAgC;AAC9C,IAAI,4BAA4B;GAChC;CAGF,IAAM,IAAuB,kBAAkB;AAC7C,IAAc,SAAS;IACtB,IAAM;AA+DT,QA3DI,EAAe,SAAS,KAC1B,EAAe,SAAQ,MAAU;AAC/B,MAAI;AACF,KAAI,WAAW,EAAO;WACf,GAAO;AACd,KAAO,MAAM,iCAAiC,EAAO,KAAK,IAAI;IAAE,QAAQ;IAAgB,QAAQ,EAAO;IAAM,EAAE,EAAM;;GAEvH,EAIJ,kBAAkB;AA2ChB,EA1CI,MAAuB,QAAQ,OAAO,SAAW,OAAe,OAAO,OAAO,wBAAyB,eACzG,OAAO,qBAAqB,EAAmB,EAC/C,IAAqB,OAIvB,EAAoB,QAAQ,EAG5B,EAAiB,OAAO,EACxB,GAAsB,EAGtB,EAAc,OAAO,EAGrB,cAAc,EAAqB,EAGnC,EAAS,SAAQ,MAAQ,GAAM,CAAC,EAGhC,EAAiB,SAAS,EAG1B,EAAe,SAAS,EAGxB,EAAa,OAAO,EAGpB,EAAiB,SAAQ,MAAW;AAClC,OAAI;AACF,OAAS;YACF,GAAO;AACd,MAAO,MAAM,yBAAyB,EAAE,QAAQ,gBAAgB,EAAE,EAAM;;IAE1E,EACF,EAAiB,OAAO,EAGxB,EAAM,UAAU,EAAE,EAClB,EAAM,gBAAgB,EAAE;GACxB,EAIK;EAEL,MAAM;EACN,SAAS,eAAe,EAAM,QAAQ;EACtC,cAAc,gBACP,EAAiB,OACf,EAAiB,SAAS,EACjC;EACF,SAAS,eAAe,EAAM,QAAQ;EACtC,OAAO,eAAe,EAAM,MAAM;EAClC,gBAAgB,eAAe,EAAM,eAAe;EACpD,aAAa,eAAe,EAAM,YAAY;EAG9C,QAAQ,eAAe,EAAM,OAAO;EACpC,uBAAuB,eAAe,EAAM,sBAAsB;EAGlE,eAAe,eAAe,EAAM,cAAc;EAGlD;EAGA,YAAY;GACV;GACA;GACA;GACA;GACA;GACA,uBAAuB,MAA4C;AACjE,MAAM,iBAAiB;;GAEzB,iBAAiB,MAA8D;AAC7E,MAAM,cAAc;;GAEtB,aAAa,MAAqB;AAChC,MAAM,UAAU;;GAElB,WAAW,MAAyB;AAClC,MAAM,QAAQ;;GAEhB,kBAAkB;AAChB,MAAc,OAAO;;GAExB;EACF;;ACp1BH,IAAM,SAAS,aAAa,uBAAuB,EAyBtC,0BAAb,MAAwE;CACtE,eAA2E;CAC3E,gBAAqD,EAAE;CACvD,YAAoB;CAEpB,YAAY,GAAoB;AAC9B,SAAO,MAAM,+CAA+C,IAAa;;CAO3E,qBACE,GACM;AACN,OAAK,eAAe;;CAMtB,gBAAgB,GAAoC,GAAwC;CAO5F,UAAU,GAAyC;CAOnD,cAAc,GAAsB,GAAoC;CAOxE,MAAM,eAAe,GAAsB,GAA2C;AAEpF,SAAO;;CAMT,qBAAsB,GAAgD;CAOtE,UAAiB;CAOjB,sBAAsB,GAA8C;AAClE,OAAK,gBAAgB;GAAE,GAAG,KAAK;GAAe,GAAG;GAAW;;CAM9D,KAAiC,GAAc,GAA8B;AAC3E,MAAI,KAAK,WAAW;AAClB,UAAO,KAAK,sBAAsB,EAAU,yBAAyB;AACrE;;AAIF,MAAI,KAAK,aACP,KAAI;AAED,QAAK,aAAqB,GAAW,EAAQ;WACvC,GAAO;AACd,UAAO,MAAM,yBAAyB,EAAU,KAAK,EAAM;;MAG7D,QAAO,MAAM,0CAA0C,EAAU,GAAG;;CAOxE,UAAgB;AAGd,EAFA,KAAK,YAAY,IACjB,KAAK,eAAe,MACpB,KAAK,gBAAgB,EAAE;;CAMzB,cAAuB;AACrB,SAAO,KAAK;;;AAOhB,SAAgB,0BAA0B,GAA6C;AACrF,QAAO,IAAI,wBAAwB,EAAW;;ACrJhD,MAAa,uBAAuB,OAAO,sBAAsB,EACpD,eAAe,OAAO,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;EEiBjD,IAAM,IAAQ,GAWR,IAAc;GAClB;GACA;GACA;GACA;GACA;GACA;GACD,CAAC,KAAK,IAAG,EAGJ,IAAgD;GAEpD,SACE;GACF,QACE;GACF,SACE;GACF,WACE;GACF,SACE;GACF,OACE;GACF,aACE;GACF,MACE;GACJ,EAEM,IAA0C;GAC9C,OAAO;GACP,IAAI;GACJ,IAAI;GACJ,IAAI;GACJ,IAAI;GACJ,cAAc;GACd,WAAW;GACX,WAAW;GACX,MAAM;GACN,WAAW;GACb,EAEM,IAAU,eACd;GAAC;GAAa,EAAe,EAAM;GAAU,EAAY,EAAM;GAAO,EAAM,QAAQ,WAAW;GAAG,CAAC,KAAK,IAAG,CAC7G;iCAIE,mBAQS,UAAA;GARA,MAAM,EAAM;GAAO,UAAU,EAAM,YAAY,EAAM;GAAU,OAAK,eAAE,EAAA,MAAO;MACxE,EAAM,WAAA,WAAA,EAAlB,mBAKO,QALP,eAKO,CAAA,GAAA,EAAA,OAAA,CAJL,mBAGM,OAAA;GAHD,OAAM;GAAuB,OAAM;GAA6B,MAAK;GAAO,SAAQ;MACvF,mBAAkG,UAAA;GAA1F,OAAM;GAAa,IAAG;GAAK,IAAG;GAAK,GAAE;GAAK,QAAO;GAAe,gBAAa;MACrF,mBAAwK,QAAA;GAAlK,OAAM;GAAa,MAAK;GAAe,GAAE;6CAGnD,WAA0C,EAAA,QAAA,WAAA,EAAA,QAAA,CAAA,gBAAA,gBAAjC,EAAM,SAAK,SAAA,EAAA,EAAA,CAAA,CAAA,CAAA,EAAA,IAAA,cAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EElDxB,IAAM,IAAQ,GAQR,IAAO,GAGP,IAAU,OAAM,EAChB,IAAQ,UAAS,EAGjB,IAAc;GAClB;GACA;GACA;GACA;GACD,CAAC,KAAK,IAAG,EAIJ,IAAyC;GAC7C,SAAS;GACT,QAAQ;GACR,SAAS;GACT,OAAO;GACT,EAGM,IAAsC;GAC1C,IAAI;GACJ,IAAI;GACJ,IAAI;GACN,EAGM,IAAuC;GAC3C,SAAS;GACT,OAAO;GACP,SAAS;GACT,SAAS;GACX,EAEM,IAAe,eAAe;GAClC;GACA,EAAe,EAAM;GACrB,EAAY,EAAM;GAClB,EAAa,EAAM;GACpB,CAAC,KAAK,IAAI,CAAA,EAGL,IAAW,eACX,EAAM,eAAe,KAAA,KAAa,EAAM,eAAe,OAClD,KAGL,OAAO,EAAM,cAAe,WACvB,EAAM,WAAW,SAAS,IAI/B,OAAO,EAAM,cAAe,WACvB,CAAC,MAAM,EAAM,WAAU,GAGzB,GACR,EAEK,KAAe,MAAiB;GACpC,IAAM,IAAS,EAAM,QACf,IAAQ,EAAM,SAAS,WAAY,EAAO,iBAAiB,IAAK,EAAO;AAC7E,KAAK,qBAAqB,EAAK;KAG3B,UAAoB;AAExB,GADA,EAAK,qBAAqB,EAAM,SAAS,WAAW,IAAI,GAAE,EAC1D,EAAK,QAAO;KAGR,KAAiB,MAAyB;AAI9C,GAHA,EAAK,WAAW,EAAK,EAGjB,EAAM,QAAQ,YAAY,EAAM,aAAa,EAAS,UACxD,GAAY,EACZ,EAAM,gBAAe;;iCAMvB,mBAgEM,OAhEN,eAgEM;GA7DII,EAAAA,OAAO,UAAA,WAAA,EADf,mBAKM,OALN,eAKM,CADJ,WAAsB,EAAA,QAAA,SAAA,CAAA,CAAA,IAAA,mBAAA,IAAA,GAAA;GAIxB,mBA2BE,SA3BF,WA2BE;IA1BC,IAAI,MAAA,EAAO;IACX,MAAM,EAAA;IACN,OAAO,EAAA;IACP,OAAK;KAAY,EAAA;;KAAwCA,EAAAA,OAAO,SAAM,UAAA;KAAyB,EAAA,aAAaA,EAAAA,OAAO,SAAM,UAAA;;IAMzH,aAAa,EAAA;IACb,UAAU,EAAA;IACV,UAAU,EAAA;IACV,UAAU,EAAA;IACV,cAAc,EAAA;IACd,WAAW,EAAA;IACX,WAAW,EAAA;IACX,SAAS,EAAA;IACT,gBAAc,EAAA,UAAK;IACnB,oBAAkB,MAAA,EAAK,CAAA;IACvB,qBAAmB,MAAA,EAAK,CAAA;IACxB,iBAAe,EAAA;MACRF,EAAAA,QAAM;IACb,SAAO;IACP,SAAK,EAAA,QAAA,MAAE,EAAI,SAAU,EAAM;IAC3B,QAAI,EAAA,QAAA,MAAE,EAAI,QAAS,EAAM;IACzB,WAAS;;GAKJ,EAAA,aAAaE,EAAAA,OAAO,UAAA,WAAA,EAD5B,mBAuBM,OAvBN,eAuBM,CAlBI,EAAA,aAAa,EAAA,SAAQ,CAAK,EAAA,YAAQ,CAAK,EAAA,YAAA,WAAA,EAD/C,mBAeS,UAAA;;IAbP,MAAK;IACL,OAAM;IACL,cAAY;IACb,UAAS;IACR,SAAO;oBAER,mBAMM,OAAA;IAND,OAAM;IAAU,MAAK;IAAe,SAAQ;OAC/C,mBAIE,QAAA;IAHA,aAAU;IACV,GAAE;IACF,aAAU;kBAIAA,EAAAA,OAAO,UAAA,WAAA,EAAvB,mBAEM,OAFN,eAEM,CADJ,WAAsB,EAAA,QAAA,SAAA,CAAA,CAAA,IAAA,mBAAA,IAAA,GAAA,CAAA,CAAA,IAAA,mBAAA,IAAA,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EEjK9B,IAAM,IAAQ,GAQR,IAAO,GAGP,IAAa,OAAM,EAGnB,IAAY,eACZ,EAAM,iBAAiB,EAAM,eAAe,kBACvC,KAEF,EAAM,eAAe,GAC7B,EAEK,IAAkB,eACf,EAAM,iBAAiB,EAAM,eAAe,gBACpD,EAGK,IAAc;GAClB;GACA;GACA;GACA;GACA;GACD,CAAC,KAAK,IAAG,EAIJ,IAAyC;GAC7C,SAAS;GACT,QAAQ;GACR,SAAS;GACT,OAAO;GACT,EAGM,IAAgD;GACpD,SAAS;GACT,QAAQ;GACR,SAAS;GACT,OAAO;GACT,EAGM,IAAiD;GACrD,SAAS;GACT,QAAQ;GACR,SAAS;GACT,OAAO;GACT,EAGM,IAAwD;GAC5D,SAAS;GACT,QAAQ;GACR,SAAS;GACT,OAAO;GACT,EAGM,IAAkB;GACtB;GACA;GACA;GACD,CAAC,KAAK,IAAG,EAGJ,IAAsC;GAC1C,IAAI;GACJ,IAAI;GACJ,IAAI;GACN,EAGM,IAAuC;GAC3C,SAAS;GACT,OAAO;GACP,SAAS;GACT,SAAS;GACX,EAEM,IAAkB,eAAe;GACrC,IAAM,IAAW,EAAU,SAAS,EAAgB,OAGhD;AAaJ,UAZA,AAOE,IAPE,EAAM,WAEK,IACR,EAA8B,EAAM,YAAY,KAChD,EAAuB,EAAM,YAAY,KAGjC,IACR,EAAsB,EAAM,YAAY,KACxC,EAAe,EAAM,YAAY,IAGjC;IACL;IACA,EAAM,WAAW,IAAkB;IACnC;IACA,EAAY,EAAM;IAClB,EAAa,EAAM;IACpB,CAAC,KAAK,IAAG;IACX,EAGK,IAAW,gBACD;GACZ,IAAI;GACJ,IAAI;GACJ,IAAI;GACN,EACa,EAAM,MACpB,EAIK,IAAY,gBACA;GACd,IAAI;GACJ,IAAI;GACJ,IAAI;GACN,EACe,EAAM,MACtB,EAGK,IAAW,gBACD;GACZ,IAAI;GACJ,IAAI;GACJ,IAAI;GACN,EACa,EAAM,MACpB,EAGK,IAAkB,gBACR;GACZ,IAAI;GACJ,IAAI;GACJ,IAAI;GACN,EACa,EAAM,MACpB,EAGK,KAAgB,MAAiB;AACrC,OAAI,EAAM,SAAU;GAGpB,IAAM,IADS,EAAM,OACE;AAGvB,GADA,EAAK,qBAAqB,EAAO,EACjC,EAAK,UAAU,GAAS,EAAK;KAGzB,KAAoB,MAAsB;AAK9C,OAFA,EAAM,gBAAe,EAEjB,EAAM,SAAU;GAGpB,IAAM,IAAW,CAAC,EAAU;AAE5B,GADA,EAAK,qBAAqB,EAAQ,EAClC,EAAK,UAAU,GAAU,EAAK;KAG1B,KAAiB,MAAyB;AAE9C,GAAI,EAAM,QAAQ,QAChB,EAAM,gBAAe,EACJ,EAAM,OACd,OAAM;;iCAMjB,mBA6FM,OA7FN,eA6FM,CA5FJ,mBAkEM,OAAA,EAlED,OAAK,eAAA,CAAC,gDAAuD,EAAA,MAAS,CAAA,EAAA,EAAA,CAEzE,mBAcE,SAAA;GAbC,IAAI,MAAA,EAAU;GACf,MAAK;GACJ,MAAM,EAAA;GACN,OAAO,EAAA;GACP,SAAS,EAAA;GACT,UAAU,EAAA;GACV,UAAU,EAAA;GACV,gBAAc,EAAA,QAAe,UAAa,EAAA;GAC1C,gBAAc,EAAA,UAAK;GACnB,iBAAe,EAAA;GAChB,OAAM;GACL,UAAQ;GACR,WAAS;+BAIZ,mBA8CQ,SAAA;GA7CL,KAAK,MAAA,EAAU;GACf,OAAK,eAAE,EAAA,MAAe;GACtB,SAAO;;gCAIR,mBAcM,OAAA;IAZH,OAAK,eAAE,EAAA,MAAQ;IAChB,MAAK;IACL,SAAQ;IACR,QAAO;IACP,gBAAa;IACb,eAAY;oBAEZ,mBAIE,QAAA;IAHA,kBAAe;IACf,mBAAgB;IAChB,GAAE;iCAXI,EAAA,SAAS,CAAK,EAAA,MAAe,CAAA,CAAA;gCAgBvC,mBAcM,OAAA;IAZH,OAAK,eAAE,EAAA,MAAQ;IAChB,MAAK;IACL,SAAQ;IACR,QAAO;IACP,gBAAa;IACb,eAAY;oBAEZ,mBAIE,QAAA;IAHA,kBAAe;IACf,mBAAgB;IAChB,GAAE;iCAXI,EAAA,MAAe,CAAA,CAAA;kBAgBzB,mBAIQ,QAAA;IAFL,OAAK,eAAE,EAAA,MAAQ;IAChB,eAAY;0BAFH,EAAA,SAAS,CAAK,EAAA,MAAe,CAAA,CAAA;8BAQjC,EAAA,SAAS,EAAA,eAAeA,EAAAA,OAAO,WAAA,WAAA,EAA1C,mBAsBM,OAtBN,eAsBM,CApBI,EAAA,SAASA,EAAAA,OAAO,WAAA,WAAA,EADxB,mBAUQ,SAAA;;GARL,KAAK,MAAA,EAAU;GACf,OAAK,eAAA;IAAc,EAAA;;oBAAiI,EAAA,UAAQ;;MAM7J,WAAwB,EAAA,QAAA,WAAA,EAAA,QAAA,CAAA,gBAAA,gBAAf,EAAA,MAAK,EAAA,EAAA,CAAA,EAAA,GAAA,CAAA,EAAA,IAAA,cAAA,IAAA,mBAAA,IAAA,GAAA,EAGR,EAAA,eAAeA,EAAAA,OAAO,eAAA,WAAA,EAD9B,mBASI,KAAA;;GAPD,OAAK,eAAA;IAAc,EAAA;;oBAAsG,EAAA,UAAQ;;MAMlI,WAAiD,EAAA,QAAA,eAAA,EAAA,QAAA,CAAA,gBAAA,gBAArB,EAAA,YAAW,EAAA,EAAA,CAAA,EAAA,GAAA,CAAA,EAAA,EAAA,IAAA,mBAAA,IAAA,GAAA,CAAA,CAAA,IAAA,mBAAA,IAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EErR/C,IAAM,IAAQ,GAMR,IAAO,GAGP,IAAU,OAAM,EAGhB,IAAY,eACT,EAAM,eAAe,EAAM,MACnC,EAGK,IAAc;GAClB;GACA;GACA;GACA;GACA;GACD,CAAC,KAAK,IAAG,EAIJ,IAAyC;GAC7C,SAAS;GACT,QAAQ;GACR,SAAS;GACT,OAAO;GACT,EAGM,IAAgD;GACpD,SAAS;GACT,QAAQ;GACR,SAAS;GACT,OAAO;GACT,EAGM,IAAiD;GACrD,SAAS;GACT,QAAQ;GACR,SAAS;GACT,OAAO;GACT,EAGM,IAAwD;GAC5D,SAAS;GACT,QAAQ;GACR,SAAS;GACT,OAAO;GACT,EAGM,IAAkB;GACtB;GACA;GACA;GACD,CAAC,KAAK,IAAG,EAGJ,IAAsC;GAC1C,IAAI;GACJ,IAAI;GACJ,IAAI;GACN,EAGM,IAAyC;GAC7C,IAAI;GACJ,IAAI;GACJ,IAAI;GACN,EAGM,IAAuC;GAC3C,SAAS;GACT,OAAO;GACP,SAAS;GACT,SAAS;GACX,EAEM,IAAe,eAAe;GAElC,IAAI;AAaJ,UAZA,AAOE,IAPE,EAAM,WAEK,EAAU,QAClB,EAA8B,EAAM,YAAY,KAChD,EAAuB,EAAM,YAAY,KAGjC,EAAU,QAClB,EAAsB,EAAM,YAAY,KACxC,EAAe,EAAM,YAAY,IAGjC;IACL;IACA,EAAM,WAAW,IAAkB;IACnC;IACA,EAAY,EAAM;IAClB,EAAa,EAAM;IACpB,CAAC,KAAK,IAAG;IACX,EAGK,IAAY,gBACA;GACd,IAAI;GACJ,IAAI;GACJ,IAAI;GACN,EACe,EAAM,MACtB,EAGK,IAAW,gBACD;GACZ,IAAI;GACJ,IAAI;GACJ,IAAI;GACN,EACa,EAAM,MACpB,EAGK,IAAkB,gBACR;GACZ,IAAI;GACJ,IAAI;GACJ,IAAI;GACN,EACa,EAAM,MACpB,EAGK,IAAa,eACV;GACL,EAAe,EAAM;GACrB;GACA,EAAM,WAAW,+BAA+B;GACjD,CAAC,KAAK,IAAG,CACX,EAGK,KAAgB,MAAiB;AACjC,KAAM,aAIV,EAAK,qBAAqB,EAAM,MAAK,EACrC,EAAK,UAAU,EAAM,OAAO,EAAK;KAG7B,KAAoB,MAAsB;AAE9C,KAAM,gBAAe,EAEjB,GAAM,aAGV,EAAK,qBAAqB,EAAM,MAAK,EACrC,EAAK,UAAU,EAAM,OAAO,EAAK;KAG7B,KAAiB,MAAyB;AAE9C,GAAI,EAAM,QAAQ,QAChB,EAAM,gBAAe,EACP,EAAM,OACd,OAAM;;iCASd,mBAiEM,OAjEN,eAiEM,CAhEJ,mBAsCM,OAAA,EAtCD,OAAK,eAAA,CAAC,6CAAoD,EAAA,MAAS,CAAA,EAAA,EAAA,CAEtE,mBAcE,SAAA;GAbC,IAAI,MAAA,EAAO;GACZ,MAAK;GACJ,MAAM,EAAA;GACN,OAAO,EAAA;GACP,SAAS,EAAA;GACT,UAAU,EAAA;GACV,UAAU,EAAA;GACV,gBAAc,EAAA;GACd,gBAAc,EAAA,UAAK;GACnB,iBAAe,EAAA;GAChB,OAAM;GACL,UAAQ;GACR,WAAS;+BAIZ,mBAkBQ,SAAA;GAjBL,KAAK,MAAA,EAAO;GACZ,OAAK,eAAE,EAAA,MAAY;GACnB,SAAO;qBAGR,mBAIQ,QAAA;GAFL,OAAK,eAAE,EAAA,MAAU;GAClB,eAAY;wBAFJ,EAAA,MAAS,CAAA,CAAA,EAAA,eAMnB,mBAIQ,QAAA;GAFL,OAAK,eAAE,EAAe,EAAA,MAAI;GAC3B,eAAY;yBAFH,EAAA,MAAS,CAAA,CAAA,CAAA,EAAA,IAAA,cAAA,CAAA,EAAA,EAAA,EAQb,EAAA,SAAS,EAAA,eAAeA,EAAAA,OAAO,WAAA,WAAA,EAA1C,mBAsBM,OAtBN,eAsBM,CApBI,EAAA,SAASA,EAAAA,OAAO,WAAA,WAAA,EADxB,mBAUQ,SAAA;;GARL,KAAK,MAAA,EAAO;GACZ,OAAK,eAAA;IAAc,EAAA;;oBAAiI,EAAA,UAAQ;;MAM7J,WAAwB,EAAA,QAAA,WAAA,EAAA,QAAA,CAAA,gBAAA,gBAAf,EAAA,MAAK,EAAA,EAAA,CAAA,EAAA,GAAA,CAAA,EAAA,IAAA,cAAA,IAAA,mBAAA,IAAA,GAAA,EAGR,EAAA,eAAeA,EAAAA,OAAO,eAAA,WAAA,EAD9B,mBASI,KAAA;;GAPD,OAAK,eAAA;IAAc,EAAA;;oBAAsG,EAAA,UAAQ;;MAMlI,WAAiD,EAAA,QAAA,eAAA,EAAA,QAAA,CAAA,gBAAA,gBAArB,EAAA,YAAW,EAAA,EAAA,CAAA,EAAA,GAAA,CAAA,EAAA,EAAA,IAAA,mBAAA,IAAA,GAAA,CAAA,CAAA,IAAA,mBAAA,IAAA,GAAA,CAAA,CAAA;;mKCxRzC,qBAAqB,OAAO,WAAW,EACvC,mBAAmB,OAAO,gBAAgB;AAChD,MAAa,mBAAmB,OAAO,gBAAgB;AAMvD,SAAgB,qBAAqB,GAAY,GAA0B;CACzE,IAAM,IAAO,IAAI,GAAM,EACjB,IAAgB,IAAI,EAAM,WAAW,EACrC,IAAmB,IAAI,GAAG,EAC1B,IAAa,IAAwB,KAAK,EAC1C,IAAa,IAAI,GAAG,EACpB,IAAmB,IAAuB,EAAE,CAAC,EAG7C,IAAM,gBAAgB,aAAa,CAAC,aAAa,YAAY,CAAU,EAGvE,IAAa,oBAAI,IAAI,KAAkB,CAAC,EAExC,IAAuB,eAC3B,EAAiB,MAAM,QAAO,MAAU,CAAC,EAAO,SAAS,CAAC,KAAI,MAAU,EAAO,MAAM,CACtF;CAED,SAAS,EAAe,GAAsB;AAC5C,IAAiB,QAAQ,OAAO,KAAU,YAAY,KAAS,IAAI,IAAQ;;CAG7E,IAAM,UAAuB;AAC3B,IAAe,KAAK;IAGhB,KAA2B,MAC/B,EAAiB,MAAM,MAAK,MAAU,EAAO,UAAU,KAAS,CAAC,EAAO,SAAS,EAE7E,UAAuB;EAC3B,IAAM,CAAC,KAAS,EAAqB;AACrC,IAAe,KAAS,KAAK;IAGzB,UAAsB;EAC1B,IAAM,IAAU,EAAqB,OAC/B,IAAO,EAAQ,EAAQ,SAAS;AACtC,IAAe,OAAO,KAAS,WAAW,IAAO,KAAK;IAGlD,KAAiB,MAAsB;EAC3C,IAAM,IAAU,EAAqB;AACrC,MAAI,CAAC,EAAQ,QAAQ;AACnB,KAAe,KAAK;AACpB;;EAGF,IAAM,IAAU,EAAiB,OAC3B,IAAkB,EAAQ,QAAQ,EAAQ;AAEhD,MAAI,MAAoB,IAAI;AAC1B,KAAe,MAAc,IAAI,EAAQ,KAAM,EAAQ,EAAQ,SAAS,GAAI;AAC5E;;EAGF,IAAM,KAAgB,IAAkB,IAAY,EAAQ,UAAU,EAAQ;AAC9E,IAAe,EAAQ,GAAe;IAGlC,UAA0B;EAC9B,IAAM,IAAS,EAAwB,EAAiB,MAAM;AACzD,OACL,EAAO,EAAO,MAAM;IAGhB,KAA8B,IAAyB,OAAU;AAErE,MAAI,CADY,EAAqB,MACxB,QAAQ;AACnB,MAAgB;AAChB;;AAGF,MAAI,KAA0B,EAAwB,EAAiB,MAAM,CAC3E;EAGF,IAAM,IAAW,EAAiB,MAAM,MAAK,MAAU,CAAC,EAAO,YAAY,EAAW,EAAO,MAAM,CAAC;AACpG,MAAI,GAAU;AACZ,KAAe,EAAS,MAAM;AAC9B;;AAGF,KAAgB;;AAIlB,aACQ,EAAM,aACX,MAAa;AACZ,IAAc,QAAQ;GAEzB;CAED,IAAM,UAAe;AACf,IAAM,aACV,EAAK,QAAQ,CAAC,EAAK;IAGf,UAAc;AAQlB,EAPA,EAAK,QAAQ,IACb,GAAgB,EAChB,EAAW,QAAQ,IAKd,EAAM,cACT,eAAe;AACb,GAAI,EAAW,SACb,EAAW,MAAM,OAAO;IAE1B;IAIA,UAAqB;AACrB,IAAM,aACV,EAAK,QAAQ;IAGT,KAAU,MAAe;AAI7B,EAHA,EAAc,QAAQ,GACtB,EAAK,qBAAqB,EAAM,EAChC,EAAK,UAAU,EAAM,EACrB,GAAO;IAGH,KAAc,MAAwB;EAC1C,IAAM,IAAU,EAAc;AAgB9B,SAbI,KAAqC,OAAa,KAGlD,EAAM,MAAM,OAAO,EAAM,MAAO,aAC3B,EAAM,GAAG,GAAS,EAAM,GAI7B,EAAM,MAAM,OAAO,EAAM,MAAO,WAC3B,IAAU,EAAM,QAAQ,IAAQ,EAAM,MAIxC,MAAY;IAWfC,IAAyB;EAC7B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,iBArBsB,GAAY,MAAsB;AACxD,KAAW,MAAM,IAAI,GAAO,EAAU;;EAqBtC,mBAlBwB,MAAe;AACvC,KAAW,MAAM,OAAO,EAAM;;EAkB9B,sBAAsB,MAA+B;AAEnD,GADA,EAAiB,QAAQ,GACrB,EAAK,QACP,EAA2B,GAAK,GAEhC,GAAgB;;EAGpB;EACA;EACA;EACA;EACA;EACD;AAmBD,QAjBA,MAAM,SAAqB;AACzB,EAAI,EAAK,SACP,GAA4B;GAE9B,EAEF,YAAY,EAAK,QAAQ,MAAW;AAClC,EAAI,IACF,eAAe;AACb,MAA4B;IAC5B,GAEF,GAAgB;GAElB,EAEF,QAAQ,oBAAoB,EAAQ,EAC7B;;AAOT,SAAgB,sBAAqC;CACnD,IAAM,IAAU,OAAsB,mBAAmB;AAEzD,KAAI,CAAC,EACH,OAAU,MAAM,gDAAgD;AAGlE,QAAO;;AAOT,SAAgB,mBAAmB,GAAgC;AACjE,SAAQ,kBAAkB,EAAM;;AAOlC,SAAgB,oBAAuC;AAQrD,QAPc,OAA0B,kBAAkB;EACxD,MAAM;EACN,SAAS;EACT,OAAO;EACP,UAAU;EACX,CAAC;;ACjPJ,SAAgB,cACd,GACA,GACkC;CAClC,IAAIC,IAAkD,MAEhD,KAAa,GAAG,MAAwB;AAK5C,EAJI,MAAc,QAChB,aAAa,EAAU,EAGzB,IAAY,iBAAiB;AAE3B,GADA,EAAG,GAAG,EAAK,EACX,IAAY;KACX,EAAM;;AAWX,QAPA,EAAU,eAAe;AACvB,EAAI,MAAc,SAChB,aAAa,EAAU,EACvB,IAAY;IAIT;;ACjBT,SAAgB,eACd,GACA,GACA,GACA;CAKA,IAAM,IAAe,IAAuB;EAC1C,SAAS;EACT,OAAO;EACP,iBAAiB;EAClB,CAAC,EAEI,IAAgB,oBAAiC,IAAI,KAAK,CAAC,EAC3D,IAAiB,IAAoB,EAAE,CAAC,EAMxC,KAAe,MACZ,gBAAgB,EAAM,aAAa,CAAC,MAAM,IAG7C,IAAe,OAAO,MAAkD;EAC5E,IAAM,IAAM,EAAY,EAAM;AAG9B,MAAI,EAAO,kBAAkB,YAAY,CAAC,EAAO,cAC/C,QAAO,EAAc,MAAM,IAAI,EAAI,IAAI;AAIzC,MAAI,EAAO,kBAAkB,WAAW;GACtC,IAAM,IAAS,eAAe,QAAQ,EAAI;AAC1C,UAAO,IAAS,KAAK,MAAM,EAAO,GAAG;;AAQvC,SAJI,EAAO,kBAAkB,YAAY,EAAO,QACvC,MAAM,EAAO,MAAM,IAAI,EAAI,GAG7B;IAGH,IAAa,OAAO,GAAe,MAA2C;EAClF,IAAM,IAAM,EAAY,EAAM;AAG9B,MAAI,EAAO,kBAAkB,YAAY,CAAC,EAAO,eAAe;AAC9D,KAAc,MAAM,IAAI,GAAK,EAAQ;AACrC;;AAIF,MAAI,EAAO,kBAAkB,WAAW;AACtC,kBAAe,QAAQ,GAAK,KAAK,UAAU,EAAQ,CAAC;AACpD;;AAIF,EAAI,EAAO,kBAAkB,YAAY,EAAO,SAC9C,MAAM,EAAO,MAAM,IAAI,GAAK,EAAQ;IAQlC,IAAc,OAAO,MAAiC;AAE1D,EAAI,EAAa,MAAM,mBACrB,EAAa,MAAM,gBAAgB,OAAO;EAI5C,IAAM,IAAS,MAAM,EAAa,EAAM;AACxC,MAAI,GAAQ;AACV,KAAe,QAAQ;AACvB;;EAIF,IAAM,IAAkB,IAAI,iBAAiB;AAO7C,EANA,EAAa,QAAQ;GACnB,SAAS;GACT,OAAO;GACP;GACD,EAED,EAAK,iBAAiB,EAAM;AAE5B,MAAI;GACF,IAAM,IAAU,MAAM,EAAO,OAAO,GAAO,EAAgB,OAAO;AAGlE,OAAI,EAAgB,OAAO,QACzB;AAYF,GATA,EAAe,QAAQ,GACvB,MAAM,EAAW,GAAO,EAAQ,EAEhC,EAAa,QAAQ;IACnB,SAAS;IACT,OAAO;IACP,iBAAiB;IAClB,EAED,EAAK,eAAe,GAAS,EAAM;WAC5B,GAAO;AAEd,OAAI,aAAiB,SAAS,EAAM,SAAS,aAC3C;GAGF,IAAM,IAAM,aAAiB,QAAQ,IAAY,MAAM,OAAO,EAAM,CAAC;AAUrE,GATA,EAAa,QAAQ;IACnB,SAAS;IACT,OAAO;IACP,iBAAiB;IAClB,EAED,EAAK,iBAAiB,GAAK,EAAM,EAG7B,EAAO,WACT,EAAO,QAAQ,EAAI;;IASnB,IAAgB,cACpB,GACA,EAAO,YAAY,IACpB,EAMK,IAAe,eAAe;EAClC,IAAM,IAAY,EAAO,mBAAmB;AAC5C,SAAO,EAAW,MAAM,UAAU;GAClC;AAkCF,QA5BA,YACQ,EAAW,QAChB,MAAU;AACT,MAAI,CAAC,EAAa,OAAO;AACvB,KAAe,QAAQ,EAAE;AACzB;;AAGF,IAAc,EAAM;IAEtB,EAAE,WAAW,IAAO,CACrB,EAiBM;EAEL,SAAS,eAAe,EAAa,MAAM,QAAQ;EACnD,OAAO,eAAe,EAAa,MAAM,MAAM;EAC/C,SAAS,eAAe,EAAe,MAAM;EAG7C;EACA,eAnB0B;AAI1B,GAHI,EAAa,MAAM,mBACrB,EAAa,MAAM,gBAAgB,OAAO,EAE5C,EAAc,MAAM,OAAO;;EAgB3B,kBAAkB,EAAc,MAAM,OAAO;EAC9C;;;;;;;;;;;;;EErMH,IAAM,IAAU,qBAAoB,EAC9B,IAAc,mBAAkB,EAChC,IAAqB,IAA0C,KAAI,EACnE,IAAqB,IAAwB,KAAK,EAGlD,IAAgB,eAAe;GACnC,IAAM,IAAc,EAAQ,cAAc;AAE1C,UADI,KAA6C,OAAa,KACvD,EAAQ,WAAW,MAAM,IAAI,EAAY,IAAI;IACrD,EAGK,IAAe,eACZ,EAAQ,cAAc,UAAU,KAAA,KAAa,EAAQ,cAAc,UAAU,KACrF,EAEK,IAAe,IAAI,GAAK,EAGxB,IAAqB,eAAe;GACxC,IAAM,IAAM,EAAQ,iBAAiB;AACjC,UAAC,EAAY,cAAc,CAAC,EAAQ,KAAK,SAAS,IAAM,GAC5D,QAAO,GAAG,EAAQ,IAAI,UAAU,OAAO;IACxC,EAGK,KAAe,MAA2B;AAM9C,GAJK,EAAQ,KAAK,SAChB,EAAQ,cAAa,EAEvB,EAAQ,WAAW,QAAQ,OAAO,EAAK,EACvC,EAAa,QAAQ;KAMjB,UAAoB,IAKpB,KAAsB,MAAkB;AAG5C,GAFA,EAAE,gBAAe,EACjB,EAAE,iBAAgB,EAClB,EAAQ,QAAO;KAIX,KAAwB,MAAkB;AAK9C,GAJA,EAAE,gBAAe,EACjB,EAAE,iBAAgB,EAClB,EAAQ,OAAO,KAAK,EACpB,EAAQ,WAAW,QAAQ,IAC3B,EAAa,QAAQ;GAGrB,IAAM,IAAU,SAAS,eAAe,EAAQ,IAAI,UAAU;AAC9D,GAAI,KACF,EAAQ,OAAM;KAIZ,KAAsB,MAAyB;AAC/C,UAAY,UAEhB;QAAI,EAAM,QAAQ;SACZ,CAAC,EAAQ,WAAW,SAAS,EAAa,OAAO;AAEnD,MADA,EAAM,gBAAe,EAChB,EAAa,SAGhB,EAAQ,OAAO,KAAI,EACnB,EAAQ,WAAW,QAAQ,IAC3B,EAAa,QAAQ,MAJrB,EAAa,QAAQ;AAMvB;;UAGF,GAAa,QAAQ;AAGvB,YAAQ,EAAM,KAAd;KACE,KAAK;AAEH,MADA,EAAM,gBAAe,EAChB,EAAQ,KAAK,QAIhB,EAAQ,cAAc,EAAC,IAHvB,EAAQ,cAAa,EACrB,EAAQ,gBAAe;AAIzB;KACF,KAAK;AAEH,MADA,EAAM,gBAAe,EAChB,EAAQ,KAAK,QAIhB,EAAQ,cAAc,GAAE,IAHxB,EAAQ,cAAa,EACrB,EAAQ,eAAc;AAIxB;KACF,KAAK;AACH,MAAI,EAAQ,KAAK,UACf,EAAM,gBAAe,EACrB,EAAQ,gBAAe;AAEzB;KACF,KAAK;AACH,MAAI,EAAQ,KAAK,UACf,EAAM,gBAAe,EACrB,EAAQ,eAAc;AAExB;KACF,KAAK;AACH,MAAI,EAAQ,KAAK,UACf,EAAM,gBAAe,EACrB,EAAQ,mBAAkB;AAE5B;KACF,KAAK;AACH,MAAI,EAAQ,KAAK,UACf,EAAM,gBAAe,EACrB,EAAQ,OAAM;AAEhB;KACF,KAAK;AACH,MAAI,EAAQ,KAAK,SACf,EAAQ,OAAM;AAEhB;KACF;AACE,QAAa,QAAQ;AACrB;;;KAIA,KAAuB,MAAyB;AAChD,UAAY,SAEhB,SAAQ,EAAM,KAAd;IACE,KAAK;AAEH,KADA,EAAM,gBAAe,EAChB,EAAQ,KAAK,QAIhB,EAAQ,cAAc,EAAC,IAHvB,EAAQ,cAAa,EACrB,EAAQ,gBAAe;AAIzB;IACF,KAAK;AAEH,KADA,EAAM,gBAAe,EAChB,EAAQ,KAAK,QAIhB,EAAQ,cAAc,GAAE,IAHxB,EAAQ,cAAa,EACrB,EAAQ,eAAc;AAIxB;IACF,KAAK;AACH,KAAI,EAAQ,KAAK,UACf,EAAM,gBAAe,EACrB,EAAQ,gBAAe;AAEzB;IACF,KAAK;AACH,KAAI,EAAQ,KAAK,UACf,EAAM,gBAAe,EACrB,EAAQ,eAAc;AAExB;IACF,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;AAEH,KADA,EAAM,gBAAe,EAChB,EAAQ,KAAK,QAIhB,EAAQ,mBAAkB,IAH1B,EAAQ,cAAa,EACrB,EAAQ,gBAAe;AAIzB;IACF,KAAK;AACH,KAAI,EAAQ,KAAK,UACf,EAAM,gBAAe,EACrB,EAAQ,OAAM;AAEhB;IACF,KAAK;AACH,KAAI,EAAQ,KAAK,SACf,EAAQ,OAAM;AAEhB;IACF;AACE,OAAa,QAAQ;AACrB;;;SAIN,YACQ,EAAQ,cAAc,aACtB;AACJ,KAAa,QAAQ;IAEzB,EAGA,gBAAgB;AACd,GAAI,EAAY,aAGV,EAAmB,UACrB,EAAQ,WAAW,QAAQ,EAAmB,SAI5C,EAAmB,SAAS,EAAmB,MAAM,QACvD,EAAQ,WAAW,QAAQ,EAAmB,MAAM;IAGzD,YAMS,MAAA,EAAW,CAAC,cAAA,WAAA,EADpB,mBAmEM,OAAA;;YAjEA;GAAJ,KAAI;GACJ,OAAK,eAAA,CAAC,uBAAqB;qCACsB,MAAA,EAAW,CAAC;iCAA6C,MAAA,EAAO,CAAC,KAAK;6BAAsC,MAAA,EAAW,CAAC,SAAS,MAAA,EAAW,CAAC;6BAAqC,MAAA,EAAW,CAAC,YAAY,MAAA,EAAW,CAAC;6BAAwC,MAAA,EAAW,CAAC,UAAU,MAAA,EAAW,CAAC;;;GAUzU,EAAA,SAAA,WAAA,EADR,mBAmBM,OAAA;;IAjBH,OAAK,eAAA,CAAA,mBAAA,EAAA,kCAA0D,EAAA,OAAY,CAAA,CAAA;OAE5E,mBAA8D,QAA9D,eAA8D,gBAAvB,EAAA,MAAa,EAAA,EAAA,EAE3C,MAAA,EAAW,CAAC,WASiK,mBAAA,IAAA,GAAA,IATjK,WAAA,EADrB,mBAaS,UAAA;;IAXP,MAAK;IACL,OAAM;IACN,cAAW;IACX,UAAS;IACR,SAAO;oBAER,mBAIM,OAAA;IAJD,OAAM;IAAU,MAAK;IAAe,SAAQ;OAC/C,mBAEE,QAAA,EADA,GAAE,gLAA8K,CAAA,CAAA,EAAA,GAAA,CAAA,CAAA,CAAA,EAAA,EAAA,EAAA,IAAA,mBAAA,IAAA,GAAA;GAOxL,mBAgBE,SAAA;IAfC,IAAI,MAAA,EAAO,CAAC,IAAI;IACjB,MAAK;IACJ,OAAO,MAAA,EAAO,CAAC,WAAW;IAC1B,UAAU,MAAA,EAAW,CAAC;IACtB,aAAa,EAAA,QAAY,KAAQ,MAAA,EAAW,CAAC;IAC9C,OAAM;IACN,MAAK;IACJ,iBAAe,MAAA,EAAO,CAAC,KAAK,QAAK,SAAA;IACjC,iBAAe;IACf,iBAAe,MAAA,EAAO,CAAC,IAAI;IAC5B,qBAAkB;IACjB,yBAAuB,EAAA;IACvB,SAAK,EAAA,QAAA,MAAE,EAAa,EAAO,OAA4B,MAAK;IAC5D,SAAO;IACP,WAAS;;GAIZ,mBAYM,OAZN,eAYM,EAAA,WAAA,EAXJ,mBAUM,OAAA;IATJ,OAAK,eAAA,CAAC,+CAA6C,EAAA,cAC3B,MAAA,EAAO,CAAC,KAAK,OAAK,CAAA,CAAA;IAC1C,MAAK;IACL,QAAO;IACP,SAAQ;IACR,OAAM;IACL,SAAO;oBAER,mBAA2F,QAAA;IAArF,kBAAe;IAAQ,mBAAgB;IAAQ,gBAAa;IAAI,GAAE;;yBAM9E,YA6BW,kBAAA;;YA3BL;GAAJ,KAAI;GACJ,MAAK;GACJ,IAAI,MAAA,EAAO,CAAC,IAAI;GACjB,MAAK;GACJ,iBAAe,MAAA,EAAO,CAAC,KAAK,QAAK,SAAA;GACjC,iBAAe;GACf,iBAAe,MAAA,EAAO,CAAC,IAAI;GAC3B,MAAM,MAAA,EAAW,CAAC;GAClB,SAAS,MAAA,EAAW,CAAC;GACrB,UAAU,MAAA,EAAW,CAAC;GACvB,OAAM;GACL,SAAK,EAAA,QAAA,MAAE,MAAA,EAAO,CAAC,QAAM;GACrB,WAAS;;0BAEF,CAAR,WAAQ,EAAA,QAAA,WAAA,EAAA,EAAA,KAAA,GAAA,GAAA,GAAA,WAAA,EAGR,mBASM,OAAA;IARJ,OAAK,eAAA,CAAC,8CAA4C,EAAA,cAC1B,MAAA,EAAO,CAAC,KAAK,OAAK,CAAA,CAAA;IAC1C,MAAK;IACL,QAAO;IACP,SAAQ;IACR,OAAM;oBAEN,mBAA2F,QAAA;IAArF,kBAAe;IAAQ,mBAAgB;IAAQ,gBAAa;IAAI,GAAE;;;;;;;;;;;;;;;;EExU9E,IAAM,IAAQ,GAMR,IAAU,qBAAoB,EAE9B,IAAe,eAAe;GAClC,IAAM,IAAQ,EAAQ,cAAc;AAmBpC,UAhBI,KAAiC,OAC5B,EAAM,cAIG,EAAQ,WAAW,MAAM,IAAI,EAAK,KAMhD,OAAO,KAAU,YAAY,KAAkB,WAAW,IACrD,EAAM,QAIR,OAAO,EAAK;IACpB,EAEK,IAAW,eACD,EAAQ,cAAc,SACI,KACzC;iCAIC,mBAKO,QAAA,EAJL,OAAK,eAAA,CAAC,6BAA2B,EAAA,+BAAA,CACS,EAAA,OAAQ,CAAA,CAAA,EAAA,EAAA,gBAE/C,EAAA,MAAY,EAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EE5BnB,IAAM,IAAQ,GAqBR,IAAO,GAQP,IAAa,IAAwB,KAAI,EACzC,IAAe,IAA4B;GAC/C,UAAU;GACV,KAAK;GACL,MAAM;GACN,WAAW;GACX,QAAQ;GACT,CAAA,EACK,IAAU,IAAI,GAAK;EAGzB,SAAS,IAAiB;GACxB,IAAM,IAAS,EAAM,QACf,IAAU,EAAW;AAC3B,OAAI,CAAC,KAAU,CAAC,EAAS;GAEzB,IAAM,IAAa,EAAO,uBAAsB,EAC1C,IAAc,EAAQ,uBAAsB,EAC5C,IAAK,OAAO,YACZ,IAAK,OAAO;AAYlB,OAJE,EAAW,SAAS,KACpB,EAAW,MAAM,GAGE;AACnB,OAAM;AACN;;GAGF,IAAM,EAAE,eAAY,UAAU,WAAQ,UAAU,YAAS,GAAG,cAAW,OAAS,EAAM,YAAY,EAAC,EAE/F,IAAM,GACN,GACA,IAAO;AAGX,WAAQ,GAAR;IACE,KAAK;AAEH,KADA,IAAM,EAAW,SAAS,GAC1B,IAAO,EAAW,QAAQ,MAAU,WAAW,EAAW,QAAQ,IAAI,EAAY,QAAQ,IAAI,MAAU,QAAQ,EAAW,QAAQ,EAAY,QAAQ;AACvJ;IACF,KAAK;AAGH,KADA,IAAS,IAAK,EAAW,MAAM,GAC/B,IAAO,EAAW,QAAQ,MAAU,WAAW,EAAW,QAAQ,IAAI,EAAY,QAAQ,IAAI,MAAU,QAAQ,EAAW,QAAQ,EAAY,QAAQ;AACvJ;IACF,KAAK;AAEH,KADA,IAAM,EAAW,OAAO,MAAU,WAAW,EAAW,SAAS,IAAI,EAAY,SAAS,IAAI,MAAU,QAAQ,EAAW,SAAS,EAAY,SAAS,IACzJ,IAAO,EAAW,OAAO,EAAY,QAAQ;AAC7C;IACF,KAAK;AAEH,KADA,IAAM,EAAW,OAAO,MAAU,WAAW,EAAW,SAAS,IAAI,EAAY,SAAS,IAAI,MAAU,QAAQ,EAAW,SAAS,EAAY,SAAS,IACzJ,IAAO,EAAW,QAAQ;AAC1B;;AA4CJ,GAxCI,MACE,MAAc,YAAY,IAAM,EAAY,SAAS,KAEvD,IAAS,IAAK,EAAW,MAAM,GAC/B,IAAM,KACG,MAAc,SAAS,MAAW,KAAA,KAAa,IAAK,IAAS,EAAY,SAAS,MAE3F,IAAM,EAAW,SAAS,GAC1B,IAAS,KAAA,KAMT,IAAO,MAAS,IAAO,IACvB,IAAO,EAAY,QAAQ,IAAK,MAAS,IAAO,IAAK,IAAU,EAAY,QAG3E,MAAW,KAAA,KAQT,IAAM,MAAS,IAAM,IACrB,IAAM,EAAY,SAAS,IAAK,MAClC,IAAM,KAAK,IAAI,GAAS,IAAK,IAAU,EAAY,OAAM,MARvD,IAAS,MAAS,IAAS,IAC3B,IAAK,IAAS,EAAY,SAAS,MACrC,IAAS,KAAK,IAAI,GAAS,IAAK,IAAU,EAAY,OAAM,IAUhE,EAAa,QAAQ;IACnB,UAAU;IACV,GAAI,MAAW,KAAA,IAAwC,EAAE,KAAK,GAAG,EAAI,KAAK,GAA/C,EAAE,QAAQ,GAAG,EAAO,KAAK;IACpD,MAAM,GAAG,EAAK;IACd,WAAW;IACX,QAAQ;IACV,EAEA,EAAQ,QAAQ;;EAIlB,SAAS,IAAsC;GAC7C,IAAM,IAAY;IAChB;IACA;IACA;IACA;IACA;IACD,CAAC,KAAK,IAAG;AAEV,UADK,EAAW,QACT,MAAM,KAAK,EAAW,MAAM,iBAA8B,EAAU,CAAC,CAAC,QAAO,MAAM,EAAG,iBAAiB,KAAI,GADpF,EAAC;;EAIjC,SAAS,IAAa;AACpB,OAAI,CAAC,EAAM,UAAW;GAEtB,IAAM,IADa,GAAqB,CACf;AACzB,OAAI,EACF,KAAI;AACF,MAAM,OAAM;WACN;;EAMZ,SAAS,EAAe,GAAkB;AACxC,OAAI,CAAC,EAAM,UAAW;GACtB,IAAM,IAAa,GAAqB;AACxC,OAAI,EAAW,WAAW,EAAG;GAE7B,IAAM,IAAQ,EAAW,IACnB,IAAO,EAAW,EAAW,SAAS,IACtC,IAAS,SAAS;AAExB,GAAI,EAAE,YACA,CAAC,KAAU,MAAW,KAAS,CAAC,EAAW,OAAO,SAAS,EAAO,MACpE,EAAE,gBAAe,EACb,KAAM,EAAK,OAAM,KAGnB,CAAC,KAAU,MAAW,KAAQ,CAAC,EAAW,OAAO,SAAS,EAAO,MACnE,EAAE,gBAAe,EACb,KAAO,EAAM,OAAM;;EAM7B,SAAS,EAAc,GAAkB;AACvC,GAAI,EAAE,QAAQ,YAAY,EAAM,iBAC9B,EAAE,gBAAe,EACjB,EAAE,iBAAgB,EAClB,GAAM,IACG,EAAE,QAAQ,SACnB,EAAe,EAAC;;EAIpB,SAAS,IAAQ;AAEf,GADA,EAAK,eAAe,GAAK,EACzB,EAAK,QAAO;;EAId,IAAI,IAAgC,EAAC,EACjC,IAA2B;SAG/B,YAAY,EAAM,SAAS,MAAc;AACvC,GAAI,KAAa,EAAM,QACrB,eAAe;AACb,OAAe;KAChB;KAEF,EAAE,WAAW,IAAO,CAAA,EAEvB,YAAY,EAAM,OAAO,MAAW;AAClC,OAAI,GAAQ;AAEV,IADA,EAAQ,QAAQ,IAChB,eAAe;AAEb,KADA,GAAe,EACf,4BAA4B;AAE1B,MADA,GAAW,EACX,EAAK,SAAQ;OACd;MACF;IAGD,IAAM,KAAc,MAAkB;AACpC,SAAI,CAAC,EAAM,oBAAqB;KAChC,IAAM,IAAS,EAAE;AACb,OAAM,QAAQ,SAAS,EAAO,IAAI,EAAW,OAAO,SAAS,EAAO,IACxE,GAAM;OAIF,UAAiB;AAOrB,KALI,MAAc,QAChB,qBAAqB,EAAS,EAIhC,IAAY,4BAA4B;AAEtC,MADA,GAAe,EACf,IAAY;OACb;OAGG,UAAiB,GAAe;AAMtC,IAJA,SAAS,iBAAiB,aAAa,EAAU,EACjD,SAAS,iBAAiB,UAAU,GAAU;KAAE,SAAS;KAAM,SAAS;KAAM,CAAA,EAC9E,OAAO,iBAAiB,UAAU,EAAQ,EAE1C,IAAa;WACL,SAAS,oBAAoB,aAAa,EAAW;WACrD,SAAS,oBAAoB,UAAU,GAAU,EAAE,SAAS,IAAM,CAAC;WACnE,OAAO,oBAAoB,UAAU,EAAS;WAC9C;AACJ,MAAI,MAAc,SAChB,qBAAqB,EAAS,EAC9B,IAAY;;KAGlB;SAWA,CATA,EAAQ,QAAQ,IAChB,EAAK,SAAQ,EACb,EAAW,SAAQ,MAAM;AACvB,QAAI;AACF,QAAG;YACG;KAGT,EACD,IAAa,EAAC;IAEjB,EAED,kBAAkB;AAQhB,GAPA,EAAW,SAAQ,MAAM;AACvB,QAAI;AACF,QAAG;YACG;KAGT,EACD,IAAa,EAAC;IACf,0BAIC,YAgBW,UAAA,EAhBD,IAAG,QAAM,EAAA,CAET,EAAA,aAAa,EAAA,OAAA,gBAAA,WAAA,EADrB,mBAcM,OAAA;;YAXA;GAAJ,KAAI;GACH,MAAM,EAAA;GACN,cAAY,EAAA,SAAI,WAAA,SAAyB,KAAA;GACzC,cAAY,EAAA;GACZ,OAAK,eAAA;IAAA,GAAO,EAAA;IAAY,SAAW,EAAA,QAAO,MAAA;IAAA,CAAA;GAC3C,OAAM;GACL,SAAK,EAAA,OAAA,oBAAN,IAAW,CAAA,OAAA,CAAA;GACV,aAAS,EAAA,OAAA,oBAAV,IAAe,CAAA,OAAA,CAAA;GACd,WAAO,cAAO,GAAa,CAAA,OAAA,CAAA;MAE5B,WAAQ,EAAA,QAAA,WAAA,EAAA,EAAA,KAAA,GAAA,GAAA,CAAA,EAAA,IAAA,cAAA,GAAA,CAAA,CAAA,OAAA,CAXC,EAAA,aAAa,EAAA,KAAI,CAAA,CAAA,GAAA,mBAAA,IAAA,GAAA,CAAA,CAAA;;;;;;;;;;EElThC,IAAM,IAAQ,GAUR,IAAU,qBAAoB,EAC9B,IAAc,mBAAkB,EAChC,IAAa,IAAwB,KAAI,EAGzC,IAAe,IAAY,GAAE;AAgBnC,EAbA,YACQ,EAAQ,WAAW,QACxB,MAAc;AACb,GAAI,MAGF,EAAa,QAAQ,GADC,EAAU,uBAAuB,CAAC,MAClB;KAG1C,EAAE,WAAW,IAAK,CACpB,EAGA,YACQ,EAAQ,KAAK,QAClB,MAAW;AACV,GAAI,KAAU,EAAQ,WAAW,UAE/B,EAAa,QAAQ,GADC,EAAQ,WAAW,MAAM,uBAAuB,CAAC,MACjC;IAG5C;EAGA,IAAM,IAAe,eAAe;GAClC,IAAM,IAAoC,EACxC,WAAW,EAAM,WACnB;AAoBA,UAfyB,EAAY,SAAS,CAAC,EAAY,MAAM,SAAS,IAAG,GAI3E,EAAU,QAAQ,EAAY,QACrB,EAAa,QAItB,EAAU,QAAQ,EAAa,QAG/B,EAAU,QAAQ,QAGb;IACR;iCAIC,YAsBc,qBAAA;GArBX,MAAM,MAAA,EAAO,CAAC,KAAK;GACnB,QAAQ,MAAA,EAAO,CAAC,WAAW;GAC3B,UAAQ;IAAA,WAAI,EAAA;IAAS,OAAE,EAAA;IAAK,QAAA;IAAA,UAAA;IAAA;GAC7B,MAAK;GACJ,0BAAwB;GACxB,mBAAiB;GACjB,cAAY;GACZ,cAAY;GACZ,iBAAW,EAAA,QAAA,MAAE,MAAA,EAAO,CAAC,KAAK,QAAQ;;0BAY7B,CAVN,mBAUM,OAAA;aATA;IAAJ,KAAI;IACH,IAAI,MAAA,EAAO,CAAC,IAAI;IACjB,MAAK;IACJ,mBAAiB,MAAA,EAAO,CAAC,IAAI;IAC9B,UAAS;IACT,OAAM;IACL,OAAK,eAAE,EAAA,MAAY;OAEpB,WAAQ,EAAA,QAAA,WAAA,EAAA,EAAA,KAAA,GAAA,GAAA,CAAA,EAAA,IAAA,cAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;EEvFd,IAAM,IAAY,OAAO,kBAAkB,GAAK,EAE1C,IAAQ,GAOR,IAAU,qBAAoB,EAC9B,IAAc,mBAAkB,EAChC,IAAU,IAAwB,KAAI,EAGtC,UACA,EAAM,YAAkB,EAAM,YAC9B,EAAQ,SACH,EAAQ,MAAM,aAAa,MAAM,IAEnC,OAAO,EAAM,MAAK;AAW3B,EAPA,gBAAgB;AACT,KAAQ,SAEb,EAAQ,eAAe,EAAM,OAAO,GAAc,CAAA;IACnD,EAGD,kBAAkB;AAChB,KAAQ,iBAAiB,EAAM,MAAK;IACrC;EAGD,IAAM,IAAY,eAAe;AAC/B,OAAI,OAAO,EAAM,aAAc,SAC7B,QAAO,EAAM;AAGf,OAAI,CAAC,EAAQ,MAAO,QAAO;GAE3B,IAAM,IAAU,EAAQ,MAAM,QAAQ,qBAAoB;AAO1D,UANK,IAGS,MAAM,KAClB,EAAQ,iBAAiB,+DAA0D,CACrF,CACa,QAAQ,EAAQ,MAAK,GANb;IAOtB,EAEK,IAAa,eAAe,EAAQ,WAAW,EAAM,MAAM,CAAA,EAE3D,IAAgB,eACb,EAAU,SAAS,KAAK,EAAQ,iBAAiB,UAAU,EAAU,MAC7E,EAEK,UAAoB;AACxB,GAAK,EAAM,YACT,EAAQ,OAAO,EAAM,MAAK;;SAK9B,MAAM,IAAgB,MAAgB;AACpC,GAAI,KAAe,EAAQ,SACzB,EAAQ,MAAM,eAAe;IAAE,OAAO;IAAW,UAAU;IAAU,CAAA;IAExE,0BAIC,mBA0CM,OAAA;YAzCA;GAAJ,KAAI;GACJ,uBAAoB;GACnB,IAAI,EAAA,SAAS,IAAA,GAAW,MAAA,EAAO,CAAC,IAAI,UAAS,OAAQ,EAAA,UAAc,KAAA;GACpE,MAAK;GACJ,iBAAe,EAAA,QAAU,SAAA;GACzB,iBAAe,EAAA,WAAQ,SAAA;GACvB,oBAAkB,EAAA,QAAa,SAAA;GAChC,OAAK,eAAA,CAAC,kBAAgB;gCACsB,EAAA;gCAA8C,EAAA;mCAA+C,EAAA;iCAAkD,MAAA,EAAW,CAAC,kBAAkB,MAAA,EAAW,CAAC,iBAAc;+BAAuC,MAAA,EAAS;;GAOlS,SAAO;MAGR,mBAOO,QAAA;GANL,OAAM;GACL,OAAK,eAAA,EAAA,iBAA6B,MAAA,EAAW,CAAC,kBAAkB,MAAA,EAAW,CAAC,iBAAc,IAAO,MAAA,EAAW,CAAC,iBAAiB,KAAA,GAAA,CAAA;MAI/H,WAAQ,EAAA,QAAA,WAAA,EAAA,EAAA,KAAA,GAAA,GAAA,CAAA,EAAA,EAAA,EAKF,EAAA,SAAA,WAAA,EADR,mBAYM,OAZN,eAYM,CAAA,GAAA,EAAA,OAAA,CALJ,mBAIE,QAAA;GAHA,aAAU;GACV,GAAE;GACF,aAAU;;;;;;;SE3GlB,QAAQ,kBAAkB,GAAI,0BAI5B,mBAMM,OAAA;GALJ,MAAK;GACJ,mBAAiB,EAAA;GAClB,OAAM;MAEN,WAAQ,EAAA,QAAA,WAAA,EAAA,EAAA,KAAA,GAAA,GAAA,CAAA,EAAA,GAAA,cAAA;;;;;;;;;;;;EEnBZ,IAAM,IAAQ,GAgBR,IAAU,eACP,EAAM,MAAM,mBAAmB,KAAK,QAAQ,CAAC,SAAS,GAAG,CAAC,OAAO,GAAG,EAAE,GAC9E;iCAIC,mBAMM,OAAA;GALH,IAAI,EAAA;GACJ,OAAK,eAAA,CAAA,mBAAA,EAAA,2BAAmD,EAAM,QAAM,CAAA,CAAA;GACrE,MAAK;MAEL,WAAQ,EAAA,QAAA,WAAA,EAAA,EAAA,KAAA,GAAA,GAAA,CAAA,EAAA,IAAA,cAAA;;;;;;;;iCE7BV,mBAAoD,OAApD,cAAoD;;;;;;;;;;;;;;;;;;;;;iCEqBpD,mBAwBM,OAxBN,eAwBM,CAvBJ,mBAiBM,OAjBN,eAiBM;GAhBO,EAAA,WAAW,SAAA,WAAA,EAAtB,mBAEM,OAFN,eAEM,gBADD,EAAA,WAAW,MAAK,EAAA,EAAA,IAAA,mBAAA,IAAA,GAAA;GAEV,EAAA,WAAW,eAAA,WAAA,EAAtB,mBAEM,OAFN,eAEM,gBADD,EAAA,WAAW,YAAW,EAAA,EAAA,IAAA,mBAAA,IAAA,GAAA;GAEhB,EAAA,WAAW,MAAM,UAAA,WAAA,EAA5B,mBASM,OATN,eASM,EAAA,UAAA,GAAA,EARJ,mBAOO,UAAA,MAAA,WAN4B,EAAA,WAAW,OAApC,GAAW,oBADrB,mBAOO,QAAA;IALJ,KAAK;IACN,OAAM;OAEN,mBAAwE,QAAxE,eAAwE,gBAA1B,EAAU,MAAK,GAAG,KAAC,EAAA,EACjE,mBAAuE,QAAvE,cAAuE,gBAAzB,EAAU,MAAK,EAAA,EAAA,CAAA,CAAA;MAIxD,EAAA,WAAW,SAAA,WAAA,EAAtB,mBAIM,OAJN,cAIM,CAHJ,mBAEO,QAAA,EAFA,OAAK,eAAA,CAAA,mBAAsB,EAAA,cAAc,EAAA,WAAW,UAAS,CAAA,CAAA,EAAA,EAAA,gBAC/D,EAAA,WAAW,MAAK,EAAA,EAAA,CAAA,CAAA,IAAA,mBAAA,IAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EErB3B,IAAM,IAAQ,GAoBR,IAAO,GASP,IAAU,qBAAqB,GAAO,EAAI;AAChD,qBAAmB,EAAK;EAMxB,IAAM,IAAc,eAAe,CAAC,CAAC,EAAM,OAAM,EAc3C,IAAc,EAAY,QAC5B,eACE;GACE,QAAQ,EAAM;GACd,UAAU,EAAM;GAChB,iBAAiB,EAAM;GACvB,eAAe,EAAM;GACrB,OAAO,EAAM;GACd,EACD,EAAQ,aApBK,GAAe,GAAG,MAAgB;AACnD,GAAI,MAAU,kBACZ,EAAK,iBAAiB,EAAK,GAAE,GACpB,MAAU,gBACnB,EAAK,eAAe,EAAK,IAAI,EAAK,GAAE,GAC3B,MAAU,mBACnB,EAAK,iBAAiB,EAAK,IAAI,EAAK,GAAE;IAgBtC,GACA,MAGE,IAAY,gBAAgB,EAChC,OAAO,EAAM,OACd,EAAC,EAGI,IAAc,eAEd,EAAY,QAAc,KACvB,MAAM,QAAQ,EAAM,QAAQ,IAAI,EAAM,QAAQ,SAAS,EAC/D,EAUK,IAAoB,eAEpB,EAAY,SAAS,IAEnB,CAAC,EAAQ,WAAW,SAAS,EAAM,iBAC9B,EAAM,iBAGR,EAAY,QAAQ,QAIxB,EAAM,UAEJ,EAAM,QAAQ,KAAI,MAAO;AAE9B,OAAI,OAAO,KAAQ,YAAY,OAAO,KAAQ,SAC5C,QAAO;IACL,OAAO;IACP,OAAO,OAAO,EAAI;IAClB,UAAU;IACZ;GAIF,IAAM,IAAa,EAAM,cAAc,SACjC,IAAa,EAAM,cAAc,SAGjC,IAAW,EAAM,iBACnB,EAAM,eAAe,EAAG,GACvB,EAAI,YAAY;AAErB,UAAO;IACL,OAAO,EAAI;IACX,OAAO,EAAI,MAAe,OAAO,EAAI,GAAY;IACjD;IACA,GAAG;IACL;IACD,GA3B0B,EAAC,CA4B7B;EAWD,SAAS,EACP,GACA,GACA,GACA,GACS;GACT,IAAM,KAAqB,MAAkB,EAAa,SAAS,EAAK;AAGxE,OAAI,EAAkB,QAAQ,KACd,EAAO,OAAO,aAAa,IAAI,IACnC,SAAS,EAAM,CAAE,QAAO;AAIpC,OAAI,GAAkB;IACpB,IAAM,IAAa,EAAiB,EAAM;AAC1C,QAAI,CAAC,EAAY,QAAO;AAuBxB,QApBI,EAAkB,QAAQ,IAAI,EAAW,OAAO,aAAa,CAAC,SAAS,EAAM,IAK7E,EAAkB,cAAc,IAAI,EAAW,aAAa,aAAa,CAAC,SAAS,EAAM,IAKzF,EAAkB,OAAO,IAAI,EAAW,QAAQ,MAAM,QAAQ,EAAW,KAAK,IAC5D,EAAW,KAAK,MAAK,MAAQ;KAC/C,IAAM,IAAY,OAAO,EAAK,SAAS,GAAG,CAAC,aAAY,EACjD,IAAY,OAAO,EAAK,SAAS,GAAG,CAAC,aAAY;AACvD,YAAO,EAAU,SAAS,EAAM,IAAI,EAAU,SAAS,EAAK;MAC7D,IAKC,EAAkB,QAAQ,IAAI,EAAW,OAAO,aAAa,CAAC,SAAS,EAAM,CAC/E,QAAO;;AAIX,UAAO;;EAKT,IAAM,IAAkB,eAA+B;AAErD,OAAI,EAAY,MACd,QAAO,EAAkB;GAG3B,IAAM,IAAQ,EAAQ,WAAW,MAAM,MAAM,CAAC,aAAY;AAE1D,OAAI,CAAC,EACH,QAAO,EAAkB;GAI3B,IAAI;AAEJ,GAaE,IAbE,EAAM,iBAAiB,SAEV,EAAM,eACjB;IAAC;IAAS;IAAS;IAAe;IAAQ;IAAO,GACjD,CAAC,QAAO,GACH,EAAM,iBAAiB,UAEjB,CAAC,QAAO,GACd,EAAM,iBAAiB,SAEjB;IAAC;IAAS;IAAS;IAAe;IAAQ;IAAO,GAGjD,EAAM;GAIvB,IAAM,IAAmB,EAAM,gBAC1B,MAAyB,EAAM,aAAc,GAAQ,EAAE,OAAO,GAAG,CAAA,GAClE,KAAA;AAEJ,UAAO,EAAkB,MAAM,QAAO,MACpC,EAAc,GAAQ,GAAO,GAAc,EAAgB,CAC7D;IACD,EAEK,IAAkB,eAAiC;AACvD,OAAI,CAAC,EAAY,MAAO,QAAO,EAAC;GAEhC,IAAI,IAAe;AAEnB,UAAO,EAAgB,MAAM,KAAK,MAAW;IAC3C,IAAM,IAAW,EAAM,UAAU,EAAO,EAAM,WAAW,KAAA,GACnD,IAAgB,KAAuC,QAAQ,MAAa,IAC5E,IAAe;AAErB,WAAO;KACL;KACA,OAAO;KACP,OAAO,IAAgB,OAAO,EAAS,GAAG,KAAA;KAC1C,YAAY,EAAM,eAAe,EAAM,aAAa,GAAQ,EAAE,OAAO,GAAc,CAAC,GAAG;KACzF;KACD;IACF,EAEK,IAAsB,eAAe;AAMzC,OALI,CAAC,EAAM,WAAW,CAAC,EAAgB,MAAM,UAKzC,CADkB,EAAgB,MAAM,MAAK,MAAQ,EAAK,UAAU,KAAA,EAAS,CAE/E,QAAO;GAGT,IAAM,oBAAS,IAAI,KAA8B;AAUjD,UARA,EAAgB,MAAM,SAAQ,MAAQ;IACpC,IAAM,IAAY,EAAK,SAAS,EAAM;AAItC,IAHK,EAAO,IAAI,EAAU,IACxB,EAAO,IAAI,GAAW,EAAE,CAAA,EAE1B,EAAO,IAAI,EAAU,CAAE,KAAK,EAAI;KACjC,EAEM,MAAM,KAAK,EAAO,SAAS,CAAC,CAAC,KAAK,CAAC,GAAM,QAAY;IAC1D;IACA,SAAS;IACV,EAAC;IACH,EAEK,IAAmB,eAClB,EAAY,QAEV,EAAgB,MAAM,KAAI,OAAS;GACxC,OAAO,EAAK;GACZ,OAAO,EAAK,OAAO;GACnB,UAAU,CAAC,CAAC,EAAK,OAAO;GACzB,EAAC,GAN6B,EAAC,CAOjC;AAED,cACS,EAAY,QAAQ,EAAiB,QAAQ,EAAE,GACrD,MAAY;AACX,KAAQ,oBAAoB,EAAO;KAErC,EAAE,WAAW,IAAK,CACpB;EAGA,IAAM,IAAiB,eAAe,EAAoB,MAAK,EAGzD,KAAiB,MAA+B;GACpD,IAAM,IAAkC;IACtC,SAAS;IACT,SAAS;IACT,SAAS;IACT,MAAM;IACN,SAAS;IACX,EACM,IAAM,KAAa;AACzB,UAAQ,EAAQ,OAAS,KAAA,IAA2B,EAAQ,UAAvB,EAAQ;KAWzC,IAAyB,eAAe;AAC5C,OAAI,CAAC,EAAY,SAAS,CAAC,EAAM,gBAAiB,QAAO;GACzD,IAAM,IAAc,EAAQ,WAAW,MAAM,MAAM,CAAC;AACpD,UAAO,IAAc,KAAK,IAAc,EAAM;IAC/C,EAMK,IAAuB,eAAe;GAC1C,IAAM,IAAY,EAAM,mBAAmB,GACrC,IAAc,QAAQ,EAAU;AAEtC,WADa,EAAM,uBAAuB,GAC9B,QAAQ,OAAO,OAAO,EAAU,CAAA;IAC7C;iCAIC,mBA6GM,OAAA;GA7GD,OAAM;GAAkB,OAAK,eAAE,EAAA,MAAS;MAE3B,EAAA,SAAA,WAAA,EAAhB,mBAqGW,UAAA,EAAA,KAAA,GAAA,EAAA,CApGT,YAEkB,yBAAA,MAAA;0BADkC,CAAlD,YAAkD,uBAAA,EAAlC,aAAa,EAAM,aAAA,EAAA,MAAA,GAAA,CAAA,cAAA,CAAA,CAAA,CAAA;;MAGrC,YA+FkB,yBAAA,MAAA;0BAtDL,CAvCM,EAAA,SAoC0D,WAAA,EAM3E,mBAkDW,UAAA,EAAA,KAAA,GAAA,EAAA,EAAA,UAAA,GAAA,EAjDT,mBA4BW,UAAA,MAAA,WA5B6B,EAAA,QAAtB,GAAO,wDAAqC,EAAM,MAAA,EAAA,CAClE,YAyBgB,uBAAA,EAzBA,IAAE,GAAK,MAAA,EAAO,CAAC,IAAI,UAAS,SAAU,EAAU,SAAA,EAAA;2BAM9C,CALhB,YAKgB,uBAAA;KAJb,IAAE,GAAK,MAAA,EAAO,CAAC,IAAI,UAAS,SAAU,EAAU;KAChD,QAAQ,EAAM;;4BAEC,CAAA,gBAAA,gBAAb,EAAM,KAAI,EAAA,EAAA,CAAA,CAAA;;gDAEf,mBAiBe,UAAA,MAAA,WAhBE,EAAM,UAAd,oBADT,YAiBe,sBAAA;KAfZ,KAAK,OAAO,EAAK,OAAO,MAAK;KAC7B,OAAO,EAAK,OAAO;KACnB,UAAU,EAAK,OAAO;KACtB,cAAY,EAAK,OAAO;KACxB,cAAY,EAAK;KACjB,OAAK,eAAA,EAAA,oBAAA,CAAA,CAA0B,EAAM,cAAY,CAAA;;4BAMhD,CAHM,EAAK,cAAA,WAAA,EADb,YAIE,8BAAA;;MAFC,eAAa,EAAK;MAClB,mBAAiB;mDAEpB,mBAEW,UAAA,EAAA,KAAA,GAAA,EAAA,CAAA,gBAAA,gBADN,EAAK,OAAO,MAAK,EAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA;;;;;;;;;;qBAID,IAAa,EAAA,MAAe,SAAM,KAAA,WAAA,EAA3D,YAAmE,2BAAA,EAAA,KAAA,GAAA,CAAA,IAAA,mBAAA,IAAA,GAAA,CAAA,EAAA,GAAA,WAIzD,EAAA,MAAe,SAe8C,mBAAA,IAAA,GAAA,IAf9C,WAAA,EAA3B,mBAiBM,OAjBN,cAiBM,CAfQ,EAAA,SAAA,WAAA,EAAZ,mBAEO,QAFP,cAEO,gBADF,EAAA,MAAoB,EAAA,EAAA,IAGR,EAAA,SAAe,MAAA,EAAW,EAAE,QAAQ,SAAA,WAAA,EAArD,mBAEO,QAAA,cAFqD,eAE5D,IAEiB,EAAA,SAAe,MAAA,EAAW,EAAE,MAAM,SAAA,WAAA,EAAnD,mBAEO,QAFP,cAEO,gBADF,MAAA,EAAW,CAAC,MAAM,MAAM,QAAO,EAAA,EAAA,KAAA,WAAA,EAGpC,mBAEO,QAAA,eAAA,gBADF,MAAA,EAAO,CAAC,WAAW,QAAQ,EAAM,kBAAkB,EAAM,UAAS,EAAA,EAAA,EAAA,CAAA,EAAA,EAAA,GAAA,KAzF1D,WAAA,EAAjB,mBAuCW,UAAA,EAAA,KAAA,GAAA,EAAA,EAAA,UAAA,GAAA,EAtCT,mBAiBe,UAAA,MAAA,WAhBE,EAAA,QAAR,oBADT,YAiBe,sBAAA;IAfZ,KAAK,OAAO,EAAK,OAAO,MAAK;IAC7B,OAAO,EAAK,OAAO;IACnB,UAAU,EAAK,OAAO;IACtB,cAAY,EAAK,OAAO;IACxB,cAAY,EAAK;IACjB,OAAK,eAAA,EAAA,oBAAA,CAAA,CAA0B,EAAM,cAAY,CAAA;;2BAMhD,CAHM,EAAK,cAAA,WAAA,EADb,YAIE,8BAAA;;KAFC,eAAa,EAAK;KAClB,mBAAiB;kDAEpB,mBAEW,UAAA,EAAA,KAAA,GAAA,EAAA,CAAA,gBAAA,gBADN,EAAK,OAAO,MAAK,EAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA;;;;;;;;gBAKb,EAAA,MAAgB,WAAM,KAAA,WAAA,EAAjC,mBAiBM,OAjBN,eAiBM,CAfQ,EAAA,SAAA,WAAA,EAAZ,mBAEO,QAFP,eAEO,gBADF,EAAA,MAAoB,EAAA,EAAA,IAGR,EAAA,SAAe,MAAA,EAAW,EAAE,QAAQ,SAAA,WAAA,EAArD,mBAEO,QAAA,eAFqD,eAE5D,IAEiB,EAAA,SAAe,MAAA,EAAW,EAAE,MAAM,SAAA,WAAA,EAAnD,mBAEO,QAFP,eAEO,gBADF,MAAA,EAAW,CAAC,MAAM,MAAM,QAAO,EAAA,EAAA,KAAA,WAAA,EAGpC,mBAEO,QAAA,cAAA,gBADF,MAAA,EAAO,CAAC,WAAW,QAAQ,EAAM,kBAAkB,EAAM,UAAS,EAAA,EAAA,EAAA,CAAA,IAAA,mBAAA,IAAA,GAAA,CAAA,EAAA,GAAA,EAqDA,CAAA;;cAS7E,WAAQ,EAAA,QAAA,WAAA,EAAA,KAAA,GAAA,EAAA,KAAA,GAAA,GAAA,CAAA,EAAA,EAAA;;;;;;;;;;;;;;;;;;;;;EElbd,IAAM,IAAQ,GAMR,IAAO,GAIP,IAAsB,eAAe;AAEzC,OAAI,EAAM,OAAO,WAAW;IAC1B,IAAM,IAAe,EAAM,OAAO,UAAU,EAAM,QAAO;AACzD,WAAO;KACL,UAAU,CAAC;KACX,QAAQ,IAAe,KAAA,IAAY;KACrC;;AAGF,UAAO,EAAE,UAAU,IAAM;IAC1B,EAEK,IAAa,eAAe,EAAoB,MAAM,SAAQ,EAC9D,IAAiB,eAAe,EAAoB,MAAM,OAAM;EAEtE,SAAS,EAAa,GAAqC;AACzD,GAAK,EAAW,SACd,EAAK,oBAAoB,EAAM,SAAS,EAAM,SAAQ;;iCA9DxD,YASE,MAAA,mBAAA,EAAA;GARC,eAAa,EAAA;GACb,UAAU,EAAA;GACV,OAAO,EAAA;GACR,MAAK;GACL,SAAQ;GACR,sBAAmB;GAClB,uBAAoB;GACpB,SAAK,EAAA,OAAA,oBAAN,IAAW,CAAA,OAAA,CAAA;;;;;;;;CE0Db,MAAM;;;;;;;;EAvCR,IAAM,IAAQ,GAIR,IAAO,GAKP,IAAgB,eACb,EAAM,sBAAsB,KAAK,EAAM,kBAAkB,EAAM,oBACvE,EAEK,IAAkB,eACI,EAAM,SAAS,sBAAsB,MACnC,EAAM,gBAAgB,KAAK,EAAM,gBAAgB,EAAM,oBACpF,EAEK,IAAc,eACd,EAAc,QACT,iBAAiB,EAAM,cAAc,cACnC,EAAgB,QAClB,eAAe,EAAM,cAAc,GAAG,EAAM,oBAAoB,cAEhE,eAAe,EAAM,oBAAoB,QAEnD;EAED,SAAS,EAAgB,GAAqC;AAC5D,GAAI,EAAc,QAChB,EAAK,kBAAiB,GAEtB,EAAK,aAAY;;iCA3DnB,YAUE,MAAA,mBAAA,EAAA;GATC,eAAa,EAAA;GACb,eAAe,EAAA;GACf,OAAO,EAAA;GACR,OAAM;GACN,MAAK;GACL,SAAQ;GACR,sBAAmB;GAClB,uBAAoB;GACpB,SAAK,EAAA,OAAA,oBAAN,IAAW,CAAA,OAAA,CAAA;;;;;;;;CEmFb,MAAM;;;;;;;;;;;;;;;;;;EAvDR,IAAM,IAAQ,GAMR,IAAO,GAKP,IAAiB,OAAe,sBAAsB,UAAS,EAG/D,IAAiB,eAAe;AACpC,OAAI,EAAM,SAAS,eACjB,QAAO,EAAM,QAAQ;GAGvB,IAAM,IAAmB,EAAM,QAAQ,MAAM,EAAM,QAAQ,SAAS;AACpE,UAAO,GAAG,EAAe,IAAI;IAC9B,EAEK,IAAsB,eAAe;AAEzC,OAAI,EAAM,OAAO,WAAW;IAC1B,IAAM,IAAe,EAAM,OAAO,UAAU,EAAM,QAAO;AACzD,WAAO;KACL,UAAU,CAAC;KACX,QAAQ,IAAe,KAAA,IAAY;KACrC;;AAGF,UAAO,EAAE,UAAU,IAAM;IAC1B,EAEK,IAAa,eAAe,EAAoB,MAAM,SAAQ,EAC9D,IAAiB,eAAe,EAAoB,MAAM,OAAM,EAEhE,IAAY,eACZ,EAAW,QACN,EAAe,SAAS,2BAE1B,EAAM,aAAa,iBAAiB,kBAC5C;EAED,SAAS,EAAa,GAAa;AACjC,GAAK,EAAW,SACd,EAAK,oBAAoB,EAAM,SAAS,EAAM,SAAQ;;iCArFxD,YAWE,MAAA,gBAAA,EAAA;GAVC,eAAa,EAAA,aAAa,EAAM,UAAU,KAAA;GAC1C,OAAO,EAAM;GACb,UAAU,EAAA;GACV,MAAM,EAAA;GACN,OAAO,EAAA;GACR,MAAK;GACL,SAAQ;GACR,sBAAmB;GAClB,uBAAoB;GACpB,SAAK,EAAA,OAAA,oBAAN,IAAW,CAAA,OAAA,CAAA;;;;;;;;;;;;;CE+Bb,MAAM;;;;;;;EAlBR,IAAM,IAAQ,GAIR,IAAc,eACX,EAAM,SAAS,eAAe,GACtC,EAEK,IAAc,eACd,EAAM,kBAAkB,IACnB,mBAEF,GAAG,EAAM,oBAAoB,iBACrC;iCApCC,mBAOM,OAPN,eAOM,CAHJ,mBAEO,QAAA;GAFD,OAAM;GAAyB,OAAO,EAAA;qBACvC,EAAA,MAAW,EAAA,GAAA,cAAA,CAAA,CAAA;;;;;;;;;;;;;EEgBpB,IAAM,IAAQ,GAKR,IAAa,eAAe,EAAM,SAAS,cAAc,EAAC,EAE1D,IAAgB,eAAe;GACnC,IAAM,IAAc,EAAM,WAAW,EAAM,kBACrC,IAAS,IAAc,EAAW;AAOxC,UAJI,EAAM,SAAS,YACV,EAAM,QAAQ,UAAU,GAAa,EAAW,MAAK,GAGvD;IACR;iCAtCC,mBAKO,QALP,eAKO,gBADF,EAAA,MAAa,EAAA,EAAA;;;;;;;;;;EE8CpB,IAAM,IAAQ,GAIR,IAAoB,eACjB,EAAM,SAAS,WAAW,EAAM,QAAQ,QAAQ,SAAS,EACjE,EAEK,IAAiB,eAChB,EAAM,SAAS,UAEb,EAAM,QAAQ,QAAQ,QAAO,MAE9B,EAAO,UACF,EAAO,QAAQ,EAAM,QAAO,GAE9B,GACR,GARmC,EAAC,CAStC;EAED,SAAS,EAAiB,GAAuE;AAI/F,UAHI,EAAO,WACF,EAAO,SAAS,EAAM,QAAO,GAE/B;;EAGT,SAAS,EAAkB,GAA8D;AACvF,GAAK,EAAiB,EAAO,IAC3B,EAAO,QAAQ,EAAM,QAAO;;iCA/E9B,mBAiCM,OAAA;GAhCJ,OAAM;GACN,sBAAmB;GAClB,SAAK,EAAA,OAAA,oBAAN,IAAW,CAAA,OAAA,CAAA;GACV,YAAQ,EAAA,OAAA,oBAAT,IAAc,CAAA,OAAA,CAAA;GACb,eAAW,EAAA,OAAA,oBAAZ,IAAiB,CAAA,OAAA,CAAA;GAChB,aAAS,EAAA,OAAA,oBAAV,IAAe,CAAA,OAAA,CAAA;GACd,WAAO,EAAA,OAAA,oBAAR,IAAa,CAAA,OAAA,CAAA;GACZ,eAAW,EAAA,OAAA,oBAAZ,IAAiB,CAAA,OAAA,CAAA;GAChB,cAAU,EAAA,OAAA,oBAAX,IAAgB,CAAA,OAAA,CAAA;GACf,YAAQ,EAAA,OAAA,oBAAT,IAAc,CAAA,OAAA,CAAA;MAEd,WAoBO,EAAA,QAAA,WAAA;GAlBJ,SAAU,EAAA;GACV,UAAW,EAAA;WAiBP,CAdW,EAAA,SAAA,UAAA,GAAA,EACd,mBAWW,UAAA,EAAA,KAAA,GAAA,EAAA,WAViB,EAAA,QAAlB,GAAQ,oBADlB,YAWW,kBAAA;GATR,KAAK;GACN,SAAQ;GACR,MAAK;GACL,OAAM;GACL,UAAU,EAAiB,EAAM;GACjC,UAAK,MAAE,EAAkB,EAAM;;0BAEuC,CAA3D,EAAO,QAAA,WAAA,EAAnB,mBAAuE,QAAA;;IAA9C,OAAM;IAAiB,WAAQ,EAAO;6DAC/D,mBAAuD,QAAvD,eAAuD,gBAAtB,EAAO,MAAK,EAAA,EAAA,CAAA,CAAA;;;;;;;;;;;;CEiOrD,MAAM;;;;;;;;EA9MR,IAAM,IAAQ,GAIR,IAAO,GAKP,IAAa,IAAI,GAAK,EAGtB,IAAmB,OAA6C,0BAA0B,GAAE,EAC5F,IAAU,OAAuB,cAAc,KAAI,EAEnD,IAAc,gBAA6B,EAC/C,UAAU,EAAM,UACjB,EAAC,EAGI,IAAmB,IAAI,EAAC,EAGxB,IAAa,eAAe;AAIhC,OAFK,EAAiB,OAElB,CAAC,EAAS,QAAO;GAGrB,IAAM,IAAa,EAAQ,iBAAgB;AAc3C,UAbK,IAKD,YAAY,IACP,EAAW,OAAO,SAAS,IAIpC,GAAI,WAAW,KAAc,EAAW,SAT/B;IAaV;AAGD,kBAAgB;AACd,OAAI,GAAS,IAAI;IACf,IAAM,UAAyB;AAC7B,OAAiB;;AAMnB,IAHA,EAAQ,GAAG,0BAA0B,EAAgB,EAGrD,kBAAkB;AAChB,OAAQ,MAAM,0BAA0B,EAAgB;MACzD;;IAEJ;EAED,IAAM,IAAqB,eAAe;AAExC,OAAI,EAAW,MACb,QAAO;IACL,UAAU;IACV,QAAQ;IACV;AAGF,OAAI,EAAM,SAAS,gBAAgB;IACjC,IAAM,IAAS,EAAM,QAAQ,eAAe,EAAM,SAAS,EAAY,MAAK;AAI5E,WAHI,OAAO,KAAW,YACb,EAAE,UAAU,CAAC,GAAO,GAEtB;;AAGT,UAAO,EAAE,UAAU,IAAM;IAC1B,EAEK,IAAa,eAAe,EAAmB,MAAM,SAAQ,EAC7D,IAAY,eACZ,EAAW,QACN,EAAmB,MAAM,UAAU,yBAErC,kBACR,EAEK,IAAgB,eAChB,EAAW,QACN,EAAmB,MAAM,SAC5B,kBAAkB,EAAmB,MAAM,WAC3C,kBAEC,mCACR;EAED,SAAS,EAAyB,GAAkB,GAA+B;GACjF,IAAM,IAAU,SAAS,cAAc,MAAK;AAgC5C,UA/BA,EAAQ,YAAY,mBAGpB,EAAQ,MAAM,UAAU,8bAuBxB,EAAQ,cAJQ,EAAM,SAAS,qBAC3B,EAAM,QAAQ,mBAAmB,EAAO,GACxC,OAAO,IAAW,KAKtB,SAAS,KAAK,YAAY,EAAO,EAE1B;;EAGT,SAAS,EAAgB,GAAkB;AACzC,OAAI,EAAW,OAAO;AAKpB,IAHA,EAAM,gBAAe,EAGjB,EAAW,SAAS,GAAS,QAC/B,EAAQ,KAAK,qBAAqB;KAChC,MAAM;KACN,SAAS;KACT,SAAS;KACV,CAAA;AAEH;;AAGF,KAAW,QAAQ;GAGnB,IAAM,IAAS,EAAM,SAAiB,MAAM,EAAM;AAIlD,OAHA,EAAiB,EAAK,EAGlB,EAAM,cAAc;AAEtB,IADA,EAAM,aAAa,gBAAgB,QACnC,EAAM,aAAa,QAAQ,oBAAoB,KAAK,UAAU;KAC5D,SAAS,EAAM;KACf,UAAU,EAAM;KACjB,CAAC,CAAA;IAGF,IAAI,IAAgC;AASpC,IAPA,AAIE,IAJE,EAAM,SAAS,mBACL,EAAM,QAAQ,iBAAiB,EAAM,QAAO,GAG5C,EAAyB,EAAM,SAAS,EAAM,SAAQ,EAGhE,MAEE,EAAU,MAAM,YAAY,QAC9B,EAAU,MAAM,UAAU,KAC1B,EAAU,MAAM,YAAY,oBAG9B,EAAM,aAAa,aAAa,GAAW,IAAI,GAAE,EAGjD,4BAA4B;AAC1B,KAAI,KAAa,EAAU,eAAe,SAAS,QACjD,SAAS,KAAK,YAAY,EAAS;MAEtC;;AAIL,KAAK,cAAc,EAAM,SAAS,EAAM,UAAU,EAAK;;EAGzD,SAAS,EAAc,GAAkB;AAGvC,GAFA,EAAW,QAAQ,IACnB,EAAiB,KAAI,EACrB,EAAK,YAAY,EAAM,SAAS,EAAM,UAAU,EAAK;;iCAxPrD,mBA+BM,OAAA;GA9BJ,OAAK,eAAA,CAAC,gBAAc;IAAA,oBAEU,EAAA;IAAU,kBAAoB,EAAA;IAAU,CAAA,CAAA;GADtE,sBAAmB;MAGnB,mBAyBS,UAAA;GAxBP,OAAM;GACL,UAAU,EAAA;GACV,OAAO,EAAA;GACP,WAAS,CAAG,EAAA;GACZ,iBAAe,EAAA,QAAU,SAAA;GACzB,gBAAc,EAAA,QAAU,SAAA;GACxB,cAAY,EAAA;GACb,wBAAqB;GACpB,aAAW;GACX,WAAS;GACT,SAAK,EAAA,OAAA,oBAAN,IAAW,CAAA,OAAA,CAAA;mBAEX,mBAWM,OAAA;GAVJ,OAAM;GACN,SAAQ;GACR,MAAK;MAEL,mBAEE,QAAA,EADA,GAAE,oIAAkI,CAAA,EAEtI,mBAEE,QAAA,EADA,GAAE,uIAAqI,CAAA,CAAA,EAAA,GAAA,CAAA,CAAA,EAAA,IAAA,cAAA,CAAA,EAAA,EAAA;;;ACXjJ,SAAgB,cAAc,EAAE,cAAW,mBAAgB,WAA8B;CACvF,IAAM,IAAa,eAAe,wBAAwB,EAAU,MAAM,CAAC,EAErE,IAAe,IAAI,GAAM,EACzB,IAAmB,IAAyB,KAAK,EACjD,IAAgB,IAAI,GAAM,EAE1B,IAAoB,eAAe;EACvC,IAAM,IAAS,EAAU;AAczB,SAJA,EAJI,mBAAmB,EAAO,IAI1B,EAAO,gBAAgB,MAAS,EAAO,cAAc;GAKzD;AAEF,OAAM,IAAgB,MAAW;AAC/B,EAAK,MACH,EAAc,QAAQ,IACtB,EAAiB,QAAQ;GAE3B;CAEF,IAAM,UAAyB;AAE7B,EADA,EAAiB,QAAQ,MACzB,EAAc,QAAQ;IAGlB,KAAyB,MAAqB;AAClD,MAAI,CAAC,EAAkB,OAAO;AAC5B,KAAM,gBAAgB;AACtB;;AAYF,EATA,EAAa,QAAQ,IACrB,EAAiB,QAAQ,MAErB,EAAM,iBACR,EAAM,aAAa,gBAAgB,QACnC,EAAM,aAAa,QAAQ,cAAc,EAAU,MAAM,GAAG,EAC5D,EAAM,aAAa,QAAQ,kCAAkC,EAAU,MAAM,GAAG,GAGlF,EAAK,qBAAqB;GAAE,UAAU,EAAU,MAAM;GAAI,QAAQ,EAAW;GAAO,CAAC;IAGjF,UAA4B;AAGhC,EAFA,EAAa,QAAQ,IACrB,GAAkB,EAClB,EAAK,kBAAkB;IAGnB,KAAwB,MAAmC;EAE/D,IAAM,IADS,EAAM,cACD,uBAAuB;AAE3C,SADgB,EAAM,UAAU,EAAK,QACnB,EAAK,QAAQ,IAAI,WAAW;;AA+DhD,QAAO;EACL;EACA;EACA;EACA;EACA;EACA;EACA;EACA,uBApE4B,MAAqB;AACjD,OAAI,CAAC,EAAkB,SAAS,EAAa,MAAO;AAGpD,OADoB,oBAAoB,EAAe,OAAO,EAAU,MAAM,EAC7D;AAGf,IAFA,EAAc,QAAQ,IACtB,EAAiB,QAAQ,MACrB,EAAM,iBACR,EAAM,aAAa,aAAa;AAElC;;AAMF,GAHA,EAAc,QAAQ,IACtB,EAAM,gBAAgB,EAElB,EAAM,iBACR,EAAM,aAAa,aAAa;GAGlC,IAAM,IAAW,EAAqB,EAAM;AAC5C,GAAI,EAAiB,UAAU,MAC7B,EAAiB,QAAQ;;EA+C3B,6BA3CkC;AAKlC,GAJI,EAAiB,UAAU,SAC7B,EAAiB,QAAQ,OAG3B,AACE,EAAc,UAAQ;;EAsCxB,mBAlCwB,MAAqB;AAC7C,OAAI,CAAC,EAAkB,MAAO;AAG9B,OADoB,oBAAoB,EAAe,OAAO,EAAU,MAAM,EAC7D;AAGf,IAFA,EAAc,QAAQ,IACtB,EAAiB,QAAQ,MACrB,EAAM,iBACR,EAAM,aAAa,aAAa;AAElC;;AAKF,GAFA,EAAM,gBAAgB,EAElB,EAAM,iBACR,EAAM,aAAa,aAAa;GAGlC,IAAM,IAAW,EAAa,QAAQ,UAAU,EAAqB,EAAM;AAE3E,GADA,GAAkB,EAClB,EAAK,eAAe;IAAE,UAAU,EAAU,MAAM;IAAI;IAAU,CAAC;;EAchE;;ACnJH,SAAgB,gBAAgB,EAAE,cAAW,YAAS,sBAA2C;CAC/F,IAAM,IAAoB,eAAe,EAAU,MAAM,cAAc,GAAM,EACvE,IAAiB,IAAI,GAAM,EAE3B,UAA+B;AAC9B,IAAe,UAEpB,EAAe,QAAQ,IAEnB,OAAO,WAAa,OACtB,SAAS,KAAK,UAAU,OAAO,mBAAmB,EAGhD,OAAO,SAAW,QACpB,OAAO,oBAAoB,WAAW,EAAuB,EAC7D,OAAO,oBAAoB,QAAQ,EAAuB;;AAkD9D,QAJA,sBAAsB;AACpB,KAAwB;GACxB,EAEK;EACL;EACA;EACA,eAjDoB,MAAsB;AAC1C,OAAI,CAAC,EAAkB,SAAS,EAAM,WAAW,EAAG;GAEpD,IAAM,IAAgB,EAAM,SAAS;AAErC,KAAM,gBAAgB,EACtB,EAAM,iBAAiB,EAEnB,OAIC,EAAe,UAClB,EAAe,QAAQ,IACnB,OAAO,WAAa,OACtB,SAAS,KAAK,UAAU,IAAI,mBAAmB,EAE7C,OAAO,SAAW,QACpB,OAAO,iBAAiB,WAAW,EAAuB,EAC1D,OAAO,iBAAiB,QAAQ,EAAuB,IAI3D,GAAS,KAAK,uBAAuB;IACnC,UAAU,EAAU,MAAM;IAC1B,QAAQ,EAAM;IACd,cAAc,GAAiB;IAChC,CAAC;;EAuBF,0BApB+B,MAAsB;AACrD,OAAI,CAAC,EAAkB,MAAO;AAG9B,GADA,EAAM,gBAAgB,EACtB,EAAM,iBAAiB;GAEvB,IAAM,IAAc;AACpB,GAAI,OAAO,EAAY,kBAAmB,cACxC,EAAY,eAAe,EAAU,MAAM,GAAG;;EAahD;EACD;;;;;GErCG,mBAAmB;;;;;;;;;EAxBzB,IAAM,IAAQ,GAOR,IAAO,GAMP,IAAS,aAAa,gBAAe,EAGrC,IAAyB,IAKrB,KAAI,EAIR,IAAW,IAAI,GAAK,EACpB,IAAe,IAAI,GAAK,EAGxB,UAAwB;AAC5B,GAAI,OAAO,SAAW,OAAe,OAAO,iBAC1C,EAAa,QAAQ,aAAa,QAAQ,iBAAiB,KAAK;KAK9D,UAAsB;AAC1B,GAAI,OAAO,SAAW,OAAe,OAAO,iBAC1C,aAAa,QAAQ,kBAAkB,OAAM,EAC7C,EAAa,QAAQ,IACrB,EAAS,QAAQ;KAKjB,IAAmC,MAGjC,UAAqC;GACzC,IAAM,IAAkB,EAAM,SAAS,sBAAqB,EACtD,IAAqB,EAAM,SAAS,iBAAgB;AAG1D,OAAI,KAAmB,YAAY,GAAiB;IAClD,IAAM,IAAQ,EAAgB,OAAO,MAAM,MAAiB,EAAE,UAAU,EAAM,OAAO,MAAK;AAC1F,QAAI,GAAO;AACT,OAAuB,QAAQ;MAC7B,WAAW,EAAM;MACjB,UAAU,EAAM;MAChB,aAAa,EAAgB,OAAO,SAAS;MAC7C,aAAa,EAAgB,OAAO;MACtC;AACA;;;AAKJ,OAAI;QACE,WAAW,KAAsB,eAAe;SAC9C,EAAmB,UAAU,EAAM,OAAO,OAAO;AACnD,QAAuB,QAAQ;OAC7B,WAAW,EAAmB;OAC9B,UAAU;OACV,aAAa;OACb,aAAa;OACf;AACA;;eAEO,YAAY,GAAoB;KACzC,IAAM,IAAQ,EAAmB,OAAO,MAAM,MAAiB,EAAE,UAAU,EAAM,OAAO,MAAK;AAC7F,SAAI,GAAO;AACT,QAAuB,QAAQ;OAC7B,WAAW,EAAM;OACjB,UAAU,EAAM;OAChB,aAAa,EAAmB,OAAO,SAAS;OAChD,aAAa,EAAmB,OAAO;OACzC;AACA;;;;AAMN,KAAuB,QAAQ;;AAkBjC,EAfA,gBAAgB;AAId,GAFA,GAAgB,EAEZ,EAAM,SAAS,OAEjB,GAA6B,EAG7B,IAAc,EAAM,QAAQ,GAAG,2BAA2B;AACxD,OAA6B;KAC9B;IAEJ,EAED,kBAAkB;AAChB,QAAc;IACf;EAGD,IAAM,IAAY,eAAe,EAAuB,MAAK,EAMvD,IAAiB,eAAe;GACpC,IAAM,IAAQ,EAAU;AACxB,UAAO;IACL;IACA;IACA;IACA;IACA;KACE,SAAS,CAAC,EAAM,WAAW,CAAC,GAAO;KACnC,WAAW,EAAM,WAAW,GAAO;KACnC,QAAQ,CAAC,EAAM,WAAW,CAAC,GAAO;KAClC,UAAU,EAAM,WAAW,GAAO;KAClC,eAAe,GAAO,eAAe,EAAM,WAAW;KACtD,0BAA0B,GAAO,eAAe,EAAM,WAAW;KAClE;IACF,CAAC,OAAO,QAAO;IACjB,EAGK,KAAmB,MAAsC;AAC7D,OAAI,CAAC,EAAM,OAAO,YAAY,CAAC,EAAM,QAAS;AAM9C,GAJA,EAAM,gBAAe,EACrB,EAAM,iBAAgB,EAGlB,EAAS,SACX,GAAc;GAGhB,IAAM,IAAc,EAAM,WAAW,EAAM,SACrC,IAAe,EAAM,SAAS,cAC9B,IAAe,EAAM,SAAS;AAqBpC,GAnBI,KAAe,IAEjB,EAAa,EAAM,OAAO,MAAK,GACtB,KAAe,CAAC,KAEzB,EAAO,KAAK,yGAAwG,EACpH,EAAO,KAAK,oHAAmH,EAG/H,EAAM,SAAS,OAAO,+BAA+B;IACnD,WAAW;IACX,SAAS;IACV,CAAA,IACQ,KAET,EAAa,EAAM,OAAO,MAAK,EAIjC,GAA6B;KAGzB,UAAwB;AAC5B,GAAI,CAAC,EAAa,SAAS,CAAC,EAAS,UACnC,EAAS,QAAQ;KAIf,KAAuB,MAAsB;AACjD,OAAI,CAAC,EAAU,OAAO,YAAa;AAGnC,GADA,EAAM,gBAAe,EACrB,EAAM,iBAAgB;GAGtB,IAAM,IAAkB,EAAU,MAAM,UAClC,KAAe,EAAU,MAAM,eAAe,KAAK,GACnD,IAAc,KAAmB,IAAc,IAAI,IAAkB;AAE3E,KAAK,wBAAwB,EAAM,OAAO,OAAO,EAAW;KAIxD,UAA4B;AAChC,KAAK,wBAAwB,EAAM,OAAO,MAAK;KAI3C,KAAmB,MAAqB;AAC5C,KAAM,iBAAgB,EACjB,EAAU,OAAO,eAEtB,EAAM,cAAc,QAClB,cACA,KAAK,UAAU;IACb,OAAO,EAAM,OAAO;IACpB,UAAU,EAAU,MAAM;IAC3B,CAAA,CACH;KAGI,KAAkB,MAAqB;AAC3C,KAAM,iBAAgB,EACjB,EAAU,OAAO,eACtB,EAAM,gBAAe;KAGjB,KAAc,MAAqB;AACvC,SAAM,iBAAgB,EACjB,EAAU,OAAO,aAEtB;MAAM,gBAAe;AAErB,QAAI;KACF,IAAM,IAAW,KAAK,MAAM,EAAM,cAAc,QAAQ,aAAa,IAAI,KAAI;AAC7E,KAAI,EAAS,SAAS,EAAS,UAAU,EAAM,OAAO,SACpD,EAAK,wBAAwB,EAAS,OAAO,EAAU,MAAM,SAAQ;aAEhE,GAAO;AACd,OAAO,KAAK,sBAAsB,EAAK;;;;mBAQjC,EAAA,OAAO,YAAA,WAAA,EADf,mBA0IM,OAAA;;GAxIH,OAAK,eAAA,CAAE,EAAA,OAOF,WAAU,CAAA;GANf,WAAW,EAAA,OAAW;GACtB,OAAc,EAAA,QAAA,UAA8B,EAAA,MAAU,cAAS,QAAA,cAAA,eAA0C,EAAA,MAAU,cAAW,cAAiB,EAAA,MAAU,WAAQ,EAAA,KAAA,GAAA,mBAAgC,EAAA,MAAU,cAAS,QAAA,oBAAA,gBAAA,IAAqD,EAAA,MAAU,cAAW,+BAAA,KAAuC,MAAA,eAAc,CAAA,QAAA,CAAA,2BAAA,yEAAsH,MAAA,eAAc,CAAA,QAAA,CAAA;GAMvd,aAAS,cAAO,GAAe,CAAA,OAAA,CAAA;GAC/B,YAAQ,cAAO,GAAc,CAAA,OAAA,CAAA;GAC7B,QAAI,cAAO,GAAU,CAAA,OAAA,CAAA;MAId,EAAA,OAAW,eAAA,WAAA,EADnB,mBAiBM,OAAA;;GAfJ,OAAM;GACL,OAAK,iBAAmB,EAAA,MAAU,WAAQ,EAAA,MAAW,EAAA,MAAU,YAAW;GAC1E,SAAK,cAAO,GAAmB,CAAA,OAAA,CAAA;MAEhC,mBAUM,OAAA,EATJ,OAAK,eAAA,CAAC,oJAAkJ;gFACvD,EAAA,MAAU,aAAQ;sFAAqG,EAAA,MAAU,aAAQ;uFAAsG,EAAA,MAAU,aAAQ;+EAA8F,EAAA,MAAU,WAAQ;yBAO/c,EAAA,MAAU,WAAQ,EAAA,EAAA,EAAA,CAAA,EAAA,GAAA,cAAA,IAAA,mBAAA,IAAA,GAAA,EAKzB,mBAsGM,OAAA;GArGJ,OAAK,eAAA,CAAC,0NAAwN;gBAChM,EAAM,WAAO,CAAK,EAAA,OAAW;mBAAoC,EAAM,WAAW,EAAA,OAAW;;GAI3H,UAAS;GACT,MAAK;GACJ,cAAY,EAAA,QAAA,UAA8B,EAAA,MAAU,cAAS,QAAA,cAAA,aAAA,mBAA2D,EAAA,MAAU,cAAS,QAAA,oBAAA,oBAAA;GAG3I,SAAO;GACP,WAAO,CAAA,SAAA,cAAgB,GAAe,CAAA,UAAA,CAAA,EAAA,CAAA,QAAA,CAAA,EAAA,SAAA,cACf,GAAe,CAAA,UAAA,CAAA,EAAA,CAAA,QAAA,CAAA,CAAA;GACtC,cAAY;GACZ,SAAO;MAGR,YAQa,YAAA,EARD,MAAK,aAAW,EAAA;0BAOpB,CALE,EAAA,SAAQ,CAAK,EAAA,SAAA,WAAA,EADrB,mBAMM,OANN,eAMM,CAAA,GAAA,EAAA,OAAA,CAAA,gBAHL,mBAEC,GAAA,EAAA,mBAA8H,OAAA,EAAzH,OAAM,8GAA4G,EAAA,MAAA,GAAA,CAAA,CAAA,CAAA,IAAA,mBAAA,IAAA,GAAA,CAAA,CAAA;;MAKlH,EAAA,QAwBI,EAAA,MAAU,cAAS,SAAA,WAAA,EADhC,mBAuBM,OAAA;;GArBJ,OAAK,eAAA,CAAC,8CAA4C;gBAClB,EAAM,WAAO,CAAK,EAAA,MAAU;mBAAsC,EAAM,WAAW,EAAA,MAAU;iCAAoD,EAAA,MAAU,eAAe,EAAA,MAAU,aAAQ;sCAAoD,EAAA,MAAU,eAAe,EAAA,MAAU,aAAQ;uCAAqD,EAAA,MAAU,eAAe,EAAA,MAAU,WAAQ;;GAO3Z,MAAK;GACL,QAAO;GACP,gBAAa;GACb,kBAAe;GACf,mBAAgB;GAChB,SAAQ;GACR,eAAY;qRAWD,EAAA,MAAU,cAAS,UAAA,WAAA,EADhC,mBAuBM,OAAA;;GArBJ,OAAK,eAAA,CAAC,8CAA4C;gBAClB,EAAM,WAAO,CAAK,EAAA,MAAU;mBAAsC,EAAM,WAAW,EAAA,MAAU;iCAAoD,EAAA,MAAU,eAAe,EAAA,MAAU,aAAQ;sCAAoD,EAAA,MAAU,eAAe,EAAA,MAAU,aAAQ;uCAAqD,EAAA,MAAU,eAAe,EAAA,MAAU,WAAQ;;GAO3Z,MAAK;GACL,QAAO;GACP,gBAAa;GACb,kBAAe;GACf,mBAAgB;GAChB,SAAQ;GACR,eAAY;kTAjEL,WAAA,EADT,mBAqBM,OAAA;;GAnBJ,OAAK,eAAA,CAAC,mHAAiH;gBACvF,EAAM;mBAAkC,EAAM;;GAI9E,MAAK;GACL,QAAO;GACP,gBAAa;GACb,kBAAe;GACf,mBAAgB;GAChB,SAAQ;GACR,eAAY;;;;;;;;;;;;;;;;;;;;;;EEtTpB,IAAM,IAAO;iCAQX,YAsBc,qBAAA;GArBX,MAAM,EAAA;GACN,QAAQ,EAAA;GACR,UAAU,EAAA;GACV,cAAY,EAAA;GACZ,iBAAW,EAAA,QAAA,MAAE,EAAI,eAAgB,EAAM;GACvC,UAAM,EAAA,QAAA,MAAE,EAAI,SAAA;GACZ,UAAM,EAAA,QAAA,MAAE,EAAI,SAAA;;0BAcP,CAZN,mBAYM,OAZN,eAYM,CAVJ,mBAIM,OAJN,eAIM,CAHJ,mBAEM,OAFN,eAEM,CADJ,WAAqC,EAAA,QAAA,SAAA,EAAA,QAAA,CAAA,gBAAA,gBAAf,EAAA,MAAK,EAAA,EAAA,CAAA,EAAA,GAAA,CAAA,CAAA,CAAA,CAAA,EAK/B,mBAEM,OAFN,eAEM,CADJ,WAAQ,EAAA,QAAA,WAAA,EAAA,EAAA,KAAA,GAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;sjBE2DV,WAAW,KAOX,iBAAiB,IAiBjB,sBAAsB;;;;;;;;EArH5B,IAAM,IAAQ,GAGR,IAAS,IAAI,GAAE,EAIf,IAAO,IAAsB,MAAK,EAClC,IAAiB,oBAAkB,IAAI,KAAK,CAAA,EAC5C,IAAiB,oBAAkB,IAAI,KAAK,CAAA,EAC5C,IAAc,IAAI,GAAI;AAG5B,IAAa;GAGX,sBAAsB;IACpB,IAAM,IAAS,EAAW,MAAM,KAAK,CAAC,OAAO,EAAC,EACxC,IAAI,EAAO,MAAM,MAAM,CAAC,aAAY;AAE1C,QAAI,EAAK,UAAU,OAAO;AAExB,SAAI,EAAE,SAAS,GAAG;MAChB,IAAM,IAAkB,CAAC,GAAG,EAAM,EAE5B,IAAc,SAAuB,SAAS,EAAC;AAErD,aADI,EAAY,SAAS,KAAa,EAAK,KAAK,KAAI,EAC7C;OAAE,UAAU;OAAM,OAAO;OAAK;;KAEvC,IAAM,IAAW,MAAM,KAAK,EAAe,MAAK,EAC1C,IAAe,CAAC,EAAY;AAClC,SAAI,EAAS,WAAW,KAAK,CAAC,EAAc,QAAO;KACnD,IAAM,IAAkB,CAAC,GAAG,EAAQ;AAEpC,YADI,KAAc,EAAK,KAAK,KAAI,EACzB;MAAE,UAAU;MAAS,OAAO;MAAK;;IAG1C,IAAM,IAAW,MAAM,KAAK,EAAe,MAAK,EAC1C,IAAe,EAAY;AACjC,QAAI,EAAS,WAAW,EAAO,UAAU,EAAc,QAAO;AAE9D,QAAI,EAAS,SAAS,EAAO,SAAS,GAAG;KACvC,IAAM,IAAa,IAAI,IAAI,EAAM;AACjC,OAAS,SAAQ,MAAK,EAAW,OAAO,EAAE,CAAA;KAC1C,IAAM,IAAkB,MAAM,KAAK,EAAU;AAE7C,YADK,KAAc,EAAK,KAAK,KAAI,EAC1B;MAAE,UAAU;MAAS,OAAO;MAAK;;IAE1C,IAAM,IAAkB,CAAC,GAAG,EAAQ;AAEpC,WADI,KAAc,EAAK,KAAK,KAAI,EACzB;KAAE,UAAU;KAAM,OAAO;KAAK;;GAEvC,iBAAiB;AACf,IAAI,EAAS,SACX,EAAY,iBAAiB;KAAE,QAAQ,EAAS,MAAM;KAAc,OAAO,EAAS,MAAM;KAAa,CAAA;;GAG5G,CAAA;EAGD,IAAM,oBAAsE,IAAI,SAAQ,EAElF,IAAc,eAAe;GACjC,IAAM,IAAU,EAAM,SAClB,IAAW,EAAY,IAAI,EAAO;AACtC,GAAK,MACH,oBAAW,IAAI,KAAsC,EACrD,EAAY,IAAI,GAAS,EAAQ;GAEnC,IAAM,IAAS,EAAS,IAAI,EAAM,MAAK;AACvC,OAAI,EAAQ,QAAO;GAEnB,IAAM,oBAAM,IAAI,KAAqB;AACrC,QAAK,IAAM,KAAO,EAAM,SAAS;IAC/B,IAAM,IAAI,EAAI,EAAM,QACd,IAAM,KAAgC;AAC5C,MAAI,IAAI,IAAM,EAAI,IAAI,EAAI,IAAI,KAAK,EAAC;;GAEtC,IAAM,IAAM,MAAM,KAAK,EAAI,SAAS,CAAA;AAEpC,UADA,EAAS,IAAI,EAAM,OAAO,EAAG,EACtB;IACR,EAEK,IAAiB,eAAe;GACpC,IAAM,IAAI,EAAO,MAAM,MAAM,CAAC,aAAY,EACtC,IAAM,EAAY;AAItB,UAHI,MACF,IAAM,EAAI,QAAQ,CAAC,QAAQ,MAAM,aAAa,WAAW,OAAO,EAAE,EAAE,aAAa,CAAC,SAAS,EAAE,CAAA,GAExF,EAAI,MAAM,GAAG,MAAM,EAAE,KAAK,EAAE,GAAE;IACtC,EAIK,IAAc,IAAI,SAAQ,EAC1B,IAAa,eAAe,EAAe,MAAM,QAAQ,CAAC,OAAO,MAAM,WAAW,CAAA,EAClF,IAAe,eAAe,EAAW,MAAM,MAAM,GAAG,EAAY,MAAM,CAAA,EAG1E,IAAW,IAAwB,KAAI,EAEvC,IAAc,eAAe;GACjC,OAAO,eAAe,EAAa,MAAM,OAAO;GAChD,mBAAmB;GACnB,UAAU;GACX,CAAA;AAED,kBAAgB;AAEd,GADA,EAAY,cAAc,QAAQ,EAAS,OACvC,EAAS,SACX,EAAY,iBAAiB;IAAE,QAAQ,EAAS,MAAM;IAAc,OAAO,EAAS,MAAM;IAAa,CAAA;IAE1G;EAGD,IAAI,IAA+B,MAC/B,IAAmB;AAqCvB,EAlCA,YACQ,EAAY,SAAS,QAC1B,MAAQ;AACP,OAAI,KAAO,EAAY,QAAQ,KAAK,EAAY,QAAQ,EAAW,MAAM,QAAQ;AAC/E,QAAI,EAAe;AAEnB,QAAmB;IACnB,IAAM,UAAqB;AACzB,SAAgB,4BAA4B;AAE1C,MADA,KACI,IAAmB,sBACrB,GAAa,IAEb,EAAY,QAAQ,KAAK,IAAI,EAAW,MAAM,QAAQ,EAAY,QAAQ,SAAQ,EAClF,IAAgB,MAChB,IAAmB;OAEtB;;AAEH,OAAa;;IAGnB,EAGA,MAAM,CAAC,GAAa,EAAO,QAAQ;AAEjC,GADA,EAAY,QAAQ,UAChB,EAAS,UACX,EAAS,MAAM,YAAY,GAC3B,EAAY,qBAAqB,EAAC;IAErC,EAGD,YACQ,EAAM,gBACX,MAAW;AACV,GAAI,KAAU,MAAM,QAAQ,EAAO,MAAM,GACnC,EAAO,aAAa,WAEtB,EAAK,QAAQ,OAEb,EAAe,QADK,IAAI,IAAI,EAAO,MAAM,QAAO,MAAK,KAAM,KAAwB,CAAA,EAEnF,EAAe,wBAAQ,IAAI,KAAI,EAC/B,EAAY,QAAQ,CAAC,EAAO,MAAM,MAAK,MAAK,KAAM,KAAuB,KAGzE,EAAK,QAAQ,UACb,EAAY,QAAQ,EAAO,MAAM,MAAK,MAAK,KAAM,KAAuB,EACxE,EAAe,QAAQ,IAAI,IAAI,EAAO,MAAM,QAAO,MAAK,KAAM,KAAwB,CAAA,EACtF,EAAe,wBAAQ,IAAI,KAAI,KAIjC,EAAK,QAAQ,OACb,EAAY,QAAQ,IACpB,EAAe,wBAAQ,IAAI,KAAI,EAC/B,EAAe,wBAAQ,IAAI,KAAI;KAGnC,EAAE,WAAW,IAAK,CACpB;EAEA,SAAS,EAAY,GAAc,GAAkB;AACnD,OAAI,EAAK,UAAU,OAAO;IACxB,IAAM,IAAK,IAAI,IAAI,EAAe,MAAK;AAGvC,IAFI,IAAS,EAAG,OAAO,EAAG,GACrB,EAAG,IAAI,EAAG,EACf,EAAe,QAAQ;AACvB;;GAEF,IAAM,IAAO,IAAI,IAAI,EAAe,MAAK;AAGzC,GAFI,IAAS,EAAK,IAAI,EAAG,GACpB,EAAK,OAAO,EAAG,EACpB,EAAe,QAAQ;;EAGzB,SAAS,IAAmB;AAI1B,GAFA,EAAK,QAAQ,OACb,EAAe,wBAAQ,IAAI,KAAI,EAC/B,EAAY,QAAQ;;EAGtB,SAAS,IAAW;AAKlB,GAHA,EAAK,QAAQ,UACb,EAAe,wBAAQ,IAAI,KAAI,EAC/B,EAAe,wBAAQ,IAAI,KAAI,EAC/B,EAAY,QAAQ;;EAGtB,SAAS,EAAU,GAAuB;AAIxC,UAHI,EAAK,UAAU,QACV,CAAC,EAAe,MAAM,IAAI,EAAG,GAE/B,EAAe,MAAM,IAAI,EAAG;;iCAKnC,mBAgEM,OAhEN,eAgEM;GA9DJ,mBAmBM,OAnBN,eAmBM;mBAlBJ,mBAKE,SAAA;8CAJe,QAAA;KACf,MAAK;KACL,aAAY;KACZ,OAAM;iCAHG,EAAA,MAAM,CAAA,CAAA;IAKjB,mBAKS,UAAA;KAJP,OAAM;KACL,SAAO;OACT,UAED;IACA,mBAKS,UAAA;KAJP,OAAM;KACL,SAAO;OACT,eAED;;GAIF,mBAkCM,OAAA;aAlCG;IAAJ,KAAI;IAAW,OAAM;IAA8F,OAAA;KAAA,cAAA;KAAA,QAAA;KAAyC;QAGtJ,EAAA,SAAM,SAA2B,SAAS,EAAA,MAAO,MAAI,CAAG,aAAW,CAAA,IAAA,WAAA,EAD5E,mBAWQ,SAXR,eAWQ;mBAPN,mBAIE,SAAA;8CAHoB,QAAA;KACpB,MAAK;KACL,OAAM;qCAFG,EAAA,MAAW,CAAA,CAAA;aAItB,mBAAqG,QAAA,EAA/F,OAAM,6EAA2E,EAAC,UAAM,GAAA;IAC9F,mBAA0I,QAA1I,cAA0I,gBAA/D,EAAA,MAAY,MAAI,CAAG,OAAO,MAAC,WAAA,GAAA,MAAA,EAAA,EAAA,EAAA;qCAIxG,mBAiBM,OAAA,EAjBA,OAAK,eAAA;IAAA,QAAY,MAAA,EAAW,CAAC,UAAU,QAAK;IAAA,UAAA;IAAA,CAAA,EAAA,EAAA,EAAA,UAAA,GAAA,EAChD,mBAeM,UAAA,MAAA,WAdW,MAAA,EAAW,CAAC,aAAa,QAAjC,oBADT,mBAeM,OAAA;IAbH,KAAK,EAAK;IACV,OAAK,eAAA;KAAA,UAAA;KAAA,KAA+B,EAAK,QAAK;KAAA,QAAiB,EAAK,OAAI;KAAA,MAAA;KAAA,OAAA;KAAA,CAAA;OAEzE,mBASQ,SATR,cASQ;IARN,mBAKE,SAAA;KAJA,MAAK;KACL,OAAM;KACL,SAAS,EAAU,EAAA,MAAa,EAAK,SAAK,GAAA;KAC1C,WAAS,MAAa,EAAY,EAAA,MAAa,EAAK,SAAK,IAAS,EAAE,QAA6B,QAAO;;IAE3G,mBAAmM,QAAA;KAA7L,OAAM;KAA2E,OAAO,OAAO,EAAA,MAAa,EAAK,SAAK,MAAA,GAAA;uBAAkB,OAAO,EAAA,MAAa,EAAK,SAAK,MAAA,GAAA,CAAA,EAAA,GAAA,aAAA;IAC5K,mBAA+G,QAA/G,cAA+G,gBAA5C,EAAA,MAAa,EAAK,SAAK,MAAA,EAAA,EAAA,EAAA;;GAOlG,mBAEM,OAFN,cAEM,CADJ,mBAAmH,QAAnH,eAA2B,aAAQ,gBAAG,KAAK,IAAI,EAAA,OAAa,EAAA,MAAW,OAAM,CAAA,GAAI,SAAI,gBAAG,EAAA,MAAW,OAAM,EAAA,EAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;EEhS/G,IAAM,IAAQ,GAQR,IAAW,IAAmC,GAAE,EAChD,IAAQ,IAAa,GAAE,EACvB,IAAW,IAAa,GAAE,EAC1B,IAAW,IAAa,GAAE,EAC1B,IAAiB,oBAAkB,IAAI,KAAK,CAAA,EAC5C,IAAkB,IAAI,GAAE;AAG9B,IAAa;GACX,uBAAuB;AACrB,MAAgB,QAAQ;IAExB,IAAM,IAAmB,EAAS;AAClC,QAAI,CAAC,EACH,QAAO;IAGT,IAAI,IAAa,EAAM;AAGvB,QAAI,EAAU,UAAU,UAAU;KAChC,IAAM,IAAK,OAAO,EAAC;AACnB,SAAI,CAAC,OAAO,SAAS,EAAG,CAEtB,QADA,EAAgB,QAAQ,wBACjB;AAET,SAAI;;AAON,QAJI,EAAU,UAAU,cACtB,IAAI,MAAM,MAAQ,MAAM,SAGtB,EAAU,UAAU,oBAAoB,MAAqB,YAAY,OAAO,KAAM,YAAY,GAAG;KACvG,IAAM,IAAI,IAAI,KAAK,EAAC;AACpB,KAAK,MAAM,EAAE,SAAS,CAAC,KAAE,IAAI,EAAE,aAAY;;AAI7C,QAAI,MAAqB,WAAW;KAClC,IAAI,IAAgB,EAAS,OACzB,IAAgB,EAAS;AAE7B,SAAI,EAAU,UAAU,UAAU;MAChC,IAAM,IAAO,OAAO,EAAI,EAClB,IAAO,OAAO,EAAI;AACxB,UAAI,CAAC,OAAO,SAAS,EAAK,IAAI,CAAC,OAAO,SAAS,EAAK,CAElD,QADA,EAAgB,QAAQ,uBACjB;AAGT,MADA,IAAO,GACP,IAAO;;AAGT,SAAI,EAAU,UAAU,oBAAoB,EAAU,UAAU,QAAQ;MACtE,IAAM,IAAO,IAAI,KAAK,EAAc,EAC9B,IAAO,IAAI,KAAK,EAAc;AACpC,UAAI,MAAM,EAAK,SAAS,CAAC,IAAI,MAAM,EAAK,SAAS,CAAC,CAEhD,QADA,EAAgB,QAAQ,uBACjB;AAET,MAAI,EAAU,UAAU,qBACtB,IAAO,EAAK,aAAY,EACxB,IAAO,EAAK,aAAY;;AAI5B,SAAI,CAAC,GAAM,EAAI;;AAIjB,QAAI,EAAU,UAAU,OACtB,KAAI,MAAqB,MAAM;KAC7B,IAAM,IAAW,MAAM,KAAK,EAAe,MAAK;AAChD,SAAI,EAAS,WAAW,EAEtB,QADA,EAAgB,QAAQ,8BACjB;AAET,SAAI;UAEJ,GAAe,wBAAQ,IAAI,KAAI;AAInC,WAAO;KAAE,UAAU;KAAkB,OAAO;KAAE;;GAEhD,0BAA0B,EAAgB;GAC3C,CAAA;EAGD,IAAM,IAAkB,eAAqE;GAC3F,IAAM,IAAO,EAAM;AAkCnB,UAjCI,MAAS,UAAU,MAAS,cAAc,MAAS,UAAU,MAAS,aACjE;IACL;KAAE,OAAO;KAAU,OAAO;KAAU;IACpC;KAAE,OAAO;KAAe,OAAO;KAAO;IACtC;KAAE,OAAO;KAAgB,OAAO;KAAO;IACvC;KAAE,OAAO;KAAW,OAAO;KAAW;IACxC,GAEE,MAAS,SACJ;IACL;KAAE,OAAO;KAAU,OAAO;KAAU;IACpC;KAAE,OAAO;KAAc,OAAO;KAAa;IAC3C;KAAE,OAAO;KAAgB,OAAO;KAAM;IACxC,GAEE,MAAS,YAAY,MAAS,cAAc,MAAS,eAChD;IACL;KAAE,OAAO;KAAU,OAAO;KAAU;IACpC;KAAE,OAAO;KAAc,OAAO;KAAa;IAC3C;KAAE,OAAO;KAAgB,OAAO;KAAM;IACtC;KAAE,OAAO;KAAa,OAAO;KAAM;IACnC;KAAE,OAAO;KAAoB,OAAO;KAAO;IAC3C;KAAE,OAAO;KAAiB,OAAO;KAAO;IACxC;KAAE,OAAO;KAAW,OAAO;KAAW;IACxC,GAEE,MAAS,YACJ,CACL;IAAE,OAAO;IAAU,OAAO;IAAU,EACpC;IAAE,OAAO;IAAc,OAAO;IAAa,CAC7C,GAGK;IACL;KAAE,OAAO;KAAY,OAAO;KAAY;IACxC;KAAE,OAAO;KAAU,OAAO;KAAU;IACpC;KAAE,OAAO;KAAc,OAAO;KAAa;IAC3C;KAAE,OAAO;KAAe,OAAO;KAAc;IAC7C;KAAE,OAAO;KAAa,OAAO;KAAY;IACzC;KAAE,OAAO;KAAY,OAAO;KAAW;IACvC;KAAE,OAAO;KAAgB,OAAO;KAAY;IAC9C;IACD,EAEK,IAAY,eACZ,EAAM,aAAa,YAAY,EAAM,aAAa,cAAc,EAAM,aAAa,eAAqB,WACxG,EAAM,aAAa,YAAkB,YACrC,EAAM,aAAa,SAAe,SAClC,EAAM,aAAa,aAAmB,mBACtC,EAAM,aAAa,SAAe,SAClC,EAAM,aAAa,aAAmB,SACtC,EAAM,aAAa,SAAe,SAC/B,OACR;AAsCD,EAnCA,YACQ,EAAM,gBACX,MAAW;AACV,OAAI,CAAC,GAAQ;AAKX,IAJA,EAAS,QAAQ,IACjB,EAAM,QAAQ,EAAU,UAAU,YAAY,KAAO,IACrD,EAAS,QAAQ,IACjB,EAAS,QAAQ,IACjB,EAAe,wBAAQ,IAAI,KAAI;AAC/B;;AAKF,OAFA,EAAS,QAAQ,EAAO,WAEnB,EAAO,aAAa,QAAQ,EAAO,aAAa,YAAY,MAAM,QAAQ,EAAO,MAAM,CAI1F,CAHA,EAAe,QAAQ,IAAI,IAAI,EAAO,MAAK,EAC3C,EAAM,QAAQ,IACd,EAAS,QAAQ,IACjB,EAAS,QAAQ;YACR,EAAO,aAAa,aAAa,MAAM,QAAQ,EAAO,MAAM,EAAE;IACvE,IAAM,CAAC,GAAK,KAAO,EAAO;AAI1B,IAHA,EAAS,QAAQ,EAAe,EAAG,EACnC,EAAS,QAAQ,EAAe,EAAG,EACnC,EAAM,QAAQ,IACd,EAAe,wBAAQ,IAAI,KAAI;SAK/B,CAHA,EAAS,QAAQ,IACjB,EAAS,QAAQ,IACjB,EAAe,wBAAQ,IAAI,KAAI,EAC/B,EAAM,QAAQ,EAAe,EAAO,MAAK;KAG7C,EAAE,WAAW,IAAK,CACpB,EAEA,MAAM,IAAU,MAAe;AAE7B,OADA,EAAgB,QAAQ,IACpB,CAAC,GAAa;AAChB,IAAI,EAAU,UAAU,WACtB,EAAe,wBAAQ,IAAI,KAAI;AAEjC;;AAEF,OAAI,EAAU,UAAU,QACtB;QAAI,MAAgB,KAClB,GAAM,QAAQ;aAEd,EAAe,wBAAQ,IAAI,KAAI,GAC1B,MAAgB,YAAY,MAAgB,iBAAiB,EAAM,UAAU,MAAM,EAAM,UAAU,KAAA,IAAY;KAClH,IAAM,IAAc,EAAM,cAAc;AACxC,KAAI,MAAa,EAAM,QAAQ,EAAY;;;IAIlD;EAED,SAAS,EAAe,GAAuB;AAC7C,OAAI,KAAQ,KAA2B,QAAO;AAC9C,OAAI,EAAU,UAAU,kBAAkB;IACxC,IAAM,IAAI,aAAe,OAAO,IAAM,IAAI,KAAK,EAAa;AAC5D,QAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAE,QAAO,EAAE,aAAa,CAAC,MAAM,GAAG,GAAE;;AAE7D,OAAI,EAAU,UAAU,QAAQ;IAC9B,IAAM,IAAI,aAAe,OAAO,IAAM,IAAI,KAAK,EAAa;AAC5D,QAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAE,QAAO,EAAE,aAAa,CAAC,MAAM,GAAG,GAAE;AAC3D,QAAI,OAAO,KAAQ,SAAU,QAAO,EAAI,MAAM,GAAG,GAAE;;AAErD,UAAO;;EAIT,SAAS,EAAgB,GAAgE;GACvF,IAAM,oBAAM,IAAI,MAAK,EACjB,GAAS;AAEb,WAAQ,GAAR;IACE,KAAK;AAEH,KADA,IAAI,IAAI,KAAK,EAAI,SAAS,GAAG,GAAG,GAAG,EAAE,CAAA,EACrC,IAAI,IAAI,KAAK,EAAI,SAAS,IAAI,IAAI,IAAI,IAAI,CAAA;AAC1C;IACF,KAAK,aAAa;KAChB,IAAM,IAAI,IAAI,KAAK,EAAG;AAGtB,KAFA,EAAE,QAAQ,EAAE,SAAS,GAAG,EAAC,EACzB,IAAI,IAAI,KAAK,EAAE,SAAS,GAAG,GAAG,GAAG,EAAE,CAAA,EACnC,IAAI,IAAI,KAAK,EAAE,SAAS,IAAI,IAAI,IAAI,IAAI,CAAA;AACxC;;IAEF,KAAK,SAAS;KACZ,IAAM,IAAQ,IAAI,KAAK,EAAG;AAG1B,KAFA,EAAM,QAAQ,EAAM,SAAS,GAAG,EAAC,EACjC,IAAI,IAAI,KAAK,EAAM,SAAS,GAAG,GAAG,GAAG,EAAE,CAAA,EACvC,IAAI,IAAI,KAAK,EAAI,SAAS,IAAI,IAAI,IAAI,IAAI,CAAA;AAC1C;;IAEF,KAAK,UAAU;KACb,IAAM,IAAQ,IAAI,KAAK,EAAG;AAG1B,KAFA,EAAM,QAAQ,EAAM,SAAS,GAAG,GAAE,EAClC,IAAI,IAAI,KAAK,EAAM,SAAS,GAAG,GAAG,GAAG,EAAE,CAAA,EACvC,IAAI,IAAI,KAAK,EAAI,SAAS,IAAI,IAAI,IAAI,IAAI,CAAA;AAC1C;;IAEF,KAAK;AAEH,KADA,IAAI,IAAI,KAAK,EAAI,aAAa,EAAE,EAAI,UAAU,EAAE,GAAG,GAAG,GAAG,GAAG,EAAC,EAC7D,IAAI,IAAI,KAAK,EAAI,SAAS,IAAI,IAAI,IAAI,IAAI,CAAA;AAC1C;IAEF,QACE;;AAIJ,GADA,EAAS,QAAQ,WACb,EAAU,UAAU,oBACtB,EAAS,QAAQ,EAAE,aAAa,CAAC,MAAM,GAAG,GAAE,EAC5C,EAAS,QAAQ,EAAE,aAAa,CAAC,MAAM,GAAG,GAAE,KAE5C,EAAS,QAAQ,EAAE,aAAa,CAAC,MAAM,GAAG,GAAE,EAC5C,EAAS,QAAQ,EAAE,aAAa,CAAC,MAAM,GAAG,GAAE;;EAIhD,SAAS,EAAiB,GAAsB,GAAkB;GAChE,IAAM,IAAO,IAAI,IAAI,EAAe,MAAK;AAOzC,GANI,IACF,EAAK,IAAI,EAAW,GAEpB,EAAK,OAAO,EAAW,EAEzB,EAAe,QAAQ,GACnB,EAAK,OAAO,MACd,EAAgB,QAAQ;;iCAM1B,mBA4HM,OA5HN,eA4HM;GA1HO,EAAA,UAAS,UAAe,EAAA,UAAS,oBAAA,WAAA,EAA5C,mBA+BM,OA/BN,eA+BM;IA9BJ,mBAKS,UAAA;KAJP,OAAM;KACL,SAAK,EAAA,QAAA,MAAE,EAAe,QAAA;OACxB,UAED;IACA,mBAKS,UAAA;KAJP,OAAM;KACL,SAAK,EAAA,QAAA,MAAE,EAAe,YAAA;OACxB,cAED;IACA,mBAKS,UAAA;KAJP,OAAM;KACL,SAAK,EAAA,QAAA,MAAE,EAAe,QAAA;OACxB,gBAED;IACA,mBAKS,UAAA;KAJP,OAAM;KACL,SAAK,EAAA,QAAA,MAAE,EAAe,SAAA;OACxB,iBAED;IACA,mBAKS,UAAA;KAJP,OAAM;KACL,SAAK,EAAA,QAAA,MAAE,EAAe,YAAA;OACxB,eAED;;GAIS,EAAA,UAAS,aAAkB,EAAA,UAAS,UAAA,WAAA,EAA/C,mBA2CM,OA3CN,eA2CM,CAAA,eA1CJ,mBAMS,UAAA;6CALU,QAAA;IACjB,OAAM;iBAEN,mBAAoD,UAAA;IAA5C,UAAA;IAAS,OAAM;MAAG,qBAAiB,GAAA,GAAA,UAAA,GAAA,EAC3C,mBAAmG,UAAA,MAAA,WAA7E,EAAA,QAAP,oBAAf,mBAAmG,UAAA;IAA3D,KAAK,EAAI;IAAQ,OAAO,EAAI;sBAAU,EAAI,MAAK,EAAA,GAAA,aAAA,kCAJ9E,EAAA,MAAQ,CAAA,CAAA,EASX,EAAA,UAAQ,aACA,WAAA,EAQhB,mBAsBW,UAAA,EAAA,KAAA,GAAA,EAAA;mBArBT,mBASE,SAAA;8CARiB,QAAA;KAChB,MAAM,EAAA;KACP,aAAY;KACX,OAAK,eAAG,EAAA,UAAS,UAAe,EAAA,UAAS,oBAAyB,EAAA,UAAS,SAAA,8BAA6C,KAAA,EAAS;KACjI,OAAK,eAAA,CAAA,+QAA2S,EAAA,UAAS,mBAAA,cAAsC,EAAA,UAAS,SAAA,aAAA,YAAA,CAAA;iDAJhW,EAAA,MAAQ,CAAA,CAAA;cASnB,mBAAoE,QAAA,EAA9D,OAAM,gDAA8C,EAAC,MAAE,GAAA;mBAC7D,mBASE,SAAA;8CARiB,QAAA;KAChB,MAAM,EAAA;KACP,aAAY;KACX,OAAK,eAAG,EAAA,UAAS,UAAe,EAAA,UAAS,oBAAyB,EAAA,UAAS,SAAA,8BAA6C,KAAA,EAAS;KACjI,OAAK,eAAA,CAAA,+QAA2S,EAAA,UAAS,mBAAA,cAAsC,EAAA,UAAS,SAAA,aAAA,YAAA,CAAA;iDAJhW,EAAA,MAAQ,CAAA,CAAA;aAtBL,gBAAA,WAAA,EADhB,mBAOE,SAAA;;6CALc,QAAA;IACb,MAAM,EAAA;IACN,OAAK,eAAG,EAAA,UAAS,UAAe,EAAA,UAAS,oBAAyB,EAAA,UAAS,SAAA,8BAA6C,KAAA,EAAS;IAClI,OAAM;IACL,aAAa,EAAA,UAAS,SAAA,gBAAA;iDAJd,EAAA,MAAK,CAAA,CAAA,MAmCL,EAAA,UAAS,YAAA,gBAAA,WAAA,EADtB,mBAOS,UAAA;;6CALO,QAAA;IACd,OAAM;qBAEN,mBAAmC,UAAA,EAA1B,OAAO,IAAI,EAAE,QAAI,GAAA,EAC1B,mBAAqC,UAAA,EAA5B,OAAO,IAAK,EAAE,SAAK,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,CAAA,cAJnB,EAAA,MAAK,CAAA,CAAA,GAQK,EAAA,UAAS,UAAA,WAAA,EAA9B,mBAuBW,UAAA,EAAA,KAAA,GAAA,EAAA,CArBD,EAAA,UAAQ,WAAA,gBAAA,WAAA,EADhB,mBAMS,UAAA;;8CAJO,QAAA;IACd,OAAM;uBAEN,mBAAuG,UAAA,MAAA,WAAjF,EAAA,cAAP,oBAAf,mBAAuG,UAAA;IAAnE,KAAK,OAAO,EAAI,MAAK;IAAI,OAAO,EAAI;sBAAU,EAAI,MAAK,EAAA,GAAA,aAAA,mCAHlF,EAAA,MAAK,CAAA,CAAA,IAAA,WAAA,EAKhB,mBAcM,OAdN,cAcM,EAAA,UAAA,GAAA,EAbJ,mBAYQ,UAAA,MAAA,WAXQ,EAAA,cAAP,oBADT,mBAYQ,SAAA;IAVL,KAAK,OAAO,EAAI,MAAK;IACtB,OAAM;OAEN,mBAKE,SAAA;IAJA,MAAK;IACL,OAAM;IACL,SAAS,EAAA,MAAe,IAAI,EAAI,MAAK;IACrC,WAAS,MAAa,EAAiB,EAAI,OAAQ,EAAE,OAA4B,QAAO;gCAE3F,mBAAqG,QAArG,eAAqG,gBAAnB,EAAI,MAAK,EAAA,EAAA,CAAA,CAAA;GAMtF,EAAA,SAAA,WAAA,EAAX,mBAKM,OALN,aAKM,CAAA,EAAA,QAJJ,mBAEM,OAAA;IAFD,OAAM;IAA0B,MAAK;IAAe,SAAQ;OAC/D,mBAA4Q,QAAA;IAAtQ,aAAU;IAAU,GAAE;IAA0N,aAAU;aAElQ,mBAAkC,QAAA,MAAA,gBAAzB,EAAA,MAAe,EAAA,EAAA,CAAA,CAAA,IAAA,mBAAA,IAAA,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;EEzZ9B,IAAM,IAAQ,GAKR,IAAO,GAOP,IAAS,IAAI,GAAK,EAClB,IAAa,IAAwB,KAAI,EAGzC,IAAiB,IAAmD,KAAI,EACxE,IAAkB,IAAoD,KAAI,EAE1E,UAA6B;AACjC,KAAe,OAAO,aAAY;KAI9B,IAAmB,IAAI,GAAK,EAC5B,IAAwB,eAAe;GAC3C,IAAM,IAAI,EAAM,OAAO,YAAY;AACnC,UACE,MAAM,UACN,MAAM,cACN,MAAM,UACN,MAAM,cACN,MAAM,YACN,MAAM,cACN,MAAM,gBACN,MAAM,UACN,MAAM;IAET,EAEK,IAAgB,eAAe;GACnC,IAAM,IAAO,EAAM,OAAO;AAC1B,UAAO,EAAE,MAAS,UAAU,MAAS,cAAc,MAAS,UAAU,MAAS;IAChF,EAEK,IAAgB,eAA+B;AACnD,OAAI;AAEF,YADiB,EAAM,QAAQ,UAAU,CAAC,QAAQ,WAAW,EAAE,EAChD,QAAO,MAAK,EAAE,UAAU,EAAM,OAAO,MAAK;WACnD;AACN,WAAO,EAAC;;IAEX,EAEK,IAAoB,eACxB,EAAc,MAAM,MAAK,MAAK,EAAE,aAAa,QAAQ,EAAE,aAAa,QAAQ,IAAI,KAClF,EAEM,IAAqB,eACzB,EAAc,MAAM,MAAK,MAAK,CAAC;GAAC;GAAM;GAAS;GAAQ,CAAC,SAAS,EAAE,SAAS,CAAC,IAAI,KACnF,EAEM,IAAmB,eAAsE;GAC7F,IAAM,IAAS,EAAkB;AACjC,OAAI,CAAC,EAAQ,QAAO;GACpB,IAAM,IAAS,MAAM,QAAQ,EAAO,MAAM,GAAG,EAAO,QAAQ,EAAC;AAC7D,UAAO;IAAE,UAAU,EAAO;IAA4B,OAAO;IAAO;IACrE,EAEK,IAAW,eAAe,EAAc,MAAM,SAAS,EAAC;AAc9D,EAZA,MACE,SACM;AACJ,GAAI,EAAmB,QACrB,EAAiB,QAAQ,KACf,EAAO,UACjB,EAAiB,QAAQ;KAG7B,EAAE,WAAW,IAAK,CACpB,EAEA,YACQ,EAAM,cACN;AACJ,GAAI,CAAC,EAAmB,SAAS,CAAC,EAAO,UACvC,EAAiB,QAAQ;IAG/B;EAGA,IAAM,IAAU,eACT,EAAO,SACL,EAAM,QAAQ,SAAS,IADJ,EAAC,CAE5B,EAGK,IAAkB,eAAe;AACrC,OAAI,CAAC,EAAO,MAAO,QAAO;AAC1B,OAAI;IACF,IAAM,IAAO,EAAQ,OACf,IAAQ,EAAM,OAAO,OACrB,oBAAM,IAAI,KAAa;AAC7B,SAAK,IAAI,IAAI,GAAG,IAAI,EAAK,QAAQ,KAAK;KACpC,IAAM,IAAK,EAAK,GAA+B;AAC/C,SAAI,KAAM,SACR,EAAI,IAAI,EAAC,EACL,EAAI,OAAO,IAAI;;AAGvB,WAAO,EAAI;WACL;AACN,WAAO;;IAEV,EAGK,IAAc,eAAoD;AACtE,OAAI,EAAM,OAAO,aAAa,OAAQ,QAAO,EAAC;GAC9C,IAAM,IAAO,EAAM,OAAO;AAC1B,OAAI,MAAM,QAAQ,EAAK,IAAI,EAAK,SAAS,EACvC,QAAO,EAAK,KAAI,MACd,OAAO,KAAM,YAAY,KAAc,WAAW,IAC9C;IACE,OAAO,OAAQ,EAA8B,SAAU,EAA8B,MAAM;IAC3F,OAAQ,EAA8B;IACxC,GACA;IAAE,OAAO,OAAO,EAAE;IAAE,OAAO;IAAE,CACnC;AAGF,OAAI;IACF,IAAM,IAAO,EAAM,QAAQ,SAAS,IAAI,EAAC,EACnC,oBAAM,IAAI,KAAa;AAC7B,SAAK,IAAI,IAAI,GAAG,IAAI,EAAK,UAAU,EAAI,OAAO,KAAK,KAAK;KACtD,IAAM,IAAK,EAAK,GAA+B,EAAM,OAAO;AAC5D,KAAI,KAAyB,QAAM,EAAI,IAAI,EAAC;;AAE9C,WAAO,MAAM,KAAK,EAAG,CAClB,MAAM,GAAG,MAAM,OAAO,EAAE,CAAC,cAAc,OAAO,EAAE,CAAC,CAAA,CACjD,KAAI,OAAM;KAAE,OAAO,OAAO,EAAE;KAAE,OAAO;KAAG,EAAC;WACtC;AACN,WAAO,EAAC;;IAEX;EAED,SAAS,IAAO;AASd,GARA,EAAK,eAAe,EAAM,OAAO,MAAK,EACtC,EAAO,QAAQ,IACX,EAAmB,QACrB,EAAiB,QAAQ,KAEzB,EAAiB,QAAQ,EAAsB,OAGjD,eAAe;AAEb,KADU,EAAM,OAAO,YAAY,YACzB,UAAU,EAAgB,QAAQ,OAC1C,EAAiB,QAAQ;KAE5B;;EAGH,SAAS,IAAQ;AACf,KAAO,QAAQ;;EAIjB,SAAS,IAAc;GAGrB,IAAM,KAFM,EAAM,QAAQ,UAAU,CAAC,QAClB,WAAW,EAAE,EACd,QAAO,MAAK,EAAE,UAAU,EAAM,OAAO,MAAK,EAEtD,IAA8B,EAAC;AAErC,OAAI,EAAc,OAAO;IACvB,IAAM,IAAK,EAAe,OAAO,kBAAiB;AAClD,QAAI,KAAM,MAAM,QAAQ,EAAG,MAAM,EAAE;KACjC,IAAM,IAAa,EAAG,MAAM,QAAO,MAAK,MAAM,KAAA,EAAU;AACxD,KAAI,EAAW,SAAS,KACtB,EAAY,KAAK;MACf,OAAO,EAAM,OAAO;MACpB,UAAU,EAAG;MACb,OAAO;MACR,CAAA;;;GAKP,IAAM,IAAe,EAAgB,OAAO,mBAAkB;AAC9D,GAAI,KACF,EAAY,KAAK;IACf,OAAO,EAAM,OAAO;IACpB,UAAU,EAAa;IACvB,OAAO,EAAa;IACrB,CAAA;GAGH,IAAM,IAAiB,EAAY,SAAS,IAAI,CAAC,GAAG,GAAM,GAAG,EAAY,GAAG;AAS5E,GAPA,EAAM,QAAQ,aAAa,EAAE,SAAS,GAAgB,CAAA,EAElD,EAAY,SAAS,IACvB,EAAK,gBAAgB,EAAW,GAEhC,EAAK,gBAAgB,EAAM,OAAO,MAAK,EAEzC,GAAM;;EAGR,SAAS,IAAc;GAGrB,IAAM,KAFM,EAAM,QAAQ,UAAU,CAAC,QAClB,WAAW,EAAE,EACd,QAAO,MAAK,EAAE,UAAU,EAAM,OAAO,MAAK;AAG5D,GAFA,EAAM,QAAQ,aAAa,EAAE,SAAS,GAAM,CAAA,EAC5C,EAAK,gBAAgB,EAAM,OAAO,MAAK,EACvC,GAAM;;SAIJ,EAAM,QAAQ,MAChB,EAAM,QAAQ,GAAG,uBAAsB,MAAW;AAChD,GAAI,KAAW,EAAQ,UAAU,EAAM,OAAO,SAC5C,GAAK;IAER,0BAKD,mBAmGM,OAAA;YAnGG;GAAJ,KAAI;GAAa,OAAM;GAAsD,SAAK,EAAA,OAAA,oBAAN,IAAW,CAAA,OAAA,CAAA;MAE1F,mBAaS,UAAA;GAZN,OAAK,eAAA,CAAA,qLAAyM,EAAA,QAAQ,wEAAA,iGAAA,CAAA;GAItN,cAAU,UAAY,EAAA,OAAO;GAC7B,gBAAc,EAAA,QAAQ,SAAA;GACtB,OAAO,EAAA,QAAQ,iBAAA;GACf,SAAK,EAAA,OAAA,eAAA,MAAO,EAAA,QAAS,GAAK,GAAK,GAAI,EAAA,CAAA,OAAA,CAAA;mBAEpC,mBAEM,OAAA;GAFD,OAAM;GAA6B,SAAQ;GAAY,MAAK;GAAO,QAAO;GAAe,gBAAa;GAAI,kBAAe;GAAQ,mBAAgB;GAAQ,OAAM;MAClK,mBAAwC,QAAA,EAAlC,GAAE,+BAA6B,CAAA,CAAA,EAAA,GAAA,CAAA,CAAA,EAAA,IAAA,cAAA,EAKzC,YAgFgB,uBAAA;GA/Eb,MAAM,EAAA;GACN,QAAQ,EAAA;GACR,OAAK,WAAa,EAAA,OAAO;GACzB,iBAAW,EAAA,QAAA,MAAE,EAAA,QAAS;GACtB,UAAQ;;0BA0EH,CAvEN,mBAuEM,OAvEN,eAuEM;IArEJ,mBA8BM,OA9BN,cA8BM,CA7BJ,mBAkBS,UAAA;KAjBP,OAAM;KACL,SAAK,EAAA,QAAA,MAAE,EAAA,QAAgB,CAAI,EAAA;iBAE5B,mBAA8B,QAAA,MAAxB,qBAAiB,GAAA,GAAA,WAAA,EACvB,mBAYM,OAAA;KAXJ,OAAM;KACN,SAAQ;KACR,MAAK;KACL,QAAO;KACP,gBAAa;KACb,kBAAe;KACf,mBAAgB;KAChB,OAAK,eAAA,CAAC,6CAA2C,EAAA,cACzB,EAAA,OAAgB,CAAA,CAAA;qBAExC,mBAAyB,QAAA,EAAnB,GAAE,gBAAc,EAAA,MAAA,GAAA,CAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,eAI1B,mBAQM,OARN,cAQM,CAPJ,YAME,4BAAA;cALI;KAAJ,KAAI;KACH,OAAO,EAAA,OAAO;KACd,aAAW,EAAA,OAAO,YAAQ;KAC1B,kBAAgB,EAAA,SAAkB;KAClC,gBAAc,EAAA;;;;;;wBANN,EAAA,MAAgB,CAAA,CAAA,CAAA,CAAA;IAYpB,EAAA,SAAA,WAAA,EAAX,mBAAuE,OAAvE,aAAuE,IAAA,mBAAA,IAAA,GAAA;IAC5D,EAAA,SAAA,WAAA,EAAX,mBAQM,OARN,cAQM,CAAA,EAAA,OAPJ,mBAA+E,OAAA,EAA1E,OAAM,+CAA6C,EAAC,oBAAgB,GAAA,EACzE,YAKE,2BAAA;cAJI;KAAJ,KAAI;KACH,OAAO,EAAA,OAAO;KACd,YAAU,EAAA;KACV,kBAAgB,EAAA;;;;;;IAKrB,mBAaM,OAAA,EAbD,OAAM,+EAA6E,EAAA,CACtF,mBAKS,UAAA;KAJP,OAAM;KACL,SAAO;OACT,WAED,EACA,mBAKS,UAAA;KAJP,OAAM;KACL,SAAO;OACT,UAED,CAAA,CAAA;IAIS,EAAA,SAAA,WAAA,EAAX,mBAOM,OAPN,cAOM,CANJ,mBAKS,UAAA;KAJP,OAAM;KACL,SAAO;OACT,iBAED,CAAA,CAAA,IAAA,mBAAA,IAAA,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EE7TV,IAAM,IAAQ,GAWR,IAAO,GAUP,IAAY,gBAAgB;GAChC,OAAO,GAAG,EAAM,MAAM;GACtB,UAAU,GAAG,EAAM,OAAO,YAAY,GAAG;GACzC,UAAU,GAAG,EAAM,OAAO,YAAY,IAAI;GAC3C,EAAC,EAEI,IAAY,MAAM,GAAO,SAAQ,EACjC,IAAiB,MAAM,GAAO,cAAa,EAE3C,EACJ,eACA,sBACA,iBACA,qBACA,kBACA,0BACA,wBACA,yBACA,0BACA,wBACE,cAAc;GAChB;GACA;GACA;GACD,CAAA,EAEK,EACJ,sBACA,mBACA,iBACA,+BACE,gBAAgB;GAClB;GACA,SAAS,EAAM;GACf,uBAAuB,EAAM;GAC9B,CAAA,EAEK,IAAgB,eAAe,EAAW,UAAU,QAAO,EAE3D,IAAc,eAClB;GACE;GACA,EAAM,iBAAiB;GACvB;GACA;GACA;GACA;GACA;GACA;GACA,EAAkB,QAAQ,iBAAiB;GAC3C,EAAe,QAAQ,gBAAgB;GACvC;IACE,eAAe,EAAa;IAC5B,oBAAoB,CAAC,EAAa,SAAS,EAAiB,UAAU;IACtE,mBAAmB,CAAC,EAAa,SAAS,EAAiB,UAAU;IACrE,gBAAgB,EAAkB;IAClC,kBAAkB,CAAC,EAAa,SAAS,EAAc;IAEvD,kBAAkB,EAAM,OAAO;IAC/B,yBAAyB,EAAM,OAAO;IACvC;GACF,CAAC,OAAO,QAAO,CAClB,EAKM,IAAa,eACV,EAAM,OAAO,aAAa,KAAA,KAAa,EAAM,OAAO,aAAa,GACzE,EAKK,KAA4B,GAAe,MAAwB;GACvE,IAAM,IAAqB,EAAM,SAAS;AAC1C,GAAI,KACF,EAAmB,GAAO,EAAW;KAInC,KAAyB,MAAkB;GAC/C,IAAM,IAAkB,EAAM,SAAS;AACvC,GAAI,KACF,EAAgB,EAAK;KAInB,KAA4B,MAAkB;AAClD,KAAK,wBAAwB,EAAK;KAI9B,IAAe,eAAe,mBAAmB,EAAM,OAAO,CAAA,EAC9D,IAAiB,eAAe,EAAa,QAAS,EAAM,OAAe,OAAO,KAAI,EAGtF,UAAwB;AAC5B,KAAK,aAAY;KAGb,UAA6B;AACjC,KAAK,kBAAiB;;iCAKtB,mBAkGM,OAAA;GAjGH,OAAK,eAAE,EAAA,MAAW;GAClB,OAAK,eAAE,EAAA,MAAS;GACjB,MAAK;GACJ,kBAAgB,MAAA,EAAiB,GAAA,SAAA;GACjC,eAAa,MAAA,EAAU;GACvB,aAAW,EAAA,QAAU,SAAY,KAAA;GACjC,cAAU,UAAY,EAAA,OAAO,QAAQ,EAAA,QAAU,eAAA;GAC/C,WAAW,MAAA,EAAiB;GAC5B,aAAS,EAAA,QAAA,GAAA,MAAE,MAAA,EAAA,IAAA,MAAA,EAAA,CAAA,GAAA,EAAqB;GAChC,WAAO,EAAA,QAAA,GAAA,MAAE,MAAA,EAAA,IAAA,MAAA,EAAA,CAAA,GAAA,EAAmB;GAC5B,YAAQ,EAAA,QAAA,GAAA,MAAE,MAAA,EAAA,IAAA,MAAA,EAAA,CAAA,GAAA,EAAoB;GAC9B,aAAS,EAAA,QAAA,GAAA,MAAE,MAAA,EAAA,IAAA,MAAA,EAAA,CAAA,GAAA,EAAqB;GAChC,QAAI,EAAA,SAAA,GAAA,MAAE,MAAA,EAAA,IAAA,MAAA,EAAA,CAAA,GAAA,EAAgB;MAIf,EAAA,SAAgB,EAAA,UAAc,cAAA,WAAA,EADtC,YAOE,MAAA,uBAAA,EAAA;;GALC,SAAU,EAAA,OAAe;GACzB,kBAAgB,EAAA,cAAc,UAAM;GACpC,yBAAuB,EAAA,aAAS;GAChC,aAAY;GACZ,kBAAiB;;;;;QAIP,EAAA,SAAgB,EAAA,UAAc,WAAA,WAAA,EAD3C,YAKE,MAAA,oBAAA,EAAA;;GAHC,SAAU,EAAA,OAAe;GACzB,kBAAgB,EAAA,cAAc,UAAM;GACpC,yBAAuB,EAAA,aAAS;;;;;sBAInC,mBAmDM,OAAA;;GAjDJ,OAAK,eAAA,CAAC,0CAAwC;sBACV,EAAA,OAAO,YAAY,EAAA,OAAO,aAAQ;mBAAoC,EAAA,OAAO,aAAQ;sBAAyC,EAAA,OAAO,aAAQ;;;GAQzK,EAAA,OAAO,aAAQ,YAAA,WAAA,EADvB,YASE,uBAAA;;IAPC,QAAQ,EAAA;IACR,cAAY,EAAA;IACb,OAAM;IACL,sBAAsB;IACtB,mBAAmB;IACnB,sBAAsB;IACtB,aAAS,EAAA,OAAA,oBAAV,IAAe,CAAA,OAAA,CAAA;;GAGjB,mBAQO,QAAA,EAPL,OAAK,eAAA,CAAC,YAAU;gBACgB,EAAA,OAAO,YAAY,EAAA,OAAO,aAAQ,UAAe,EAAA,OAAO,aAAQ,aAAkB,EAAA,OAAO,aAAQ;eAAkC,EAAA,OAAO,aAAQ;0BAK/K,EAAA,OAAO,MAAK,EAAA,EAAA;IAKR,EAAA,OAAO,YAAY,EAAA,OAAO,aAAQ,UAAe,EAAA,OAAO,aAAQ,aAAkB,EAAA,OAAO,aAAQ,UAAA,WAAA,EAD1G,YASE,uBAAA;;IAPC,QAAQ,EAAA;IACR,cAAY,EAAA;IACb,OAAM;IACL,sBAAsB;IACtB,mBAAmB;IACnB,sBAAsB;IACtB,aAAS,EAAA,OAAA,oBAAV,IAAe,CAAA,OAAA,CAAA;;GAKT,EAAA,OAAO,eAAU,mCAAA,WAAA,EADzB,YAME,yBAAA;;IAJC,QAAQ,EAAA;IACR,cAAY,EAAA;IACb,OAAM;IACL,oBAAa;;UAMV,MAAA,EAAiB,IAAA,WAAA,EADzB,mBAUE,OAAA;;GARC,OAAK,eAAA,CAAA,wIAA4J,EAAA,QAAa,qBAAA,oBAAA,CAAA;GAI9K,aAAS,EAAA,QAAA,GAAA,MAAE,MAAA,EAAA,IAAA,MAAA,EAAA,CAAA,GAAA,EAAY;GACvB,YAAQ,EAAA,QAAA,GAAA,MAAE,MAAA,EAAA,IAAA,MAAA,EAAA,CAAA,GAAA,EAAuB;GACjC,aAAS,EAAA,OAAA,oBAAV,IAAkB,CAAA,UAAA,CAAA;GACjB,SAAK,EAAA,OAAA,oBAAN,IAAW,CAAA,OAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;EEzOjB,IAAM,IAAS,aAAa,EAAE,QAAQ,cAAc,CAAA,EAG9C,IAAQ,GAaR,IAAO,GAQP,IAAa,KAAiB,EAC9B,IAAmB,KAAiB,EAGtC,IAAY,IAEV,IAAgB,IAA8B,KAAI,EAElD,IAAiB,eACd,EAAM,QAId,EAGK,IAAc,gBAAgB;GAClC,QAAQ,GAAG,EAAM,OAAO;GACxB,UAAU;GACV,KAAK;GAEL,QAAQ;GACR,YAAY;GACb,EAAC,EAEI,IAAkB,gBAAgB,EACtC,OAAO,GAAG,EAAM,WAAW,OAAO,MAAM,KACzC,EAAC;AAGF,cACQ,EAAM,aACX,MAAkB;AACb,QACC,EAAiB,SAClB,EAAiB,MAAM,eAAe,MAE1C,IAAY,IACZ,EAAiB,MAAM,aAAa,GACpC,eAAe;AACb,QAAY;KACb;IAEL;EAGA,IAAM,KAAsB,MAAiB;AAC3C,OAAI,EAAW;GAGf,IAAM,IADS,EAAM,OACK;AAI1B,GAFA,IAAY,IACZ,EAAK,iBAAiB,EAAU,EAChC,eAAe;AACb,QAAY;KACb;KAIG,KAA4B,MAAkB;AAClD,KAAK,wBAAwB,EAAK;KAG9B,UAAuB;AAC3B,KAAc,QAAQ;KAGlB,KAAyB,MAA+B;AAC5D,KAAc,QAAQ;KAOlB,KACJ,GACA,MAC8E;GAC9E,IAAM,IAAU,EAAM,QAAQ,UAAU,CAAC,WAAW,EAAC,EAC/C,IAAe,EAAQ,MAAK,MAAU,EAAO,OAAO,EAAc;AAMxE,OAJI,CAAC,KAID,oBAAoB,EAAc,OAAO,EAAa,CACxD,QAAO;GAGT,IAAM,IAAQ,EAAQ,KAAI,MAAU,EAAO,GAAE;AAK7C,UAJK,EAAM,SAAS,EAAS,GAItB;IAAE;IAAS;IAAc;IAAM,GAH7B;KAUL,KACJ,GACA,GACA,GACA,GACA,MACW;AACX,OAAI,CAAC,EAAc,SAAS,EAAe,CACzC,QAAO,EAAc;GAGvB,IAAM,IAAY,EAAc,WAAU,MAAM,MAAO,EAAc,EAC/D,IAAe,wBAAwB,EAAY,EAGnD,IAAoB,EACvB,KAAI,MAAM,EAAQ,MAAK,MAAU,EAAO,OAAO,EAAG,CAAA,CAClD,QAAQ,MAAgC,EAAQ,EAAO,CACvD,QAAO,MAAU,wBAAwB,EAAO,KAAK,EAAY,CACjE,KAAI,MAAU,EAAO,GAAE,EAEpB,IAAgB,EAAkB,WAAU,MAAM,MAAO,EAAc;AAE7E,OAAI,MAAkB,IAAI;IACxB,IAAM,IAAc,EAAc,WAAU,MAAM,MAAO,EAAkB,GAAc;AACzF,WAAO,MAAa,WAAW,IAAc,IAAc;;AAG7D,UAAO,MAAa,WAAW,IAAY,IAAY;KAMnD,KAAqB,GAAkB,GAAwB,MAA4B;GAC/F,IAAM,IAAa,EAAe,MAAM;AAExC,OAAI,OAAO,KAAe,WACxB,GAAW,GAAU,EAAc;YAC1B,OAAO,EAAe,MAAM,kBAAmB,YAAY;IACpE,IAAM,IAAW,CAAC,GAAG,EAAa;AAElC,IADA,EAAS,OAAO,GAAgB,GAAG,EAAQ,EAC3C,EAAe,MAAM,eAAe,EAAQ;;KAO1C,KAAoB,MAA0D;GAClF,IAAM,IAAW,EAAc,OAAO;AAGtC,OAAI,CAAC,KAAY,EAAQ,aAAa,GAAU;AAC9C,OAAe;AACf;;GAIF,IAAM,IAAmB,EAAmB,GAAU,EAAQ,SAAQ;AACtE,OAAI,CAAC,GAAkB;AACrB,OAAe;AACf;;GAGF,IAAM,EAAE,YAAS,iBAAc,aAAU,GAGnC,IAAgB,EAAM,QAAO,MAAM,MAAO,EAAQ,EAClD,IAAiB,EACrB,GACA,EAAQ,UACR,GACA,EAAQ,UACR,EACF;AAKA,GAFA,EAAkB,GAAU,GAAgB,EAAa,EAEzD,GAAe;KAGX,UAA4B;AAChC,MAAe;;AAIjB,EAAI,OAAO,EAAM,QAAQ,MAAO,cAC9B,EAAM,QAAQ,GAAG,uBAAsB,MAAW;AAChD,OAAI;IACF,IAAM,IAAQ,GAAS;AAEvB,QADI,CAAC,KACD,GAAS,aAAc;IAE3B,IAAM,KADU,EAAM,QAAQ,UAAU,CAAC,WAAW,EAAC,EACjC,MAAM,MAAW,EAAE,UAAU,KAAS,EAAE,OAAO,EAAK;AACxE,QAAI,CAAC,EAAK;AAEV,QADe,wBAAwB,EAAG,KAC3B,UAAU;KACvB,IAAM,KAAe,EAAM,WAAW,OAAO,WAAW,EAAE,EAAE,WACzD,MAAW,EAAE,UAAU,KAAS,EAAE,OAAO,EAC5C;AACA,SAAI,KAAe,KAAK,EAAiB,OAAO;MAE9C,IAAM,IAAa,EAAM,WAAW,OAAO,SACvC,IAAa;AACjB,WAAK,IAAI,IAAI,GAAG,IAAI,GAAa,KAAK;OACpC,IAAM,IAAI,OAAO,EAAW,IAAI,MAAM,IAAI;AAC1C,YAAc;;MAEhB,IAAM,IAAY,OAAO,EAAW,IAAc,MAAM,IAAI,KACtD,IAAK,EAAiB,OACtB,IAAW,EAAG,YACd,IAAY,IAAW,EAAG,aAC5B,IAAU;AAGd,UAFI,IAAa,IAAU,IAAU,IAC5B,IAAa,IAAY,MAAW,IAAU,KAAK,IAAI,GAAG,KAAc,EAAG,cAAc,GAAU,GACxG,MAAY,EACd,KAAI;AACF,SAAG,SAAS;QAAE,MAAM;QAAS,UAAU;QAAU,CAAA;cAC3C;AACN,SAAG,aAAa;;MAKpB,IAAI,IAAa,GACX,UAAsB;AAE1B,OADA,KACI,IAAa,KACf,sBAAsB,EAAa,GAEnC,EAAM,QAAQ,KAAK,sBAAsB;QAAE;QAAO,cAAc;QAAM,CAAA;;AAG1E,4BAAsB,EAAa;AACnC;;;AAIJ,gCAA4B,EAAM,QAAQ,KAAK,sBAAsB;KAAE;KAAO,cAAc;KAAM,CAAC,CAAA;YAC5F,GAAK;AACZ,MAAO,KAAK,6CAA6C,EAAG;;IAE/D;EAGH,IAAM,UAAwB;AAC5B,KAAK,aAAY;KAGb,UAA6B;AACjC,KAAK,kBAAiB;;SAIxB,EAAa,EAEZ,CAAA,0BAIC,mBA4EM,OAAA;GA5ED,OAAM;GAAkB,OAAK,eAAE,EAAA,MAAW;GAAE,MAAK;;GAG5C,EAAA,WAAW,KAAK,QAAQ,SAAM,KAAA,WAAA,EADtC,mBAqBM,OAAA;;IAnBJ,OAAM;IACL,OAAK,eAAA,EAAA,OAAA,GAAc,EAAA,WAAW,KAAK,MAAK,KAAA,CAAA;uBAEzC,mBAeE,UAAA,MAAA,WAdiB,EAAA,WAAW,KAAK,UAA1B,oBADT,YAeE,oBAAA;IAbC,KAAK,EAAO;IACJ;IACR,OAAO,EAAO,SAAK;IACnB,cAAY,EAAA;IACZ,gBAAc,EAAA;IACd,kBAAgB,EAAA;IAChB,iBAAe,EAAA;IACf,cAAY,EAAA;IACZ,mBAAmB;IACnB,cAAa;IACb,iBAAiB;IACjB,aAAY;IACZ,kBAAiB;;;;;;;;;;GAKtB,mBAyBM,OAAA;aAxBA;IAAJ,KAAI;IACJ,OAAK,eAAA,CAAC,gFAA8E,EAAA,UAChE,EAAA,sBAAoB,CAAA,CAAA;IACvC,UAAQ;OAET,mBAkBM,OAAA;aAlBG;IAAJ,KAAI;IAAa,OAAM;IAAQ,OAAK,eAAE,EAAA,MAAe;uBACxD,mBAgBE,UAAA,MAAA,WAfiB,EAAA,WAAW,OAAO,UAA5B,oBADT,YAgBE,oBAAA;IAdC,KAAK,EAAO;IACJ;IACR,OAAO,EAAO,SAAK;IACnB,cAAY,EAAA;IACZ,gBAAc,EAAA;IACd,kBAAgB,EAAA;IAChB,iBAAe,EAAA;IACf,cAAY,EAAA;IACZ,sBAAsB;IACtB,mBAAmB;IACnB,cAAa;IACb,iBAAiB;IACjB,aAAY;IACZ,kBAAiB;;;;;;;;;;GAOhB,EAAA,WAAW,MAAM,QAAQ,SAAM,KAAA,WAAA,EADvC,mBAqBM,OAAA;;IAnBJ,OAAM;IACL,OAAK,eAAA,EAAA,OAAA,GAAc,EAAA,WAAW,MAAM,MAAK,KAAA,CAAA;uBAE1C,mBAeE,UAAA,MAAA,WAdiB,EAAA,WAAW,MAAM,UAA3B,oBADT,YAeE,oBAAA;IAbC,KAAK,EAAO;IACJ;IACR,OAAO,EAAO,SAAK;IACnB,cAAY,EAAA;IACZ,gBAAc,EAAA;IACd,kBAAgB,EAAA;IAChB,iBAAe,EAAA;IACf,cAAY,EAAA;IACZ,mBAAmB;IACnB,cAAa;IACb,iBAAiB;IACjB,aAAY;IACZ,kBAAiB;;;;;;;;;;;;;;;;;;;;;;;EE5W1B,IAAM,IAAQ,GAMR,IAAuC;GAC3C,MAAM;GACN,QAAQ;GACR,OAAO;GACT,EAGM,IAAe,EAAM,SAAS;iCAIlC,mBASO,QAAA;GARJ,OAAK,eAAA;;IAAuC,EAAa,EAAA;IAAc,EAAA,WAAQ,aAAA;;GAK/E,OAAO,EAAA,WAAW,OAAO,MAAA,EAAY,CAAA,GAAI,KAAA;qBAEvC,MAAA,EAAY,CAAA,EAAA,IAAA,cAAA;;;;;;;;;;;;;;;;;EEnBnB,IAAM,IAAQ,GAOR,WAAwB;AAE5B,OAAI,EAAM,UAAU,QAAQ,EAAM,UAAU,KAAA,EAC1C,QAAO;GAIT,IAAM,IAAM,OAAO,EAAM,SAAU,WAAW,WAAW,EAAM,MAAM,GAAG,EAAM;AAG9E,OAAI,MAAM,EAAI,CACZ,QAAO,OAAO,EAAM,MAAK;GAU3B,IAAM,IANY,IAAI,KAAK,aAAa,EAAM,QAAQ;IACpD,uBAAuB,EAAM;IAC7B,uBAAuB,EAAM;IAC7B,aAAa,EAAM;IACpB,CAAA,CAE2B,OAAO,EAAG;AAGtC,UAAO,GAAG,EAAM,UAAU,KAAK,IAAY,EAAM,UAAU;MAC1D,EAGG,IAAuC;GAC3C,MAAM;GACN,QAAQ;GACR,OAAO;GACT;iCAIE,mBAQO,QAAA;GAPJ,OAAK,eAAA,CAAA,oCAAoD,EAAa,EAAA,OAAA,CAAA;GAItE,OAAO,OAAO,EAAA,MAAK;qBAEjB,MAAA,EAAc,CAAA,EAAA,IAAA,cAAA;;;;;;;;;;;;EEpDrB,IAAM,IAAQ,GAOR,KAAa,MAAkE;AACnF,OAAI,CAAC,EAAO,QAAO;AAEnB,OAAI,aAAiB,KACnB,QAAO,MAAM,EAAM,SAAS,CAAC,GAAG,OAAO;GAGzC,IAAM,IAAS,IAAI,KAAK,EAAK;AAC7B,UAAO,MAAM,EAAO,SAAS,CAAC,GAAG,OAAO;KAIpC,IAA4D;GAChE,MAAM;IAAE,MAAM;IAAW,OAAO;IAAS,KAAK;IAAW;GACzD,UAAU;IACR,MAAM;IACN,OAAO;IACP,KAAK;IACL,MAAM;IACN,QAAQ;IACT;GACD,MAAM;IAAE,MAAM;IAAW,QAAQ;IAAW,QAAQ;IAAW;GACjE,EAGM,KAAkB,MAAuB;GAE7C,IAAM,qBADM,IAAI,MAAK,EACF,SAAS,GAAG,EAAK,SAAQ,EACtC,IAAW,KAAK,MAAM,IAAS,IAAI,EACnC,IAAW,KAAK,MAAM,IAAW,GAAE,EACnC,IAAY,KAAK,MAAM,IAAW,GAAE,EACpC,IAAW,KAAK,MAAM,IAAY,GAAE;AAO1C,UALI,IAAW,KAAW,GAAG,EAAS,SAClC,IAAW,KAAW,GAAG,EAAS,SAClC,IAAY,KAAW,GAAG,EAAU,SACpC,IAAW,KAAW,GAAG,EAAS,SAE/B,EAAK,mBAAmB,EAAM,OAAM;KAIvC,WAAwB;GAC5B,IAAM,IAAO,EAAU,EAAM,MAAK;AAElC,OAAI,CAAC,EACH,QAAO;AAGT,OAAI,EAAM,WAAW,WACnB,QAAO,EAAe,EAAI;GAG5B,IAAM,IAAgB,EAAM,WAAW,WACnC,EAAM,eACN,EAAc,EAAM;AAExB,UAAO,IAAI,KAAK,eAAe,EAAM,QAAQ,EAAc,CAAC,OAAO,EAAI;MACtE,EAGG,IAAuC;GAC3C,MAAM;GACN,QAAQ;GACR,OAAO;GACT;iCAIE,mBAQO,QAAA;GAPJ,OAAK,eAAA,CAAA,uBAAuC,EAAa,EAAA,OAAA,CAAA;GAIzD,OAAO,EAAA,QAAK,IAAO,KAAK,EAAA,MAAK,CAAE,aAAW,GAAK,KAAA;qBAE7C,MAAA,EAAc,CAAA,EAAA,IAAA,cAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EEjFrB,IAAM,IAAQ,GAUR,WACA,EAAM,UAAU,QAAQ,EAAM,UAAU,KAAA,IACnC,EAAM,WAER,EAAM,QAAQ,EAAM,WAAW,EAAM,YAC3C,EAGG,IAAuC;GAC3C,MAAM;GACN,QAAQ;GACR,OAAO;GACT;iCAIE,mBA+BM,OAAA,EA9BH,OAAK,eAAA,CAAA,yCAAyD,EAAa,EAAA,OAAA,CAAA,EAAA,EAAA,CAMhE,EAAA,YAAA,WAAA,EAAZ,mBAEO,QAFP,eAEO,gBADF,MAAA,EAAW,CAAA,EAAA,EAAA,IAAA,mBAAA,IAAA,GAAA,EAIL,EAAA,YAAY,EAAA,UAAK,QAAa,EAAA,UAAU,KAAA,KAAA,WAAA,EAAnD,mBAkBM,OAlBN,eAkBM,CAhBO,EAAA,SAAA,WAAA,EAAX,mBAMM,OANN,cAMM,CAAA,GAAA,EAAA,OAAA,CALJ,mBAIE,QAAA;GAHA,aAAU;GACV,GAAE;GACF,aAAU;mCAKd,mBAMM,OANN,cAMM,CAAA,GAAA,EAAA,OAAA,CALJ,mBAIE,QAAA;GAHA,aAAU;GACV,GAAE;GACF,aAAU;;;;;;;;;;;;;;;GE8Cd,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;EAtGjB,IAAM,IAAQ,GAmBR,IAAO,GASP,IAAY,gBAAgB;GAChC,OAAO,GAAG,EAAM,OAAO,SAAS,IAAI;GACpC,UAAU,GAAG,EAAM,OAAO,YAAY,GAAG;GACzC,UAAU,GAAG,EAAM,OAAO,YAAY,IAAI;GAC3C,EAAC,EAEI,IAAc,eAClB;GACE;GACA;GACA,EAAM,iBAAiB;GACvB;GACA;GACA;GACA;GACA;GACA;IACE,+BAA+B,EAAM;IACrC,8CAA8C,EAAM;IACpD,eAAe,EAAM,OAAO,aAAa;IACzC,kBAAkB,CAAC,EAAM,OAAO,YAAY,EAAM,OAAO,aAAa;IACtE,uBAAuB,EAAM,OAAO,aAAa,YAAY,EAAM,OAAO;IAE1E,kBAAkB,EAAM,OAAO;IAC/B,yBAAyB,EAAM,OAAO;IACvC;GACF,CAAC,OAAO,QAAO,CAClB,EAGM,IAAiB,eAEjB,EAAM,OAAO,YACR,EAAM,OAAO,UAAU,EAAM,OAAO,EAAM,IAAG,GAI/C,EAAM,SAAS,GACvB,EAGK,KAAe,MAAsB;AACzC,KAAK,cAAc,EAAM,QAAQ,EAAM,OAAO,EAAK;KAG/C,KAAqB,MAAsB;AAC/C,KAAK,qBAAqB,EAAM,QAAQ,EAAM,OAAO,EAAK;KAGtD,KAAqB,MAAsB;AAE/C,GADA,EAAM,gBAAe,EACrB,EAAK,oBAAoB,EAAM,QAAQ,EAAM,OAAO,EAAK;KAGrD,KAAiB,MAAyB;AAC9C,OAAI,EAAM,QACR,SAAQ,EAAM,KAAd;IACE,KAAK;AACH,OAAM,gBAAe;AAErB;IACF,KAAK;AACH,OAAM,gBAAe;AAErB;IACF,KAAK;AACH,OAAM,gBAAe;AAErB;;KAQF,IAAY,eACT,GAAG,EAAM,OAAO,MAAM,IAAI,EAAe,QACjD,EAGK,IAAe,eAAe,mBAAmB,EAAM,OAAO,CAAA,EAC9D,IAAiB,eAAe,EAAa,QAAS,EAAM,OAAe,OAAO,KAAI,EAGtF,UAA8B;AAC9B,IAAC,EAAe,SAAU,EAAe,UAAU,cAAc,EAAe,UAAU,WAI9F,EAAK,oBAAoB;IACvB,SAAS,EAAM;IACf,UAAU,EAAM;IAChB,QAAQ,EAAM;IACd,eAAe,EAAe;IAC/B,CAAA;KAGG,KAAmB,GAAkB,GAAkB,MAAqB;AAEhF,KAAK,kBAAkB;IAAE,KAAK;IAAS;IAAU;IAAO,CAAA;KAGpD,KAAiB,GAAmB,GAAmB,MAAsB;iCAMjF,mBAuGM,OAAA;GAtGH,OAAK,eAAE,EAAA,MAAW;GAClB,OAAK,eAAE,EAAA,MAAS;GAChB,MAAM;GACN,cAAY,EAAA;GACZ,UAAU,EAAA,UAAO,IAAA;GACjB,gBAAY,GAAK,EAAA,IAAI,MAAM,EAAA,IAAI,MAAK,GAAI,EAAA,OAAO;GAC/C,eAAa,EAAA,IAAI,MAAM,EAAA,IAAI;GAC3B,kBAAgB,EAAA,OAAO;GACvB,kBAAgB,EAAA;GAChB,qBAAmB,EAAA;GACnB,SAAO;GACP,YAAU;GACV,eAAa;GACb,WAAS;MAIF,EAAA,SAAgB,EAAA,UAAc,SAAA,WAAA,EADtC,YAKE,MAAA,gBAAA,EAAA;;GAHC,aAAW,EAAA;GACX,SAAU,EAAA,OAAe;GACzB,qBAAmB;2CAIT,EAAA,SAAgB,EAAA,UAAc,cAAA,WAAA,EAD3C,YAQE,MAAA,qBAAA,EAAA;;GANC,YAAU,EAAA;GACV,aAAW,EAAA;GACX,eAAa,EAAA;GACb,QAAQ,EAAA;GACR,SAAU,EAAA,OAAe;GACzB,mBAAkB;;;;;;;QAIR,EAAA,SAAgB,EAAA,UAAc,WAAA,WAAA,EAD3C,YAQE,MAAA,kBAAA,EAAA;;GANC,YAAU,EAAA;GACV,aAAW,EAAA;GACX,eAAa,EAAA;GACb,QAAQ,EAAA;GACR,SAAU,EAAA,OAAe;GACzB,mBAAkB;;;;;;;QAIR,EAAA,SAAgB,EAAA,UAAc,UAAA,WAAA,EAD3C,YAOE,MAAA,iBAAA,EAAA;;GALC,YAAU,EAAA;GACV,aAAW,EAAA;GACX,SAAU,EAAA,OAAe;GACzB,aAAY;GACZ,WAAU;;;;;QAIA,EAAA,SAAgB,EAAA,UAAc,aAAA,WAAA,EAD3C,YAUc,MAAA,oBAAA,EAAA;;GARX,YAAU,EAAA;GACV,aAAW,EAAA;GACX,SAAU,EAAA,OAAe;4BAGV,EAAA,OAAO,WAAA;SAAW;gBAAS,MAAS,CAClD,WAAmD,EAAA,QAAtC,EAAA,OAAO,UAAQ,eAAA,mBAAU,EAAS,CAAA,EAAA,KAAA,GAAA,GAAA,CAAA,CAAA;;;;;;QAOtC,EAAA,OAAO,gBAAA,WAAA,EAFpB,YAOE,wBANK,EAAA,OAAO,aAAY,EAAA;;GAEvB,OAAO,EAAA;GACP,KAAK,EAAA;GACL,QAAQ,EAAA;GACT,OAAM;;;;;QAKK,EAAA,OAAO,aAAQ,aAAA,WAAA,EAD5B,YAGE,MAAA,oBAAA,EAAA;;GADC,OAAO,EAAA;4BAIG,EAAA,OAAO,aAAQ,YAAA,WAAA,EAD5B,YAGE,MAAA,mBAAA,EAAA;;GADC,OAAO,EAAA;4BAIG,EAAA,OAAO,aAAQ,UAAA,WAAA,EAD5B,YAGE,MAAA,iBAAA,EAAA;;GADC,OAAO,EAAA;0CAIV,YAGE,MAAA,iBAAA,EAAA;;GADC,OAAO,OAAO,EAAA,MAAc;2BAKvB,EAAA,WAAA,WAAA,EADR,mBAIE,OAJF,cAIE,IAAA,mBAAA,IAAA,GAAA,CAAA,EAAA,IAAA,cAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EE9ON,IAAM,UAA4B;GAChC;GACA;GACA;GACA;GACD,EAGK,IAAQ,GA2BR,IAAO,GAcP,IAAW,gBACR;GACL,WAAW,cAAc,EAAM,YAAY,MAAM;GACjD,WAAW,GAAG,EAAM,UAAU;GAC9B,UAAU;GACV,KAAK;GACL,MAAM;GACN,OAAO;GACP,SAAS;GACT,eAAe;GACjB,EACD,EAGK,KAAkB,MAAsB;AAEvC,KAAM,OAAuB,QAAQ,uBAAuB,IAIjE,EAAK,aAAa,EAAM,KAAK,EAAM,SAAQ;KAGvC,KAAmB,GAAmB,GAAkB,MAAsB;AAKlF,GAHA,EAAM,iBAAgB,EACtB,EAAK,cAAc,EAAM,KAAK,GAAQ,EAAK,EAE3C,EAAK,aAAa,EAAM,KAAK,EAAM,SAAQ;KAGvC,KAAyB,GAAmB,GAAkB,MAAsB;AAExF,GADA,EAAM,iBAAgB,EACtB,EAAK,qBAAqB,EAAM,KAAK,GAAQ,EAAK;KAG9C,KAAwB,GAAmB,GAAkB,MAAsB;AAEvF,GADA,EAAM,iBAAgB,EACtB,EAAK,oBAAoB,EAAM,KAAK,GAAQ,EAAK;KAO7C,IAAkB,eAClB,CAAC,EAAM,eAAe,EAAM,YAAY,UAAU,EAAM,KAAK,KAAW,OACrE,EAAM,YAAY,SAC1B,EAGK,KAAiB,MACd,EAAgB,UAAU,GAG7B,IAAc,eAAe,EAAM,IAA0C,EAE7E,IAAc,eAAgC;GAClD,IAAM,IAAS,EAAY;AAc3B,UAZI,KAAU,EAAO,OAAO,OACnB,EAAO,KAGZ,KAAW,EAAuC,UAAU,OACtD,EAAsC,QAG5C,EAAM,aAAa,UAAU,OAI1B,EAAM,WAHJ,EAAM,YAAY;IAI5B,EAEK,IAAe,eACZ,EAAM,kBAAkB,QAAQ,EAAM,kBAAkB,EAAY,MAC5E,EAGK,IAAgB,OAAoC,iBAAiB,IAAI,KAAK,CAAA,EAG9E,IAAkB,OAAoC,mBAAmB,IAAI,KAAK,CAAA,EAClF,IAAqB,OAAqC,sBAAsB,IAAI,KAAK,CAAA,EACzF,IAAgB,OACpB,uBACM,GACR,EAEM,IAAmB,eAChB,EAAc,UAAU,QAAQ,EAAc,UAAU,EAAY,MAC5E,EAGK,IAAe,eACZ,EAAgB,UAAU,QAAQ,EAAgB,UAAU,EAAY,MAChF,EAGK,IAAe,eACZ,EAAa,QAAQ,EAAmB,QAAQ,KACxD,EAIK,IAAa,eAAe,CAChC,GAAG,GAAqB,EACxB;GACE,+BAA+B,EAAM;GACrC,0BAA0B,EAAM,iBAAiB,CAAC,EAAM,YAAY,EAAM,WAAW,KAAM;GAC3F,2BAA2B,EAAM,iBAAiB,CAAC,EAAM,YAAY,EAAM,WAAW,KAAM;GAC5F,sBAAsB,EAAa,SAAS,CAAC,EAAM;GACnD,yBAAyB,EAAa,SAAS,EAAM;GACrD,mBAAmB,EAAiB;GACpC,sBAAsB,EAAa,SAAS,CAAC,EAAiB;GAC/D,CACF,CAAA,EAEK,UAAyB;AAC7B,KAAK,aAAa,EAAY,MAAK;KAG/B,UAAyB;AAC7B,KAAK,aAAa,EAAY,MAAK;KAG/B,KAAyB,MAAwC;GACrE,IAAM,IAAc,EAAM,QAAQ,WAAU,MAAO,EAAI,OAAO,EAAQ,OAAO,GAAE;AAC/E,KAAK,oBAAoB;IACvB,GAAG;IACH,OAAO,EAAY;IACnB,aAAa,KAAe,IAAI,IAAc;IAC/C,CAAA;KAIG,KAAkB,MAAqB;AAI3C,GAHA,EAAM,gBAAe,EAGrB,EAAK,iBAAiB,EAAK;GAG3B,IAAM,IAAQ,EAAM,cAA8B,uBAAsB,EAClE,IAAW,EAAK,MAAM,EAAK,SAAS,GACpC,IAAW,EAAM,UAAU,IAAW,QAAQ;AAGpD,KAAc,EAAY,OAAO,EAAQ;KAGrC,KAAmB,MAAqB;GAE5C,IAAM,IAAgB,EAAM;AAC5B,IAAI,CAAC,KAAiB,CAAE,EAAM,cAA8B,SAAS,EAAc,KAE7E,EAAgB,UAAU,EAAY,SACxC,EAAc,MAAM,KAAI;KAKxB,KAAc,MAAqB;GAEvC,IAAM,IAAW,EAAa;AAG9B,KAAc,MAAM,KAAI;AAExB,OAAI;IACF,IAAM,IAAO,EAAM,cAAc,QAAQ,mBAAkB;AAC3D,QAAI,CAAC,EAAM;IACX,IAAM,IAAO,KAAK,MAAM,EAAK,EAGzB,IAAmB,EAAM;AAM7B,QALI,MAAa,aACf,IAAmB,EAAM,WAAW,IAIlC,EAAK,aAAa,EACpB;IAGF,IAAM,IAAqB;KACzB,aAAa,EAAK;KAClB;KACA,SAAS,EAAK;KAChB;AAIA,MAAK,gBAAgB;KACnB;KACA,UAAW,EAAK,SAAiB,MAAM,EAAK;KAC5C,UAAW,EAAM,KAAa,MAAM,EAAM;KAC3C,CAAA;WACK;;iCAOR,mBA6CM,OAAA;GA5CH,OAAK,eAAE,EAAA,MAAU;GACjB,OAAK,eAAE,EAAA,MAAQ;GAChB,MAAK;GACJ,iBAAe,EAAA,WAAQ;GACvB,iBAAe,EAAA;MAIR,EAAA,UAAY,qCAAA,WAAA,EADpB,mBAKE,OAAA;;GAHA,OAAK,eAAA,CAAC,qBAAmB;IAAA,eAEA,EAAA,UAAY;IAAA,kBAA8B,EAAA,UAAY;IAAA,CAAA,CAAA;GAD/E,eAAY;gBAKd,mBA4BM,OAAA;GA3BJ,OAAK,eAAA,CAAC,gBACE,EAAA,iBAAgB,CAAA;GACvB,OAAK,eAAA;IAAA,QAAA,GAAe,EAAA,UAAS;IAAA,SAAA;IAAA,YAAA;IAAA,CAAA;GAC7B,SAAO;GACP,cAAY;GACZ,cAAY;GACZ,YAAQ,cAAU,GAAc,CAAA,UAAA,CAAA;GAChC,aAAW;GACX,QAAI,cAAU,GAAU,CAAA,UAAA,CAAA;sBAEzB,mBAgBE,UAAA,MAAA,WAfgC,EAAA,UAAxB,GAAQ,oBADlB,YAgBE,kBAAA;GAdC,KAAK,EAAO;GACZ,KAAK,EAAA;GACG;GACR,OAAO,EAAA,OAAO,EAAO,QAAQ,EAAA,IAAI,EAAO,SAAS,KAAA;GACjD,SAAS,EAAc,EAAO,GAAE;GAChC,gBAAc,EAAA;GACd,aAAW,EAAA;GACX,gBAAc;GACd,kBAAgB,EAAA;GAChB,aAAY;GACZ,mBAAmB;GACnB,kBAAkB;GAClB,mBAAkB;GAClB,gBAAc,EAAA,QAAE,MAAW,EAAI,kBAAmB,EAAO;;;;;;;;;;;;mKC5SrD,mBAAb,MAA8B;CAC5B,kBAA8C;CAC9C,iBAAwC;CACxC;CACA;CACA;CACA;CAEA,iBAAiC;CACjC,iBAAiC;CAEjC,YAAY,GAAwB,IAA6B,EAAE,EAAE;AAKnE,EAJA,KAAK,kBAAkB,GACvB,KAAK,aAAa,EAAQ,cAAc,IACxC,KAAK,cAAc,EAAQ,eAAe,IAC1C,KAAK,aAAa,EAAQ,cAAc,IACxC,KAAK,WAAW,EAAQ,YAAY;;CAGtC,MAAM,GAAkB;AACtB,MAAI,CAAC,KAAK,gBAAiB;EAE3B,IAAM,IAAO,KAAK,gBAAgB,uBAAuB,EACnD,EAAE,YAAS,eAAY,GAGzB,IAAQ,GACR,IAAQ;AAGZ,MAAI,KAAK,UAAU;GACjB,IAAM,IAAkB,IAAU,EAAK,KACjC,IAAqB,EAAK,SAAS;AAEzC,GAAI,IAAkB,KAAK,cAAc,KAAmB,IAC1D,IAAQ,CAAC,KAAK,cACL,IAAqB,KAAK,cAAc,KAAsB,MACvE,IAAQ,KAAK;;AAKjB,MAAI,KAAK,YAAY;GACnB,IAAM,IAAmB,IAAU,EAAK,MAClC,IAAoB,EAAK,QAAQ;AAEvC,GAAI,IAAmB,KAAK,cAAc,KAAoB,IAC5D,IAAQ,CAAC,KAAK,cACL,IAAoB,KAAK,cAAc,KAAqB,MACrE,IAAQ,KAAK;;AASjB,EAJA,KAAK,iBAAiB,GACtB,KAAK,iBAAiB,GAGlB,KAAK,mBAAmB,KAAK,KAAK,mBAAmB,IACvD,KAAK,gBAAgB,GAErB,KAAK,MAAM;;CAIf,iBAAyB;AACnB,EAEJ,KAAK,mBAAiB,OAAO,kBAAkB;AACxC,QAAK,oBAEN,KAAK,mBAAmB,MAC1B,KAAK,gBAAgB,aAAa,KAAK,iBAErC,KAAK,mBAAmB,MAC1B,KAAK,gBAAgB,cAAc,KAAK,iBAItC,KAAK,mBAAmB,KAAK,KAAK,mBAAmB,KACvD,KAAK,MAAM;KAEZ,GAAG;;CAGR,OAAO;AACL,EAEE,KAAK,oBADL,cAAc,KAAK,eAAe,EACZ;;CAI1B,UAAU;AAER,EADA,KAAK,MAAM,EACX,KAAK,kBAAkB;;;;;;;;;;;;;;;;;;;;EE7F3B,IAAM,IAAS,aAAa,YAAW,EAYjC,IAAQ,GAgBR,IAAO,GAKP,IAAgB,KAAiB,EACjC,IAAiB,KAAiB,EAClC,IAAmB,KAAiB,EAGpC,IAAY,gBAAgB;GAChC,QAAQ;GACR,UAAU;GACV,UAAU;GACX,EAAC,EAEI,IAAwB,gBAAgB;GAC5C,QAAQ,GAAG,EAAM,KAAK,YAAY;GAClC,UAAU;GACV,UAAU;GACX,EAAC,EAGI,IAA8B,gBAAgB;GAClD,GAAG,EAAsB;GACzB,OAAO,GAAG,EAAM,WAAW,OAAO,MAAM;GACzC,EAAC,EAEI,IAAwB,gBAAgB;GAC5C,QAAQ;GACR,UAAU;GAEX,EAAC,EAGI,IAAoB,IAAI,EAAC,EACzB,IAAmB,IAAI,EAAC,EACxB,IAAgB,IAA4B,KAAI,EAGhD,IAAgB,IAA4B,KAAI,EAChD,KAAoB,MAA+B;AACvD,KAAc,QAAQ;KAIlB,IAAkB,IAA4B,KAAI,EAClD,IAAqB,IAA6B,KAAI;AAY5D,EAJA,QAAQ,iBAAiB,EAAa,EACtC,QAAQ,oBAAoB,EAAgB,EAC5C,QAAQ,mBAAmB,EAAe,EAC1C,QAAQ,sBAAsB,EAAkB,EAChD,QAAQ,kBAVe,GAA+B,MAAsC;AAE1F,GADA,EAAgB,QAAQ,GACxB,EAAmB,QAAQ;IAQS;EAGtC,IAAI,IAAwC,MAGtC,IAAe,eAAe,EAAM,YAAY,aAAa,SAAS,EAAE,CAAA,EAGxE,IAAwB,eACrB,EAAa,MACjB,KAAI,MAAQ;GAEX,IAAM,IAAM,EAAM,KAAK,YAAY,EAAK;AAOxC,UALK,IAKE;IACL,GAAG;IACH;IACA,eAAe,EAAK;IACtB,IARE,EAAO,KAAK,8BAA8B,EAAK,MAAM,gBAAgB,EAAM,KAAK,YAAY,SAAQ,EAC7F;IAQV,CACA,QAAO,MAAQ,MAAS,KAAK,CACjC,EAEK,KAAoB,MAA4B;AACpD,KAAc,QAAQ;KAGlB,KAAsB,MAA4B;AACtD,GAAI,EAAc,UAAU,MAC1B,EAAc,QAAQ;KAKpB,KAAwB,MAAiB;GAC7C,IAAM,IAAS,EAAM;AAGrB,KAAiB,QAAQ,EAAO;GAGhC,IAAM,IAAe;IACnB,GAAG;IACH,QAAQ;KACN,GAAG;KACH,YAAY,EAAkB;KAC9B,WAAW,EAAiB;KAC5B,SAAS,EAAE,MAAM,QAAO;KAC1B;IACF;AAEA,KAAK,UAAU,EAAqB;KAGhC,KAA0B,MAAiB;GAC/C,IAAM,IAAS,EAAM;AAGrB,KAAkB,QAAQ,EAAO;GAGjC,IAAM,IAAe;IACnB,GAAG;IACH,QAAQ;KACN,GAAG;KACH,YAAY,EAAkB;KAC9B,WAAW,EAAiB;KAC5B,SAAS,EAAE,MAAM,QAAO;KAC1B;IACF;AAEA,KAAK,UAAU,EAAqB;KAIhC,IAAoB,aAAa;GACrC,UAAU;GACV,eAAe;GACf,eAAe;GAChB,CAAA,EAEK,IAAsB,aAAa;GACvC,UAAU;GACV,eAAe;GACf,eAAe;GAChB,CAAA,EAGK,IAAmB,EAAkB,cACrC,IAAqB,EAAoB,cAGzC,KAAkB,GAAc,MAAkB;AACtD,KAAM,oBAAoB,OAAO,aAAa;IAAE;IAAK;IAAO,CAAA;KAIxD,KAAmB,GAAc,GAAmB,MAAqB;AAC7E,KAAM,oBAAoB,OAAO,cAAc;IAAE;IAAK;IAAQ;IAAO,CAAA;KAGjE,KAAyB,GAAc,GAAmB,MAAqB;AAEnF,KAAM,oBAAoB,OAAO,qBAA4B;IAAE;IAAK;IAAQ;IAAO,CAAO;KAGtF,KAAwB,GAAc,GAAmB,MAAqB;AAClF,KAAM,oBAAoB,OAAO,oBAA2B;IAAE;IAAK;IAAQ;IAAO,CAAO;KAIrF,KAAyB,MAOzB;AACJ,KAAM,oBAAoB,OAAO,oBAAoB;IACnD,KAAK,EAAQ;IACb,OAAO,EAAQ;IACf,UAAU,EAAQ;IAClB,eAAe,EAAQ;IACxB,CAAA;KAIG,KAAsB,MAAmE;AAC7F,KAAM,oBAAoB,OAAO,kBAAyB,EAAc;KAGpE,KAAqB,MAAqB;AAC9C,MAAc,MAAM,EAAK;KAGrB,KAAoB,MAAqF;AAE7G,GADA,GAAc,MAAK,EACnB,EAAM,oBAAoB,OAAO,gBAAuB,EAAc;;SAsCxE,EAAa;GACX,eAAe,EAAM,YAAY;GACjC,mBAlCwB;AAExB,IAAI,EAAM,YAAY,wBAEpB,EAAM,YAAY,qBAAqB,EAAiB,MAAK;;GA+B/D,eA3BoB,OAAO,MAEvB,EAAM,oBAAoB,iBACrB,MAAM,EAAM,oBAAoB,eAAe,GAAI,QAAO,GAE5D;GAuBP,cApBmB,OAAO,GAAqB,MAE3C,EAAM,oBAAoB,iBACrB,MAAM,EAAM,oBAAoB,eAAe,GAAI,OAAM,GAE3D;GAgBP,aAbkB,MAAwB;AAE1C,IAAI,EAAM,oBAAoB,kBAC5B,EAAM,oBAAoB,eAAe,GAAI,OAAM;;GAWrD;GACD,CAAA,EAGD,gBAAgB;AAEd,GAAI,EAAe,UACjB,IAAe,IAAI,iBAAiB,EAAe,OAAO;IACxD,UAAU;IACV,YAAY;IACZ,YAAY;IACZ,aAAa;IACd,CAAA;IAEJ,EAED,kBAAkB;AAOhB,GALA,EAAkB,SAAQ,EAC1B,EAAoB,SAAQ,EAG5B,GAAc,SAAQ,EACtB,IAAe;IAChB,0BAIC,mBA4HM,OAAA;YA5HG;GAAJ,KAAI;GAAgB,OAAM;GAAkB,OAAK,eAAE,EAAA,MAAS;GAAE,MAAK;MAEtE,mBAyHM,OAAA;YAxHA;GAAJ,KAAI;GACJ,OAAM;GACL,UAAM,EAAA,QAAA,GAAA,MAAE,MAAA,EAAA,IAAA,MAAA,EAAA,CAAA,GAAA,EAAgB;MAGzB,mBAkHM,OAAA;GAlHD,OAAM;GAAsB,OAAK,eAAE,EAAA,MAAqB;MAE3D,mBA+GM,OA/GN,eA+GM;GA5GI,EAAA,WAAW,KAAK,QAAQ,SAAM,KAAA,WAAA,EADtC,mBAgCM,OAAA;;IA9BJ,OAAM;IACL,OAAK,eAAA,EAAA,OAAA,GAAc,EAAA,WAAW,KAAK,MAAK,KAAA,CAAA;OAEzC,mBA0BM,OA1BN,cA0BM,EAAA,UAAA,GAAA,EAzBJ,mBAwBE,UAAA,MAAA,WAvBe,EAAA,QAAR,oBADT,YAwBE,iBAAA;IAtBC,KAAG,QAAU,EAAK,IAAI,MAAM,EAAK;IACjC,KAAK,EAAK;IACV,SAAS,EAAA,WAAW,KAAK;IACzB,aAAW,EAAK;IAChB,gBAAc;IACd,cAAY,EAAA;IACZ,gBAAc,EAAA;IACd,UAAU,EAAK,IAAI,OAAE,QAAa,EAAK,IAAI,OAAO,KAAA,KAAa,EAAA,aAAa,SAAS,EAAK,IAAI,GAAE;IAChG,mBAAiB,EAAA;IACjB,sBAAoB,EAAA;IACpB,uBAAqB,EAAA;IACrB,kBAAgB,EAAA;IAChB,YAAW;IACX,aAAY;IACZ,mBAAmB;IACnB,kBAAkB;IAClB,YAAW;IACX,YAAW;IACX,mBAAkB;IAClB,gBAAgB;IAChB,eAAe;IACf,cAAc;;;;;;;;;;;;;;GAMrB,mBAsCM,OAAA,EArCJ,OAAK,eAAA,CAAC,2CAAyC,EAAA,UAC3B,EAAA,sBAAoB,CAAA,CAAA,EAAA,EAAA,CAExC,mBAiCM,OAAA;aAhCA;IAAJ,KAAI;IACJ,OAAM;IACL,OAAK,eAAE,EAAA,MAAqB;IAC5B,UAAM,EAAA,QAAA,GAAA,MAAE,MAAA,EAAA,IAAA,MAAA,EAAA,CAAA,GAAA,EAAkB;OAE3B,mBA0BM,OAAA;IA1BD,OAAM;IAA+B,OAAK,eAAE,EAAA,MAA2B;uBAC1E,mBAwBE,UAAA,MAAA,WAvBe,EAAA,QAAR,oBADT,YAwBE,iBAAA;IAtBC,KAAG,UAAY,EAAK,IAAI,MAAM,EAAK;IACnC,KAAK,EAAK;IACV,SAAS,EAAA,WAAW,OAAO;IAC3B,aAAW,EAAK;IAChB,gBAAc;IACd,cAAY,EAAA;IACZ,gBAAc,EAAA;IACd,UAAU,EAAK,IAAI,OAAE,QAAa,EAAK,IAAI,OAAO,KAAA,KAAa,EAAA,aAAa,SAAS,EAAK,IAAI,GAAE;IAChG,mBAAiB,EAAA;IACjB,sBAAoB,EAAA;IACpB,uBAAqB,EAAA;IACrB,kBAAgB,EAAA;IAChB,YAAW;IACX,aAAY;IACZ,mBAAmB;IACnB,kBAAkB;IAClB,YAAW;IACX,YAAW;IACX,mBAAkB;IAClB,gBAAgB;IAChB,eAAe;IACf,cAAc;;;;;;;;;;;;;;GAQf,EAAA,WAAW,MAAM,QAAQ,SAAM,KAAA,WAAA,EADvC,mBAgCM,OAAA;;IA9BJ,OAAM;IACL,OAAK,eAAA,EAAA,OAAA,GAAc,EAAA,WAAW,MAAM,MAAK,KAAA,CAAA;OAE1C,mBA0BM,OA1BN,cA0BM,EAAA,UAAA,GAAA,EAzBJ,mBAwBE,UAAA,MAAA,WAvBe,EAAA,QAAR,oBADT,YAwBE,iBAAA;IAtBC,KAAG,SAAW,EAAK,IAAI,MAAM,EAAK;IAClC,KAAK,EAAK;IACV,SAAS,EAAA,WAAW,MAAM;IAC1B,aAAW,EAAK;IAChB,gBAAc;IACd,cAAY,EAAA;IACZ,gBAAc,EAAA;IACd,UAAU,EAAK,IAAI,OAAE,QAAa,EAAK,IAAI,OAAO,KAAA,KAAa,EAAA,aAAa,SAAS,EAAK,IAAI,GAAE;IAChG,mBAAiB,EAAA;IACjB,sBAAoB,EAAA;IACpB,uBAAqB,EAAA;IACrB,kBAAgB,EAAA;IAChB,YAAW;IACX,aAAY;IACZ,mBAAmB;IACnB,kBAAkB;IAClB,YAAW;IACX,YAAW;IACX,mBAAkB;IAClB,gBAAgB;IAChB,eAAe;IACf,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;EEta/B,IAAM,IAAQ,GAOR,IAAa,eACb,EAAM,gBAAgB,IACjB,GAAG,EAAM,cAAc,MAAM,EAAM,UAAU,kBAE/C,GAAG,EAAM,UAAU,gBAAgB,CAAC,OAC5C,EAEK,IAAkB,eASqB,GAC5C,EAEK,IAAgB,eAAe;GACnC;GACA;GACA;GACA;GACA;GACA;GACA;GACD,CAAA;iCAIC,mBA4BM,OAAA,EA5BA,OAAK,eAAE,EAAA,MAAa,EAAA,EAAA,CAExB,mBAOM,OAPN,cAOM,CANJ,mBAA6B,QAAA,MAAA,gBAApB,EAAA,MAAU,EAAA,EAAA,EAGP,EAAA,SAAA,WAAA,EAAZ,mBAEO,QAFP,cAEO,gBADF,EAAA,MAAe,EAAA,EAAA,IAAA,mBAAA,IAAA,GAAA,CAAA,CAAA,EAKtB,mBAeM,OAfN,cAeM;;GAPJ,WAAuB,EAAA,QAAA,WAAA,EAAA,EAAA,KAAA,GAAA,GAAA;YAGvB,mBAGM,OAAA,EAHD,OAAM,+BAA6B,EAAA,CACtC,mBAA2E,OAAA,EAAtE,OAAM,+DAA6D,CAAA,EACxE,mBAAkC,QAAA,EAA5B,OAAM,WAAS,EAAC,QAAK,CAAA,EAAA,GAAA;;;;;;;;;;;;;;;;;;;EEtDnC,IAAM,IAAQ,GAGR,IAAiB,WADG,oBAAmB,EACQ,OAAO;AAI5D,EAHA,QAAQ,sBAAsB,EAAc,EAG5C,QAAQ,cAAc,EAAM,QAAO;EAGnC,IAAM,IAAa,eACV,EAAY,OAAO,QAAQ,UAAU,UAC7C,EAGK,IAAa,eACV,EAAY,OAAO,QAAQ,UAAU,GAC7C,EAGK,IAAyB,eAAe;AAE5C,WADa,EAAW,OACxB;IACE,KAAK,OACH,QAAO;IACT,KAAK;IACL,KAAK;IACL,KAAK;IACL,QACE,QAAO;;IAEZ,EAEK,IAA0B,eAAe;AAE7C,WADa,EAAW,OACxB;IACE,KAAK,OACH,QAAO;IACT,KAAK;IACL,KAAK;IACL,KAAK;IACL,QACE,QAAO;;IAEZ,EAEK,IAAuB,eAAe;AAE1C,WADa,EAAW,OACxB;IACE,KAAK;IACL,KAAK,UACH,QAAO;IACT,KAAK;IACL,KAAK;IACL,QACE,QAAO;;IAEZ,EAEK,IAAwB,eAAe;AAE3C,WADa,EAAW,OACxB;IACE,KAAK,OACH,QAAO;IACT,KAAK;IACL,KAAK;IACL,KAAK;IACL,QACE,QAAO;;IAEZ,EAGK,IAAS,aAAa,yBAAwB,EAG9C,IAAe,KAAiB,EAChC,IAAY,KAAqC,EACjD,IAAU,KAAmC,EAC7C,IAAY,KAAqC,EACjD,IAAyB,KAAkB,EAC3C,IAAiB,IAAI,EAAC,EAGtB,IAAuB,eACtB,EAAa,QAEQ,EAAW,MAAM,KAAK,QAAQ,EAAW,MAAM,OAAO,QAAQ,EAAW,MAAM,MAAM,QACpF,EAAe,QAHV,GAIjC,EAGK,IAAc,SAAS;GAC3B,OAAO;GACP,SAAS,EAAE;GACX,MAAM,EAAE;GACR,SAAS;GACT,OAAO;GACR,CAAA,EAGK,IAAS,SAA0B,EACvC,GAAG,EAAM,SACV,CAAA,EAKK,IAAkB,IAAI,EAAC,EACvB,UAA8B;GAClC,IAAM,IAAQ,SAAS,iBAAiB,SAAS,gBAAgB,CAAC,iBAAiB,wBAAwB,CAAA;AAC3G,KAAgB,QAAQ,MAAM,EAAM,GAAG,IAAI;;AAQ7C,EALA,gBAAgB;AAEd,GADA,GAAsB,EACtB,OAAO,iBAAiB,UAAU,EAAqB;IACxD,EAED,kBAAkB;AAChB,UAAO,oBAAoB,UAAU,EAAqB;IAC3D;EAED,IAAM,IAAgB,eAAe;AACnC,OAAI,CAAC,EAAY,MACf,QAAO;IACL,YAAY;IACZ,cAAc;IACd,WAAW;IACX,YAAY;IACd;GAGF,IAAM,EAAE,QAAQ,MAAe,EAAY,OACrC,IAAO,EAAW,OAElB,IAAe,EAAO,QAAQ,eAAe,KAAa,IAAL;AAE3D,UAAO;IACL,YAAY,EAAK,KAAK,QAAQ,EAAK,OAAO,QAAQ,EAAK,MAAM;IAC7D,cAAc,EAAW;IACzB,WAAW,EAAW;IACtB,YAAY,eAAe,EAAW,aAAa,OAAO,EAAa,OAAO,EAAgB,MAAM;IACtG;IACD,EAIK,IAAa,eAAe;GAChC,IAAM,IAAS;IACb,MAAM;KAAE,SAAS,EAAE;KAAiB,OAAO;KAAG;IAC9C,QAAQ;KAAE,SAAS,EAAE;KAAiB,OAAO;KAAG;IAChD,OAAO;KAAE,SAAS,EAAE;KAAiB,OAAO;KAAG;IACjD;AAGA,QAAK,IAAM,KAAO,EAAY,SAAS;IACrC,IAAM,IAAQ,EAAI,SAAS;AAE3B,IAAI,EAAI,WAAW,UACjB,EAAO,KAAK,QAAQ,KAAK,EAAG,EAC5B,EAAO,KAAK,SAAS,KACZ,EAAI,WAAW,WACxB,EAAO,MAAM,QAAQ,KAAK,EAAG,EAC7B,EAAO,MAAM,SAAS,MAEtB,EAAO,OAAO,QAAQ,KAAK,EAAG,EAC9B,EAAO,OAAO,SAAS;;AAK3B,OAAI,EAAO,KAAK,QAAQ,SAAS,GAAG;IAClC,IAAM,IAAW,EAAO,KAAK,QAAQ,EAAO,KAAK,QAAQ,SAAS;AAClE,MAAS,eAAe;;AAE1B,OAAI,EAAO,MAAM,QAAQ,SAAS,GAAG;IACnC,IAAM,IAAa,EAAO,MAAM,QAAQ;AACxC,MAAW,qBAAqB;;AAGlC,UAAO;IACR,EAGK,IAAc,IAAI;GACtB,YAAY;GACZ,WAAW;GACZ,CAAA,EAGG,IAAkB,IAGhB,IAAiB,SAAS;GAC9B,6BAAa,IAAI,KAAsB;GACvC,UAAU;GACX,CAAA,EAGK,IAAmB,IAAI,EAAC,EACxB,IAAgC,EAAC,EAGjC,IAAsB,eAAe;GACzC,OAAO,eAAe,EAAY,KAAK,OAAO;GAC9C,mBAAmB,EAAc,MAAM;GACvC,wBAAwB,EAAc,MAAM;GAC5C,UAAU;GACV,SAAS,eAAe,EAAY,KAAK,SAAS,GAAG;GACtD,CAAA,EAGK,IAAwB,yBAAyB;GACrD,SAAS,eAAe,EAAW,MAAM,OAAO,QAAQ;GACxD,iBAAgB,MACC,EAAW,MAAM,OAAO,QAAQ,IAChC,SAAS;GAE1B,UAAU;GACV,SAAS,eAAe,EAAW,MAAM,OAAO,QAAQ,SAAS,GAAG;GACrE,CAAA,EAKK,IAAkB,gBAAmD;GACzE,aAAa,EAAY,KAAK,KAAK,MAAmB,EAAG,QAAQ,EAAG;GACpE,YAAY,EAAoB,WAAW;GAC3C,UAAU,EAAoB,SAAS;GACvC,aAAa,EAAoB,UAAU;GAC5C,EAAC,EAKI,IAAc,eAAe;GACjC,IAAM,oBAAM,IAAI,KAAoB;AAMpC,UALA,EAAY,KAAK,SAAS,GAAK,MAAU;IACvC,IAAM,IAAO,EAAI,QAAQ,GACnB,IAAK,OAAO,EAAK,MAAM,EAAK,MAAK;AACvC,MAAI,IAAI,GAAI,EAAK;KAClB,EACM;IACR,EAOK,KAAe,GAAkB,GAAsB,MAAuB;AAKlF,GAJA,EAAY,QAAQ,GACpB,EAAY,UAAU,GACtB,EAAY,OAAO,GACnB,EAAY,UAAU,EAAM,SAC5B,EAAY,QAAQ,EAAM;KAKtB,KAAmB,GAAmC,MAAqC;AAE/F,GADA,EAAe,cAAc,IAAI,IAAI,EAAW,EAChD,EAAiB;KAIb,KAAa,MAAqC;AACtD,KAAe,WAAW;KAItB,KAAwB,MAA4C;AACxE,KAAY,QAAQ;IAClB,YAAY,EAAS;IACrB,WAAW,EAAS;IACtB;KAQI,KAAU,GAAe,MAAmB;AAChD,OAAI;AAGF,IAFA,EAAe,QAAQ,GAEvB,eAAe;AACb,KAAI,EAAa,UAEf,EAAoB,iBAAiB;MAAE;MAAQ;MAAO,CAAA,EAGtD,EAAsB,iBAAiB;MAAE;MAAO;MAAQ,CAAA,EAGpD,EAAQ,OAAO,eACjB,EAAQ,MAAM,aAAY;MAG/B;YACM,GAAO;AACd,MAAO,MAAM,kBAAkB,EAAE,QAAQ,0BAA0B,EAAE,EAAK;;KAKxE,MAAgB,MAA+B;AACnD,UAAO,OAAO,GAAQ,EAAS;KAI3B,IAAgB,OAAO,MAA0C;AACrE,OAAI;AAKF,WAHI,EAAQ,OAAO,gBACV,MAAM,EAAQ,MAAM,cAAc,EAAE,GAEtC;YACA,GAAO;AAEd,WADA,EAAO,MAAM,8BAA8B,EAAE,QAAQ,0BAA0B,EAAE,EAAK,EAC/E;;KAIL,KAAe,OAAO,GAAqB,MAAuC;AACtF,OAAI;AAIF,WAHI,EAAQ,OAAO,eACV,MAAM,EAAQ,MAAM,aAAa,GAAI,EAAK,GAE5C;YACA,GAAO;AAEd,WADA,EAAO,MAAM,4BAA4B,EAAE,QAAQ,0BAA0B,EAAE,EAAK,EAC7E;;KAIL,KAAc,MAAwB;AAC1C,GAAI,EAAQ,OAAO,cACjB,EAAQ,MAAM,WAAW,EAAE;KAUzB,KAAiB,OAAO,GAAqB,MAA6C;AAC9F,OAAI;AAOF,WANI,MAAS,UACJ,MAAM,EAAc,EAAE,GACpB,MAAS,UAClB,EAAW,EAAE,EACN,MAEF;YACA,GAAO;AAEd,WADA,EAAO,MAAM,4BAA4B;KAAE,QAAQ;KAA0B;KAAI;KAAM,EAAE,EAAK,EACvF;;KAUL,MAAiB,GAAqB,IAA8B,WAAW;AACnF,OAAI;AACF,QAAI,CAAC,EAAa,OAAO;AACvB,OAAO,KAAK,wCAAwC,EAAE,OAAI,CAAA;AAC1D;;IAKF,IAAM,IADQ,OAAO,EAAE,CACH,MAAM,IAAG,EACvB,IAAQ,EAAM,MAAM,IAIpB,IAAW,EAAY,MAAM,IAAI,EAAM,IAAI;AAEjD,QAAI,MAAa,IAAI;AACnB,OAAO,KAAK,mCAAmC;MAAE;MAAI;MAAO,CAAA;AAC5D;;IAIF,IAAM,IAAe,EAAc,MAAM,cACnC,IAAY,EAAc,MAAM,WAChC,IAAkB,IAAW,GAI7B,IADgB,EAAa,MAAM,uBAAsB,CAC3B,SAAS,IAAe,IAGtD,IAAmB,EAAY,MAAM;AAI3C,QAFE,KAAmB,KAAoB,IAAkB,KAAa,IAAmB,GAE5E;AACb,OAAO,MAAM,uBAAuB;MAAE;MAAU;MAAI,CAAA;AACpD;;IAKF,IAAM,IAAkB,EAAQ,OAAO,KAAK,cAAc,kBAAkB,IAAI,EAAa;AAU7F,QARA,EAAgB,SAAS;KACvB,KAAK;KACL;KACD,CAAA,EAED,EAAO,MAAM,mBAAmB;KAAE;KAAU;KAAiB;KAAU,CAAA,EAGnE,EAAM,UAAU,GAAG;KACrB,IAAM,IAAW,EAAM,IACjB,IAAc,EAAY,QAAQ,WAAU,MAAO,EAAI,OAAO,EAAQ;AAE5E,SAAI,MAAgB,IAAI;MACtB,IAAM,IAAmB,EAAY,QAClC,MAAM,GAAG,EAAW,CACpB,QAAQ,GAAK,MAAQ,KAAO,EAAI,SAAS,MAAM,EAAC;AAOnD,MALA,EAAgB,SAAS;OACvB,MAAM;OACN;OACD,CAAA,EAED,EAAO,MAAM,oBAAoB;OAAE;OAAU;OAAa;OAAkB,CAAA;;;YAGzE,GAAO;AACd,MAAO,MAAM,2BAA2B,EAAE,QAAQ,0BAA0B,EAAE,EAAK;;KAQjF,WAAgB;AACpB,OAAI;AACF,mBAAe;AACb,SAAI,CAAC,EAAa,MAAO;KAGzB,IAAM,IAAO,EAAa,MAAM,uBAAsB;AAetD,KAZA,EAAoB,iBAAiB;MACnC,QAAQ,EAAK;MACb,OAAO,EAAK;MACb,CAAA,EAGD,EAAsB,iBAAiB;MACrC,OAAO,EAAK;MACZ,QAAQ,EAAK;MACd,CAAA,EAGG,EAAQ,OAAO,eACjB,EAAQ,MAAM,aAAY;KAI5B,IAAM,IAAgB,EAAY;AAIlC,KAHA,EAAoB,qBAAqB,EAAc,UAAS,EAChE,EAAsB,qBAAqB,EAAc,WAAU,EAEnE,EAAO,MAAM,qBAAqB;MAChC,eAAe;OAAE,OAAO,EAAK;OAAO,QAAQ,EAAK;OAAQ;MACzD,UAAU,EAAY,KAAK;MAC3B,aAAa,EAAY,QAAQ;MAClC,CAAA;MACF;YACM,GAAO;AACd,MAAO,MAAM,qBAAqB,EAAE,QAAQ,0BAA0B,EAAE,EAAK;;KAY3E,KAAmB,MAAsD;AAC7E,OAAI;AACF,QAAI,CAAC,EAAQ,SAAU;IAEvB,IAAM,IAAa,EAAY,KAAK,EAAQ,SAAS;AACrD,QAAI,CAAC,EAAY;IAGjB,IAAM,IAAqC,EAAW,QAAQ,GACxD,IAAS,EAAY,QAAQ,MAAK,MAAO,EAAI,OAAO,EAAQ,UAAU,SAAQ;AAEpF,IAAI,KAAO,KACT,EAAM,QAAQ,KAAK,cAAc;KAC/B;KACA;KACA,OAAO,EAAI,EAAO;KACnB,CAAA;YAEI,GAAO;AACd,MAAO,MAAM,6BAA6B,EAAE,QAAQ,0BAA0B,EAAE,EAAK;;KAOnF,KAAyB,MAAsD;AACnF,OAAI;AACF,QAAI,CAAC,EAAQ,SAAU;IAEvB,IAAM,IAAa,EAAY,KAAK,EAAQ,SAAS;AACrD,QAAI,CAAC,EAAY;IAGjB,IAAM,IAAqC,EAAW,QAAQ,GACxD,IAAS,EAAY,QAAQ,MAAK,MAAO,EAAI,OAAO,EAAQ,UAAU,SAAQ;AAEpF,IAAI,KAAO,KACT,EAAM,QAAQ,KAAK,qBAAqB;KACtC;KACA;KACA,OAAO,EAAI,EAAO;KACnB,CAAA;YAEI,GAAO;AACd,MAAO,MAAM,mCAAmC,EAAE,QAAQ,0BAA0B,EAAE,EAAK;;KAOzF,KAAwB,MAAsD;AAClF,OAAI;AACF,QAAI,CAAC,EAAQ,SAAU;IAEvB,IAAM,IAAa,EAAY,KAAK,EAAQ,SAAS;AACrD,QAAI,CAAC,EAAY;IAGjB,IAAM,IAAqC,EAAW,QAAQ,GACxD,IAAS,EAAY,QAAQ,MAAK,MAAO,EAAI,OAAO,EAAQ,UAAU,SAAQ;AAEpF,IAAI,KAAO,KACT,EAAM,QAAQ,KAAK,oBAAoB;KACrC;KACA;KACA,OAAO,EAAI,EAAO;KACnB,CAAA;YAEI,GAAO;AACd,MAAO,MAAM,kCAAkC,EAAE,QAAQ,0BAA0B,EAAE,EAAK;;KAQxF,KAAmB,MAAsD;AAC7E,OAAI;AACF,QAAI,CAAC,EAAQ,SAAU;IAEvB,IAAM,IAAQ,EAAQ,SAAS,OACzB,IAAa,EAAe,YAAY,IAAI,EAAK;AAavD,IAVI,IACF,EAAe,YAAY,OAAO,EAAK,GAEvC,EAAe,YAAY,IAAI,EAAK,EAItC,EAAiB,SAGjB,EAAO,MAAM,yBAAyB;KAAE;KAAO,UAAU,CAAC;KAAY,CAAA;YAC/D,GAAO;AACd,MAAO,MAAM,6BAA6B,EAAE,QAAQ,0BAA0B,EAAE,EAAK;;KAInF,WAA6B;AACjC,OAAI;IACF,IAAI,IAAU,IAGR,IAAiB,EAAY,QAAQ,MAAK,MAAQ,EAAY,SAAS,WAAU;AA4BvF,IA1BA,EAAY,KAAK,SAAQ,MAAM;KAC7B,IAAM,IAAO,EAAW,QAAQ,GAC1B,IACJ,GAAK,MACL,GAAK,SACJ,GAAY,QACZ,OAAQ,GAAY,SAAU,WAAY,EAAW,QAAQ;AAE5D,WAAU,QAAQ,EAAe,YAAY,IAAI,EAAM,IAKtC,EAAgB,GAAK,EAAc,KAGtD,EAAe,YAAY,IAAI,EAAK,EACpC,IAAU;MAEb,EAEG,KACF,EAAiB,SAGnB,EAAM,QAAQ,KAAK,cAAc,EAAE,OAAO,EAAe,YAAY,MAAM,CAAA,EAC3E,EAAO,MAAM,gCAAgC,EAAE,OAAO,EAAe,YAAY,MAAM,CAAA;YAChF,GAAO;AACd,MAAO,MAAM,6BAA6B,EAAE,QAAQ,0BAA0B,EAAE,EAAK;;;EAQzF,SAAS,EAAgB,GAAU,GAAuB;AAQxD,UAPK,KAGD,EAAO,YACF,EAAO,UAAU,EAAG,GAGtB;;EAOT,IAAM,KAAsB,eAAe;GAEzC,IAAM,IAAiB,EAAY,QAAQ,MAAK,MAAQ,EAAY,SAAS,WAAU;AAGvF,OAAI,CAAC,KAAkB,CAAC,EAAe,UACrC,QAAO,EAAY,KAAK;GAI1B,IAAI,IAAQ;AAQZ,UAPA,EAAY,KAAK,SAAQ,MAAM;IAC7B,IAAM,IAAO,EAAW,QAAQ;AAChC,IAAI,EAAgB,GAAK,EAAe,IACtC;KAEH,EAEM;IACR,EAEK,MAAqB,MAAoB;AAC7C,OAAI;IACF,IAAM,IAAgB,EAAe,YAAY;AACjD,QAAI,MAAkB,EACpB;AAMF,IAHA,EAAe,YAAY,OAAM,EACjC,EAAiB,SACjB,EAAM,QAAQ,KAAK,mBAAmB,EAAE,kBAAe,CAAA,EACvD,EAAO,MAAM,qBAAqB;KAAE;KAAQ;KAAe,CAAA;YACpD,GAAO;AACd,MAAO,MAAM,6BAA6B,EAAE,QAAQ,0BAA0B,EAAE,EAAK;;KAOnF,WAAwB;AAC5B,OAAqB;KAMjB,WAA6B;AACjC,MAAkB,gBAAe;KAO7B,YACG;GACL,OAAO,EAAY;GACnB,SAAS,EAAY;GACrB,MAAM,EAAY;GAClB,SAAS,EAAY;GACrB,OAAO,EAAY;GACnB,gBAAgB,EAAY;GAC5B,WAAW;IACT,aAAa,MAAM,KAAK,EAAe,YAAY;IACnD,UAAU,EAAe;IAC1B;GACD,QAAQ;IACN,SAAS,EAAc;IACvB,YAAY,EAAW;IACxB;GACD,gBAAgB;IACd,UAAU;KACR,YAAY,EAAoB,WAAW;KAC3C,UAAU,EAAoB,SAAS;KACvC,WAAW,EAAoB,UAAU;KAC1C;IACD,YAAY;KACV,YAAY,EAAsB,WAAW;KAC7C,UAAU,EAAsB,SAAS;KACzC,YAAY,EAAsB,WAAW;KAC9C;IACF;GACH,GAOI,YACG;GACL,aAAa;IACX,MAAM;IACN,YAAY;KACV,WAAW;MAAE,MAAM;MAAW,SAAS;MAAM,aAAa;MAA2C;KACrG,cAAc;MAAE,MAAM;MAAW,SAAS;MAAM,aAAa;MAAmC;KAChG,sBAAsB;MAAE,MAAM;MAAU,SAAS;MAAG,aAAa;MAAwC;KAC1G;IACF;GACD,eAAe;IACb,MAAM;IACN,YAAY;KACV,YAAY;MAAE,MAAM;MAAW,SAAS;MAAM,aAAa;MAA0B;KACrF,iBAAiB;MAAE,MAAM;MAAW,SAAS;MAAM,aAAa;MAAsC;KACtG,oBAAoB;MAAE,MAAM;MAAW,SAAS;MAAM,aAAa;MAA8B;KAClG;IACF;GACD,QAAQ;IACN,MAAM;IACN,YAAY;KACV,YAAY;MAAE,MAAM;MAAW,SAAS;MAAM,aAAa;MAAqB;KAChF,YAAY;MAAE,MAAM;MAAW,SAAS;MAAM,aAAa;MAAqB;KAChF,aAAa;MAAE,MAAM;MAAW,SAAS;MAAM,aAAa;MAAuB;KACnF,cAAc;MAAE,MAAM;MAAW,SAAS;MAAM,aAAa;MAAgC;KAC9F;IACF;GACD,OAAO;IACL,MAAM;IACN,YAAY,EACV,WAAW;KAAE,MAAM;KAAU,SAAS;KAAI,aAAa;KAA2B,EACnF;IACF;GACH,GAWI,MAAgB,MAAiB;AACjC,UAEJ,KAAI;IACF,IAAM,IAAS,EAAM,QACf,IAAa,EAAO,YACpB,IAAY,EAAO;AAoBzB,IAlBA,IAAkB,IAGlB,EAAY,QAAQ;KAAE;KAAY;KAAU,EAGxC,EAAuB,SAAS,EAAuB,MAAM,eAAe,MAC9E,EAAuB,MAAM,aAAa,IAI5C,EAAoB,qBAAqB,EAAS,EAClD,EAAsB,qBAAqB,EAAU,EAGrD,EAAM,oBAAoB,uBAAuB;KAAE,MAAM;KAAY,KAAK;KAAW,CAAA,EACrF,EAAM,oBAAoB,OAAO,UAAiB;KAAE,MAAM;KAAY,KAAK;KAAW,CAAO,EAE7F,eAAe;AACb,SAAkB;MACnB;YACM,GAAO;AAEd,IADA,EAAO,MAAM,2BAA2B,EAAE,QAAQ,0BAA0B,EAAE,EAAK,EACnF,IAAkB;;KAOhB,MAA0B,MAAiB;AAC3C,UAEJ,KAAI;IAEF,IAAM,IADS,EAAM,OACK;AAmB1B,IAjBA,IAAkB,IAGlB,EAAY,MAAM,aAAa,GAG3B,EAAQ,OAAO,oBAAoB,EAAQ,MAAM,iBAAiB,eAAe,MACnF,EAAQ,MAAM,iBAAiB,aAAa,IAI9C,EAAsB,qBAAqB,EAAU,EAGrD,EAAM,oBAAoB,uBAAuB;KAAE,MAAM;KAAY,KAAK,EAAY,MAAM;KAAW,CAAA,EACvG,EAAM,oBAAoB,OAAO,UAAiB;KAAE,MAAM;KAAY,KAAK,EAAY,MAAM;KAAW,CAAO,EAE/G,eAAe;AACb,SAAkB;MACnB;YACM,GAAO;AAEd,IADA,EAAO,MAAM,yCAAyC,EAAE,QAAQ,0BAA0B,EAAE,EAAK,EACjG,IAAkB;;KAQhB,MAAsB,MAAuB;AAC7C,UAEJ,KAAI;AAyBF,IAxBA,IAAkB,IAGlB,EAAY,MAAM,aAAa,GAG3B,EAAQ,OAAO,oBAAoB,EAAQ,MAAM,iBAAiB,eAAe,MACnF,EAAQ,MAAM,iBAAiB,aAAa,IAI1C,EAAuB,SAAS,EAAuB,MAAM,eAAe,MAC9E,EAAuB,MAAM,aAAa,IAI5C,EAAsB,qBAAqB,EAAU,EAGrD,EAAM,oBAAoB,uBAAuB;KAC/C,MAAM;KACN,KAAK,EAAY,MAAM;KACxB,CAAA,EAED,eAAe;AACb,SAAkB;MACnB;YACM,GAAO;AAEd,IADA,EAAO,MAAM,kCAAkC,EAAE,QAAQ,0BAA0B,EAAE,EAAK,EAC1F,IAAkB;;KAQhB,MAA4B,MAAkB;AAClD,OAAI;AACF,QAAI,CAAC,EAAQ,MAAO;IAGpB,IAAM,IAAS,EAAY,QAAQ,MAAK,MAAO,EAAI,UAAU,EAAK;AAClE,QAAI,CAAC,EAAQ;IAGb,IAAM,IAAc,EAAW,MAAM,OAAO,QAAQ,WAAU,MAAO,EAAI,UAAU,EAAK;AACxF,QAAI,MAAgB,GAAI;IAExB,IAAM,IAAiB,EAAW,MAAM,OAAO,QAC5C,MAAM,GAAG,EAAW,CACpB,QAAQ,GAAK,MAAQ,KAAO,EAAI,SAAS,MAAM,EAAC,EAE7C,IAAc,EAAO,SAAS,KAG9B,IAAsB,EAAQ,MAAM,KAAK,cAAc,6BAA4B;AACzF,QAAI,CAAC,EAAqB;IAE1B,IAAM,IAAiB,EAAoB,aACrC,IAAgB,EAAoB;AAM1C,IAFE,KAAkB,KAAiB,IAAiB,KAAe,IAAgB,KAInF,EAAoB,SAAS;KAC3B,MAAM;KACN,UAAU;KACX,CAAA;YAEI,GAAO;AACd,MAAO,MAAM,yCAAyC,EAAE,QAAQ,0BAA0B,EAAE,EAAK;;KAO/F,MAAiB,MAAyB;GAC9C,IAAM,EAAE,gBAAa;AAEhB,SAEL,SAAQ,EAAM,KAAd;IACE,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;AACH,OAAM,gBAAe;AAErB;IACF,KAAK;AAEH,KADA,EAAM,gBAAe,EACrB,EAAc,EAAQ;AACtB;IACF,KAAK;AAEH,KADA,EAAM,gBAAe,EACrB,EAAW,EAAQ;AACnB;;;AAQN,kBAAgB;AACd,OAAI;AAQF,IANA,EAAM,oBAAoB,wBAAwB,GAAW,MAAY;AACvE,OAAM,QAAQ,KAAK,GAAqD,EAAO;MAChF,EAIG,EAAM,oBAAoB,0BAC5B,EAAM,oBAAoB,sBAAsB;KAC9C,aAAa;KACb,mBAAmB;KACnB,kBAAkB;KAClB,aAAa;KACd,CAAA,EACD,EAAO,MAAM,yCAAyC,EAAE,QAAQ,0BAA0B,CAAA;IAG5F,IAAM,IAAqB,EAAM,QAAQ,KAAK,qBAAoB,MAAW;KAC3E,IAAM,IAAQ,GAAS,SAAS;AAChC,SAAI,MAAU,MAAM;AAClB,QAAO,KAAK,wCAAwC,EAAO;AAC3D;;AAGF,SAAI,EAAQ,kBAAkB,SAAS;AAErC,UADwB,EAAe,YAAY,IAAI,EAAK,CAE1D;AAGF,MADA,EAAe,YAAY,OAAM,EACjC,EAAe,YAAY,IAAI,EAAK;YAEhC,EAAe,YAAY,IAAI,EAAM,GACvC,EAAe,YAAY,OAAO,EAAK,GAEvC,EAAe,YAAY,IAAI,EAAK;AAMxC,KAFA,EAAe,WAAW,GAC1B,EAAiB,SACjB,EAAO,MAAM,gDAAgD;MAC3D;MACA,eAAe,EAAQ;MACvB,UAAU,EAAe,YAAY,IAAI,EAAM;MAChD,CAAA;MACF;AACD,IAAI,KACF,EAAW,KAAK,EAAkB;IAGpC,IAAM,IAAoB,EAAM,QAAQ,KAAK,oBAAmB,MAAW;AACzE,QAAkB,GAAS,OAAM;MAClC;AA4BD,QA3BI,KACF,EAAW,KAAK,EAAiB,EAInC,eAAe;AACb,SAAI;AACF,UAAI,EAAa,OAAO;OACtB,IAAM,IAAO,EAAa,MAAM,uBAAsB;AAEtD,OADA,EAAoB,iBAAiB;QAAE,QAAQ,EAAK;QAAQ,OAAO,EAAK;QAAO,CAAA,EAC/E,EAAsB,iBAAiB;QAAE,OAAO,EAAK;QAAO,QAAQ,EAAK;QAAQ,CAAA;;AAInF,MAAI,EAAQ,SAEV,EAAO,MAAM,4BAA4B;OACvC,UAAU,EAAY,KAAK;OAC3B,aAAa,EAAY,QAAQ;OAClC,CAAA;cAEI,GAAO;AACd,QAAO,MAAM,sCAAsC,EAAE,QAAQ,0BAA0B,EAAE,EAAK;;MAEjG,EAGG,EAAa,OAAO;KACtB,IAAM,IAAiB,IAAI,gBAAe,MAAW;AACnD,UAAI;AACF,YAAK,IAAM,KAAS,GAAS;QAC3B,IAAM,EAAE,WAAQ,aAAU,EAAM;AAChC,UAAO,GAAO,EAAM;;eAEf,GAAO;AACd,SAAO,MAAM,mCAAmC,EAAE,QAAQ,0BAA0B,EAAE,EAAK;;OAE9F;AAKD,KAHA,EAAe,QAAQ,EAAa,MAAK,EAGzC,kBAAkB;AAChB,QAAe,YAAW;OAC3B;;YAEI,GAAO;AACd,MAAO,MAAM,gCAAgC,EAAE,QAAQ,0BAA0B,EAAE,EAAK;;IAE3F;EAMD,IAAI,qBAAuB,IAAI,KAAqB;SAEpD,MAAM,SAAwB;GAC5B,IAAM,IAAa,EAAe;AAGlC,OAAI,MAAe,GAAsB;GAGzC,IAAM,IAAS,MAAM,KAAK,EAAU,EAC9B,IAAS,MAAM,KAAK,GAAoB,EAGxC,IAAQ,EAAO,QAAO,MAAM,CAAC,EAAO,SAAS,EAAG,CAAA,EAChD,IAAU,EAAO,QAAO,MAAM,CAAC,EAAO,SAAS,EAAG,CAAA;AAqBxD,GAlBA,EAAM,SAAQ,MAAS;AACrB,MAAM,QAAQ,KAAK,cAAc;KAC/B;KACA,UAAU;KACV,cAAc;KACf,CAAA;KACF,EAGD,EAAQ,SAAQ,MAAS;AACvB,MAAM,QAAQ,KAAK,cAAc;KAC/B;KACA,UAAU;KACV,cAAc;KACf,CAAA;KACF,EAGD,KAAuB,IAAI,IAAI,EAAU;IAC1C,EAED,YACQ,EAAe,WACpB,GAAa,MAAgB;AAC5B,OAAI,MAAgB,GAAa;IAE/B,IAAI,IAAgC,MAChC,IAA0B;AAE9B,QAAI,GAAa;KACf,IAAM,IAAQ,OAAO,EAAY,CAAC,MAAM,IAAG;AAC3C,KAAI,EAAM,UAAU,MAClB,IAAQ,EAAM,MAAM,MACpB,IAAW,EAAM,MAAM;;AAI3B,MAAM,QAAQ,KAAK,qBAAqB;KACtC;KACA;KACD,CAAA;;IAGP,EAEA,kBAAkB;AAQhB,GAPA,EAAW,SAAQ,MAAW;AAC5B,QAAI;AACF,QAAQ;aACD,GAAO;AACd,OAAO,MAAM,yCAAyC,EAAE,QAAQ,0BAA0B,EAAE,EAAK;;KAEpG,EACD,EAAW,SAAS;IACrB,EAGD,EAAa;GAEX;GACA;GACA;GACA;GACA;GAGA;GACA;GACA;GAGA;GACA;GACA;GACA;GAGA;GACA;GACA;GACA;GAGA;GACA;GACD,CAAA,0BAIC,mBAgFM,OAAA;YA/EA;GAAJ,KAAI;GACJ,OAAK,eAAA,CAAC,2DAAyD,CACtD,EAAO,OAAO,WAAW,EAAA,MAAsB,CAAA,CAAA;GACvD,oBAAkB,EAAA;GACnB,UAAS;GACT,MAAK;GACJ,iBAAe,EAAY,KAAK;GAChC,iBAAe,EAAY,QAAQ;GACnC,WAAS;;GAIF,EAAO,QAAQ,eAAU,mCAAA,WAAA,EADjC,YAiBE,oBAAA;;aAfI;IAAJ,KAAI;IACH,SAAS,EAAY;IACrB,eAAa,EAAA;IACb,eAAa,EAAA,MAAY;IACzB,QAAQ,EAAA,MAAc;IACtB,0BAAwB,EAAA;IACxB,cAAY,EAAM;IAClB,8BAA4B,EAAA;IAC5B,iBAAe,MAAM,KAAK,EAAe,YAAW;IACpD,cAAY,GAAA;IACb,OAAM;IACL,gBAAe;IACf,sBAAsB;IACtB,aAAY;IACZ,kBAAiB;;;;;;;;;;;;GAIpB,YAqBE,kBAAA;aApBI;IAAJ,KAAI;IACH,MAAM,EAAA;IACN,SAAS,EAAY;IACrB,eAAa,EAAA;IACb,aAAa,MAAA,EAAmB;IAChC,cAAY,EAAA,MAAc;IAC1B,0BAAwB,EAAA;IACxB,gBAAA,OAA8B,EAAe,YAAQ,YAAA,OAAwB,EAAe,YAAQ,WAAA;YAAmC,EAAe;KAAQ,UAAA;KAAA,GAAA;IAK9J,iBAAe,MAAM,KAAK,EAAe,YAAW;IACpD,wBAAsB,EAAM;IAC5B,2BAAyB,EAAA;IACzB,4BAA0B,EAAA;IAC1B,kBAAgB,EAAA;IACjB,OAAM;IACL,OAAK,eAAA,EAAA,QAAY,EAAA,MAAc,YAAU,CAAA;IACzC,UAAQ;;;;;;;;;;;;;;;;GAIA,EAAA,SAAA,WAAA,EAAX,mBAaM,OAbN,cAaM;IAZJ,mBAAyG,OAAA;KAApG,OAAM;KAAwC,OAAK,eAAA,EAAA,OAAA,GAAc,EAAA,MAAW,KAAK,MAAK,KAAA,CAAA;;IAC3F,mBASM,OAAA;cARA;KAAJ,KAAI;KACJ,OAAM;KACN,UAAS;KACT,MAAK;KACL,eAAY;sBACK;QAEjB,mBAA6E,OAAA,EAAvE,OAAK,eAAA;KAAA,OAAA,GAAc,EAAA,MAAW,OAAO,MAAK;KAAA,QAAA;KAAA,CAAA,EAAA,EAAA,MAAA,EAAA,CAAA,EAAA,IAAA;IAElD,mBAA2G,OAAA;KAAtG,OAAM;KAAyC,OAAK,eAAA,EAAA,OAAA,GAAc,EAAA,MAAW,MAAM,MAAK,KAAA,CAAA;;;GAKvF,EAAO,QAAQ,eAAU,mCAAA,WAAA,EADjC,YAOE,oBAAA;;aALI;IAAJ,KAAI;IACH,cAAY,EAAY,KAAK;IAC7B,kBAAgB,EAAe,YAAY;IAC3C,kBAAgB;KAAA,gBAAA;KAAA,aAAA;KAAA,eAAA;KAAA,YAAA;KAAuE;IACxF,OAAM;;;;yCChuCC,gBAAb,MAAmD;CACjD,OAAgB;CAChB;CACA;CAEA,MAA0B;CAC1B,oBAAwC;CACxC,cAA0C;CAC1C,cAAsB;CACtB;CAGA,eAAyC;CACzC,iBAAsC,EAAE;CACxC,cAAoC,EAAE;CAEtC,YAAY,IAA2B,EAAE,EAAE;AAGzC,EAFA,KAAK,UAAU,GAEf,KAAK,SAAS,aAAa,gBAAgB;EAC3C,IAAM,IAAW,0BAA0B,iBAAiB;AAwD5D,EArDA,KAAK,sBAAsB;GACzB,kBAAkB,GAAmC,MAAoC;AAEvF,IAAI,KAAK,mBAAmB,mBAC1B,KAAK,kBAAkB,gBAAgB,GAAa,EAAO;;GAG/D,YAAY,MAAqC;AAE/C,IAAI,KAAK,mBAAmB,aAC1B,KAAK,kBAAkB,UAAU,EAAS;;GAG9C,gBAAgB,GAAqB,MAAgC;AAEnE,IAAI,KAAK,mBAAmB,iBAC1B,KAAK,kBAAkB,cAAc,GAAI,EAAS;;GAGtD,gBAAgB,OAAO,GAAqB,MAEtC,KAAK,mBAAmB,iBACnB,MAAM,KAAK,kBAAkB,eAAe,GAAI,EAAK,GAEvD;GAET,uBAAmD,MAAyD;AAC1G,MAAS,qBAAqB,EAAK;;GAErC,uBAAuB,MAA4C;AAEjE,IAAI,KAAK,mBAAmB,wBAC1B,KAAK,kBAAkB,qBAAqB,EAAS;;GAGzD,eAAe;AAEb,IAAI,KAAK,mBAAmB,WAC1B,KAAK,kBAAkB,SAAS;;GAGpC,OAAmC,GAAc,MAA2B;AAC1E,MAAS,OAAO,GAAW,EAAQ;;GAErC,wBAAwB,MAAkC;AACxD,MAAS,wBAAwB,EAAU;;GAE7C,eAAe;AACb,MAAS,WAAW;;GAEvB,EAGD,KAAK,oBAAoB;;CAM3B,MAAM,MAAM,GAAmB,GAA6B;AAC1D,MAAI,KAAK,YACP,OAAU,MAAM,uCAAuC;AAGzD,EAAI,KAAK,QACP,KAAK,OAAO,KAAK,oCAAoC,EACrD,MAAM,KAAK,SAAS;AAGtB,MAAI;AAqBF,GApBA,KAAK,cAAc,GAGnB,KAAK,MAAM,UAAU,gCAAwB;IAE3C,UAAU;IACV,qBAAqB,KAAK;IAC1B,SAAS;IACT,SAAS,KAAK;IACf,CAAC,EAGF,KAAK,oBAAoB,KAAK,IAAI,MAAM,EAAK,EAI7C,KAAK,oBAAoB,sBAAkD,GAAc,MAA2B;AAClH,MAAI,KAAK,GAAkB,EAAQ;KACnC,EAEF,KAAK,OAAO,MAAM,uBAAuB;WAClC,GAAO;AAGd,SAFA,KAAK,OAAO,MAAM,iBAAiB,EAAE,QAAQ,iBAAiB,EAAE,EAAM,EACtE,MAAM,KAAK,SAAS,EACd;;;CAOV,MAAM,UAAyB;AAC7B,QAAM,KAAK,SAAS;;CAMtB,OAAO,GAAkB,GAAsB,GAA0B;AACnE,aAAK,eAAe,CAAC,KAAK,mBAI9B,KAAI;AAOF,GALA,KAAK,eAAe,GACpB,KAAK,iBAAiB,GACtB,KAAK,cAAc,GAGf,KAAK,kBAAkB,eACzB,KAAK,kBAAkB,YAAY,GAAO,GAAS,EAAK;WAEnD,GAAO;AACd,QAAK,OAAO,MAAM,kBAAkB,EAAE,QAAQ,iBAAiB,EAAE,EAAM;;;CAO3E,OAAO,GAAe,GAAsB;AACtC,aAAK,eAAe,CAAC,KAAK,mBAI9B,KAAI;AACF,GAAI,KAAK,kBAAkB,UACzB,KAAK,kBAAkB,OAAO,GAAO,EAAO;WAEvC,GAAO;AACd,QAAK,OAAO,MAAM,kBAAkB,EAAE,QAAQ,iBAAiB,EAAE,EAAM;;;CAO3E,kBAAuC;AACrC,SAAO;GACL,aAAa;IACX,MAAM;IACN,YAAY;KACV,WAAW;MAAE,MAAM;MAAW,SAAS;MAAM;KAC7C,cAAc;MAAE,MAAM;MAAW,SAAS;MAAM;KAChD,sBAAsB;MAAE,MAAM;MAAU,SAAS;MAAG;KACrD;IACF;GACD,eAAe;IACb,MAAM;IACN,YAAY;KACV,YAAY;MAAE,MAAM;MAAW,SAAS;MAAM;KAC9C,iBAAiB;MAAE,MAAM;MAAW,SAAS;MAAM;KACnD,oBAAoB;MAAE,MAAM;MAAW,SAAS;MAAM;KACvD;IACF;GACD,QAAQ;IACN,MAAM;IACN,YAAY;KACV,YAAY;MAAE,MAAM;MAAW,SAAS;MAAM;KAC9C,YAAY;MAAE,MAAM;MAAW,SAAS;MAAM;KAC9C,aAAa;MAAE,MAAM;MAAW,SAAS;MAAM;KAC/C,cAAc;MAAE,MAAM;MAAW,SAAS;MAAM;KACjD;IACF;GACF;;CAMH,aAAa,GAAmC;AAG9C,EAFA,OAAO,OAAO,KAAK,SAAS,EAAO,EAE/B,KAAK,mBAAmB,gBAC1B,KAAK,kBAAkB,aAAa,KAAK,QAAQ;;CAOrD,kBAIE;AACA,SAAO;GACL,OAAO,KAAK;GACZ,SAAS,KAAK;GACd,MAAM,KAAK;GACZ;;CAMH,qBAAmC;AAuCjC,OAAK,oBAAoB,wBAtCsB;GAC7C,cAAc,MAAgC;AAE5C,IAAI,KAAK,mBAAmB,mBAC1B,KAAK,kBAAkB,gBAAgB,EAAQ;;GAInD,oBAAoB,MAAgC;AAElD,IAAI,KAAK,mBAAmB,yBAC1B,KAAK,kBAAkB,sBAAsB,EAAQ;;GAIzD,mBAAmB,MAAgC;AAEjD,IAAI,KAAK,mBAAmB,wBAC1B,KAAK,kBAAkB,qBAAqB,EAAQ;;GAIxD,cAAc,MAAgC;AAE5C,IAAI,KAAK,mBAAmB,mBAC1B,KAAK,kBAAkB,gBAAgB,EAAQ;;GAInD,WAAW,MAAgC;AAEzC,IAAI,KAAK,mBAAmB,gBAC1B,KAAK,kBAAkB,aAAa,EAAQ;;GAGjD,CAG0D;;CAM7D,MAAc,UAAyB;AACrC,MAAI;AAoBF,GAlBI,KAAK,OAAO,KAAK,gBACnB,KAAK,IAAI,SAAS,EAClB,KAAK,MAAM,MACX,KAAK,oBAAoB,OAI3B,AAEE,KAAK,iBADL,KAAK,YAAY,YAAY,IACV,OAIrB,KAAK,oBAAoB,WAAW,EAGpC,KAAK,eAAe,MACpB,KAAK,iBAAiB,EAAE,EACxB,KAAK,cAAc,EAAE;WACd,GAAO;AACd,QAAK,OAAO,MAAM,mBAAmB,EAAE,QAAQ,iBAAiB,EAAE,EAAM;;;CAO5E,UAAgB;AAEd,EADA,KAAK,cAAc,IACnB,KAAK,SAAS;;;AAOlB,SAAgB,oBAAoB,IAA2B,EAAE,EAAiB;AAChF,QAAO,IAAI,cAAc,EAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EEpLnC,IAAM,IAAQ,GAQR,IAAO,GAEP,IAAe,IAAI,GAAE,EAErB,UAAuB;AAC3B,KAAK,QAAO;KAGR,KAAuB,MAAyB;AAEpD,OAAI,EAAM,QAAQ,OAAO,CAAC,EAAM,WAAW,CAAC,EAAM,UAAU,CAAC,EAAM,SAAS;IAE1E,IAAM,IAAS,EAAM;AACrB,QAAI,EAAO,YAAY,WAAW,EAAO,YAAY,WACnD;AAIF,IADA,EAAM,gBAAe,EACjB,EAAM,gBACR,GAAe,GAEf,EAAK,OAAM;;AAKf,GAAI,EAAM,QAAQ,YAAY,EAAM,kBAClC,EAAM,gBAAe,EACrB,GAAe;;SAanB,gBAAgB;AACd,YAAS,iBAAiB,WAAW,EAAmB;IACzD,EAED,kBAAkB;AAChB,YAAS,oBAAoB,WAAW,EAAmB;IAC5D,EAGD,EAAa,EACX,mBAnBwB,GAAkB,MAAmB;AAI7D,GAHA,EAAa,QAAQ,GAAG,EAAS,GAAG,KAGpC,iBAAiB;AACf,MAAa,QAAQ;MACpB,IAAI;KAcR,CAAA,8DAjPY,EAAA,iBAAA,WAAA,EAAX,mBA8IM,OA9IN,cA8IM;GA7IJ,mBAGM,OAAA,EAHD,OAAM,oBAAkB,EAAA,CAAA,EAAA,OAC3B,mBAAwE,MAAA;IAApE,IAAG;IAAkB,OAAM;MAAkB,sBAAkB,GAAA,EACnE,mBAAwG,UAAA;IAAhG,OAAM;IAAkB,cAAW;IAA4B,SAAO;MAAgB,IAAC,CAAA,CAAA;GAGjG,mBA+HM,OA/HN,cA+HM;;IAzEO,EAAA,iBAAA,WAAA,EAAX,mBA8BM,OA9BN,cA8BM,CAAA,GAAA,EAAA,OAAA,CAAA,kBAAA,w+BAAA,EAAA,CAAA,CAAA,CAAA,IAAA,mBAAA,IAAA,GAAA;IAGK,EAAA,mBAAA,WAAA,EAAX,mBA0BM,OA1BN,cA0BM,CAAA,GAAA,EAAA,OAAA,CAAA,kBAAA,4yBAAA,EAAA,CAAA,CAAA,CAAA,IAAA,mBAAA,IAAA,GAAA;IAGK,EAAA,gBAAgB,SAAM,KAAA,WAAA,EAAjC,mBAUM,OAVN,cAUM,CAAA,EAAA,OATJ,mBAA4C,MAAA,EAAxC,OAAM,wBAAsB,EAAC,UAAM,GAAA,EACvC,mBAOM,OAPN,cAOM,EAAA,UAAA,GAAA,EANJ,mBAKM,UAAA,MAAA,WALkB,EAAA,kBAAZ,oBAAZ,mBAKM,OAAA;KALoC,KAAK,EAAS;KAAK,OAAM;QACjE,mBAEM,OAFN,cAEM,EAAA,UAAA,GAAA,EADJ,mBAA4D,UAAA,MAAA,WAAzC,EAAS,OAAhB,oBAAZ,mBAA4D,OAAA,EAApB,QAAG,EAAA,gBAAK,EAAG,EAAA,EAAA,aAErD,mBAAkE,OAAlE,cAAkE,gBAA7B,EAAS,YAAW,EAAA,EAAA,CAAA,CAAA;;YAMjE,mBAMM,OAAA,EAND,OAAM,oBAAkB,EAAA,CAC3B,mBAIM,OAAA,EAJD,OAAM,iBAAe,EAAA;oBAAC,UAEzB;IAAA,mBAAY,OAAA,MAAP,IAAC;oBAAM,yBAEd;;QAKY,EAAA,gBAAA,WAAA,EAAhB,mBAMM,OANN,cAMM,CAAA,GAAA,EAAA,OAAA,CALJ,mBAIM,OAAA,EAJD,OAAM,qBAAmB,EAAA;mBAAC,UAE7B;GAAA,mBAAY,OAAA,MAAP,IAAC;mBAAM,2BAEd;2CAIF,mBAEM,OAFN,eAEM,gBADD,EAAA,MAAY,EAAA,EAAA,CAAA,EAAA,GAAA;;;;;EEhInB,IAAM,IAAiB,IAAI,GAAE,EACvB,IAAmB,IAAI,GAAE,EACzB,IAAoB,IAAI,GAAE,EAG1B,IAAe;GACnB,MAAM,EAAE;GACR,QAAQ,EAAE;GACV,KAAK,EAAE;GACT,EAEI,IAAoB,IACpB,IAA0B,EAAC,EAKzB,KAAY,GAAiB,IAA+B,EAAE,KAAK;GACvE,IAAM,EAAE,cAAW,UAAU,UAAU,IAAY,cAAc,WAAQ,GAAG,YAAY,IAAc,QAAS;AAG1G,KAAQ,MAAM,KAGnB,EAAa,GAAU,KAAK;IAAE;IAAS;IAAS,CAAA,EAG3C,KACH,iBAAiB,GAAc,EAAE,EAAK;KAOpC,UAAqB;AACzB,OAAoB;GAGpB,IAAM,IAAa;IAAC;IAAQ;IAAU;IAAM;AAE5C,QAAK,IAAM,KAAY,GAAY;IACjC,IAAM,IAAQ,EAAa;AAC3B,QAAI,EAAM,SAAS,GAAG;KACpB,IAAM,EAAE,YAAS,eAAY,EAAM,OAAO;AAC1C,OAAe,GAAS,EAAO;AAC/B;;;AAMJ,GADwB,EAAW,MAAK,MAAK,EAAa,GAAG,SAAS,EAAC,GAErE,iBAAiB,GAAc,EAAE,IAAG,GAEpC,IAAoB;KAOlB,KAAkB,GAAiB,MAAiC;GACxE,IAAM,EAAE,cAAW,UAAU,cAAW,cAAc,gBAAa,QAAS;AAO5E,OAJA,EAAc,SAAQ,MAAW,aAAa,EAAQ,CAAA,EACtD,IAAgB,EAAC,EAGb,MAAa,UAAU,MAAa,SAEtC;QADA,EAAe,QAAQ,GACnB,IAAa,GAAG;KAClB,IAAM,IAAU,OAAO,iBAAiB;AACtC,QAAe,QAAQ;QACtB,EAAU;AACb,OAAc,KAAK,EAAO;;cAEnB,MAAa,cAEtB;QADA,EAAkB,QAAQ,GACtB,IAAa,GAAG;KAClB,IAAM,IAAU,OAAO,iBAAiB;AACtC,QAAkB,QAAQ;QACzB,EAAU;AACb,OAAc,KAAK,EAAO;;cAG5B,EAAiB,QAAQ,GACrB,IAAa,GAAG;IAClB,IAAM,IAAU,OAAO,iBAAiB;AACtC,OAAiB,QAAQ;OACxB,EAAU;AACb,MAAc,KAAK,EAAO;;KAQ1B,KAAqB,GAAkB,GAAqB,GAAuB,MAAyB;GAChH,IAAM,IAAW,OAAO,IAAW,EAAE,WAAW,IAAc,KACxD,IAAS,IAAc,KAAK,MAAgB,IAC5C,IAAQ,IAAY,KAAK,MAAc;AAE7C,KAAS,GAAG,IAAW,IAAS,KAAS;IACvC,UAAU;IACV,UAAU;IACV,YAAY;IACb,CAAA;KAMG,KAAqB,GAAuB,MAAuB;GACvE,IAAM,IACJ,MAAkB,IACd,sBACA,MAAkB,IAChB,mBACA,MAAkB,IAChB,sBACA,GAAG,EAAc,MAAM,EAAW;AAE5C,KAAS,GAAS;IAChB,UAAU;IACV,UAAU;IACV,YAAY;IACb,CAAA;KAMG,KAAoB,GAAmB,MAA+D;AAC1G,OAAI,KAAY,GAAU;IACxB,IAAM,IAAW,OAAO,EAAS,MAAM,EAAE,WAAW,EAAS,SAAS,KAChE,IAAS,EAAS,QAAQ,KAAK,EAAS,UAAU;AACxD,MAAS,WAAW,IAAW,KAAU;KACvC,UAAU;KACV,UAAU;KACV,YAAY;KACb,CAAA;UACS,KACV,EAAS,oBAAoB;IAC3B,UAAU;IACV,UAAU;IACV,YAAY;IACb,CAAA;KAOC,KAAmB,GAAqB,MAAuC;GAEnF,IAAM,IAAU,MAAc,SAAS,GAAG,EAAY,oBAAoB,GAAG,EAAY,UADnE,MAAc,QAAQ,cAAc,MAAc,SAAS,eAAe;AAGhG,KAAS,GAAS;IAChB,UAAU;IACV,UAAU;IACV,YAAY;IACb,CAAA;KAMG,KAAqB,GAAuB,GAAmB,MAAwB;AAC3F,GACE,EADE,MAAkB,IACX,oCAAoC,EAAU,SAOrD,GAAG,EAAc,SAAS,IAAgB,IAAI,MAAM,GAAG,oBAAoB,EAAY,MAAM,EAAU,QAP1C;IAC7D,UAAU;IACV,UAAU;IACV,YAAY;IACb,CASD;KAOE,KAAiB,MAAoB;AACzC,KAAS,UAAU,KAAW;IAC5B,UAAU;IACV,UAAU;IACV,YAAY;IACb,CAAA;KAMG,KAAmB,MAAoB;AAC3C,KAAS,GAAS;IAChB,UAAU;IACV,UAAU;IACV,YAAY;IACb,CAAA;KAMG,WAAiB;AAarB,GAZA,EAAe,QAAQ,IACvB,EAAiB,QAAQ,IACzB,EAAkB,QAAQ,IAE1B,EAAc,SAAQ,MAAW,aAAa,EAAQ,CAAA,EACtD,IAAgB,EAAC,EAGjB,OAAO,KAAK,EAAa,CAAC,SAAQ,MAAO;AACvC,MAAa,KAAoC,EAAC;KACnD,EAED,IAAoB;;SAGtB,kBAAkB;AAChB,OAAS;IACV,EAGD,EAAa;GACX;GACA;GACA;GACA;GACA;GACA;GACA;GACA;GACA;GACD,CAAA;GA/QC,mBAEM,OAAA;IAFD,KAAI;IAAgB,OAAM;IAAU,aAAU;IAAY,eAAY;IAAO,MAAK;sBAClF,EAAA,MAAc,EAAA,IAAA;GAInB,mBAEM,OAAA;IAFD,KAAI;IAAkB,OAAM;IAAU,aAAU;IAAS,eAAY;IAAQ,MAAK;sBAClF,EAAA,MAAgB,EAAA,IAAA;GAIrB,mBAEM,OAAA;IAFD,KAAI;IAAmB,OAAM;IAAU,aAAU;IAAS,eAAY;IAAO,MAAK;sBAClF,EAAA,MAAiB,EAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EEJxB,IAAM,IAAQ,GAeR,IAAO,GAKP,IAAO,IAAI,EAAM,QAAO,EAC1B,IAA8C;AAGlD,cACQ,EAAM,UACX,MAAa;AAEZ,GADA,EAAK,QAAQ,GACT,IACF,GAAW,GAEX,GAAW;IAGjB;EAGA,SAAS,IAAa;AAEpB,GADA,GAAW,EACP,EAAM,WAAW,MACnB,IAAQ,iBAAiB;AAEvB,IADA,EAAK,QAAQ,IACb,EAAK,QAAO;MACX,EAAM,SAAQ;;EAIrB,SAAS,IAAa;AACpB,GAEE,OADA,aAAa,EAAK,EACV;;EAIZ,SAAS,IAAc;AAGrB,GAFA,GAAW,EACX,EAAK,QAAQ,IACb,EAAK,QAAO;;AAGd,kBAAgB;AACd,GAAI,EAAM,WACR,GAAW;IAEd;EAGD,IAAM,IAAc;GAClB,MAAM;GACN,MAAM;GACN,OAAO;GACP,SAAS;GACX;iCAIE,YAkFa,YAAA,EAlFD,MAAK,eAAa,EAAA;0BAiFtB,CA/EE,EAAA,SAAA,WAAA,EADR,mBAgFM,OAAA;;IA9EJ,OAAK,eAAA,CAAC,wGACE,EAAY,EAAA,MAAI,CAAA;IACxB,MAAK;IACJ,aAAW,EAAA,SAAI,UAAA,cAAA;;IAGhB,mBAgDM,OAhDN,cAgDM,CA9CI,EAAA,SAAI,UAAA,WAAA,EADZ,mBAWM,OAXN,cAWM,CAAA,GAAA,EAAA,OAAA;KAHJ,mBAAwC,UAAA;MAAhC,IAAG;MAAK,IAAG;MAAK,GAAE;;KAC1B,mBAA2B,QAAA,EAArB,GAAE,aAAW,EAAA,MAAA,GAAA;KACnB,mBAA2B,QAAA,EAArB,GAAE,aAAW,EAAA,MAAA,GAAA;WAGR,EAAA,SAAI,UAAA,WAAA,EADjB,mBAWM,OAXN,cAWM,CAAA,GAAA,EAAA,OAAA;KAHJ,mBAA0F,QAAA,EAApF,GAAE,4EAA0E,EAAA,MAAA,GAAA;KAClF,mBAAyB,QAAA,EAAnB,GAAE,WAAS,EAAA,MAAA,GAAA;KACjB,mBAA4B,QAAA,EAAtB,GAAE,cAAY,EAAA,MAAA,GAAA;WAGT,EAAA,SAAI,WAAA,WAAA,EADjB,mBAWM,OAXN,cAWM,CAAA,GAAA,EAAA,OAAA;KAHJ,mBAAwC,UAAA;MAAhC,IAAG;MAAK,IAAG;MAAK,GAAE;;KAC1B,mBAA2B,QAAA,EAArB,GAAE,aAAW,EAAA,MAAA,GAAA;KACnB,mBAA0B,QAAA,EAApB,GAAE,YAAU,EAAA,MAAA,GAAA;WAGP,EAAA,SAAI,aAAA,WAAA,EADjB,mBAUM,OAVN,cAUM,CAAA,GAAA,EAAA,OAAA,CAFJ,mBAAoD,QAAA,EAA9C,GAAE,sCAAoC,EAAA,MAAA,GAAA,EAC5C,mBAAgC,QAAA,EAA1B,GAAE,kBAAgB,EAAA,MAAA,GAAA,CAAA,CAAA,CAAA,IAAA,mBAAA,IAAA,GAAA,CAAA,CAAA;IAK5B,mBAEM,OAFN,cAEM,gBADD,EAAA,QAAO,EAAA,EAAA;IAIZ,mBAeS,UAAA;KAdP,OAAM;KACN,cAAW;KACV,SAAO;qBAER,mBASM,OAAA;KARJ,OAAM;KACN,MAAK;KACL,QAAO;KACP,gBAAa;KACb,SAAQ;QAER,mBAA4B,QAAA,EAAtB,GAAE,cAAY,CAAA,EACpB,mBAA4B,QAAA,EAAtB,GAAE,cAAY,CAAA,CAAA,EAAA,GAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;EErK9B,IAAM,IAAQ,GACR,IAAS,aAAa,EAAE,QAAQ,aAAa,CAAA,EAE7C,IAAU,IAAoB,EAAE,CAAA,EAChC,IAAQ,IAAI,EAAC,EACb,IAAQ,IAAI,EAAC,EACb,IAAW,IAAI,EAAC,EAChB,IAAW,IAAiD,KAAI,EAChE,IAAa,IAAuB,EAAE,CAAA;EAE5C,SAAS,IAAiB;AACxB,OAAI;AACF,MAAQ,QAAS,EAAM,IAAI,UAAU,EAAE,QAAQ,WAAW,EAAE;YACrD,GAAK;AACZ,MAAO,KAAK,sCAAsC,EAAG;;;AAwBzD,EApBA,gBAAgB;AAEd,GADA,GAAe,EACX,EAAM,IAAI,OACZ,EAAW,MAAM,KAAK,EAAM,IAAI,GAAG,kBAAiB,MAAM;AAAE,MAAQ,QAAQ,KAAM,EAAE;KAAG,CAAA,EACvF,EAAW,MAAM,KACf,EAAM,IAAI,GAAG,2BAA0B,MAAW;AAIhD,IAHA,EAAM,QAAQ,GAAS,iBAAiB,GACxC,EAAM,QAAQ,GAAS,kBAAkB,GACzC,EAAS,QAAQ,KAAK,MAAM,GAAS,kBAAkB,EAAC,EACxD,EAAS,QAAQ;KAClB,CACH,EACA,EAAW,MAAM,KACf,EAAM,IAAI,GAAG,oBAAmB,MAAW;AACzC,MAAS,QAAQ,IAAU;KAAE,WAAW,EAAQ,aAAa;KAAG,OAAO,EAAQ,SAAS;KAAG,GAAG;KAC/F,CACH;IAEH,EAED,kBAAkB;AAQhB,GAPA,EAAW,MAAM,SAAQ,MAAO;AAC9B,QAAI;AACF,QAAI;aACG,GAAK;AACZ,OAAO,KAAK,oCAAoC,EAAG;;KAEtD,EACD,EAAW,QAAQ,EAAC;IACrB;EAED,SAAS,IAAW;AAClB,KAAM,IAAI,aAAa,EAAE,SAAS,EAAE,EAAE,CAAA;;EAGxC,SAAS,IAAe;AACtB,OAAI;AACF,MAAM,IAAI,KAAK,iBAAiB,KAAI;YAC7B,GAAK;AACZ,MAAO,KAAK,2BAA2B,EAAG;;AAE5C,KAAS,QAAQ;;EAGnB,SAAS,EAAa,GAAiB;GACrC,IAAM,IAAO,EAAQ,MAAM,QAAO,MAAK,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,aAAa,EAAE,YAAY,EAAE,UAAU,EAAE,OAAM;AACjH,KAAM,IAAI,aAAa,EAAE,SAAS,GAAM,CAAA;;EAG1C,SAAS,EAAW,GAAiB;AACnC,OAAI;AACF,MAAM,IAAI,KAAK,sBAAsB,EAAE,OAAO,EAAE,OAAO,CAAA;YAChD,GAAK;AACZ,MAAO,KAAK,2CAA2C,EAAG;;;EAI9D,SAAS,EAAQ,GAAyB;GACxC,IAAM,IAA+B;IACnC,QAAQ;IACR,UAAU;IACV,YAAY;IACZ,UAAU;IACV,IAAI;IACJ,KAAK;IACL,IAAI;IACJ,KAAK;IACL,SAAS;IACT,IAAI;IACJ,OAAO;IACP,OAAO;IACP,WAAW;IACb,EACM,IAAI,MAAM,QAAQ,EAAE,MAAK,GAC1B,EAAE,aAAa,YAAY,GAAG,EAAE,MAAM,GAAG,GAAG,EAAE,MAAM,OAAO,GAAI,EAAE,MAAgB,OAAO,UACzF,OAAO,EAAE,MAAK;AAClB,UAAO,GAAG,EAAE,MAAM,GAAG,EAAM,EAAE,aAAa,EAAE,SAAS,GAAG;;EAG1D,IAAM,IAAa,gBAAgB,EAAQ,OAAO,UAAU,KAAK,EAAC;mBAI3B,EAAA,SAAc,EAAA,SAAA,WAAA,EAAnD,mBAwBM,OAxBN,cAwBM,CAvBJ,mBAsBM,OAtBN,cAsBM,CArBJ,mBAQM,OARN,cAQM,EAAA,UAAA,GAAA,EAPJ,mBAKW,UAAA,MAAA,WALW,EAAA,QAAL,oBACf,mBAGO,QAAA;QAJ4B,EAAQ,EAAC;GACtC,OAAM;GAA2J,UAAK,MAAE,EAAW,EAAC;MACxL,mBAA4D,QAA5D,cAA4D,gBAApB,EAAQ,EAAC,CAAA,EAAA,EAAA,EACjD,mBAAkH,UAAA;GAA1G,OAAM;GAA6D,SAAK,eAAA,MAAO,EAAa,EAAC,EAAA,CAAA,OAAA,CAAA;KAAG,KAAC,GAAA,aAAA,CAAA,EAAA,GAAA,aAAA,WAG/F,EAAA,SAAA,WAAA,EAAd,mBAAuH,UAAA;;GAA7F,OAAM;GAAoD,SAAO;KAAU,YAAS,IAAA,mBAAA,IAAA,GAAA,CAAA,CAAA,EAEhH,mBAWM,OAXN,cAWM,CAVY,EAAA,SAAA,WAAA,EAAhB,mBAA6H,UAAA,EAAA,KAAA,GAAA,EAAA,CAAA,gBAAtG,aAAQ,gBAAG,EAAA,SAAS,EAAA,MAAK,GAAG,QAAG,gBAAG,EAAA,MAAK,EAAA,EAAA,EAAe,EAAA,SAAA,WAAA,EAAZ,mBAAiD,QAAA,cAA3B,OAAE,gBAAG,EAAA,MAAQ,GAAG,QAAI,EAAA,IAAA,mBAAA,IAAA,GAAA,CAAA,EAAA,GAAA,IAAA,mBAAA,IAAA,GAAA,EAC3F,EAAA,SAAY,EAAA,MAAS,SAAA,WAAA,EACnC,mBAMM,OANN,cAMM;GALJ,mBAEM,OAFN,eAEM,CADJ,mBAAuJ,OAAA;IAAlJ,OAAM;IAAsC,OAAK,eAAA,EAAA,OAAW,KAAK,IAAG,KAAM,KAAK,MAAO,EAAA,MAAS,YAAY,EAAA,MAAS,QAAK,IAAA,CAAA,GAAA,KAAA,CAAA;;GAEhI,mBAA0F,QAAA,MAAA,gBAAjF,KAAK,IAAG,KAAM,KAAK,MAAO,EAAA,MAAS,YAAY,EAAA,MAAS,QAAK,IAAA,CAAA,CAAA,GAAY,KAAC,EAAA;GACnF,mBAAoK,UAAA;IAA5J,OAAM;IAAkH,SAAO;MAAc,SAAM;0DAMrK,mBAAkB,OAAA,cAAA;;;AChIpB,MAAa,mBAAmB;CAC9B;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EEWD,IAAM,IAAQ,GAiBR,IAAO,GAmBP,IAAe,gBAAgB;GACnC,GAAG,EAAM;GACT,UAAU,EAAM;GACjB,EAAC,EAGI,IAAS,aAAa,WAAU,EAEhC,IAAY,aAAa,EAAa,OAAO,EAAM,QAAO,EAC1D,EAAE,WAAQ,GAGV,IAAgB,KAAiB,EACjC,IAAoB,KAAiB,EACrC,IAAe,KAAiB,EAChC,IAAuB,KAA4C,EACnE,IAA4B,KAAiD,EAC7E,IAAiC,EAAC,EAGlC,IAAsB,IAAI,GAAK,EAC/B,IAAgB,IAAmB,KAAI,EACvC,IAAgB,IAAI,EAAM,sBAAqB,EAG/C,IAAe,IAAI,GAAK,EACxB,IAAe,IAAI,GAAE,EACrB,IAAY,IAA2C,OAAM,EAE7D,IAAuB,IAAiB,IAAI,KAAK,EAAM,WAAW,EAAE,EAAE,KAAI,MAAK,EAAE,KAAK,CAAC,CAAA,EAIvF,IAAuB,IAAmB,KAAI,EAE9C,KAAuB,MAAoC;GAC/D,IAAI,IAAsB;AAC1B,QAAK,IAAM,KAAK,KAAQ,EAAE,CACxB,KAAI,mBAAmB,EAAE,EAAE;IACzB,IAAM,IAAK,EAAU;AACrB,QAAI,MAAM,QAAS,QAAO;AAC1B,IAAI,MAAM,eAAY,MAAe;;AAGzC,UAAO;KAIH,IAAiB,gBAEd;GACL,QAFa,OAAO,EAAM,UAAW,WAAW,GAAG,EAAM,OAAO,MAAM,EAAM;GAG5E,UAAU;GACV,UAAU;GACZ,EACD,EAEK,IAAmB,eACvB;GACE;GACA;GACA;GAEA,eAAe,EAAM;GACrB,EAAM;GACR,CACG,OAAO,QAAO,CACd,KAAK,IAAG,CACb,EAEM,IAAkB,eAChB,CAAC,EAAU,QAAQ,SAAS,CAAC,EAAU,MAAM,SAAS,CAAC,EAAc,MAC7E,EAGM,IAA+C;GAEnD,kBAAkB,GAAmC,MAAoC;IAEvF,IAAM,IAAmB,EAAI,6BAA4B;AACzD,IAAI,GAAkB,UAAU,uBAC9B,EAAiB,SAAS,oBAAoB,gBAAgB,GAAa,EAAM;;GAKrF,YAAY,MAAqC;IAC/C,IAAM,IAAmB,EAAI,6BAA4B;AACzD,IAAI,GAAkB,UAAU,uBAC9B,EAAiB,SAAS,oBAAoB,UAAU,EAAQ;;GAKpE,gBAAgB,GAAqB,MAAgC;IACnE,IAAM,IAAmB,EAAI,6BAA4B;AACzD,IAAI,GAAkB,UAAU,uBAC9B,EAAiB,SAAS,oBAAoB,cAAc,GAAI,EAAQ;;GAK5E,gBAAgB,OAAO,GAAqB,MAA2B;IACrE,IAAM,IAAmB,EAAI,6BAA4B;AAIzD,WAHI,GAAkB,UAAU,sBACvB,MAAM,EAAiB,SAAS,oBAAoB,eAAe,GAAI,EAAI,GAE7E;;GAIT,uBAAmD,MAAyD;IAE1G,IAAM,IAAmB,EAAI,6BAA4B;AACzD,IAAI,GAAkB,UAAU,uBAC9B,EAAiB,SAAS,oBAAoB,qBAAqB,EAAI;;GAK3E,uBAAuB,MAA4C;IACjE,IAAM,IAAmB,EAAI,6BAA4B;AACzD,IAAI,GAAkB,UAAU,uBAC9B,EAAiB,SAAS,oBAAoB,uBAAuB,EAAQ;;GAKjF,eAAe;IACb,IAAM,IAAmB,EAAI,6BAA4B;AACzD,IAAI,GAAkB,UAAU,uBAC9B,EAAiB,SAAS,oBAAoB,WAAU;;GAK5D,OAAmC,GAAc,MAA2B;AAI1E,IAF8C,iBAE1B,SAAS,EAAU,GAGrC,EAAK,GAAW,EAAO,GAGvB,EAAI,KAAK,GAAW,EAAO;;GAK/B,wBAAwB,MAA2C;IACjE,IAAM,IAAmB,EAAI,6BAA4B;AACzD,IAAI,GAAkB,UAAU,uBAC9B,EAAiB,SAAS,oBAAoB,wBAAwB,EAAS;;GAKnF,eAAe;IACb,IAAM,IAAmB,EAAI,6BAA4B;AACzD,IAAI,GAAkB,UAAU,uBAC9B,EAAiB,SAAS,oBAAoB,WAAU;;GAG9D;AAKA,EAFA,QAAQ,aAAa,EAAS,EAC9B,QAAQ,uBAAuB,EAAmB,EAClD,QAAQ,cAAc,EAAG;EAOzB,IAAM,IAAqB,YAAY;AACrC,OAAI;AACF,QAAI,CAAC,EAAa,MAChB,OAAU,MAAM,kCAAiC;AAenD,QAZA,EAAc,QAAQ,MAIlB,EADuB,EAAI,yBAAyB,IAAI,EAAC,EACrC,SAAS,QAAQ,IAAI,EAAI,qBAC/C,EAAO,MAAM,6BAA4B,EACzC,EAAI,iBAAiB,UAAU,MAA8B,oBAAoB,EAAQ,CAAA,GAMvF,CAFY,MAAM,EAAI,qBAAqB,EAAa,MAAK,CAG/D,OAAU,MAAM,yCAAwC;AAK1D,WAFA,EAAoB,QAAQ,IAC5B,EAAO,MAAM,qCAAqC,EAAM,SAAS,YAAW,EACrE;YACA,GAAO;IACd,IAAM,IAAe,aAAiB,QAAQ,EAAM,UAAU;AAU9D,WATA,EAAc,QAAQ,GACtB,EAAO,MAAM,mCAAmC,EAAE,QAAQ,YAAY,EAAE,EAAK,EAE7E,EAAK,kBAAkB;KACrB,OAAO,aAAiB,QAAQ,IAAY,MAAM,EAAa;KAC/D,SAAS;KACT,UAAU,EAAM;KACjB,CAAA,EAEM;;KAOL,IAAiB,OAAO,MAAyB;AACrD,OAAI,CAAC,EAAoB,MAEvB,QADA,EAAO,KAAK,kDAAiD,EACtD;AAGT,OAAI;IACF,IAAM,IAAmB,EAAI,eAAe,IAAI,WAC1C,IAAU,MAAM,EAAI,cAAc,EAAY;AAUpD,WARI,MACF,EAAK,oBAAoB;KACvB,MAAM;KACN;KACD,CAAA,EACD,EAAO,MAAM,kBAAkB,EAAiB,QAAQ,EAAa,YAAW,GAG3E;YACA,GAAO;AAOd,WANA,EAAO,MAAM,iCAAiC,EAAa,KAAK,EAAE,QAAQ,YAAY,EAAE,EAAK,EAC7F,EAAK,kBAAkB;KACrB,OAAO,aAAiB,QAAQ,IAAQ,gBAAI,MAAM,yBAAyB;KAC3E,SAAS;KACT,UAAU;KACX,CAAA,EACM;;KAKL,UAA4B;AAChC,KAAc,QAAQ;KAGlB,UAA6B;AACjC,KAAc,QAAQ;KAIlB,IAA0B,eAAe;GAC7C,IAAM,IAAgB,EAAI,aAAa,CAAC,KAAI,MAAK,EAAE,KAAI;AACvD,UAAO;IACL,SAAS,EAAc,SAAS,oBAAoB;IACpD,WAAW,EAAc,SAAS,iBAAiB;IACrD;IACD,EAGK,UAAsC;AAC1C,OAAI,CAAC,EAA0B,MAAO;GAEtC,IAAM,IAAY,EAA0B;AAkE5C,GA/DA,EAAI,KAAK,sBAAsB,MAAwE;AACrG,IAAI,EAAQ,UAAU,QAAQ,EAAQ,aAAa,QAGjD,EAAU,kBAAkB,GAAG,GAAG,KAAA,GAAW,EAAQ,SAAQ;KAEhE,EAGD,EAAI,KAAK,eAAe,MAA6G;AACnI,QAAI,EAAQ,cAAc;KACxB,IAAM,IAAY,EAAU,KAAK,MAAM,YAAY;AACnD,OAAU,kBAAkB,EAAQ,aAAa,QAAQ,EAAS;;KAErE,EAGD,EAAI,KAAK,oBAAoB,MAA4E;IAEvG,IAAM,IAAW,EAAU,KAAK,MAAM,YAAY,WAAU,OAAQ,EAAI,MAAM,EAAI,WAAW,EAAQ,MAAK,EACpG,IAAc,EAAU,QAAQ,MAAM,WAAU,MAAO,EAAI,UAAU,EAAQ,SAAQ,EACrF,IAAS,EAAU,QAAQ,MAAM,MAAK,MAAO,EAAI,UAAU,EAAQ,SAAQ;AAEjF,IAAI,KAAY,KAAK,KAAe,KAClC,EAAU,iBAAiB,IAAM;KAC/B,KAAK;KACL,QAAQ;KACR,OAAO,GAAQ;KAChB,CAAA;KAEJ,EAED,EAAI,KAAK,4BAA4B;AACnC,MAAU,iBAAiB,GAAK;KACjC,EAED,EAAI,KAAK,0BAA0B;AACjC,MAAU,iBAAiB,GAAK;KACjC,EAGD,EAAI,KAAK,sBAAsB,MAA+C;AAC5E,QAAI,CAAC,KAAU,CAAC,EAAO,UAAU,EAAO,OAAO,WAAW,GAAG;AAC3D,OAAU,gBAAgB,eAAe,OAAM;AAC/C;;IAEF,IAAM,CAAC,KAAS,EAAO;AACvB,QAAI,CAAC,EAAO;IACZ,IAAM,IAAS,EAAU,QAAQ,MAAM,MAAK,MAAK,EAAE,UAAU,EAAM,MAAK;AACxE,IAAI,KACF,EAAU,gBAAgB,EAAO,OAAO,EAAM,UAAS;KAE1D,EAGD,EAAI,KAAK,kBAAkB,MAA4B;IACrD,IAAM,IAAY,EAAM,KAAK,QACvB,IAAc,EAAU,KAAK,MAAM,YAAY,QAC/C,IAAgB,EAAQ,UAAU;AACxC,MAAU,kBAAkB,GAAe,GAAW,EAAW;KAClE,EAGD,EAAI,KAAK,iBAAiB,MAA8B;AACtD,MAAU,cAAc,iBAAiB,EAAQ,MAAM,UAAS;KACjE;KAIG,IAAuB,EAAI,KAAK,wBAAuB,MAAW;AACtE,KAAK,uBAAuB,EAAO;IACpC;AACD,EAAI,KACF,EAAY,KAAK,EAAoB;EAGvC,IAAM,IAAkB,EAAI,KAAK,kBAAiB,MAAW;AAC3D,KAAK,iBAAiB,EAAO;IAC9B;AACD,EAAI,KACF,EAAY,KAAK,EAAe;EAIlC,IAAM,IAAe,EAAI,KAAK,eAAc,MAAW;AACrD,KAAK,cAAc,EAAc;IAClC;AACD,EAAI,KAAc,EAAY,KAAK,EAAY;EAE/C,IAAM,IAAc,EAAI,KAAK,cAAa,MAAW;AACnD,KAAK,aAAa,EAAc;IACjC;AACD,EAAI,KAAa,EAAY,KAAK,EAAW;EAE7C,IAAM,IAAkB,EAAI,KAAK,sBAAqB,MAAW;AAC/D,KAAK,qBAAqB,EAAc;IACzC;AACD,EAAI,KAAiB,EAAY,KAAK,EAAe;EAErD,IAAM,KAAoB,EAAI,KAAK,qBAAoB,MAAW;AAChE,KAAK,oBAAoB,EAAc;IACxC;AACD,EAAI,MAAmB,EAAY,KAAK,GAAiB;EAEzD,IAAM,IAAe,EAAI,KAAK,eAAc,MAAW;AACrD,KAAK,cAAc,EAAc;IAClC;AACD,EAAI,KAAc,EAAY,KAAK,EAAY;EAE/C,IAAM,KAAqB,EAAI,KAAK,qBAAoB,MAAW;AACjE,KAAK,oBAAoB,EAAc;IACxC;AACD,EAAI,MAAoB,EAAY,KAAK,GAAkB;EAE3D,IAAM,IAAoB,EAAI,KAAK,oBAAmB,MAAW;AAC/D,KAAK,mBAAmB,EAAc;IACvC;AACD,EAAI,KAAmB,EAAY,KAAK,EAAiB;EAEzD,IAAM,KAAqB,EAAI,KAAK,sBAAqB,MAAW;AAClE,KAAK,qBAAqB,EAAc;IACzC;AACD,EAAI,MAAoB,EAAY,KAAK,GAAkB;EAE3D,IAAM,KAAkB,EAAI,KAAK,kBAAiB,MAAW;AAC3D,KAAK,iBAAiB,EAAc;IACrC;AACD,EAAI,MAAiB,EAAY,KAAK,GAAe;EAErD,IAAM,IAAY,EAAI,KAAK,WAAU,MAAW;AAC9C,KAAK,UAAU,EAAc;IAC9B;AACD,EAAI,KAAW,EAAY,KAAK,EAAS;EAGzC,IAAM,IAAuB,EAAI,KAAK,gCAAgC,MAAqD;AACzH,KAAU,EAAQ,SAAS,OAAM;IAClC;AACD,EAAI,KAAsB,EAAY,KAAK,EAAoB;EAG/D,IAAM,IAAsB,EAAI,KAAK,sBAAsB,MAAgG;AACzJ,KAAU,EAAQ,SAAS,EAAQ,KAAI;IACxC;AACD,EAAI,KAAqB,EAAY,KAAK,EAAmB;EAG7D,IAAM,KAAa,GAAiB,IAA8C,WAAW;AAG3F,GAFA,EAAa,QAAQ,GACrB,EAAU,QAAQ,GAClB,EAAa,QAAQ;KAGjB,WAAyB;AAC7B,KAAa,QAAQ;;AA4FvB,EAtFA,UAAU,YAAY;AAsBpB,GApBI,EAAM,KAAK,SAAS,KACtB,EAAI,QAAQ,EAAM,KAAI,EAGpB,EAAM,QAAQ,SAAS,KACzB,EAAI,WAAW,EAAM,QAAO,EAI9B,EAAU,WAAW,WAAW,EAAM,QAAO,EAG7C,MAAM,UAAU,EAChB,MAAM,GAAmB,EAGzB,MAAM,UAAU,EAChB,GAA8B,EAG9B,EAAqB,QAAQ,EAAoB,EAAU,QAAQ,MAAY;IAChF,EAGD,YACQ,EAAM,OACZ,MAAW;AACT,KAAI,QAAQ,EAAO;IAEvB,EAEA,YACQ,EAAM,UACZ,MAAc;AACZ,KAAI,WAAW,EAAU;IAE7B,EAGA,YACQ,EAAU,QAAQ,QACvB,MAAqB;GACpB,IAAM,IAAW,EAAoB,EAAuB;AAC5D,GAAI,MAAa,EAAqB,UAElC,EAAY,kBAAiB,EAE/B,EAAoB,kCAAkB,IAAI,KAAK,EAAE,eAAc,EAE3D,MAAa,UACb,EAAY,mBAAmB,SAAQ,GAChC,MAAa,cACpB,EAAY,mBAAmB,QAAO,EAE1C,EAAqB,QAAQ;IAGnC,EAEA,YACQ,EAAM,UACZ,MAAc;AACZ,KAAU,WAAW,WAAW,EAAU;IAE9C,EAEA,YACQ,EAAa,QACnB,MAAa;AACX,KAAI,aAAa,EAAS;IAE9B,EAGA,YACQ,EAAM,UACZ,OAAO,GAAa,MAAgB;AAClC,GAAI,MAAgB,KAAe,EAAoB,SACrD,MAAM,EAAe,EAAW;IAGtC,EAGA,MACE,OAAO,EAAU,KAAK,aAAa,EAAU,QAAQ,MAAM,QACrD;AAEJ,KAAO,MAAM,qDAAoD;KAEnE,EAAE,MAAM,IAAM,CAChB;EAGA,IAAI,IAAwC;SAE5C,gBAAgB;AACd,GAAI,EAAkB,UACpB,IAAiB,IAAI,gBAAe,MAAW;AAC7C,SAAK,IAAM,KAAS,GAAS;KAC3B,IAAM,EAAE,UAAO,cAAW,EAAM;AAChC,OAAI,iBAAiB,GAAO,EAAM;;KAErC,EAED,EAAe,QAAQ,EAAkB,MAAK;IAEjD,EAGD,kBAAkB;AAchB,GAbI,KACF,EAAe,YAAW,EAK5B,EAAY,SAAQ,MAAO;AACzB,QAAI;AACF,QAAI;aACG,GAAO;AACd,OAAO,KAAK,8BAA8B,EAAK;;KAElD,EACD,EAAY,SAAS;IACtB,EAGD,YACQ,EAAM,SACZ,OAAO,MAAS;GACd,IAAM,IAAY,IAAI,KAAK,KAAQ,EAAE,EAAE,KAAI,MAAK,EAAE,KAAK,CAAA,EACjD,IAAU,EAAqB;AAGrC,QAAK,IAAM,KAAQ,EACjB,KAAI,CAAC,EAAU,IAAI,EAAK,CACtB,KAAI;AACF,UAAM,EAAI,eAAe,EAAI;YACtB,GAAO;AACd,MAAO,KAAK,2BAA2B,EAAK,IAAI,EAAK;;GAM3D,IAAM,IAAa,IAAI,KAAK,KAAQ,EAAE,EAAE,KAAI,MAAK,CAAC,EAAE,MAAM,EAAE,CAAC,CAAA;AAC7D,QAAK,IAAM,KAAQ,EACjB,KAAI,CAAC,EAAQ,IAAI,EAAK,EAAE;IACtB,IAAM,IAAS,EAAW,IAAI,EAAI;AAClC,QAAI,EACF,KAAI;AACF,WAAM,EAAI,aAAa,EAAM;aACtB,GAAO;AACd,OAAO,KAAK,yBAAyB,EAAK,IAAI,EAAK;;;AAU3D,OAJA,EAAqB,QAAQ,GAIzB,EAAM,WAAW,EAAM,QAAQ,SAAS,EAC1C,KAAI;AACF,MAAI,WAAW,EAAM,QAAO;YACrB,GAAO;AACd,MAAO,KAAK,mDAAmD,EAAK;;KAI1E,EAAE,MAAM,IAAM,CAChB,EAGA,EAAa;GACX,gBAAA;GACA;GACA,6BAA6B,EAAI,yBAAyB,IAAI,EAAE;GAChE,0BAA0B,EAAI,eAAe,IAAI;GACjD,iBAAiB,EAAI,4BAA4B;GACjD;GACA;GACD,CAAA,0BAIC,mBAmFM,OAAA;YAlFA;GAAJ,KAAI;GACH,OAAK,eAAE,EAAA,MAAgB;GACvB,OAAK,eAAE,EAAA,MAAc;GACtB,MAAK;GACJ,cAAU,kBAAoB,MAAA,EAAS,CAAC,KAAK,MAAM,YAAY,OAAM,cAAe,EAAM,SAAQ;GAClG,iBAAe,MAAA,EAAS,CAAC,KAAK,MAAM,YAAY;GAChD,iBAAe,MAAA,EAAS,CAAC,QAAQ,MAAM;GACvC,iBAAe,EAAM;;GAGX,MAAA,EAAS,CAAC,QAAQ,SAAA,WAAA,EAA7B,mBAKM,OALN,cAKM,CAAA,GAAA,EAAA,OAAA,CAJJ,mBAGM,OAAA,EAHD,OAAM,+BAA6B,EAAA,CACtC,mBAA8G,OAAA,EAAzG,OAAM,8FAA4F,CAAA,EACvG,mBAA2D,QAAA,EAArD,OAAM,+BAA6B,EAAC,aAAU,CAAA,EAAA,GAAA,CAAA,CAAA,CAAA,IAKxC,MAAA,EAAS,CAAC,MAAM,SAAA,WAAA,EAAhC,mBAKM,OALN,cAKM,CAJJ,mBAGM,OAHN,cAGM,CAAA,EAAA,OAFJ,mBAA6D,OAAA,EAAxD,OAAM,gCAA8B,EAAC,iBAAa,GAAA,EACvD,mBAAoE,OAApE,cAAoE,gBAA9B,MAAA,EAAS,CAAC,MAAM,MAAK,EAAA,EAAA,CAAA,CAAA,CAAA,CAAA,IAK/C,EAAA,SAAA,WAAA,EAAhB,mBAMM,OANN,cAMM,CALJ,mBAIM,OAJN,cAIM;aAHJ,mBAAiE,OAAA,EAA5D,OAAM,gCAA8B,EAAC,qBAAiB,GAAA;IAC3D,mBAAyE,OAAzE,cAAyE,gBAAtB,EAAA,MAAa,EAAA,EAAA;IAChE,YAAkF,kBAAA;KAAxE,MAAK;KAAK,SAAQ;KAAW,SAAO;;4BAAyB,CAAA,GAAA,EAAA,OAAA,CAAA,gBAAL,SAAK,GAAA,CAAA,CAAA,CAAA;;;;GAK3E,YAAwB,mBAAA,EAAZ,KAAK,MAAA,EAAG,EAAA,EAAA,MAAA,GAAA,CAAA,MAAA,CAAA;GAIZ,EAAA,SAAA,WAAA,EADR,mBAoBM,OAAA;;aAlBA;IAAJ,KAAI;IACJ,OAAK,eAAA,CAAC,uCAAqC,eACpB,EAAM,WAAQ,CAAA;OAGrC,mBAAgD,OAAA;aAAvC;IAAJ,KAAI;IAAe,OAAM;kBAItB,MAAA,EAAS,CAAC,KAAK,MAAM,YAAY,WAAM,KAAA,WAAA,EAD/C,mBASM,OATN,cASM,CALJ,mBAIM,OAJN,aAIM;aAHJ,mBAAmC,OAAA,EAA9B,OAAM,iBAAe,EAAC,MAAE,GAAA;aAC7B,mBAA4B,OAAA,MAAvB,qBAAiB,GAAA;IACtB,mBAA0F,OAA1F,aAAsD,eAAU,gBAAG,EAAM,SAAQ,EAAA,EAAA;;GAMvF,YAQE,2BAAA;aAPI;IAAJ,KAAI;IACH,kBAAgB,EAAA;IAChB,kBAAgB,EAAM;IACtB,kBAAgB,EAAA,MAAwB;IACxC,oBAAkB,EAAA,MAAwB;IAC1C,QAAM;IACN,SAAO;;;;;;;GAIV,YAA0D,gCAAA;aAA9B;IAAJ,KAAI;;GAG5B,YAME,2BAAA;IALC,SAAS,EAAA;IACT,SAAS,EAAA;IACT,MAAM,EAAA;IACN,UAAU;IACV,SAAO;;;;;;;;qKCvuBRE,qBAA8I;CAClJ,MAAM,EAAE;CACR,SAAS,EAAE;CACX,SAAS,EAAE;CACX,QAAQ;CACR,uBAAuB;CACvB,kBAAkB;CACnB;AAED,SAAgB,cAAc,IAAgC,EAAE,EAAuB;CACrF,IAAM,EACJ,UACA,SACA,YACA,YACA,WACA,qBACA,kBAAe,iBACb,GAEE,IAAS,aAAa,EAAa,EAEnC,IAAY,SAAwB;EACxC,GAAG;EACH,GAAI,KAAS,EAAE;EAChB,CAAC;AAYF,QAVI,MAAS,KAAA,MAAW,EAAU,OAAO,IACrC,MAAY,KAAA,MAAW,EAAU,UAAU,IAC3C,MAAY,KAAA,MAAW,EAAU,UAAU,IAC3C,MAAW,KAAA,MAAW,EAAU,SAAS,IACzC,MAAqB,KAAA,MAAW,EAAU,mBAAmB,IAM1D;EACL;EACA,kBANuB,MAAsC;AAC7D,UAAO,OAAO,GAAW,EAAU;;EAMnC,QAAA;EACD;;AC1DH,SAAgB,cAAc,GAAyB;CACrD,IAAM,EAAE,OAAI,WAAQ,GAEd,KAAuC,GAAU,MAAwC,EAAG,GAAO,EAAQ,EAE3G,KAAyC,GAAU,MAAwC;AAK/F,IAAG,IAJc,MAAqB;AAEpC,GADA,EAAQ,EAAE,EACV,EAAI,EAAM;IAEM;;AAoCpB,QAAO;EAEL;EACA;EAEA,cArCmB,MAA6C,EAAG,cAAc,EAAE;EAsCnF,gBArCqB,MAA6C,EAAU,cAAc,EAAE;EAsC5F,oBArCyB,EAAI,aAAa;EAsC1C,oBApCyB,MAAoD,EAAG,qBAAqB,EAAE;EAqCvG,0BApC+B,EAAI,oBAAoB;EAqCvD,mBAnCwB,MAAmD,EAAG,oBAAoB,EAAE;EAoCpG,yBAnC8B,EAAI,mBAAmB;EAqCrD,aAlCkB,MAA4C,EAAG,aAAa,EAAE;EAmChF,eAlCoB,MAA4C,EAAU,aAAa,EAAE;EAmCzF,mBAlCwB,EAAI,YAAY;EAmCxC,cAjCmB,MAA6C,EAAG,cAAc,EAAE;EAkCnF,oBAjCyB,EAAI,aAAa;EAmC1C,oBAhCyB,MAAoD,EAAG,qBAAqB,EAAE;EAiCvG,0BAhC+B,EAAI,oBAAoB;EAiCvD,iBA/BsB,MAAgD,EAAG,iBAAiB,EAAE;EAgC5F,uBA/B4B,EAAI,gBAAgB;EAiChD,WA9BgB,MAAyC,EAAG,UAAU,EAAE;EA+BxE,iBA9BsB,EAAI,SAAS;EA+BnC,sBA7B2B,MAAsD,EAAG,uBAAuB,EAAE;EA8B7G,iBA7BsB,MAAgD,EAAG,iBAAiB,EAAE;EA8B7F;;ACpDH,IAAa,gBAAb,MAAmD;CACjD,OAAgB;CAChB;CACA;CAEA,YAAY,IAA2B,EAAE,EAAE;AACzC,OAAK,UAAU;EACf,IAAM,IAAW,0BAA0B,sBAAsB;AAGjE,OAAK,sBAAsB;GACzB,kBAAkB,GAAoC,MAAqC;GAG3F,YAAY,MAAsC;GAGlD,gBAAgB,GAAsB,MAAiC;GAGvE,gBAAgB,OAAO,GAAsB,MACpC;GAET,uBAAuB,MAAiD;AACtE,MAAS,qBAAqB,EAAK;;GAErC,uBAAuB,MAA6C;GAGpE,eAAe;GAGf,OAAO,GAAiB,MAAkB;GAG1C,wBAAwB,MAAoB;GAG5C,eAAe;GAGhB;;CAMH,MAAM,MAAM,GAAoB,GAA8B;AAC5D,QAAU,MACR,mQAID;;CAMH,MAAM,UAAyB;CAO/B,OAAO,GAAmB,GAAuB,GAA2B;AAC1E,QAAU,MAAM,qEAAqE;;CAMvF,OAAO,GAAgB,GAAuB;CAO9C,kBAAuC;AACrC,SAAO;GACL,MAAM;IACJ,MAAM;IACN,aAAa;IACb,YAAY;KACV,eAAe;MAAE,MAAM;MAAW,SAAS;MAAM;KACjD,gBAAgB;MAAE,MAAM;MAAW,SAAS;MAAM;KAClD,mBAAmB;MAAE,MAAM;MAAW,SAAS;MAAM;KACrD,aAAa;MACX,MAAM;MACN,MAAM,CAAC,SAAS,gBAAgB;MAChC,SAAS;MACV;KACF;IACF;GACD,WAAW;IACT,MAAM;IACN,aAAa;IACb,YAAY;KACV,YAAY;MAAE,MAAM;MAAW,SAAS;MAAM;KAC9C,gBAAgB;MAAE,MAAM;MAAW,SAAS;MAAM;KAClD,sBAAsB;MAAE,MAAM;MAAW,SAAS;MAAM;KACzD;IACF;GACD,SAAS;IACP,MAAM;IACN,aAAa;IACb,YAAY;KACV,qBAAqB;MAAE,MAAM;MAAW,SAAS;MAAM;KACvD,kBAAkB;MAAE,MAAM;MAAW,SAAS;MAAM;KACpD,mBAAmB;MAAE,MAAM;MAAW,SAAS;MAAM;KACtD;IACF;GACF;;CAMH,aAAa,GAAmC;AAC9C,SAAO,OAAO,KAAK,SAAS,EAAO;;;AAOvC,SAAgB,oBAAoB,IAA2B,EAAE,EAAiB;AAChF,QAAO,IAAI,cAAc,EAAQ;;AAmGnC,MAAa,oBAAoB;CAC/B,MAAM;CACN,SAAS;CACT,aAAa;CACb,UAAU;EACR;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACD;CACD,cAAc;CACd,OAAO;CAWR;AC9PD,IAAa,0BAAb,MAAqC;CACnC,qBAA6B;CAC7B,kBAA0B;CAC1B,WAAmB;CACnB,eAA4C;CAC5C,cAAsB;CACtB;CACA;CAEA,YAAY,GAA8C,GAAkB;AAG1E,EAFA,KAAK,sBAAsB,GAC3B,KAAK,UAAU,GACf,KAAK,qBAAqB;;CAM5B,WAAW,GAA8B;AACnC,OAAK,gBAGT,EAAU,aAAa,QAAQ,OAAO,EACtC,EAAU,aAAa,YAAY,IAAI,EAGlC,KAAK,QAAgB,6BACtB,KAAK,QAAgB,2BAA2B,EAAU,GAG5D,KAAK,yBAAyB,EAAU,EAI1C,KAAK,wBAAwB,EAAU;;CAMzC,yBAAyB,GAA8B;AACrD,MAAI,CAAC,KAAK,mBAAoB;EAE9B,IAAM,KAAiB,MAAyB;AAC9C,QAAK,oBAAoB,EAAM;;AAW/B,EARF,EAAU,iBAAiB,WAAW,EAAc,EAQlD,EAAkB,kBALE;AACpB,KAAU,oBAAoB,WAAW,EAAc;;;CAU3D,wBAAwB,GAA8B;AACpD,MAAI,CAAC,KAAK,gBAAiB;EAE3B,IAAM,KAAe,MAAsB;AACzC,QAAK,iBAAiB,GAAO,QAAQ;KAGjC,KAAqB,MAAsB;AAC/C,QAAK,iBAAiB,GAAO,cAAc;KAGvC,KAAqB,MAAsB;AAC/C,QAAK,iBAAiB,GAAO,cAAc;;AAe3C,EAZF,EAAU,iBAAiB,SAAS,EAAY,EAChD,EAAU,iBAAiB,YAAY,EAAkB,EACzD,EAAU,iBAAiB,eAAe,EAAkB,EAU1D,EAAkB,kBAPE;AAGpB,GAFA,EAAU,oBAAoB,SAAS,EAAY,EACnD,EAAU,oBAAoB,YAAY,EAAkB,EAC5D,EAAU,oBAAoB,eAAe,EAAkB;;;CAUnE,oBAA4B,GAA4B;AAItD,MAHI,CAAC,KAAK,sBAAsB,KAAK,eAGhC,KAAK,QAAgB,uBACP,KAAK,QAAgB,oBAAoB,EAAM,CAE9D;EAKJ,IAAM,IAAY,KAAK,uBAAuB,EAAM;AAOpD,UANI,MACF,EAAM,gBAAgB,EACtB,KAAK,aAAa,EAAU,GAItB,EAAM,KAAd;GACE,KAAK;AACH,IAAI,KAAK,iBACP,EAAM,gBAAgB,EACtB,KAAK,aAAa,KAAK,aAAa;AAEtC;GACF,KAAK;AACH,IAAI,KAAK,aACP,EAAM,gBAAgB,EACtB,KAAK,cAAc;AAErB;GACF,KAAK;AACH,IAAI,KAAK,gBAAgB,CAAC,KAAK,aAC7B,EAAM,gBAAgB,EACtB,KAAK,oBAAoB,KAAK,aAAa;AAE7C;;;CAON,iBAAyB,GAAmB,GAAkC;AAC5E,MAAI,CAAC,KAAK,mBAAmB,KAAK,YAAa;EAE/C,IAAM,IAAW,KAAK,iBAAiB,EAAM;AACxC,QAEL,SAAQ,GAAR;GACE,KAAK;AACH,SAAK,gBAAgB,GAAO,EAAS,UAAU,EAAS,SAAS,EAAS,UAAU;AACpF;GACF,KAAK;AACH,SAAK,sBAAsB,GAAO,EAAS,UAAU,EAAS,SAAS,EAAS,UAAU;AAC1F;GACF,KAAK;AACH,SAAK,qBAAqB,GAAO,EAAS,UAAU,EAAS,SAAS,EAAS,UAAU;AACzF;;;CAON,uBAA+B,GAAkD;AAC/E,UAAQ,EAAM,KAAd;GACE,KAAK,UACH,QAAO;GACT,KAAK,YACH,QAAO;GACT,KAAK,YACH,QAAO;GACT,KAAK,aACH,QAAO;GACT,KAAK,OACH,QAAO;GACT,KAAK,MACH,QAAO;GACT,KAAK,SACH,QAAO;GACT,KAAK,WACH,QAAO;GACT,QACE,QAAO;;;CAOb,aAAqB,GAAsC;AACzD,MAAI,CAAC,KAAK,cAAc;AAEtB,QAAK,SAAS;IAAE,UAAU;IAAG,aAAa;IAAG,OAAO;IAAK,UAAU;IAAS,CAAC;AAC7E;;EAGF,IAAIC,IAAmC;AAEvC,UAAQ,GAAR;GACE,KAAK;AACH,IAAI,KAAK,aAAa,WAAW,MAC/B,IAAc;KACZ,GAAG,KAAK;KACR,UAAU,KAAK,aAAa,WAAW;KACvC,OAAO,OAAO,KAAK,aAAa,WAAW,EAAE;KAC9C;AAEH;GACF,KAAK;AACH,QAAc;KACZ,GAAG,KAAK;KACR,UAAU,KAAK,aAAa,WAAW;KACvC,OAAO,OAAO,KAAK,aAAa,WAAW,EAAE;KAC9C;AACD;GACF,KAAK;AACH,IAAI,KAAK,aAAa,cAAc,MAClC,IAAc;KACZ,GAAG,KAAK;KACR,aAAa,KAAK,aAAa,cAAc;KAC7C,UAAU,OAAO,KAAK,aAAa,cAAc;KAClD;AAEH;GACF,KAAK;AACH,QAAc;KACZ,GAAG,KAAK;KACR,aAAa,KAAK,aAAa,cAAc;KAC7C,UAAU,OAAO,KAAK,aAAa,cAAc;KAClD;AACD;GACF,KAAK;AACH,QAAc;KACZ,GAAG,KAAK;KACR,aAAa;KACb,UAAU;KACX;AACD;GACF,KAAK,MAEH;;AAGJ,EAAI,KACF,KAAK,SAAS,EAAY;;CAO9B,SAAiB,GAA8B;AAO7C,EANA,KAAK,eAAe,GAGpB,KAAK,oBAAoB,UAAU,EAAS,MAAM,EAGlD,KAAK,oBAAoB,cAAc,EAAS,OAAO,SAAS;;CAMlE,aAAqB,GAA8B;AAGjD,EADA,KAAK,oBAAoB,eAAe,EAAS,OAAO,QAAQ,EAChE,KAAK,WAAW;;CAMlB,eAA6B;AAI3B,EAHI,KAAK,gBACP,KAAK,oBAAoB,eAAe,KAAK,aAAa,OAAO,OAAO,EAE1E,KAAK,WAAW;;CAMlB,oBAA4B,GAA8B;EAExD,IAAM,IAAY,IAAI,IAAqB,CAAC,EAAS,MAAM,CAAC;AAC5D,OAAK,oBAAoB,gBAAgB,GAAW,OAAO;;CAM7D,gBACE,GACA,GACA,GACA,GACM;AAKN,EAHA,KAAK,SAAS,EAAS,EAGvB,KAAK,oBAAoB,OAAO,cAAc;GAC5C,KAAK;GACL,QAAQ;GACR,OAAO,EAAQ,EAAU;GAC1B,CAAC;;CAMJ,sBACE,GACA,GACA,GACA,GACM;AAKN,EAHA,KAAK,aAAa,EAAS,EAG3B,KAAK,oBAAoB,OAAO,qBAAqB;GACnD,KAAK;GACL,QAAQ;GACR,OAAO,EAAQ,EAAU;GAC1B,CAAC;;CAMJ,qBACE,GACA,GACA,GACA,GACM;AAIN,EAHA,EAAM,gBAAgB,EAGtB,KAAK,oBAAoB,OAAO,oBAAoB;GAClD,KAAK;GACL,QAAQ;GACR,OAAO,EAAQ,EAAU;GAC1B,CAAC;;CAMJ,iBAAyB,GAIhB;EAGP,IAAM,IADS,EAAM,OACM,QAAQ,iBAAiB;AAEpD,MAAI,CAAC,EAAa,QAAO;EAGzB,IAAM,IAAS,EAAY,aAAa,eAAe,EACjD,IAAQ,EAAY,aAAa,cAAc,EAC/C,IAAW,EAAY,aAAa,iBAAiB;AAQ3D,SANI,CAAC,KAAU,CAAC,KAAS,CAAC,IAAiB,OAMpC;GACL,UAAU;IACR,UALa,SAAS,GAAO,GAAG;IAMhC,aALgB,SAAS,GAAU,GAAG;IAMtC;IACA;IACD;GACD,SAAS,EAAE;GACX,WAAW,EAAE;GACd;;CAMH,sBAAoC;AAElC,OAAK,oBAAoB,sBAAsB,GAAW,MAAY;AAEpE,QAAK,QAAQ,KAAK,GAAW,EAAQ;IACrC;;CAMJ,6BAA6B,GAAwB;AACnD,OAAK,qBAAqB;;CAM5B,4BAA4B,GAAwB;AAClD,OAAK,kBAAkB;;CAMzB,kBAAuC;AACrC,SAAO,KAAK;;CAMd,eAAwB;AACtB,SAAO,KAAK;;CAMd,UAAgB;AAGd,EAFA,KAAK,cAAc,IACnB,KAAK,eAAe,MACpB,KAAK,WAAW;;;AAOpB,SAAgB,8BACd,GACA,GACyB;AACzB,QAAO,IAAI,wBAAwB,GAAqB,EAAQ;;ACjclE,MAAa,gBAAgB;CAE3B,IAAI,QAAQ;AACV,SAAO;GACL,oBAAoB,EAAE,iBAAiB,IAAO,CAAC;GAC/C;GACA;GACA;GACA;GACD;;CAIH,IAAI,WAAW;AACb,SAAO;GACL,oBAAoB,EAAE,iBAAiB,IAAM,CAAC;GAC9C;GACA;GACA;GACA;GACD;;CAIH,IAAI,OAAO;AACT,SAAO;GACL,oBAAoB,EAAE,iBAAiB,IAAM,CAAC;GAC9C;GACA;GACA;GACA;GACA;GACD;;CAIH,IAAI,UAAU;AACZ,SAAO;GACL,oBAAoB,EAAE,iBAAiB,IAAO,CAAC;GAC/C;GACA;GACA;GACA;GACD;;CAIH,IAAI,aAAa;AACf,SAAO;GACL,oBAAoB,EAAE,iBAAiB,IAAO,CAAC;GAC/C;GACA;GACA;GACD;;CAEJ,EChDY,cAAc;CACzB,eAAe,OAAO,gCAAoB,MAAK,MAAK,EAAE,cAAc;CACpE,iBAAiB,OAAO,kCAAsB,MAAK,MAAK,EAAE,gBAAgB;CAC1E,iBAAiB,OAAO,kCAAsB,MAAK,MAAK,EAAE,gBAAgB;CAC1E,wBAAwB,OAAO,0CAA8B,MAAK,MAAK,EAAE,uBAAuB;CAChG,mBAAmB,OAAO,qCAAyB,MAAK,MAAK,EAAE,kBAAkB;CACjF,0BACE,OAAO,4CAAgC,MAAK,MAAK,EAAE,yBAAyB;CAC9E,gBAAgB,OAAO,kCAAsB,MAAK,MAAK,EAAE,eAAe;CACzE;;;;;;;;;;;;;;;;;;;;;;EEtBD,IAAM,IAAQ,GASR,IAAO,GAOP,IAAW,KAAkC,EAC7C,IAAa,IAAY,OAAO,EAAM,SAAS,GAAG,CAAA,EAGlD,IAAa,gBAAgB;GACjC,UAAU;GACV,MAAM,GAAG,EAAM,SAAS,KAAK;GAC7B,KAAK,GAAG,EAAM,SAAS,IAAI;GAC3B,OAAO,GAAG,EAAM,SAAS,MAAM;GAC/B,QAAQ,GAAG,EAAM,SAAS,OAAO;GACjC,QAAQ;GACT,EAAC,EAGI,KAAe,MAA2B;GAC9C,IAAM,IAAc,OAAO,EAAK;AAKhC,GAJA,EAAW,QAAQ,GACnB,EAAK,gBAAgB,EAAW,EAG5B,EAAM,SAAS,uBACjB,EAAM,QAAQ,oBAAoB,EAAW;KAI3C,KAAiB,MAAyB;AAC9C,WAAQ,EAAM,KAAd;IACE,KAAK;AACH,KAAK,EAAM,aACT,EAAM,gBAAe,EACrB,EAAM,iBAAgB,EACtB,EAAK,SAAQ;AAEf;IACF,KAAK;AAGH,KAFA,EAAM,gBAAe,EACrB,EAAM,iBAAgB,EACtB,EAAK,SAAQ;AACb;IACF,KAAK;AAGH,KAFA,EAAM,gBAAe,EACrB,EAAM,iBAAgB,EACtB,EAAK,SAAQ;AACb;;KAIA,UAAmB;AAEvB,KAAK,SAAQ;KAGT,UAAc;GAElB,IAAM,IAAe,EAAS,OAAO,KAAK,cAAc,QAAO;AAC/D,GAAI,MACF,EAAa,OAAM,EACnB,EAAa,QAAO;;SAKxB,UAAU,YAAY;AAEpB,GADA,MAAM,UAAS,EACf,GAAM;IACP,EAGD,EAAa,EACX,UACD,CAAA,0BAIC,mBAeM,OAAA;GAfA,OAAK,eAAE,EAAA,MAAU;GAAE,OAAM;MAC7B,YAaE,iBAAA;YAZI;GAAJ,KAAI;GACH,eAAa,EAAA;GACd,MAAK;GACL,SAAQ;GACR,MAAK;GACJ,aAAa,EAAA,OAAO,eAAW,SAAa,EAAA,OAAO;GACnD,WAAW,EAAA,OAAO;GACnB,cAAa;GACb,OAAM;GACL,uBAAoB;GACpB,WAAS;GACT,QAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;EEvGb,IAAM,IAAQ,GASR,IAAO,GAOP,IAAW,KAAkC,EAC7C,IAAa,IAAqB,EAAa,EAAM,MAAM,CAAA,EAC3D,IAAW,IAAI,GAAK,EACpB,IAAe,IAAI,GAAE,EAGrB,IAAa,gBAAgB;GACjC,UAAU;GACV,MAAM,GAAG,EAAM,SAAS,KAAK;GAC7B,KAAK,GAAG,EAAM,SAAS,IAAI;GAC3B,OAAO,GAAG,EAAM,SAAS,MAAM;GAC/B,QAAQ,GAAG,EAAM,SAAS,OAAO;GACjC,QAAQ;GACT,EAAC,EAEI,IAAa,eACV,EAAS,QAAQ,UAAU,UACnC;EAGD,SAAS,EAAa,GAA6B;AACjD,OAAI,KAAU,QAA+B,MAAU,GACrD,QAAO;GAGT,IAAM,IAAM,OAAO,EAAK;AAUxB,UATI,MAAM,EAAI,GACL,OAAO,EAAK,GAIjB,EAAM,OAAO,aAAa,KAAA,IAIvB,IAHE,OAAO,EAAI,QAAQ,EAAM,OAAO,SAAS,CAAA;;EAMpD,SAAS,EAAY,GAAuC;AAC1D,OAAI,MAAU,MAAM,KAAU,KAC5B,QAAO;GAGT,IAAM,IAAM,OAAO,EAAK;AACxB,UAAO,MAAM,EAAI,GAAG,OAAO;;EAG7B,SAAS,EAAe,GAA8D;AACpF,OAAI,MAAU,GACZ,QAAO,EAAE,OAAO,IAAK;GAGvB,IAAM,IAAM,OAAO,EAAK;AAsBxB,UArBI,MAAM,EAAI,GACL;IACL,OAAO;IACP,SAAS;IACX,GAGE,EAAM,OAAO,QAAQ,KAAA,KAAa,IAAM,EAAM,OAAO,MAChD;IACL,OAAO;IACP,SAAS,oBAAoB,EAAM,OAAO;IAC5C,GAGE,EAAM,OAAO,QAAQ,KAAA,KAAa,IAAM,EAAM,OAAO,MAChD;IACL,OAAO;IACP,SAAS,mBAAmB,EAAM,OAAO;IAC3C,GAGK,EAAE,OAAO,IAAK;;EAGvB,IAAM,KAAe,MAA2B;AAC9C,KAAW,QAAQ;GAGnB,IAAM,IAAa,EAAe,EAAK;AAEvC,GADA,EAAS,QAAQ,CAAC,EAAW,OAC7B,EAAa,QAAQ,EAAW,WAAW;GAG3C,IAAM,IAAc,EAAY,EAAK;AAIrC,GAHA,EAAK,gBAAgB,EAAW,EAG5B,EAAM,SAAS,uBACjB,EAAM,QAAQ,oBAAoB,EAAW;KAI3C,KAAiB,MAAyB;AAC9C,WAAQ,EAAM,KAAd;IACE,KAAK;AACH,KAAK,EAAM,aACT,EAAM,gBAAe,EACrB,EAAM,iBAAgB,EACjB,EAAS,SACZ,EAAK,SAAQ;AAGjB;IACF,KAAK;AAGH,KAFA,EAAM,gBAAe,EACrB,EAAM,iBAAgB,EACtB,EAAK,SAAQ;AACb;IACF,KAAK;AAGH,KAFA,EAAM,gBAAe,EACrB,EAAM,iBAAgB,EACjB,EAAS,SACZ,EAAK,SAAQ;AAEf;IACF,KAAK;AAEH,KADA,EAAM,gBAAe,EACrB,EAAe,EAAC;AAChB;IACF,KAAK;AAEH,KADA,EAAM,gBAAe,EACrB,EAAe,GAAE;AACjB;;KAIA,UAAmB;AAEvB,GAAK,EAAS,SACZ,EAAK,SAAQ;KAIX,KAAkB,MAAkB;GACxC,IAAM,IAAU,EAAY,EAAW,MAAM,IAAI,GAC3C,IAAO,EAAM,OAAO,QAAQ,GAI9B,IAHa,IAAU,IAAQ;AAYnC,GARI,EAAM,OAAO,QAAQ,KAAA,MACvB,IAAmB,KAAK,IAAI,GAAkB,EAAM,OAAO,IAAG,GAE5D,EAAM,OAAO,QAAQ,KAAA,MACvB,IAAmB,KAAK,IAAI,GAAkB,EAAM,OAAO,IAAG,GAGhE,EAAW,QAAQ,EAAa,EAAgB,EAChD,EAAY,EAAW,MAAK;KAGxB,UAAc;GAElB,IAAM,IAAe,EAAS,OAAO,KAAK,cAAc,QAAO;AAC/D,GAAI,MACF,EAAa,OAAM,EACnB,EAAa,QAAO;;SAKxB,YACQ,EAAM,QACZ,MAAY;AAGV,GAFA,EAAW,QAAQ,EAAa,EAAQ,EACxC,EAAS,QAAQ,IACjB,EAAa,QAAQ;IAEzB,EAGA,UAAU,YAAY;AAEpB,GADA,MAAM,UAAS,EACf,GAAM;IACP,EAGD,EAAa,EACX,UACD,CAAA,0BAIC,mBA4BM,OAAA;GA5BA,OAAK,eAAE,EAAA,MAAU;GAAE,OAAM;MAC7B,YAaE,iBAAA;YAZI;GAAJ,KAAI;GACH,eAAa,EAAA;GACd,MAAK;GACL,SAAQ;GACR,MAAK;GACJ,OAAO,EAAA;GACP,aAAa,EAAA,OAAO,eAAW,SAAa,EAAA,OAAO;GACpD,cAAa;GACb,OAAM;GACL,uBAAoB;GACpB,WAAS;GACT,QAAM;;;;;MAKD,EAAA,SAAY,EAAA,SAAA,WAAA,EADpB,mBAUM,OAAA;;GARJ,OAAM;GACL,OAAK,eAAA;aAAqB,EAAA,SAAS,KAAI;YAAsB,EAAA,SAAS,SAAM,EAAA;iBAA+B,EAAA,SAAS,MAAK;;qBAMvH,EAAA,MAAY,EAAA,EAAA,IAAA,mBAAA,IAAA,GAAA,CAAA,EAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EE/NrB,IAAM,IAAQ,GASR,IAAO,GAOP,IAAY,KAAuB,EACnC,IAAc,KAAoB,EAClC,IAAa,IAAI,EAAM,MAAK,EAC5B,IAAS,IAAI,GAAK,EAClB,IAAc,IAAI,GAAE,EACpB,IAAe,IAAI,GAAE,EAGrB,IAAc,gBAAgB;GAClC,UAAU;GACV,MAAM,GAAG,EAAM,SAAS,KAAK;GAC7B,KAAK,GAAG,EAAM,SAAS,IAAI;GAC3B,OAAO,GAAG,EAAM,SAAS,MAAM;GAC/B,UAAU,GAAG,KAAK,IAAI,EAAM,SAAS,OAAO,IAAI,CAAC;GACjD,QAAQ;GACT,EAAC,EAEI,IAAgB,gBAAgB;GACpC,UAAU;GACV,MAAM,GAAG,EAAM,SAAS,KAAK;GAC7B,KAAK,GAAG,EAAM,SAAS,OAAO;GAC9B,OAAO,GAAG,KAAK,IAAI,EAAM,SAAS,OAAO,IAAI,CAAC;GAC9C,WAAW;GACX,QAAQ;GACT,EAAC,EAEI,IAAU,eACT,EAAM,OAAO,UAKX,EAAM,OAAO,QAAQ,KAAK,MAAiB;AAChD,OAAI,OAAO,KAAQ,YAAY,OAAO,KAAQ,SAC5C,QAAO;IAAE,OAAO;IAAK,OAAO,OAAO,EAAI;IAAC;GAE1C,IAAM,IAAS;AACf,UAAO;IACL,OAAO,EAAO;IACd,OAAO,EAAO,SAAS,OAAO,EAAO,MAAM;IAC3C,UAAU,EAAO,YAAY;IAC/B;IACD,GAdQ,EAAC,CAeX,EAEK,IAAkB,eAAe;AACrC,OAAI,CAAC,EAAY,MACf,QAAO,EAAQ;GAGjB,IAAM,IAAQ,EAAY,MAAM,aAAY;AAC5C,UAAO,EAAQ,MAAM,QACnB,MAAO,EAAI,MAAM,aAAa,CAAC,SAAS,EAAM,IAAI,OAAO,EAAI,MAAM,CAAC,aAAa,CAAC,SAAS,EAAK,CAClG;IACD,EAEK,IAAiB,eACd,EAAQ,MAAM,MAAK,MAAO,EAAI,UAAU,EAAW,MAAK,CAChE,EAEK,IAAe,eACZ,EAAe,OAAO,SAAS,OAAO,EAAW,SAAS,GAAE,CACpE,EAEK,IAAgB,eAAe;GACnC;GACA;GACA;GACA;GACA;GACA;GACA;GACA;GACA;GACA;GACA;GACA;GACD,CAAA,EAEK,IAAkB,eAAe;GACrC;GACA;GACA;GACA;GACA;GACA;GACD,CAAA,EAGK,UAAqB;AAIzB,GAHA,EAAO,QAAQ,IACf,EAAY,QAAQ,IACpB,EAAa,QAAQ,EAAgB,MAAM,WAAU,MAAO,EAAI,UAAU,EAAW,MAAK,EACtF,EAAa,UAAU,MAAM,EAAgB,MAAM,SAAS,MAC9D,EAAa,QAAQ;KAInB,UAAsB;AAG1B,GAFA,EAAO,QAAQ,IACf,EAAa,QAAQ,IACrB,EAAY,QAAQ;KAGhB,KAAgB,MAAyB;AACzC,KAAO,aAEX,EAAW,QAAQ,EAAO,OAC1B,EAAK,gBAAgB,EAAO,MAAK,EAG7B,EAAM,SAAS,uBACjB,EAAM,QAAQ,oBAAoB,EAAO,MAAK,EAGhD,GAAc,EACd,EAAK,SAAQ;KAGT,KAAiB,MAAyB;AAC9C,WAAQ,EAAM,KAAd;IACE,KAAK;AAGH,SAFA,EAAM,gBAAe,EACrB,EAAM,iBAAgB,EAClB,EAAO,SAAS,EAAa,SAAS,GAAG;MAC3C,IAAM,IAAS,EAAgB,MAAM,EAAa;AAClD,MAAI,KAAU,CAAC,EAAO,YACpB,EAAa,EAAM;YAEX,EAAO,SACjB,GAAa;AAEf;IAEF,KAAK;AAGH,KAFA,EAAM,gBAAe,EACrB,EAAM,iBAAgB,EAClB,EAAO,QACT,GAAc,GAEd,EAAK,SAAQ;AAEf;IAEF,KAAK;AAIH,KAHA,EAAM,gBAAe,EACrB,EAAM,iBAAgB,EACtB,GAAc,EACd,EAAK,SAAQ;AACb;IAEF,KAAK;AAEH,KADA,EAAM,gBAAe,EAChB,EAAO,SAGV,EAAa,QAAQ,KAAK,IAAI,EAAa,QAAQ,GAAG,EAAgB,MAAM,SAAS,EAAC,EACtF,EAAe,EAAa,MAAK,IAHjC,GAAa;AAKf;IAEF,KAAK;AAEH,KADA,EAAM,gBAAe,EACjB,EAAO,UACT,EAAa,QAAQ,KAAK,IAAI,EAAa,QAAQ,GAAG,EAAC,EACvD,EAAe,EAAa,MAAK;AAEnC;IAEF,KAAK;AACH,KAAK,EAAO,UACV,EAAM,gBAAe,EACrB,GAAa;AAEf;IAEF;AAEE,SAAI,EAAM,IAAI,WAAW,KAAK,EAAO,OAAO;AAC1C,QAAY,SAAS,EAAM;MAE3B,IAAM,IAAa,EAAgB,MAAM,WAAU,MACjD,EAAI,MAAM,aAAa,CAAC,WAAW,EAAY,MAAM,aAAa,CAAA,CACpE;AACA,MAAI,KAAc,MAChB,EAAa,QAAQ,GACrB,EAAe,EAAa,MAAK;;AAGrC;;KAIA,KAAkB,MAAkB;AACxC,OAAI,EAAY,OAAO;IAErB,IAAM,IADiB,EAAY,MAAM,iBAAiB,oBAAmB,CACxC;AACrC,IAAI,KACF,EAAc,eAAe,EAAE,OAAO,WAAW,CAAA;;KAKjD,UAAoB;AACxB,GAAI,EAAO,QACT,GAAc,GAEd,GAAa;KAIX,KAAsB,MAAsB;GAChD,IAAM,IAAS,EAAM;AACrB,GACE,EAAU,SACV,CAAC,EAAU,MAAM,SAAS,EAAO,IACjC,EAAY,SACZ,CAAC,EAAY,MAAM,SAAS,EAAM,KAElC,GAAc,EACd,EAAK,SAAQ;KAIX,UAAc;AAClB,GAAI,EAAU,SACZ,EAAU,MAAM,OAAM;;SAK1B,YACQ,EAAM,QACZ,MAAY;AACV,KAAW,QAAQ;IAEvB,EAGA,UAAU,YAAY;AAGpB,GAFA,MAAM,UAAS,EACf,GAAM,EACN,SAAS,iBAAiB,aAAa,EAAkB;IAC1D,EAQD,EAAa;GACX;GACA,eAPoB;AACpB,aAAS,oBAAoB,aAAa,EAAkB;;GAO7D,CAAA,0BAIC,mBA0EM,OA1EN,cA0EM,CAxEJ,mBAqBM,OAAA;YApBA;GAAJ,KAAI;GACH,OAAK,eAAE,EAAA,MAAa;GACpB,OAAK,eAAE,EAAA,MAAW;GACnB,UAAS;GACT,MAAK;GACJ,iBAAe,EAAA;GACf,iBAAe;GACf,SAAO;GACP,WAAS;MAEV,mBAAuD,QAAvD,cAAuD,gBAAtB,EAAA,MAAY,EAAA,EAAA,GAAA,WAAA,EAC7C,mBAQM,OAAA;GAPJ,OAAK,eAAA,CAAC,6DAA2D,EAAA,cACzC,EAAA,OAAM,CAAA,CAAA;GAC9B,MAAK;GACL,QAAO;GACP,SAAQ;mBAER,mBAA2F,QAAA;GAArF,kBAAe;GAAQ,mBAAgB;GAAQ,gBAAa;GAAI,GAAE;2CAKjE,EAAA,SAAA,WAAA,EAAX,mBA+CM,OAAA;;YA/CiB;GAAJ,KAAI;GAAe,OAAK,eAAE,EAAA,MAAe;GAAG,OAAK,eAAE,EAAA,MAAa;GAAE,MAAK;MAE7E,EAAA,OAAO,cAAA,WAAA,EAAlB,mBAQM,OARN,cAQM,CAAA,eAPJ,mBAME,SAAA;4CALoB,QAAA;GACpB,MAAK;GACL,OAAM;GACN,aAAY;GACX,WAAO,EAAA,OAAA,oBAAR,IAAa,CAAA,OAAA,CAAA;+BAJJ,EAAA,MAAW,CAAA,CAAA,CAAA,CAAA,IAAA,mBAAA,IAAA,GAAA,EASxB,mBAiCM,OAjCN,cAiCM,EAAA,UAAA,GAAA,EAhCJ,mBA0BM,UAAA,MAAA,WAzBsB,EAAA,QAAlB,GAAQ,oBADlB,mBA0BM,OAAA;GAxBH,KAAG,GAAK,EAAO,MAAK,GAAI;GACzB,OAAK,eAAA,CAAC,uHAAqH;4DAC7C,MAAU,EAAA;sDAA4E,EAAO;oCAAsD,EAAO,UAAU,EAAA,SAAc,MAAU,EAAA;;GAK1Q,MAAK;GACJ,iBAAe,EAAO,UAAU,EAAA;GAChC,UAAK,MAAE,EAAa,EAAM;MAE3B,mBAAgD,QAAhD,YAAgD,gBAAtB,EAAO,MAAK,EAAA,EAAA,EAE9B,EAAO,UAAU,EAAA,SAAA,WAAA,EADzB,mBAWM,OAXN,YAWM,CAAA,GAAA,EAAA,OAAA,CALJ,mBAIE,QAAA;GAHA,aAAU;GACV,GAAE;GACF,aAAU;8EAML,EAAA,MAAgB,WAAM,KAAA,WAAA,EAAjC,mBAEM,OAFN,YAA2G,yBAE3G,IAAA,mBAAA,IAAA,GAAA,CAAA,CAAA,CAAA,EAAA,EAAA,IAAA,mBAAA,IAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;EE9VR,IAAM,IAAQ,GASR,IAAO;EAOb,SAAS,EAAuB,GAA0B;AAMxD,UAJI,aAAiB,QAAQ,OAAO,KAAU,YAAY,KAAU,OAC3D,EAAmB,EAAK,GAG1B;;EAIT,IAAM,IAAW,KAAsB,EACjC,IAAa,IAAY,EAAuB,EAAM,MAAM,CAAA,EAC5D,IAAW,IAAI,GAAK,EACpB,IAAe,IAAI,GAAE,EAGrB,IAAa,gBAAgB;GACjC,UAAU;GACV,MAAM,GAAG,EAAM,SAAS,KAAK;GAC7B,KAAK,GAAG,EAAM,SAAS,IAAI;GAC3B,OAAO,GAAG,EAAM,SAAS,MAAM;GAC/B,QAAQ,GAAG,EAAM,SAAS,OAAO;GACjC,QAAQ;GACT,EAAC,EAEI,IAAe,eAAe;GAClC;GACA;GACA;GACA;GACA,EAAS,QAAQ,8BAA8B;GAC/C;GACA;GACA;GACA;GACA;GACA;GACD,CAAA,EAEK,IAAa,eAAe;GAChC,IAAM,IAAY;IAChB,MAAM;IACN,cAAc;IAChB;AAUA,UARI,EAAM,OAAO,YACb,EAAsC,MAAM,EAAmB,EAAM,OAAO,QAAO,GAGnF,EAAM,OAAO,YACb,EAAsC,MAAM,EAAmB,EAAM,OAAO,QAAO,GAGhF;IACR;EAGD,SAAS,EAAmB,GAAiD;AAC3E,OAAI,CAAC,EAAO,QAAO;AAEnB,OAAI;IACF,IAAM,IAAO,aAAiB,OAAO,IAAQ,IAAI,KAAK,EAAK;AAI3D,WAHI,MAAM,EAAK,SAAS,CAAC,GAAS,KAG3B,EAAK,aAAa,CAAC,MAAM,IAAI,CAAC,MAAM;WACrC;AACN,WAAO;;;EAIX,SAAS,EAAU,GAA4B;AAC7C,OAAI,CAAC,EAAO,QAAO;AAEnB,OAAI;IACF,IAAM,oBAAO,IAAI,KAAK,GAAG,EAAM,WAAU;AACzC,WAAO,MAAM,EAAK,SAAS,CAAC,GAAG,OAAO;WAChC;AACN,WAAO;;;EAIX,SAAS,EAAqB,GAA2B;AACvD,OAAI,CAAC,EAAM,QAAO;AAElB,OAAI;IACF,IAAM,IAAS,EAAM,OAAO,UAAU,SAChC,IAAU,EAAM,OAAO,eAAe;KAC1C,MAAM;KACN,OAAO;KACP,KAAK;KACP;AAEA,WAAO,EAAK,mBAAmB,GAAQ,EAAO;WACxC;AACN,WAAO,EAAK,aAAa,CAAC,MAAM,IAAI,CAAC,MAAM;;;EAI/C,SAAS,EAAa,GAAqD;AACzE,OAAI,CAAC,EACH,QAAO,EAAE,OAAO,IAAK;GAGvB,IAAM,IAAO,EAAU,EAAK;AAC5B,OAAI,CAAC,EACH,QAAO;IACL,OAAO;IACP,SAAS;IACX;AAIF,OAAI,EAAM,OAAO,SAAS;IACxB,IAAM,IAAU,IAAI,KAAK,EAAM,OAAO,QAAO;AAC7C,QAAI,IAAO,EACT,QAAO;KACL,OAAO;KACP,SAAS,sBAAsB,EAAqB,EAAQ;KAC9D;;AAKJ,OAAI,EAAM,OAAO,SAAS;IACxB,IAAM,IAAU,IAAI,KAAK,EAAM,OAAO,QAAO;AAC7C,QAAI,IAAO,EACT,QAAO;KACL,OAAO;KACP,SAAS,uBAAuB,EAAqB,EAAQ;KAC/D;;AAIJ,UAAO,EAAE,OAAO,IAAK;;EAGvB,IAAM,KAAe,MAAiB;GACpC,IAAM,IAAS,EAAM;AACrB,KAAW,QAAQ,EAAO;GAG1B,IAAM,IAAa,EAAa,EAAO,MAAK;AAE5C,GADA,EAAS,QAAQ,CAAC,EAAW,OAC7B,EAAa,QAAQ,EAAW,WAAW;GAG3C,IAAM,IAAc,EAAU,EAAO,MAAK;AAI1C,GAHA,EAAK,gBAAgB,EAAW,EAG5B,EAAM,SAAS,uBACjB,EAAM,QAAQ,oBAAoB,EAAW;KAI3C,KAAiB,MAAyB;AAC9C,WAAQ,EAAM,KAAd;IACE,KAAK;AACH,KAAK,EAAM,aACT,EAAM,gBAAe,EACrB,EAAM,iBAAgB,EACjB,EAAS,SACZ,EAAK,SAAQ;AAGjB;IACF,KAAK;AAGH,KAFA,EAAM,gBAAe,EACrB,EAAM,iBAAgB,EACtB,EAAK,SAAQ;AACb;IACF,KAAK;AAGH,KAFA,EAAM,gBAAe,EACrB,EAAM,iBAAgB,EACjB,EAAS,SACZ,EAAK,SAAQ;AAEf;IACF,KAAK;IACL,KAAK,UAEH;;KAIA,UAAmB;AAEvB,GAAK,EAAS,SACZ,EAAK,SAAQ;KAIX,UAAiB;AAKrB,OAHA,EAAW,QAAQ,kBADL,IAAI,MAAK,CACoB,EAGvC,EAAS,OAAO;AAClB,MAAS,MAAM,QAAQ,EAAW;IAClC,IAAM,IAAQ,IAAI,MAAM,SAAS,EAAE,SAAS,IAAM,CAAA;AAClD,MAAS,MAAM,cAAc,EAAK;;KAIhC,UAAkB;AAItB,OAHA,EAAW,QAAQ,IAGf,EAAS,OAAO;AAClB,MAAS,MAAM,QAAQ;IACvB,IAAM,IAAQ,IAAI,MAAM,SAAS,EAAE,SAAS,IAAM,CAAA;AAClD,MAAS,MAAM,cAAc,EAAK;;KAIhC,UAAc;AAClB,GAAI,EAAS,UACX,EAAS,MAAM,OAAM,EAErB,EAAS,MAAM,cAAa;;SAKhC,YACQ,EAAM,QACZ,MAAY;AAGV,GAFA,EAAW,QAAQ,EAAuB,EAAQ,EAClD,EAAS,QAAQ,IACjB,EAAa,QAAQ;IAEzB,EAGA,UAAU,YAAY;AAEpB,GADA,MAAM,UAAS,EACf,GAAM;IACP,EAGD,EAAa,EACX,UACD,CAAA,0BAIC,mBAuDM,OAvDN,cAuDM;GArDJ,mBAUE,SAVF,WAUE;aATI;IAAJ,KAAI;IACH,OAAO,EAAA;IACP,OAAO,EAAA;IACP,OAAO,EAAA;IACP,aAAa,EAAA,OAAO,eAAW;MACxB,EAAA,OAAU;IACjB,SAAO;IACP,WAAS;IACT,QAAM;;GAKD,EAAA,OAAO,qBAAgB,mCAAA,WAAA,EAD/B,mBA0BM,OAAA;;IAxBJ,OAAM;IACL,OAAK,eAAA;cAAqB,EAAA,SAAS,QAAK,GAAA;aAA2B,EAAA,SAAS,SAAM,EAAA;;OAKnF,YAQW,kBAAA;IAPT,MAAK;IACL,MAAK;IACL,SAAQ;IACR,OAAM;IACL,SAAO;;2BAGV,CAAA,GAAA,EAAA,OAAA,CAAA,gBAFC,WAED,GAAA,CAAA,CAAA,CAAA;;OACA,YAQW,kBAAA;IAPT,MAAK;IACL,MAAK;IACL,SAAQ;IACR,OAAM;IACL,SAAO;;2BAGV,CAAA,GAAA,EAAA,OAAA,CAAA,gBAFC,WAED,GAAA,CAAA,CAAA,CAAA;;;GAKM,EAAA,SAAY,EAAA,SAAA,WAAA,EADpB,mBAUM,OAAA;;IARJ,OAAM;IACL,OAAK,eAAA;cAAqB,EAAA,SAAS,KAAI;aAAsB,EAAA,SAAS,SAAM,EAAA;kBAA+B,EAAA,SAAS,MAAK;;sBAMvH,EAAA,MAAY,EAAA,EAAA,IAAA,mBAAA,IAAA,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EE3TrB,IAAM,IAAQ,GASR,IAAO,GAOP,IAAc,KAAyD,EACvE,IAAa,IAAa,EAAQ,EAAM,MAAM,EAG9C,IAAiB,gBAAgB;GACrC,UAAU;GACV,MAAM,GAAG,EAAM,SAAS,KAAK;GAC7B,KAAK,GAAG,EAAM,SAAS,IAAI;GAC3B,OAAO,GAAG,EAAM,SAAS,MAAM;GAC/B,QAAQ,GAAG,EAAM,SAAS,OAAO;GACjC,QAAQ;GACT,EAAC,EAEI,IAAmB,eAAe;GACtC;GACA;GACA;GACA;GACA;GACA;GACA;GACD,CAAA,EAEK,IAAc,eACX,EAAM,OAAO,kBAAkB,WACvC,EAEK,IAAS,gBAAgB;GAC7B,MAAM,EAAM,OAAO,aAAa;GAChC,OAAO,EAAM,OAAO,cAAc;GACnC,EAAC,EAGI,UAAoB;GACxB,IAAM,IAAW,CAAC,EAAW;AAW7B,GAVA,EAAW,QAAQ,GAEnB,EAAK,gBAAgB,EAAQ,EAGzB,EAAM,SAAS,uBACjB,EAAM,QAAQ,oBAAoB,EAAQ,EAIxC,EAAM,OAAO,eAAe,MAC9B,eAAe;AACb,MAAK,SAAQ;KACd;KAIC,KAAY,MAAmB;AAWnC,GAVA,EAAW,QAAQ,GAEnB,EAAK,gBAAgB,EAAK,EAGtB,EAAM,SAAS,uBACjB,EAAM,QAAQ,oBAAoB,EAAK,EAIrC,EAAM,OAAO,eAAe,MAC9B,eAAe;AACb,MAAK,SAAQ;KACd;KAIC,KAAwB,MAAuC;GAEnE,IAAM,IAAe,MAAY;AAWjC,GAVA,EAAW,QAAQ,GAEnB,EAAK,gBAAgB,EAAY,EAG7B,EAAM,SAAS,uBACjB,EAAM,QAAQ,oBAAoB,EAAY,EAI5C,EAAM,OAAO,eAAe,MAC9B,eAAe;AACb,MAAK,SAAQ;KACd;KAIC,KAAiB,MAAyB;AAC9C,WAAQ,EAAM,KAAd;IACE,KAAK;IACL,KAAK;AAGH,KAFA,EAAM,gBAAe,EACrB,EAAM,iBAAgB,EAClB,EAAY,UAAU,YAExB,EAAK,SAAQ,GAGb,GAAY;AAEd;IACF,KAAK;AAGH,KAFA,EAAM,gBAAe,EACrB,EAAM,iBAAgB,EACtB,EAAK,SAAQ;AACb;IACF,KAAK;AAGH,KAFA,EAAM,gBAAe,EACrB,EAAM,iBAAgB,EACtB,EAAK,SAAQ;AACb;IACF,KAAK;IACL,KAAK;AACH,KAAI,EAAY,UAAU,cACxB,EAAM,gBAAe,EACrB,EAAS,GAAK;AAEhB;IACF,KAAK;IACL,KAAK;AACH,KAAI,EAAY,UAAU,cACxB,EAAM,gBAAe,EACrB,EAAS,GAAI;AAEf;;KAIA,UAAc;AAElB,OAAI,EAAY,UAAU,WAAW;IACnC,IAAM,IAAS,EAAY;AAC3B,IAAI,KACF,EAAO,OAAM;UAEV;IAGL,IAAM,IADW,EAAY,OACE,KAAK,cAAc,QAAO;AACzD,IAAI,KACF,EAAa,OAAM;;;SAMzB,YACQ,EAAM,QACZ,MAAY;AACV,KAAW,QAAQ,EAAQ;IAE/B,EAGA,UAAU,YAAY;AAEpB,GADA,MAAM,UAAS,EACf,GAAM;IACP,EAGD,EAAa,EACX,UACD,CAAA,0BAIC,mBA6DM,OAAA;GA7DA,OAAK,eAAE,EAAA,MAAgB;GAAG,OAAK,eAAE,EAAA,MAAc;GAAG,WAAS;MAEpD,EAAA,UAAW,cAAA,WAAA,EAAtB,mBASM,OATN,cASM,CARJ,YAOE,oBAAA;YANI;GAAJ,KAAI;GACH,eAAa,EAAA;GACd,SAAQ;GACR,MAAK;GACJ,OAAO,EAAA,QAAa,EAAA,MAAO,OAAO,EAAA,MAAO;GACzC,uBAAoB;6CAKT,EAAA,UAAW,YAAA,WAAA,EAA3B,mBAwBM,OAxBN,YAwBM,CAvBJ,mBAsBM,OAtBN,YAsBM,CApBJ,mBAgBM,OAAA;GAfJ,OAAM;GACN,UAAS;GACT,MAAK;GACJ,gBAAc,EAAA;GACd,SAAO;GACP,WAAS;MAEV,mBAGE,OAAA,EAFA,OAAK,eAAA,CAAC,mFACE,EAAA,QAAU,sDAAA,qDAAA,CAAA,EAAA,EAAA,MAAA,EAAA,EAEpB,mBAGE,OAAA,EAFA,OAAK,eAAA,CAAC,mJAAiJ,EAAA,iBAC5H,EAAA,OAAU,CAAA,CAAA,EAAA,EAAA,MAAA,EAAA,CAAA,EAAA,IAAA,WAAA,EAGzC,mBAEO,QAFP,YAEO,gBADF,EAAA,QAAa,EAAA,MAAO,OAAO,EAAA,MAAO,MAAK,EAAA,EAAA,CAAA,CAAA,CAAA,CAAA,IAMhC,EAAA,UAAW,aAAA,WAAA,EAA3B,mBAmBM,OAnBN,YAmBM,CAlBJ,YASW,kBAAA;YARL;GAAJ,KAAI;GACJ,MAAK;GACL,MAAK;GACJ,SAAS,EAAA,QAAU,YAAA;GACpB,UAAS;GACR,SAAK,EAAA,QAAA,MAAE,EAAQ,GAAA;;0BAEC,CAAA,gBAAA,gBAAd,EAAA,MAAO,KAAI,EAAA,EAAA,CAAA,CAAA;;sBAEhB,YAOW,kBAAA;GANT,MAAK;GACL,MAAK;GACJ,SAAU,EAAA,QAAU,cAAA;GACpB,SAAK,EAAA,QAAA,MAAE,EAAQ,GAAA;;0BAEE,CAAA,gBAAA,gBAAf,EAAA,MAAO,MAAK,EAAA,EAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;EErPvB,IAAM,IAAS,aAAa,sBAAqB,EAU3C,IAAQ,GAMR,IAAe,WAAyC,KAAI,EAC5D,IAAiB,IAAgD,KAAI,EACrE,IAAc,IAA6B,EAAE,CAAA,EAC7C,IAAY,IAAI,GAAK,EAGrB,IAAmB;GACvB,MAAM;GACN,QAAQ;GACR,QAAQ;GACR,MAAM;GACN,SAAS;GACV,EAGK,IAAyB,eAAe;AAC5C,OAAI,CAAC,EAAa,MAAO,QAAO;GAEhC,IAAM,IAAa,EAAa,MAAM,QAAQ;AAC9C,UAAO,EAAiB,MAAgD;IACzE,EAEK,IAAmB,eAChB,EAAM,oBAAoB,SAAS,KAC3C,EAGK,KAAe,GAAwB,MAAqC;GAEhF,IAAM,IAAc,SAAS,cAAc,iBAAiB,EAAM,qBAAqB,EAAS,IAAI;AAOpG,UALK,IAKE,EAAY,uBAAsB,IAJvC,EAAO,KAAK,uBAAuB,EAAM,WAAW,IAAU,EACvD;KAML,IAAa,OAAO,MAMpB;AAEJ,MAAW;GAEX,IAAM,IAAW,EAAY,EAAU,OAAO,EAAU,SAAQ;AAChE,OAAI,CAAC,EACH,QAAO;GAIT,IAAM,IAAa,EAAc,EAAU,OAAM;AA8BjD,UA3BA,EAAY,QAAQ;IAClB,OAAO,EAAU;IACjB,KAAK,EAAU;IACf,QAAQ,EAAU;IAClB;IACA,SAAS,EAAM;IACf,kBAAkB;IAClB,UAAU;IACV,UAAU;IACZ,EAGA,EAAa,QAAQ;IACnB,MAAM;IACN,OAAO,EAAU;IACjB,UAAU,EAAU;IACrB,EAED,EAAU,QAAQ,IAElB,MAAM,UAAS,EAGV,EAAe,OAAe,SAC/B,EAAe,MAAc,OAAM,EAGhC;KAGH,UAAmB;AAQvB,GAPK,EAAe,OAAe,WAC/B,EAAe,MAAc,SAAQ,EAGzC,EAAa,QAAQ,MACrB,EAAe,QAAQ,MACvB,EAAY,QAAQ,EAAC,EACrB,EAAU,QAAQ;KAGd,KAAqB,MAAe;AACxC,GAAI,EAAM,QAAQ,uBAChB,EAAM,QAAQ,oBAAoB,EAAK;KAIrC,IAAe,YAAY;AAC/B,GAAI,EAAM,QAAQ,kBACA,MAAM,EAAM,QAAQ,gBAAe,IAEjD,GAAW;KAKX,UAAqB;AAIzB,GAHI,EAAM,QAAQ,kBAChB,EAAM,QAAQ,gBAAe,EAE/B,GAAW;KAGP,KAAiB,MACjB,EAAO,UAKP,EAAO,UAAU,EAAM,QAAQ,iBACZ,EAAM,QAAQ,cAAc,EAAO,OAAM,GAErD,EAAO,SAKX,EAAO,YAAY,QAItB,KAAwB,MAAyB;GAEhD,EAAe,OAAe,iBAChB,EAAe,MAAc,cAAc,EAAK,IAO/D,EAAM,QAAQ,yBAChB,EAAM,QAAQ,sBAAsB,EAAK;KAKvC,UAA4B;AAC3B,KAAM,QAAQ,OAGnB,EAAM,QAAQ,GAAG,oBAAoB,MAA4E;IAE/G,IAAM,IAAU,EAAM,QAAQ,SAAS,CAAC,MAAK,OAAQ,EAAI,MAAM,EAAI,YAAY,EAAQ,MAAK,EACtF,IAAa,EAAc,SAAS,MAAM,MAAa,EAAI,OAAO,EAAQ,SAAQ;AAExF,IAAI,KAAW,KACb,EAAW;KACT,KAAK;KACL,QAAQ;KACR,OAAO,EAAQ;KACf,UAAU,IAAI,QAAQ,GAAG,GAAG,GAAG,EAAE;KAClC,CAAO;KAEX,EAGD,EAAM,QAAQ,GAAG,0BAA0B;AACzC,OAAW;KACZ,EAGD,EAAM,QAAQ,GAAG,4BAA4B;AAC3C,OAAW;KACZ;KAIG,UAA6B;AACjC,OAAI,CAAC,EAAa,SAAS,CAAC,EAAY,MAAM,SAC5C;GAGF,IAAM,IAAU,EAAY,EAAa,MAAM,OAAO,EAAa,MAAM,SAAQ;AACjF,GAAI,MACF,EAAY,QAAQ;IAClB,GAAG,EAAY;IACf,UAAU;IACZ;KAKE,UAAqB;AACzB,GAAI,EAAU,SACZ,GAAqB;KAKnB,UAAqB;AACzB,GAAI,EAAU,SACZ,GAAqB;;SAKzB,GAAoB,EAGhB,OAAO,SAAW,QACpB,OAAO,iBAAiB,UAAU,GAAc,EAAE,SAAS,IAAM,CAAA,EACjE,OAAO,iBAAiB,UAAU,GAAc,EAAE,SAAS,IAAM,CAAA,EACjE,OAAO,iBAAiB,WAAW,GAAsB,EAAE,SAAS,IAAM,CAAA,GAG5E,kBAAkB;AAGhB,GAFA,GAAW,EAEP,OAAO,SAAW,QACpB,OAAO,oBAAoB,UAAU,EAAY,EACjD,OAAO,oBAAoB,UAAU,EAAY,EACjD,OAAO,oBAAoB,WAAW,GAAsB,EAAE,SAAS,IAAM,CAAA;IAEhF,EAGD,EAAa;GACX;GACA;GACA,gBAAgB;GAChB,WAAW,eAAe,EAAU,MAAM;GAC3C,CAAA,0BAKC,YAqBW,UAAA;GArBA,IAAI,EAAA;GAAmB,UAAQ,CAAG,EAAA;MAEnC,EAAA,SAAa,EAAA,SAA0B,EAAA,SAAA,WAAA,EAD/C,mBAmBM,OAnBN,YAmBM,EAAA,WAAA,EAdJ,YAaE,wBAZK,EAAA,MAAsB,EAD7B,WAaE;YAXI;GAAJ,KAAI;KACI,EAAA,OAAW;GAClB,OAAO,EAAA,MAAY;GACnB,KAAK,EAAA,MAAY;GACjB,QAAQ,EAAA,MAAY;GACpB,aAAW,EAAA,MAAY;GACvB,cAAY,EAAA,MAAY;GACzB,OAAA,EAAA,kBAAA,QAA4B;GAC3B,kBAAe,EAAA,MAAW;GAC1B,UAAS,EAAA,MAAY;GACrB,UAAS,EAAA,MAAY;;;;;;;;;;;;yCC9RR,aAAtB,MAAuD;CAErD;CACA;CAEA,cAAc;AAGZ,OAAK,SAAS,aAAa;GAAE,QAAQ;GAAU,WAAW;GAAe,CAAC;;CAO5E,QAAQ,GAAoB;AAI1B,EAHA,KAAK,MAAM,GAEX,KAAK,SAAS,aAAa;GAAE,QAAQ;GAAU,WAAW,KAAK;GAAM,CAAC,EACtE,KAAK,OAAO,KAAK,qBAAqB,KAAK,OAAO;;;ACftD,MAAa,eAAe;CAK1B,SAAS,EACP,aAAa,WACd;CAMD,iBAAiB,EACf,aAAa,QACd;CAMD,SAAS;EACP,aAAa;EACb,aAAa;EACd;CAMD,sBAAsB;EACpB,aAAa;EACb,aAAa;EACd;CAMD,SAAS;EACP,QAAQ;EACR,aAAa;EACd;CAMD,QAAQ,EACN,aAAa,WACd;CAMD,cAAc;EACZ,aAAa;EACb,aAAa;EACd;CACF,EAKY,iBAAiB;CAC5B,SAAS;EAAE,QAAQ;EAAS,aAAa;EAAQ;CACjD,SAAS;EAAE,QAAQ;EAAS,aAAa;EAAQ;CACjD,SAAS;EAAE,QAAQ;EAAS,aAAa;EAAQ;CACjD,SAAS;EAAE,QAAQ;EAAS,aAAa;EAAQ;CACjD,SAAS;EAAE,QAAQ;EAAS,aAAa;EAAQ;CACjD,SAAS;EAAE,QAAQ;EAAS,aAAa;EAAQ;CACjD,SAAS;EAAE,QAAQ;EAAS,aAAa;EAAQ;CAClD;AAKD,SAAgB,kBACd,GACA,GACa;AACb,QAAO;EACL,GAAG,aAAa;EAChB,GAAG;EACJ;;ACsFH,MAAa,UAAU,yBAGV,WAAW;CACtB,yBAAyB;CACzB,wBAAwB;CACxB,mBAAmB;CACnB,sBAAsB;CACtB,eAAe;CACf,mBAAmB;CACnB,iBAAiB;CACjB,gBAAgB;CAChB,eAAe;CACf,eAAe;CACf,qBAAqB;CACrB,eAAe;CAChB;AAGG,OAAO,SAAW,OACpB,gCAAgC;AAMlC,MAAa,qBAAqB,SACrB,uBAAuB;AAKpC,SAAgB,mBAAmB,GAAiC;AAIlE,QAHK,IAGE,MAAkB,qBAHE;;AAS7B,SAAgB,qBAAqB,GAAmC;AAItE,QAHK,IAGE,MAAoB,uBAHE;;AAS/B,SAAgB,wBAAwB;AACtC,QAAO;EACL,YAAY;EACZ,oBAAoB,CAAC,SAAS,QAAQ;EACtC,iBAAiB;EACjB,UAAU;GACR,kBAAkB;GAClB,gBAAgB;GAChB,mBAAmB;GACnB,aAAa;GACd;EACF;;AAUH,MAAa,aAAa;CAIxB,QAAQ,GAAiB,OAA0B;EACjD;EACA;EACA,UAAU;EACV,QAAQ;GACN,yBAAyB;GACzB,sBAAsB;GACvB;EACF;CAKD,QAAQ,GAAiB,OAA0B;EACjD;EACA;EACA,UAAU;EACV,QAAQ;GACN,yBAAyB;GACzB,sBAAsB;GACvB;EAEF;CAKD,kBAAkB,GAAiB,OAA0B;EAC3D;EACA;EACA,QAAQ;GACN,yBAAyB;GACzB,sBAAsB;GACtB,WAAW;GACX,cAAc;GACf;EAED,WAAW;GACT,kBAAkB;GAClB,uBAAuB;GACvB,cAAc;GACd,sBAAsB;GACvB;EACF;CACF"}