{"version":3,"file":"browser-optimization-BvGvv3w1.cjs","names":[],"sources":["../src/utils/browser-optimization.ts"],"sourcesContent":["/**\n * Browser Performance Optimization Utilities\n *\n * Features:\n * - Hardware acceleration management\n * - Passive event listeners\n * - Critical rendering path optimization\n * - Browser-specific optimizations\n * - Intersection Observer pooling\n * - RequestAnimationFrame utilities\n */\n\n// Browser feature detection\nexport const BrowserFeatures = {\n  // Check for IntersectionObserver support\n  get hasIntersectionObserver(): boolean {\n    return 'IntersectionObserver' in window\n  },\n\n  // Check for ResizeObserver support\n  get hasResizeObserver(): boolean {\n    return 'ResizeObserver' in window\n  },\n\n  // Check for passive event listener support\n  get hasPassiveEvents(): boolean {\n    let passive = false\n    try {\n      const options = Object.defineProperty({}, 'passive', {\n        get() {\n          passive = true\n          return false\n        },\n      })\n      window.addEventListener('test', () => {}, options)\n      window.removeEventListener('test', () => {}, options)\n    } catch (_e) {\n      passive = false\n    }\n    return passive\n  },\n\n  // Check for Web Workers support\n  get hasWebWorkers(): boolean {\n    return 'Worker' in window\n  },\n\n  // Check for OffscreenCanvas support\n  get hasOffscreenCanvas(): boolean {\n    return 'OffscreenCanvas' in window\n  },\n\n  // Check for CSS containment support\n  get hasContainment(): boolean {\n    return CSS.supports('contain', 'layout style paint')\n  },\n\n  // Check for CSS transforms support\n  get hasTransforms(): boolean {\n    return CSS.supports('transform', 'translateZ(0)')\n  },\n\n  // Detect browser type for specific optimizations\n  get browser(): 'chrome' | 'firefox' | 'safari' | 'edge' | 'other' {\n    const ua = navigator.userAgent\n    if (ua.includes('Chrome') && !ua.includes('Edge')) return 'chrome'\n    if (ua.includes('Firefox')) return 'firefox'\n    if (ua.includes('Safari') && !ua.includes('Chrome')) return 'safari'\n    if (ua.includes('Edge')) return 'edge'\n    return 'other'\n  },\n}\n\n// Hardware acceleration utilities\nexport class HardwareAcceleration {\n  private acceleratedElements = new WeakSet<HTMLElement>()\n\n  enable(element: HTMLElement, force = false): void {\n    if (this.acceleratedElements.has(element) && !force) return\n\n    // Use transform3d to trigger hardware acceleration\n    element.style.transform = element.style.transform\n      ? `${element.style.transform} translateZ(0)`\n      : 'translateZ(0)'\n\n    element.style.willChange = 'transform'\n    element.style.backfaceVisibility = 'hidden'\n\n    // Browser-specific optimizations\n    if (BrowserFeatures.browser === 'safari') {\n      element.style.webkitBackfaceVisibility = 'hidden'\n      element.style.webkitPerspective = '1000px'\n    }\n\n    this.acceleratedElements.add(element)\n  }\n\n  disable(element: HTMLElement): void {\n    if (!this.acceleratedElements.has(element)) return\n\n    // Reset transform (remove translateZ(0))\n    const transform = element.style.transform\n    element.style.transform = transform.replace(/translateZ\\(0px?\\)\\s*/g, '').trim()\n\n    element.style.willChange = 'auto'\n    element.style.backfaceVisibility = ''\n\n    if (BrowserFeatures.browser === 'safari') {\n      element.style.webkitBackfaceVisibility = ''\n      element.style.webkitPerspective = ''\n    }\n\n    this.acceleratedElements.delete(element)\n  }\n\n  isEnabled(element: HTMLElement): boolean {\n    return this.acceleratedElements.has(element)\n  }\n}\n\n// Critical rendering path optimization\nexport class CriticalRenderingOptimizer {\n  private styleSheets = new Map<string, CSSStyleSheet>()\n  private criticalCSS = new Set<string>()\n\n  // Inline critical CSS for first paint optimization\n  inlineCriticalCSS(css: string, id: string): void {\n    if (this.criticalCSS.has(id)) return\n\n    const style = document.createElement('style')\n    style.setAttribute('data-critical', id)\n    style.textContent = css\n    document.head.insertBefore(style, document.head.firstChild)\n\n    this.criticalCSS.add(id)\n  }\n\n  // Lazy load non-critical CSS\n  loadNonCriticalCSS(href: string, id: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (this.styleSheets.has(id)) {\n        resolve()\n        return\n      }\n\n      const link = document.createElement('link')\n      link.rel = 'stylesheet'\n      link.href = href\n      link.setAttribute('data-non-critical', id)\n\n      link.onload = () => {\n        this.styleSheets.set(id, link.sheet as CSSStyleSheet)\n        resolve()\n      }\n\n      link.onerror = reject\n\n      // Use requestIdleCallback if available for better performance\n      if ('requestIdleCallback' in window) {\n        requestIdleCallback(() => {\n          document.head.appendChild(link)\n        })\n      } else {\n        setTimeout(() => {\n          document.head.appendChild(link)\n        }, 0)\n      }\n    })\n  }\n\n  // Preload resources with appropriate hints\n  preloadResource(href: string, as: string, type?: string): void {\n    const link = document.createElement('link')\n    link.rel = 'preload'\n    link.href = href\n    link.setAttribute('as', as)\n    if (type) link.type = type\n\n    document.head.appendChild(link)\n  }\n\n  // Font loading optimization\n  optimizeFontLoading(fontFamily: string, fontDisplay = 'swap'): void {\n    const style = document.createElement('style')\n    style.textContent = `\n      @font-face {\n        font-family: '${fontFamily}';\n        font-display: ${fontDisplay};\n      }\n    `\n    document.head.appendChild(style)\n  }\n}\n\n// Event listener optimization\nexport class OptimizedEventManager {\n  private listeners = new Map<EventTarget, Map<string, Set<EventListener>>>()\n\n  addEventListener(\n    target: EventTarget,\n    type: string,\n    listener: EventListener,\n    options?: AddEventListenerOptions | boolean\n  ): void {\n    // Use passive listeners for better performance\n    const optimizedOptions = this.getOptimizedOptions(type, options)\n\n    target.addEventListener(type, listener, optimizedOptions)\n\n    // Track for cleanup\n    if (!this.listeners.has(target)) {\n      this.listeners.set(target, new Map())\n    }\n\n    const targetListeners = this.listeners.get(target)!\n    if (!targetListeners.has(type)) {\n      targetListeners.set(type, new Set())\n    }\n\n    targetListeners.get(type)!.add(listener)\n  }\n\n  removeEventListener(\n    target: EventTarget,\n    type: string,\n    listener: EventListener,\n    options?: EventListenerOptions | boolean\n  ): void {\n    target.removeEventListener(type, listener, options)\n\n    // Update tracking\n    const targetListeners = this.listeners.get(target)\n    if (targetListeners) {\n      const typeListeners = targetListeners.get(type)\n      if (typeListeners) {\n        typeListeners.delete(listener)\n        if (typeListeners.size === 0) {\n          targetListeners.delete(type)\n        }\n      }\n      if (targetListeners.size === 0) {\n        this.listeners.delete(target)\n      }\n    }\n  }\n\n  private getOptimizedOptions(\n    type: string,\n    options?: AddEventListenerOptions | boolean\n  ): AddEventListenerOptions | boolean {\n    // Default to passive for scroll and touch events\n    const passiveEvents = ['scroll', 'wheel', 'touchstart', 'touchmove', 'touchend']\n\n    if (typeof options === 'object' && options !== null) {\n      return {\n        ...options,\n        passive:\n          options.passive !== undefined\n            ? options.passive\n            : passiveEvents.includes(type) && BrowserFeatures.hasPassiveEvents,\n      }\n    }\n\n    if (passiveEvents.includes(type) && BrowserFeatures.hasPassiveEvents) {\n      return { passive: true }\n    }\n\n    return options || false\n  }\n\n  cleanup(): void {\n    for (const [target, typeMap] of this.listeners.entries()) {\n      for (const [type, listeners] of typeMap.entries()) {\n        for (const listener of listeners) {\n          target.removeEventListener(type, listener)\n        }\n      }\n    }\n    this.listeners.clear()\n  }\n}\n\n// RequestAnimationFrame utilities\nexport class RAFScheduler {\n  private callbacks = new Map<number, () => void>()\n  private currentId = 0\n  private isRunning = false\n\n  schedule(callback: () => void): number {\n    const id = ++this.currentId\n    this.callbacks.set(id, callback)\n\n    if (!this.isRunning) {\n      this.start()\n    }\n\n    return id\n  }\n\n  cancel(id: number): void {\n    this.callbacks.delete(id)\n  }\n\n  private start(): void {\n    this.isRunning = true\n\n    const tick = () => {\n      if (this.callbacks.size === 0) {\n        this.isRunning = false\n        return\n      }\n\n      // Execute all scheduled callbacks\n      const callbacks = Array.from(this.callbacks.values())\n      this.callbacks.clear()\n\n      callbacks.forEach(callback => {\n        try {\n          callback()\n        } catch (error) {\n          import('./logger').then(({ createLogger }) => {\n            const logger = createLogger('BrowserOptimization')\n            logger.error('RAF callback error:', { module: 'BrowserOptimization' }, error)\n          })\n        }\n      })\n\n      requestAnimationFrame(tick)\n    }\n\n    requestAnimationFrame(tick)\n  }\n\n  scheduleWithPriority(\n    callback: () => void,\n    priority: 'high' | 'normal' | 'low' = 'normal'\n  ): number {\n    if (priority === 'high') {\n      // Execute immediately in next frame\n      return this.schedule(callback)\n    } else if (priority === 'low') {\n      // Use requestIdleCallback if available\n      if ('requestIdleCallback' in window) {\n        const id = requestIdleCallback(callback)\n        return id as number\n      }\n    }\n\n    // Normal priority\n    return this.schedule(callback)\n  }\n}\n\n// Intersection Observer pooling for better performance\nexport class IntersectionObserverPool {\n  private observers = new Map<string, IntersectionObserver>()\n  private elementCallbacks = new WeakMap<Element, Map<string, IntersectionObserverCallback>>()\n\n  observe(\n    element: Element,\n    callback: IntersectionObserverCallback,\n    options: IntersectionObserverInit = {}\n  ): () => void {\n    const key = this.getObserverKey(options)\n\n    if (!this.observers.has(key)) {\n      this.observers.set(\n        key,\n        new IntersectionObserver((entries, observer) => {\n          entries.forEach(entry => {\n            const callbacks = this.elementCallbacks.get(entry.target)\n            if (callbacks) {\n              callbacks.forEach(cb => cb([entry], observer))\n            }\n          })\n        }, options)\n      )\n    }\n\n    const observer = this.observers.get(key)!\n\n    // Track callback for this element\n    if (!this.elementCallbacks.has(element)) {\n      this.elementCallbacks.set(element, new Map())\n    }\n\n    const callbackId = Math.random().toString(36)\n    this.elementCallbacks.get(element)!.set(callbackId, callback)\n\n    observer.observe(element)\n\n    // Return cleanup function\n    return () => {\n      const callbacks = this.elementCallbacks.get(element)\n      if (callbacks) {\n        callbacks.delete(callbackId)\n        if (callbacks.size === 0) {\n          observer.unobserve(element)\n          this.elementCallbacks.delete(element)\n        }\n      }\n    }\n  }\n\n  private getObserverKey(options: IntersectionObserverInit): string {\n    return JSON.stringify({\n      root: (options.root as Element)?.tagName || null,\n      rootMargin: options.rootMargin || '0px',\n      threshold: options.threshold || 0,\n    })\n  }\n\n  cleanup(): void {\n    this.observers.forEach(observer => observer.disconnect())\n    this.observers.clear()\n  }\n}\n\n// Browser-specific optimization strategies\nexport class BrowserOptimizations {\n  private hardwareAccel = new HardwareAcceleration()\n  private renderOptimizer = new CriticalRenderingOptimizer()\n  private _eventManager = new OptimizedEventManager()\n  private rafScheduler = new RAFScheduler()\n  private intersectionPool = new IntersectionObserverPool()\n\n  // Apply optimizations based on browser capabilities\n  optimizeForBrowser(element: HTMLElement): void {\n    const browser = BrowserFeatures.browser\n\n    switch (browser) {\n      case 'chrome':\n        this.optimizeForChrome(element)\n        break\n      case 'firefox':\n        this.optimizeForFirefox(element)\n        break\n      case 'safari':\n        this.optimizeForSafari(element)\n        break\n      case 'edge':\n        this.optimizeForEdge(element)\n        break\n    }\n  }\n\n  private optimizeForChrome(element: HTMLElement): void {\n    // Chrome-specific optimizations\n    this.hardwareAccel.enable(element)\n\n    // Use CSS containment if supported\n    if (BrowserFeatures.hasContainment) {\n      element.style.contain = 'layout style paint'\n    }\n\n    // Optimize for Chrome's compositor\n    element.style.isolation = 'isolate'\n  }\n\n  private optimizeForFirefox(element: HTMLElement): void {\n    // Firefox-specific optimizations\n    this.hardwareAccel.enable(element)\n\n    // Firefox performs better with will-change hints\n    element.style.willChange = 'transform, opacity'\n  }\n\n  private optimizeForSafari(element: HTMLElement): void {\n    // Safari-specific optimizations\n    this.hardwareAccel.enable(element)\n\n    // Safari benefits from explicit transform styles\n    element.style.webkitTransform = 'translateZ(0)'\n    element.style.webkitBackfaceVisibility = 'hidden'\n  }\n\n  private optimizeForEdge(element: HTMLElement): void {\n    // Edge-specific optimizations\n    this.hardwareAccel.enable(element)\n\n    // Edge benefits from explicit GPU layers\n    element.style.transform = 'translateZ(0)'\n  }\n\n  // Critical path optimization\n  optimizeCriticalPath(): void {\n    // Inline critical grid styles\n    this.renderOptimizer.inlineCriticalCSS(\n      `\n      .ht-grid-container {\n        contain: layout style paint;\n        transform: translateZ(0);\n        will-change: scroll-position;\n      }\n      .ht-virtual-item {\n        contain: layout style paint;\n        will-change: transform;\n        backface-visibility: hidden;\n      }\n    `,\n      'ht-critical'\n    )\n\n    // Preload fonts if needed\n    this.renderOptimizer.optimizeFontLoading('system-ui', 'swap')\n  }\n\n  // Event optimization\n  addOptimizedListener(\n    target: EventTarget,\n    type: string,\n    listener: EventListener,\n    options?: AddEventListenerOptions\n  ): void {\n    this._eventManager.addEventListener(target, type, listener, options)\n  }\n\n  // Cleanup\n  cleanup(): void {\n    this._eventManager.cleanup()\n    this.intersectionPool.cleanup()\n  }\n\n  // Getters for individual optimizers\n  get hardwareAcceleration(): HardwareAcceleration {\n    return this.hardwareAccel\n  }\n\n  get renderingOptimizer(): CriticalRenderingOptimizer {\n    return this.renderOptimizer\n  }\n\n  get eventManager(): OptimizedEventManager {\n    return this._eventManager\n  }\n\n  get scheduler(): RAFScheduler {\n    return this.rafScheduler\n  }\n\n  get intersectionObserver(): IntersectionObserverPool {\n    return this.intersectionPool\n  }\n}\n\n// Export singleton instance\nexport const browserOptimizations = new BrowserOptimizations()\n\n// Initialize optimizations\nexport function initializeBrowserOptimizations(): void {\n  // Apply critical path optimizations immediately\n  browserOptimizations.optimizeCriticalPath()\n\n  // Add unload cleanup\n  window.addEventListener('beforeunload', () => {\n    browserOptimizations.cleanup()\n  })\n}\n\n// Performance hints for developers\nexport const PerformanceHints = {\n  // Recommend hardware acceleration for elements\n  shouldAccelerate: (element: HTMLElement): boolean => {\n    const rect = element.getBoundingClientRect()\n    return rect.width * rect.height > 10000 // Large elements benefit more\n  },\n\n  // Recommend passive event listeners\n  shouldUsePassive: (eventType: string): boolean => {\n    return ['scroll', 'wheel', 'touchstart', 'touchmove'].includes(eventType)\n  },\n\n  // Recommend CSS containment\n  shouldUseContainment: (element: HTMLElement): boolean => {\n    return element.children.length > 10 || element.scrollHeight > window.innerHeight\n  },\n}\n"],"mappings":"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"}